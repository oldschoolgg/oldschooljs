{
  "version": 3,
  "sources": ["../../node_modules/deepmerge/dist/cjs.js", "../../node_modules/e/src/lib/constants.ts", "../../node_modules/e/src/lib/types.ts", "../../node_modules/e/src/lib/chance.ts", "../../node_modules/e/src/lib/percent.ts", "../../node_modules/e/src/lib/array.ts", "../../node_modules/e/src/lib/number.ts", "../../node_modules/e/src/lib/other/debounce.ts", "../../node_modules/e/src/lib/other/deepClone.ts", "../../node_modules/e/src/lib/general.ts", "../../node_modules/e/src/lib/object.ts", "../../node_modules/e/src/lib/string.ts", "../../src/structures/Items.ts", "../../src/util/cleanString.ts", "../../src/structures/Collection.ts", "../../src/EItem.ts", "../../src/EMonster.ts", "../../src/constants.ts", "../../src/meta/monsterData.ts", "../../src/simulation/misc/index.ts", "../../src/structures/LootTable.ts", "../../src/util/itemID.ts", "../../src/structures/Bank.ts", "../../src/util/smallUtils.ts", "../../src/simulation/misc/BarbarianAssault.ts", "../../src/simulation/misc/ChambersOfXeric.ts", "../../src/structures/Minigame.ts", "../../src/structures/SimpleTable.ts", "../../src/util/bank.ts", "../../src/util/util.ts", "../../src/simulation/misc/FishingTrawler.ts", "../../src/simulation/misc/Gauntlet.ts", "../../src/simulation/misc/Nightmare.ts", "../../src/simulation/misc/Tempoross.ts", "../../src/simulation/misc/Zalcano.ts", "../../src/simulation/misc/Mimic.ts", "../../src/simulation/misc/TheatreOfBlood.ts", "../../src/util/index.ts", "../../src/structures/SimpleMonster.ts", "../../src/structures/Monster.ts", "../../src/simulation/monsters/CreatureCreation.ts", "../../src/simulation/subtables/RareDropTable.ts", "../../src/simulation/subtables/TreeHerbSeedTable.ts", "../../src/simulation/monsters/bosses/Araxxor.ts", "../../src/simulation/monsters/bosses/DukeSucellus.ts", "../../src/simulation/subtables/VirtusTable.ts", "../../src/simulation/monsters/bosses/AwakenedDukeSucellus.ts", "../../src/simulation/monsters/bosses/TheLeviathan.ts", "../../src/simulation/monsters/bosses/AwakenedTheLeviathan.ts", "../../src/simulation/monsters/bosses/TheWhisperer.ts", "../../src/simulation/monsters/bosses/AwakenedTheWhisperer.ts", "../../src/simulation/monsters/bosses/Vardorvis.ts", "../../src/simulation/monsters/bosses/AwakenedVardorvis.ts", "../../src/simulation/subtables/CommonSeedDropTable.ts", "../../src/simulation/subtables/HerbDropTable.ts", "../../src/simulation/subtables/RareSeedTable.ts", "../../src/simulation/subtables/WyvernHerbTable.ts", "../../src/simulation/subtables/index.ts", "../../src/simulation/monsters/bosses/Bryophyta.ts", "../../src/simulation/subtables/GWRareDropTable.ts", "../../src/simulation/monsters/bosses/CommanderZilyana.ts", "../../src/simulation/subtables/TalismanTable.ts", "../../src/simulation/monsters/bosses/DagannothPrime.ts", "../../src/simulation/monsters/bosses/DagannothRex.ts", "../../src/simulation/monsters/bosses/DagannothSupreme.ts", "../../src/simulation/monsters/bosses/DerangedArchaeologist.ts", "../../src/simulation/monsters/bosses/GeneralGraardor.ts", "../../src/simulation/monsters/bosses/GiantMole.ts", "../../src/simulation/monsters/bosses/KalphiteQueen.ts", "../../src/simulation/monsters/bosses/Kreearra.ts", "../../src/simulation/monsters/bosses/KrilTsutsaroth.ts", "../../src/simulation/monsters/bosses/Obor.ts", "../../src/simulation/monsters/bosses/PhantomMuspah.ts", "../../src/simulation/monsters/bosses/Sarachnis.ts", "../../src/simulation/monsters/bosses/Scurrius.ts", "../../src/simulation/monsters/bosses/Skotizo.ts", "../../src/simulation/monsters/bosses/Vorkath.ts", "../../src/simulation/monsters/bosses/Zulrah.ts", "../../src/simulation/monsters/bosses/slayer/AbyssalSire.ts", "../../src/simulation/monsters/bosses/slayer/AlchemicalHydra.ts", "../../src/simulation/monsters/bosses/slayer/Cerberus.ts", "../../src/simulation/monsters/bosses/slayer/GrotesqueGuardians.ts", "../../src/simulation/monsters/bosses/slayer/Kraken.ts", "../../src/simulation/monsters/bosses/slayer/ThermonuclearSmokeDevil.ts", "../../src/simulation/monsters/bosses/slayer/index.ts", "../../src/simulation/monsters/bosses/wildy/Artio.ts", "../../src/simulation/monsters/bosses/wildy/Callisto.ts", "../../src/simulation/monsters/bosses/wildy/Calvarion.ts", "../../src/simulation/monsters/bosses/wildy/ChaosElemental.ts", "../../src/simulation/monsters/bosses/wildy/ChaosFanatic.ts", "../../src/simulation/monsters/bosses/wildy/CrazyArchaeologist.ts", "../../src/simulation/monsters/bosses/wildy/KingBlackDragon.ts", "../../src/simulation/monsters/bosses/wildy/Scorpia.ts", "../../src/simulation/monsters/bosses/wildy/Spindel.ts", "../../src/simulation/monsters/bosses/wildy/Venenatis.ts", "../../src/simulation/monsters/bosses/wildy/Vetion.ts", "../../src/simulation/monsters/bosses/wildy/index.ts", "../../src/simulation/monsters/bosses/wildy/CorporealBeast.ts", "../../src/simulation/monsters/bosses/index.ts", "../../src/simulation/monsters/low/a-f/AberrantSpectre.ts", "../../src/simulation/monsters/low/a-f/AbyssalDemon.ts", "../../src/simulation/subtables/UsefulHerbTable.ts", "../../src/simulation/monsters/low/a-f/AdamantDragon.ts", "../../src/simulation/monsters/low/a-f/AlKharidWarrior.ts", "../../src/simulation/monsters/low/a-f/AncientZygomite.ts", "../../src/simulation/monsters/low/a-f/Ankou.ts", "../../src/simulation/monsters/low/a-f/Araxyte.ts", "../../src/simulation/monsters/low/a-f/ArmadylianGuard.ts", "../../src/simulation/monsters/low/a-f/ArmouredZombie.ts", "../../src/simulation/monsters/low/a-f/AsynShade.ts", "../../src/simulation/monsters/low/a-f/Aviansie.ts", "../../src/simulation/monsters/low/a-f/BabyBlackDragon.ts", "../../src/simulation/monsters/low/a-f/BabyBlueDragon.ts", "../../src/simulation/monsters/low/a-f/BabyGreenDragon.ts", "../../src/simulation/monsters/low/a-f/BabyRedDragon.ts", "../../src/simulation/monsters/low/a-f/Bandit.ts", "../../src/simulation/monsters/low/a-f/Banshee.ts", "../../src/simulation/monsters/low/a-f/Basilisk.ts", "../../src/simulation/monsters/low/a-f/BasiliskKnight.ts", "../../src/simulation/monsters/low/a-f/Bat.ts", "../../src/simulation/monsters/low/a-f/BearCub.ts", "../../src/simulation/monsters/low/a-f/BeardedBandit.ts", "../../src/simulation/monsters/low/a-f/BigWolf.ts", "../../src/simulation/monsters/low/a-f/Bird.ts", "../../src/simulation/monsters/low/a-f/BlackBear.ts", "../../src/simulation/monsters/low/a-f/BlackDemon.ts", "../../src/simulation/monsters/low/a-f/BlackDragon.ts", "../../src/simulation/monsters/low/a-f/BlackGuard.ts", "../../src/simulation/monsters/low/a-f/BlackKnight.ts", "../../src/simulation/monsters/low/a-f/BloodReaver.ts", "../../src/simulation/monsters/low/a-f/Bloodveld.ts", "../../src/simulation/monsters/low/a-f/BlueDragon.ts", "../../src/simulation/monsters/low/a-f/BrineRat.ts", "../../src/simulation/monsters/low/a-f/BronzeDragon.ts", "../../src/simulation/monsters/low/a-f/BrutalBlackDragon.ts", "../../src/simulation/monsters/low/a-f/BrutalBlueDragon.ts", "../../src/simulation/monsters/low/a-f/BrutalGreenDragon.ts", "../../src/simulation/monsters/low/a-f/BrutalRedDragon.ts", "../../src/simulation/subtables/FixedAllotmentSeedTable.ts", "../../src/simulation/monsters/low/a-f/Catablepon.ts", "../../src/simulation/monsters/low/a-f/CaveBug.ts", "../../src/simulation/subtables/VariableAllotmentSeedTable.ts", "../../src/simulation/monsters/low/a-f/CaveCrawler.ts", "../../src/simulation/monsters/low/a-f/CaveGoblin.ts", "../../src/simulation/monsters/low/a-f/CaveGoblinGuard.ts", "../../src/simulation/monsters/low/a-f/CaveHorror.ts", "../../src/simulation/monsters/low/a-f/CaveKraken.ts", "../../src/simulation/monsters/low/a-f/CaveSlime.ts", "../../src/simulation/monsters/low/a-f/ChaosDruid.ts", "../../src/simulation/monsters/low/a-f/ChaosDwarf.ts", "../../src/simulation/monsters/low/a-f/Chicken.ts", "../../src/simulation/monsters/low/a-f/ChompyBird.ts", "../../src/simulation/monsters/low/a-f/Cockatrice.ts", "../../src/simulation/monsters/low/a-f/Cow.ts", "../../src/simulation/monsters/low/a-f/CowCalf.ts", "../../src/simulation/monsters/low/a-f/Crab.ts", "../../src/simulation/monsters/low/a-f/CrawlingHand.ts", "../../src/simulation/monsters/low/a-f/Crocodile.ts", "../../src/simulation/monsters/low/a-f/CryptRat.ts", "../../src/simulation/monsters/low/a-f/Cyclops.ts", "../../src/simulation/monsters/low/a-f/Dagannoth.ts", "../../src/simulation/monsters/low/a-f/DagannothSpawn.ts", "../../src/simulation/monsters/low/a-f/DaganothFledgeling.ts", "../../src/simulation/monsters/low/a-f/DarkBeast.ts", "../../src/simulation/monsters/low/a-f/DarkWarrior.ts", "../../src/simulation/monsters/low/a-f/DeadlyRedSpider.ts", "../../src/simulation/monsters/low/a-f/DeathWing.ts", "../../src/simulation/subtables/NotedHerbTable.ts", "../../src/simulation/monsters/low/a-f/DemonicGorilla.ts", "../../src/simulation/monsters/low/a-f/DesertBandit.ts", "../../src/simulation/monsters/low/a-f/DesertLizard.ts", "../../src/simulation/monsters/low/a-f/DesertWolf.ts", "../../src/simulation/monsters/low/a-f/DeviantSpectre.ts", "../../src/simulation/monsters/low/a-f/Drake.ts", "../../src/simulation/monsters/low/a-f/Duck.ts", "../../src/simulation/monsters/low/a-f/Duckling.ts", "../../src/simulation/monsters/low/a-f/DungeonRat.ts", "../../src/simulation/monsters/low/a-f/DustDevil.ts", "../../src/simulation/monsters/low/a-f/Dwarf.ts", "../../src/simulation/monsters/low/a-f/DwarfGangMember.ts", "../../src/simulation/monsters/low/a-f/EarthWarrior.ts", "../../src/simulation/monsters/low/a-f/ElderChaosDruid.ts", "../../src/simulation/monsters/low/a-f/Elf.ts", "../../src/simulation/monsters/low/a-f/ElfArcher.ts", "../../src/simulation/monsters/low/a-f/ElfWarrior.ts", "../../src/simulation/monsters/low/a-f/Ent.ts", "../../src/simulation/monsters/low/a-f/Farmer.ts", "../../src/simulation/monsters/low/a-f/FemaleHamMember.ts", "../../src/simulation/monsters/low/a-f/FeralVampyre.ts", "../../src/simulation/monsters/low/a-f/FeverSpider.ts", "../../src/simulation/monsters/low/a-f/FireGiant.ts", "../../src/simulation/monsters/low/a-f/FiyrShade.ts", "../../src/simulation/monsters/low/a-f/FleshCrawler.ts", "../../src/simulation/monsters/low/a-f/FossilIslandWyvernAncient.ts", "../../src/simulation/monsters/low/a-f/FossilIslandWyvernLongTailed.ts", "../../src/simulation/monsters/low/a-f/FossilIslandWyvernSpitting.ts", "../../src/simulation/monsters/low/a-f/FossilIslandWyvernTaloned.ts", "../../src/simulation/monsters/low/a-f/FremennikCitizen.ts", "../../src/simulation/monsters/low/g-m/Gargoyle.ts", "../../src/simulation/monsters/low/g-m/Ghost.ts", "../../src/simulation/monsters/low/g-m/Ghoul.ts", "../../src/simulation/monsters/low/g-m/GiantBat.ts", "../../src/simulation/monsters/low/g-m/GiantCryptSpider.ts", "../../src/simulation/monsters/low/g-m/GiantFrog.ts", "../../src/simulation/monsters/low/g-m/GiantRat.ts", "../../src/simulation/monsters/low/g-m/GiantSeaSnake.ts", "../../src/simulation/monsters/low/g-m/GiantSpider.ts", "../../src/simulation/monsters/low/g-m/Gnome.ts", "../../src/simulation/monsters/low/g-m/Goat.ts", "../../src/simulation/monsters/low/g-m/Goblin.ts", "../../src/simulation/monsters/low/g-m/GreaterDemon.ts", "../../src/simulation/monsters/low/g-m/GreaterNechryael.ts", "../../src/simulation/monsters/low/g-m/GreenDragon.ts", "../../src/simulation/monsters/low/g-m/GrizzlyBear.ts", "../../src/simulation/monsters/low/g-m/GrizzlyBearCub.ts", "../../src/simulation/monsters/low/g-m/Guard.ts", "../../src/simulation/monsters/low/g-m/GuardBandit.ts", "../../src/simulation/monsters/low/g-m/GuardDog.ts", "../../src/simulation/monsters/low/g-m/HarpieBugSwarm.ts", "../../src/simulation/monsters/low/g-m/Hellhound.ts", "../../src/simulation/monsters/low/g-m/Hero.ts", "../../src/simulation/monsters/low/g-m/HillGiant.ts", "../../src/simulation/monsters/low/g-m/Hobgoblin.ts", "../../src/simulation/monsters/low/g-m/Hydra.ts", "../../src/simulation/monsters/low/g-m/IceGiant.ts", "../../src/simulation/monsters/low/g-m/IceTroll.ts", "../../src/simulation/monsters/low/g-m/IceWarrior.ts", "../../src/simulation/monsters/low/g-m/IceWolf.ts", "../../src/simulation/monsters/low/g-m/Icefiend.ts", "../../src/simulation/monsters/low/g-m/Imp.ts", "../../src/simulation/monsters/low/g-m/InfernalMage.ts", "../../src/simulation/monsters/low/g-m/IorwerthArcher.ts", "../../src/simulation/monsters/low/g-m/IorwerthWarrior.ts", "../../src/simulation/monsters/low/g-m/IronDragon.ts", "../../src/simulation/monsters/low/g-m/Jackal.ts", "../../src/simulation/monsters/low/g-m/Jelly.ts", "../../src/simulation/monsters/low/g-m/Jogre.ts", "../../src/simulation/monsters/low/g-m/JubblyBird.ts", "../../src/simulation/monsters/low/g-m/JungleHorror.ts", "../../src/simulation/monsters/low/g-m/JungleWolf.ts", "../../src/simulation/monsters/low/g-m/KalphiteGuardian.ts", "../../src/simulation/monsters/low/g-m/KalphiteSoldier.ts", "../../src/simulation/monsters/low/g-m/KalphiteWorker.ts", "../../src/simulation/monsters/low/g-m/Killerwatt.ts", "../../src/simulation/monsters/low/g-m/KingScorpion.ts", "../../src/simulation/monsters/low/g-m/KnightOfArdougne.ts", "../../src/simulation/monsters/low/g-m/Kurask.ts", "../../src/simulation/monsters/low/g-m/LavaDragon.ts", "../../src/simulation/monsters/low/g-m/LesserDemon.ts", "../../src/simulation/monsters/low/g-m/Lizard.ts", "../../src/simulation/monsters/low/g-m/Lizardman.ts", "../../src/simulation/monsters/low/g-m/LizardmanBrute.ts", "../../src/simulation/monsters/low/g-m/LizardmanShaman.ts", "../../src/simulation/monsters/low/g-m/LoarShade.ts", "../../src/simulation/monsters/low/g-m/Lobstrosity.ts", "../../src/simulation/monsters/low/g-m/LocustRider.ts", "../../src/simulation/monsters/low/g-m/MagicAxe.ts", "../../src/simulation/monsters/low/g-m/MaleHamMember.ts", "../../src/simulation/monsters/low/g-m/Mammoth.ts", "../../src/simulation/subtables/ManWomanTable.ts", "../../src/simulation/monsters/low/g-m/Man.ts", "../../src/simulation/monsters/low/g-m/ManiacalMonkey.ts", "../../src/simulation/monsters/low/g-m/MasterFarmer.ts", "../../src/simulation/monsters/low/g-m/MenaphiteThug.ts", "../../src/simulation/monsters/low/g-m/Minotaur.ts", "../../src/simulation/monsters/low/g-m/MithrilDragon.ts", "../../src/simulation/monsters/low/g-m/Mogre.ts", "../../src/simulation/monsters/low/g-m/Molanisk.ts", "../../src/simulation/monsters/low/g-m/Monkey.ts", "../../src/simulation/monsters/low/g-m/MonkeyArcher.ts", "../../src/simulation/monsters/low/g-m/MonkeyGuard.ts", "../../src/simulation/monsters/low/g-m/MonkeyZombie.ts", "../../src/simulation/monsters/low/g-m/MossGiant.ts", "../../src/simulation/monsters/low/g-m/MountainTroll.ts", "../../src/simulation/monsters/low/g-m/MountedTerrorBirdGnome.ts", "../../src/simulation/monsters/low/g-m/Mourner.ts", "../../src/simulation/monsters/low/g-m/MutatedBloodveld.ts", "../../src/simulation/monsters/low/n-s/Nechryael.ts", "../../src/simulation/monsters/low/n-s/Ogre.ts", "../../src/simulation/monsters/low/n-s/OgressShaman.ts", "../../src/simulation/monsters/low/n-s/OgressWarrior.ts", "../../src/simulation/monsters/low/n-s/Otherworldlybeing.ts", "../../src/simulation/monsters/low/n-s/Paladin.ts", "../../src/simulation/monsters/low/n-s/Penguin.ts", "../../src/simulation/monsters/low/n-s/PhrinShade.ts", "../../src/simulation/monsters/low/n-s/Pirate.ts", "../../src/simulation/monsters/low/n-s/PitScorpion.ts", "../../src/simulation/monsters/low/n-s/PoisonScorpion.ts", "../../src/simulation/monsters/low/n-s/PollnivnianBandit.ts", "../../src/simulation/monsters/low/n-s/Porazdir.ts", "../../src/simulation/monsters/low/n-s/PrifddinasElf.ts", "../../src/simulation/monsters/low/n-s/PriffRabbit.ts", "../../src/simulation/monsters/low/n-s/Pyrefiend.ts", "../../src/simulation/monsters/low/n-s/Pyrelord.ts", "../../src/simulation/monsters/low/n-s/Rat.ts", "../../src/simulation/monsters/low/n-s/RedDragon.ts", "../../src/simulation/monsters/low/n-s/RevenantCyclops.ts", "../../src/simulation/monsters/low/n-s/RevenantDarkBeast.ts", "../../src/simulation/monsters/low/n-s/RevenantDemon.ts", "../../src/simulation/monsters/low/n-s/RevenantDragon.ts", "../../src/simulation/monsters/low/n-s/RevenantGoblin.ts", "../../src/simulation/monsters/low/n-s/RevenantHellhound.ts", "../../src/simulation/monsters/low/n-s/RevenantHobgoblin.ts", "../../src/simulation/monsters/low/n-s/RevenantImp.ts", "../../src/simulation/monsters/low/n-s/RevenantKnight.ts", "../../src/simulation/monsters/low/n-s/RevenantOrk.ts", "../../src/simulation/monsters/low/n-s/RevenantPyrefiend.ts", "../../src/simulation/monsters/low/n-s/RiylShade.ts", "../../src/simulation/monsters/low/n-s/Rockslug.ts", "../../src/simulation/monsters/low/n-s/Rogue.ts", "../../src/simulation/monsters/low/n-s/Rooster.ts", "../../src/simulation/monsters/low/n-s/RuneDragon.ts", "../../src/simulation/monsters/low/n-s/ScarabMage.ts", "../../src/simulation/monsters/low/n-s/Scorpion.ts", "../../src/simulation/monsters/low/n-s/SeaSnakeHatchling.ts", "../../src/simulation/monsters/low/n-s/SeaSnakeYoung.ts", "../../src/simulation/monsters/low/n-s/Seagull.ts", "../../src/simulation/monsters/low/n-s/Shade.ts", "../../src/simulation/monsters/low/n-s/ShadowSpider.ts", "../../src/simulation/monsters/low/n-s/ShadowWarrior.ts", "../../src/simulation/monsters/low/n-s/SkeletalWyvern.ts", "../../src/simulation/monsters/low/n-s/Skeleton.ts", "../../src/simulation/monsters/low/n-s/SkeletonFremennik.ts", "../../src/simulation/monsters/low/n-s/SkeletonMage.ts", "../../src/simulation/monsters/low/n-s/Skogre.ts", "../../src/simulation/monsters/low/n-s/SmallLizard.ts", "../../src/simulation/monsters/low/n-s/SmokeDevil.ts", "../../src/simulation/monsters/low/n-s/Spider.ts", "../../src/simulation/monsters/low/n-s/SpiritualMage.ts", "../../src/simulation/monsters/low/n-s/SpiritualRanger.ts", "../../src/simulation/monsters/low/n-s/SpiritualWarrior.ts", "../../src/simulation/monsters/low/n-s/SteelDragon.ts", "../../src/simulation/monsters/low/n-s/SulphurLizard.ts", "../../src/simulation/monsters/low/n-s/Suqah.ts", "../../src/simulation/monsters/low/t-z/TempleSpider.ts", "../../src/simulation/monsters/low/t-z/TerrorBird.ts", "../../src/simulation/monsters/low/t-z/TerrorDog.ts", "../../src/simulation/monsters/low/t-z/TormentedDemon.ts", "../../src/simulation/monsters/low/t-z/TorturedGorilla.ts", "../../src/simulation/monsters/low/t-z/TorturedSoul.ts", "../../src/simulation/monsters/low/t-z/TrollGeneral.ts", "../../src/simulation/monsters/low/t-z/Turoth.ts", "../../src/simulation/monsters/low/t-z/TwistedBanshee.ts", "../../src/simulation/monsters/low/t-z/TzHaarHur.ts", "../../src/simulation/monsters/low/t-z/TzHaarKet.ts", "../../src/simulation/monsters/low/t-z/TzHaarMej.ts", "../../src/simulation/monsters/low/t-z/TzHaarXil.ts", "../../src/simulation/monsters/low/t-z/UndeadChicken.ts", "../../src/simulation/monsters/low/t-z/UndeadCow.ts", "../../src/simulation/monsters/low/t-z/UndeadDruid.ts", "../../src/simulation/monsters/low/t-z/UndeadOne.ts", "../../src/simulation/monsters/low/t-z/Unicorn.ts", "../../src/simulation/monsters/low/t-z/UriumShade.ts", "../../src/simulation/monsters/low/t-z/VampyreJuvinate.ts", "../../src/simulation/monsters/low/t-z/Vyre.ts", "../../src/simulation/monsters/low/t-z/Vyrewatch.ts", "../../src/simulation/monsters/low/t-z/VyrewatchSentinel.ts", "../../src/simulation/monsters/low/t-z/WallBeast.ts", "../../src/simulation/monsters/low/t-z/WarpedJelly.ts", "../../src/simulation/monsters/low/t-z/WarriorWoman.ts", "../../src/simulation/monsters/low/t-z/Waterfiend.ts", "../../src/simulation/monsters/low/t-z/Werewolf.ts", "../../src/simulation/monsters/low/t-z/WhiteWolf.ts", "../../src/simulation/monsters/low/t-z/WildDog.ts", "../../src/simulation/monsters/low/t-z/Wolf.ts", "../../src/simulation/monsters/low/t-z/Woman.ts", "../../src/simulation/monsters/low/t-z/Wyrm.ts", "../../src/simulation/monsters/low/t-z/YanilleWatchman.ts", "../../src/simulation/monsters/low/t-z/Zogre.ts", "../../src/simulation/monsters/low/t-z/Zombie.ts", "../../src/simulation/monsters/low/t-z/ZombiePirate.ts", "../../src/simulation/monsters/low/t-z/ZombieRat.ts", "../../src/simulation/monsters/low/t-z/Zygomite.ts", "../../src/simulation/monsters/low/index.ts", "../../src/simulation/monsters/low/camdozaalGolems.ts", "../../src/simulation/monsters/low/reanimated.ts", "../../src/simulation/monsters/special/Barrows.ts", "../../src/simulation/monsters/special/Hespori.ts", "../../src/simulation/monsters/special/TzKalZuk.ts", "../../src/simulation/monsters/special/TzTokJad.ts", "../../src/simulation/monsters/special/index.ts", "../../src/simulation/monsters/superiorMonsters/AbhorrentSpectre.ts", "../../src/simulation/monsters/superiorMonsters/BasiliskSentinel.ts", "../../src/simulation/monsters/superiorMonsters/CaveAbomination.ts", "../../src/simulation/monsters/superiorMonsters/ChasmCrawler.ts", "../../src/simulation/monsters/superiorMonsters/ChokeDevil.ts", "../../src/simulation/monsters/superiorMonsters/Cockathrice.ts", "../../src/simulation/monsters/superiorMonsters/ColossalHydra.ts", "../../src/simulation/monsters/superiorMonsters/CrushingHand.ts", "../../src/simulation/monsters/superiorMonsters/FlamingPyrelord.ts", "../../src/simulation/monsters/superiorMonsters/GiantRockslug.ts", "../../src/simulation/monsters/superiorMonsters/GreaterAbyssalDemon.ts", "../../src/simulation/monsters/superiorMonsters/GuardianDrake.ts", "../../src/simulation/monsters/superiorMonsters/InsatiableBloodveld.ts", "../../src/simulation/monsters/superiorMonsters/InsatiableMutatedBloodveld.ts", "../../src/simulation/monsters/superiorMonsters/KingKurask.ts", "../../src/simulation/monsters/superiorMonsters/MalevolentMage.ts", "../../src/simulation/monsters/superiorMonsters/MarbleGargoyle.ts", "../../src/simulation/monsters/superiorMonsters/MonstrousBasilisk.ts", "../../src/simulation/monsters/superiorMonsters/Nechryarch.ts", "../../src/simulation/monsters/superiorMonsters/NightBeast.ts", "../../src/simulation/monsters/superiorMonsters/NuclearSmokeDevil.ts", "../../src/simulation/monsters/superiorMonsters/RepugnantSpectre.ts", "../../src/simulation/monsters/superiorMonsters/ScreamingBanshee.ts", "../../src/simulation/monsters/superiorMonsters/ScreamingTwistedBanshee.ts", "../../src/simulation/monsters/superiorMonsters/ShadowWyrm.ts", "../../src/simulation/monsters/superiorMonsters/SpikedTuroth.ts", "../../src/simulation/monsters/superiorMonsters/VitreousJelly.ts", "../../src/simulation/monsters/superiorMonsters/VitreousWarpedJelly.ts", "../../src/simulation/monsters/superiorMonsters/index.ts", "../../src/simulation/monsters/index.ts", "../../src/simulation/openables/BrimstoneChest.ts", "../../src/structures/Openable.ts", "../../src/structures/SimpleOpenable.ts", "../../src/simulation/openables/BonusOpenables.ts", "../../src/simulation/openables/Casket.ts", "../../src/simulation/openables/CrystalChest.ts", "../../src/simulation/openables/ElvenCrystalChest.ts", "../../src/simulation/openables/GiantEggSacFull.ts", "../../src/simulation/openables/GrubbyChest.ts", "../../src/simulation/openables/HAMStoreRoomChests.ts", "../../src/simulation/openables/HuntersLootSack.ts", "../../src/simulation/clues/General.ts", "../../src/simulation/clues/Easy.ts", "../../src/simulation/clues/Elite.ts", "../../src/simulation/clues/Hard.ts", "../../src/simulation/clues/Master.ts", "../../src/simulation/clues/Medium.ts", "../../src/simulation/openables/Implings.ts", "../../src/simulation/openables/IntricatePouch.ts", "../../src/simulation/openables/LarransChest.ts", "../../src/simulation/openables/MuddyChest.ts", "../../src/simulation/openables/MysteryBox.ts", "../../src/simulation/openables/NestBoxEmpty.ts", "../../src/simulation/openables/NestBoxRing.ts", "../../src/simulation/openables/NestBoxSeeds.ts", "../../src/simulation/openables/OgreCoffin.ts", "../../src/simulation/openables/OrePack.ts", "../../src/simulation/openables/SeedPack.ts", "../../src/simulation/openables/SinisterChest.ts", "../../src/simulation/openables/ZombiePiratesLocker.ts", "../../src/simulation/openables/HallowedSack.ts", "../../src/simulation/openables/index.ts", "../../src/structures/Hiscores.ts", "../../src/structures/OldSchoolJSError.ts", "../../src/structures/Player.ts", "../../src/structures/Wiki.ts", "../../src/simulation/clues/Beginner.ts", "../../src/simulation/clues/index.ts", "../../src/data/itemConstants.ts", "../../src/meta/types.ts"],
  "sourcesContent": ["'use strict';\n\nvar isMergeableObject = function isMergeableObject(value) {\n\treturn isNonNullObject(value)\n\t\t&& !isSpecial(value)\n};\n\nfunction isNonNullObject(value) {\n\treturn !!value && typeof value === 'object'\n}\n\nfunction isSpecial(value) {\n\tvar stringValue = Object.prototype.toString.call(value);\n\n\treturn stringValue === '[object RegExp]'\n\t\t|| stringValue === '[object Date]'\n\t\t|| isReactElement(value)\n}\n\n// see https://github.com/facebook/react/blob/b5ac963fb791d1298e7f396236383bc955f916c1/src/isomorphic/classic/element/ReactElement.js#L21-L25\nvar canUseSymbol = typeof Symbol === 'function' && Symbol.for;\nvar REACT_ELEMENT_TYPE = canUseSymbol ? Symbol.for('react.element') : 0xeac7;\n\nfunction isReactElement(value) {\n\treturn value.$$typeof === REACT_ELEMENT_TYPE\n}\n\nfunction emptyTarget(val) {\n\treturn Array.isArray(val) ? [] : {}\n}\n\nfunction cloneUnlessOtherwiseSpecified(value, options) {\n\treturn (options.clone !== false && options.isMergeableObject(value))\n\t\t? deepmerge(emptyTarget(value), value, options)\n\t\t: value\n}\n\nfunction defaultArrayMerge(target, source, options) {\n\treturn target.concat(source).map(function(element) {\n\t\treturn cloneUnlessOtherwiseSpecified(element, options)\n\t})\n}\n\nfunction getMergeFunction(key, options) {\n\tif (!options.customMerge) {\n\t\treturn deepmerge\n\t}\n\tvar customMerge = options.customMerge(key);\n\treturn typeof customMerge === 'function' ? customMerge : deepmerge\n}\n\nfunction getEnumerableOwnPropertySymbols(target) {\n\treturn Object.getOwnPropertySymbols\n\t\t? Object.getOwnPropertySymbols(target).filter(function(symbol) {\n\t\t\treturn Object.propertyIsEnumerable.call(target, symbol)\n\t\t})\n\t\t: []\n}\n\nfunction getKeys(target) {\n\treturn Object.keys(target).concat(getEnumerableOwnPropertySymbols(target))\n}\n\nfunction propertyIsOnObject(object, property) {\n\ttry {\n\t\treturn property in object\n\t} catch(_) {\n\t\treturn false\n\t}\n}\n\n// Protects from prototype poisoning and unexpected merging up the prototype chain.\nfunction propertyIsUnsafe(target, key) {\n\treturn propertyIsOnObject(target, key) // Properties are safe to merge if they don't exist in the target yet,\n\t\t&& !(Object.hasOwnProperty.call(target, key) // unsafe if they exist up the prototype chain,\n\t\t\t&& Object.propertyIsEnumerable.call(target, key)) // and also unsafe if they're nonenumerable.\n}\n\nfunction mergeObject(target, source, options) {\n\tvar destination = {};\n\tif (options.isMergeableObject(target)) {\n\t\tgetKeys(target).forEach(function(key) {\n\t\t\tdestination[key] = cloneUnlessOtherwiseSpecified(target[key], options);\n\t\t});\n\t}\n\tgetKeys(source).forEach(function(key) {\n\t\tif (propertyIsUnsafe(target, key)) {\n\t\t\treturn\n\t\t}\n\n\t\tif (propertyIsOnObject(target, key) && options.isMergeableObject(source[key])) {\n\t\t\tdestination[key] = getMergeFunction(key, options)(target[key], source[key], options);\n\t\t} else {\n\t\t\tdestination[key] = cloneUnlessOtherwiseSpecified(source[key], options);\n\t\t}\n\t});\n\treturn destination\n}\n\nfunction deepmerge(target, source, options) {\n\toptions = options || {};\n\toptions.arrayMerge = options.arrayMerge || defaultArrayMerge;\n\toptions.isMergeableObject = options.isMergeableObject || isMergeableObject;\n\t// cloneUnlessOtherwiseSpecified is added to `options` so that custom arrayMerge()\n\t// implementations can use it. The caller may not replace it.\n\toptions.cloneUnlessOtherwiseSpecified = cloneUnlessOtherwiseSpecified;\n\n\tvar sourceIsArray = Array.isArray(source);\n\tvar targetIsArray = Array.isArray(target);\n\tvar sourceAndTargetTypesMatch = sourceIsArray === targetIsArray;\n\n\tif (!sourceAndTargetTypesMatch) {\n\t\treturn cloneUnlessOtherwiseSpecified(source, options)\n\t} else if (sourceIsArray) {\n\t\treturn options.arrayMerge(target, source, options)\n\t} else {\n\t\treturn mergeObject(target, source, options)\n\t}\n}\n\ndeepmerge.all = function deepmergeAll(array, options) {\n\tif (!Array.isArray(array)) {\n\t\tthrow new Error('first argument should be an array')\n\t}\n\n\treturn array.reduce(function(prev, next) {\n\t\treturn deepmerge(prev, next, options)\n\t}, {})\n};\n\nvar deepmerge_1 = deepmerge;\n\nmodule.exports = deepmerge_1;\n", "export enum Time {\n\tMillisecond = 1,\n\tSecond = 1000,\n\tMinute = 1000 * 60,\n\tHour = 1000 * 60 * 60,\n\tDay = 1000 * 60 * 60 * 24,\n\tMonth = 1000 * 60 * 60 * 24 * 30,\n\tYear = 1000 * 60 * 60 * 24 * 365\n}\n\nexport const primitiveTypes = ['string', 'bigint', 'number', 'boolean'];\n", "import { primitiveTypes } from './constants';\n\n/**\n * Verify if the input is an object literal (or class).\n * @param input The object to verify\n */\n// eslint-disable-next-line @typescript-eslint/ban-types\nexport function isObject(input: unknown): input is Record<PropertyKey, unknown> | object {\n\treturn typeof input === 'object' && input ? input.constructor === Object : false;\n}\n\n/**\n * Check whether a value is a primitive\n * @param input The input to check\n */\nexport function isPrimitive(input: unknown): input is string | bigint | number | boolean {\n\treturn primitiveTypes.includes(typeof input);\n}\n\n// eslint-disable-next-line @typescript-eslint/ban-types\nexport function isFunction(input: unknown): input is Function {\n\treturn typeof input === 'function';\n}\n", "/**\n * Rolls a random number inclusively between a min and max.\n *\n * @param min The lower limit of the roll\n * @param max The upper limit of the roll\n */\nexport function randInt(min: number, max: number): number {\n\treturn Math.floor(Math.random() * (max - min + 1) + min);\n}\n\n/**\n * Rolls a random floating point number inclusively between min and max.\n *\n * @param {number} min - min number\n * @param {number} max - max number\n * @return {number} A random float\n */\nexport function randFloat(min: number, max: number): number {\n\treturn Math.random() * (max - min) + min;\n}\n\n/**\n * Rolls a 1 in X chance, returning true on successfull rolls.\n *\n * @param upperLimit The upper limit of the roll\n */\nexport function roll(upperLimit: number): boolean {\n\treturn randInt(1, upperLimit) === 1;\n}\n\n/**\n * Returns true based on a percent chance.\n *\n * @param percent The percent to have a chance of.\n */\nexport function percentChance(percent: number): boolean {\n\treturn randFloat(0, 100) < percent;\n}\n", "/**\n * Shows what percentage a value is of a total value, for example calculating what percentage of 20 is 5? (25%)\n * @param partialValue The partial value of the total number, that you want to know what its percentage of the total is.\n * @param totalValue The total value, that the partial value is a part of.\n */\nexport function calcWhatPercent(partialValue: number, totalValue: number): number {\n\treturn (100 * partialValue) / totalValue;\n}\n\n/**\n * Calculates what a X% of a total number is, for example calculating what is 20% of 100\n * @param percent The percentage (%) you want to calculate.\n * @param valueToCalc The total number that you want to get the percentage of.\n */\nexport function calcPercentOfNum(percent: number, valueToCalc: number): number {\n\treturn (percent * valueToCalc) / 100;\n}\n\n/**\n * Reduces a number by a percentage of itself.\n * @param value, The number to be reduced.\n * @param percent The percent you want the value to be reduced by.\n */\nexport function reduceNumByPercent(value: number, percent: number): number {\n\tif (percent <= 0) return value;\n\treturn value - value * (percent / 100);\n}\n\n/**\n * Increases a number by a percentage of itself.\n * @param value, The number to be increased.\n * @param percent The percent you want the value to be increased by.\n */\nexport function increaseNumByPercent(value: number, percent: number): number {\n\tif (percent <= 0) return value;\n\treturn value + value * (percent / 100);\n}\n", "/**\n * Picks a random item from an array.\n * @param array The array to pick from.\n */\nexport function randArrItem<T>(array: readonly T[]): T {\n\treturn array[Math.floor(Math.random() * array.length)];\n}\n\n/**\n * Splits up an array into chunks\n * @param array The array to chunk up\n * @param chunkSize The size of each individual chunk\n */\nexport function chunk<T>(array: readonly T[], chunkSize: number): T[][] {\n\tif (chunkSize < 1) throw new RangeError('chunkSize must be 1 or greater.');\n\tif (!Number.isInteger(chunkSize)) throw new TypeError('chunkSize must be an integer.');\n\tconst clone: T[] = array.slice();\n\tconst chunks: T[][] = [];\n\twhile (clone.length) chunks.push(clone.splice(0, chunkSize));\n\treturn chunks;\n}\n\n/**\n * Returns a copy of an array with duplicates removed.\n *\n * @param arr The array to copy and remove duplicates from.\n */\nexport function uniqueArr<T>(arr: readonly T[]): T[] {\n\treturn [...new Set(arr)];\n}\n\n/**\n * Returns the sum of an array of numbers.\n *\n * @param arr The array of numbers to sum.\n */\nexport function sumArr(arr: readonly number[]) {\n\treturn arr.reduce((a, b) => a + b, 0);\n}\n\n/**\n * Returns a shuffled copy of an array.\n *\n * @param array The array to shuffle.\n */\nexport function shuffleArr<T>(array: readonly T[]): T[] {\n\tlet copy = [...array];\n\tfor (let i = copy.length - 1; i > 0; i--) {\n\t\tconst j = Math.floor(Math.random() * (i + 1));\n\t\t[copy[i], copy[j]] = [copy[j], copy[i]];\n\t}\n\treturn copy;\n}\n\n/**\n *\n * @param arr The array to partition\n * @param filter The filter by which to partition the array\n */\nexport function partition<T>(arr: T[], filter: (item: T) => boolean): [T[], T[]] {\n\tconst firstArray: T[] = [];\n\tconst secondArray: T[] = [];\n\tfor (const item of arr) {\n\t\t(filter(item) ? firstArray : secondArray).push(item);\n\t}\n\treturn [firstArray, secondArray];\n}\n\nexport function removeFromArr<T>(arr: T[] | readonly T[], item: T) {\n\treturn arr.filter((i) => i !== item);\n}\n", "/**\n * Rounds a number to a given precision.\n *\n * @param value The number to be rounded.\n * @param precision The precision of the rounding.\n */\nexport function round(value: number, precision = 1): number {\n\tconst multiplier = Math.pow(10, precision || 0);\n\treturn Math.round(value * multiplier) / multiplier;\n}\n\nexport function clamp(val: number, min: number, max: number) {\n\treturn Math.min(max, Math.max(min, val));\n}\n\nexport function scaleNumber(num: number, inMin: number, inMax: number, outMin: number, outMax: number): number {\n\treturn ((num - inMin) * (outMax - outMin)) / (inMax - inMin) + outMin;\n}\n", "export const debounce = <F extends (...args: any[]) => any>(fn: F, waitFor: number) => {\n\tlet timeout: ReturnType<typeof setTimeout> | null = null;\n\n\tconst debounced = (...args: Parameters<F>) => {\n\t\tif (timeout !== null) {\n\t\t\tclearTimeout(timeout);\n\t\t\ttimeout = null;\n\t\t}\n\t\ttimeout = setTimeout(() => fn(...args), waitFor);\n\t};\n\n\treturn debounced as (...args: Parameters<F>) => ReturnType<F>;\n};\n", "import { isObject, isPrimitive } from '../types';\n\n/**\n * Deep clone an object\n * @param source The object to clone\n */\nexport function deepClone<T>(source: T): T {\n\t// Check if it's a primitive (with exception of function and null, which is typeof object)\n\tif (source === null || isPrimitive(source)) return source;\n\tif (Array.isArray(source)) {\n\t\tconst output = ([] as unknown) as T & T extends (infer S)[] ? S[] : never;\n\t\tfor (const value of source) output.push(deepClone(value));\n\t\treturn (output as unknown) as T;\n\t}\n\tif (isObject(source)) {\n\t\tconst output = {} as Record<PropertyKey, unknown>;\n\t\tfor (const [key, value] of Object.entries(source)) output[key] = deepClone(value);\n\t\treturn (output as unknown) as T;\n\t}\n\tif (source instanceof Map) {\n\t\tconst output = (new (source.constructor as MapConstructor)() as unknown) as T & T extends Map<infer K, infer V> ? Map<K, V> : never;\n\t\tfor (const [key, value] of source.entries()) output.set(key, deepClone(value));\n\t\treturn (output as unknown) as T;\n\t}\n\tif (source instanceof Set) {\n\t\tconst output = (new (source.constructor as SetConstructor)() as unknown) as T & T extends Set<infer K> ? Set<K> : never;\n\t\tfor (const value of source.values()) output.add(deepClone(value));\n\t\treturn (output as unknown) as T;\n\t}\n\treturn source;\n}\n", "export function notEmpty<TValue>(value: TValue | null | undefined): value is TValue {\n\treturn value !== null && value !== undefined;\n}\n\nexport function sleep(ms: number) {\n\treturn new Promise((resolve) => setTimeout(resolve, ms));\n}\n\n// eslint-disable-next-line @typescript-eslint/no-empty-function\nexport function noOp() {}\n", "export function objectEntries<T extends Record<PropertyKey, unknown>>(obj: T) {\n\treturn Object.entries(obj) as [keyof T, T[keyof T]][];\n}\n\nexport function objectValues<T extends Record<PropertyKey, unknown>>(obj: T) {\n\treturn Object.values(obj) as T[keyof T][];\n}\n\nexport function objectKeys<T extends Record<PropertyKey, unknown>>(obj: T) {\n\treturn Object.keys(obj) as (keyof T)[];\n}\n", "export function stripNonAlphanumeric(str: string) {\n\treturn str.replace(/[^a-zA-Z0-9]/g, '');\n}\n", "import deepMerge from \"deepmerge\";\n\nimport _items from \"../data/items/item_data.json\" assert { type: \"json\" };\nimport type { Item, ItemID } from \"../meta/types\";\nimport { cleanString } from \"../util/cleanString\";\nimport { Collection } from \"./Collection\";\n\n// @ts-ignore asdf\nconst items = _items as Record<string, Item>;\n\nexport const itemNameMap: Map<string, number> = new Map();\n\ntype ItemResolvable = number | string;\nexport interface ItemCollection {\n\t[index: string]: Item;\n}\n\nexport const CLUE_SCROLLS = [\n\t// Clue scrolls\n\t2677, 2801, 2722, 12_073, 19_835, 23_182,\n];\n\nexport const CLUE_SCROLL_NAMES: string[] = [\n\t\"Clue scroll (beginner)\",\n\t\"Clue scroll (easy)\",\n\t\"Clue scroll (medium)\",\n\t\"Clue scroll (hard)\",\n\t\"Clue scroll (elite)\",\n\t\"Clue scroll (master)\",\n];\n\nexport const USELESS_ITEMS = [\n\t617, 8890, 6964, 2513, 19_492, 11_071, 11_068, 21_284, 24_735, 21_913, 4703, 4561, 2425, 4692, 3741,\n\n\t// Quest blood vial\n\t22_405,\n\n\t// Pharaoh's sceptres\n\t9045, 9046, 9047, 9048, 9049, 9050, 9051, 13_074, 13_075, 13_076, 13_077, 13_078, 16_176, 21_445, 21_446, 26_948,\n\t26_950, 26_945,\n\n\t// Removed items\n\t10_639, 10_641, 10_644, 10_646, 10_647, 10_648, 10_649, 10_651, 10_652, 10_654, 10_657, 10_658, 10_659, 10_661,\n\t27_794, 27_795, 27_796, 27_797, 27_798, 27_799, 27_800, 27_801,\n\n\t// Clue scrolls - Duplicate or individual step clues that don't match filter\n\t3550, 3577, 2793, 12_113, 10_184, 12_027,\n\n\t// SOTE Quest Clues\n\t23_814, 23_815, 23_816, 23_817,\n];\n\nclass Items extends Collection<ItemID, Item> {\n\tpublic get(item: ItemResolvable): Item | undefined {\n\t\tconst id = this.resolveID(item);\n\t\tif (typeof id === \"undefined\") return undefined;\n\t\treturn super.get(id);\n\t}\n\n\tmodifyItem(itemName: ItemResolvable, data: Partial<Item>) {\n\t\tif (data.id) throw new Error(\"Cannot change item ID\");\n\t\tconst id = this.resolveID(itemName)!;\n\t\tconst item = this.get(id);\n\t\tif (!id || !item) throw new Error(`Item ${itemName} does not exist`);\n\t\tthis.set(item.id, deepMerge(item, data));\n\t}\n\n\tprivate resolveID(input: ItemResolvable): ItemID | undefined {\n\t\tif (typeof input === \"number\") {\n\t\t\treturn input;\n\t\t}\n\n\t\tif (typeof input === \"string\") {\n\t\t\treturn itemNameMap.get(cleanString(input));\n\t\t}\n\n\t\treturn undefined;\n\t}\n}\n\nconst itemsExport = new Items();\n\nfor (const [id, item] of Object.entries(items)) {\n\tconst numID = Number.parseInt(id);\n\n\tif (USELESS_ITEMS.includes(numID)) continue;\n\titemsExport.set(numID, item);\n\tconst cleanName = cleanString(item.name);\n\tif (!itemNameMap.has(cleanName)) {\n\t\titemNameMap.set(cleanName, numID);\n\t}\n}\n\nexport default itemsExport;\n", "/**\n * Removes all whitespace, and uppercases it. Used for comparisons.\n * @param str The string to clean.\n */\nexport function cleanString(str: string): string {\n\treturn str.replace(/\\s/g, \"\").toUpperCase();\n}\n", "export class Collection<K, V> extends Map<K, V> {\n\tfilter(predicate: (value: V, key: K, map: this) => boolean): Collection<K, V> {\n\t\tconst result = new Collection<K, V>();\n\t\tfor (const [key, value] of this) {\n\t\t\tif (predicate(value, key, this)) {\n\t\t\t\tresult.set(key, value);\n\t\t\t}\n\t\t}\n\t\treturn result;\n\t}\n\n\tmap<T>(callback: (value: V, key: K, map: this) => T): T[] {\n\t\tconst result: T[] = [];\n\t\tfor (const [key, value] of this) {\n\t\t\tresult.push(callback(value, key, this));\n\t\t}\n\t\treturn result;\n\t}\n\n\trandom(): V {\n\t\tconst index = Math.floor(Math.random() * this.size);\n\t\tlet i = 0;\n\t\tfor (const entry of this) {\n\t\t\tif (i++ === index) return entry[1];\n\t\t}\n\t\tthrow new Error(\"No item found\");\n\t}\n\n\tarray() {\n\t\treturn Array.from(this.values());\n\t}\n\n\tfind(predicate: (value: V, key: K, map: this) => boolean): V | undefined {\n\t\tfor (const [key, value] of this) {\n\t\t\tif (predicate(value, key, this)) {\n\t\t\t\treturn value;\n\t\t\t}\n\t\t}\n\t}\n}\n", "export enum EItem {\n\tTOOLKIT = 1,\n\tCANNONBALL = 2,\n\tCANNON_BASE = 6,\n\tCANNON_STAND = 8,\n\tCANNON_BARRELS = 10,\n\tCANNON_FURNACE = 12,\n\tINSECT_REPELLENT = 28,\n\tBUCKET_OF_WAX = 30,\n\tEXCALIBUR = 35,\n\tCANDLE = 36,\n\tBRONZE_ARROWTIPS = 39,\n\tIRON_ARROWTIPS = 40,\n\tSTEEL_ARROWTIPS = 41,\n\tMITHRIL_ARROWTIPS = 42,\n\tADAMANT_ARROWTIPS = 43,\n\tRUNE_ARROWTIPS = 44,\n\tOPAL_BOLT_TIPS = 45,\n\tPEARL_BOLT_TIPS = 46,\n\tBARB_BOLTTIPS = 47,\n\tLONGBOW_U = 48,\n\tSHORTBOW_U = 50,\n\tARROW_SHAFT = 52,\n\tHEADLESS_ARROW = 53,\n\tOAK_SHORTBOW_U = 54,\n\tOAK_LONGBOW_U = 56,\n\tWILLOW_LONGBOW_U = 58,\n\tWILLOW_SHORTBOW_U = 60,\n\tMAPLE_LONGBOW_U = 62,\n\tMAPLE_SHORTBOW_U = 64,\n\tYEW_LONGBOW_U = 66,\n\tYEW_SHORTBOW_U = 68,\n\tMAGIC_LONGBOW_U = 70,\n\tMAGIC_SHORTBOW_U = 72,\n\tGUAM_POTION_UNF = 91,\n\tMARRENTILL_POTION_UNF = 93,\n\tTARROMIN_POTION_UNF = 95,\n\tHARRALANDER_POTION_UNF = 97,\n\tRANARR_POTION_UNF = 99,\n\tIRIT_POTION_UNF = 101,\n\tAVANTOE_POTION_UNF = 103,\n\tKWUARM_POTION_UNF = 105,\n\tCADANTINE_POTION_UNF = 107,\n\tDWARF_WEED_POTION_UNF = 109,\n\tTORSTOL_POTION_UNF = 111,\n\tSTRENGTH_POTION4 = 113,\n\tSTRENGTH_POTION3 = 115,\n\tSTRENGTH_POTION2 = 117,\n\tSTRENGTH_POTION1 = 119,\n\tATTACK_POTION3 = 121,\n\tATTACK_POTION2 = 123,\n\tATTACK_POTION1 = 125,\n\tRESTORE_POTION3 = 127,\n\tRESTORE_POTION2 = 129,\n\tRESTORE_POTION1 = 131,\n\tDEFENCE_POTION3 = 133,\n\tDEFENCE_POTION2 = 135,\n\tDEFENCE_POTION1 = 137,\n\tPRAYER_POTION3 = 139,\n\tPRAYER_POTION2 = 141,\n\tPRAYER_POTION1 = 143,\n\tSUPER_ATTACK3 = 145,\n\tSUPER_ATTACK2 = 147,\n\tSUPER_ATTACK1 = 149,\n\tFISHING_POTION3 = 151,\n\tFISHING_POTION2 = 153,\n\tFISHING_POTION1 = 155,\n\tSUPER_STRENGTH3 = 157,\n\tSUPER_STRENGTH2 = 159,\n\tSUPER_STRENGTH1 = 161,\n\tSUPER_DEFENCE3 = 163,\n\tSUPER_DEFENCE2 = 165,\n\tSUPER_DEFENCE1 = 167,\n\tRANGING_POTION3 = 169,\n\tRANGING_POTION2 = 171,\n\tRANGING_POTION1 = 173,\n\tANTIPOISON3 = 175,\n\tANTIPOISON2 = 177,\n\tANTIPOISON1 = 179,\n\tSUPERANTIPOISON3 = 181,\n\tSUPERANTIPOISON2 = 183,\n\tSUPERANTIPOISON1 = 185,\n\tZAMORAK_BREW3 = 189,\n\tZAMORAK_BREW2 = 191,\n\tZAMORAK_BREW1 = 193,\n\tPOTION = 195,\n\tPOISON_CHALICE = 197,\n\tGRIMY_GUAM_LEAF = 199,\n\tGRIMY_MARRENTILL = 201,\n\tGRIMY_TARROMIN = 203,\n\tGRIMY_HARRALANDER = 205,\n\tGRIMY_RANARR_WEED = 207,\n\tGRIMY_IRIT_LEAF = 209,\n\tGRIMY_AVANTOE = 211,\n\tGRIMY_KWUARM = 213,\n\tGRIMY_CADANTINE = 215,\n\tGRIMY_DWARF_WEED = 217,\n\tGRIMY_TORSTOL = 219,\n\tEYE_OF_NEWT = 221,\n\tRED_SPIDERS_EGGS = 223,\n\tLIMPWURT_ROOT = 225,\n\tVIAL_OF_WATER = 227,\n\tVIAL = 229,\n\tSNAPE_GRASS = 231,\n\tPESTLE_AND_MORTAR = 233,\n\tUNICORN_HORN_DUST = 235,\n\tUNICORN_HORN = 237,\n\tWHITE_BERRIES = 239,\n\tDRAGON_SCALE_DUST = 241,\n\tBLUE_DRAGON_SCALE = 243,\n\tWINE_OF_ZAMORAK = 245,\n\tJANGERBERRIES = 247,\n\tGUAM_LEAF = 249,\n\tMARRENTILL = 251,\n\tTARROMIN = 253,\n\tHARRALANDER = 255,\n\tRANARR_WEED = 257,\n\tIRIT_LEAF = 259,\n\tAVANTOE = 261,\n\tKWUARM = 263,\n\tCADANTINE = 265,\n\tDWARF_WEED = 267,\n\tTORSTOL = 269,\n\tFISH_FOOD = 272,\n\tPOISON = 273,\n\tGOBLIN_MAIL = 288,\n\tMITHRIL_SEEDS = 299,\n\tLOBSTER_POT = 301,\n\tSMALL_FISHING_NET = 303,\n\tBIG_FISHING_NET = 305,\n\tFISHING_ROD = 307,\n\tFLY_FISHING_ROD = 309,\n\tHARPOON = 311,\n\tFISHING_BAIT = 313,\n\tFEATHER = 314,\n\tSHRIMPS = 315,\n\tRAW_SHRIMPS = 317,\n\tANCHOVIES = 319,\n\tRAW_ANCHOVIES = 321,\n\tSARDINE = 325,\n\tRAW_SARDINE = 327,\n\tSALMON = 329,\n\tRAW_SALMON = 331,\n\tTROUT = 333,\n\tRAW_TROUT = 335,\n\tCOD = 339,\n\tRAW_COD = 341,\n\tRAW_HERRING = 345,\n\tHERRING = 347,\n\tRAW_PIKE = 349,\n\tPIKE = 351,\n\tRAW_MACKEREL = 353,\n\tMACKEREL = 355,\n\tRAW_TUNA = 359,\n\tTUNA = 361,\n\tRAW_BASS = 363,\n\tBASS = 365,\n\tRAW_SWORDFISH = 371,\n\tSWORDFISH = 373,\n\tBURNT_SWORDFISH = 375,\n\tRAW_LOBSTER = 377,\n\tLOBSTER = 379,\n\tBURNT_LOBSTER = 381,\n\tRAW_SHARK = 383,\n\tSHARK = 385,\n\tBURNT_SHARK = 387,\n\tRAW_MANTA_RAY = 389,\n\tMANTA_RAY = 391,\n\tBURNT_MANTA_RAY = 393,\n\tRAW_SEA_TURTLE = 395,\n\tSEA_TURTLE = 397,\n\tBURNT_SEA_TURTLE = 399,\n\tSEAWEED = 401,\n\tEDIBLE_SEAWEED = 403,\n\tCASKET = 405,\n\tOYSTER = 407,\n\tOYSTER_PEARL = 411,\n\tOYSTER_PEARLS = 413,\n\tMEDICAL_GOWN = 430,\n\tCLAY = 434,\n\tCOPPER_ORE = 436,\n\tTIN_ORE = 438,\n\tIRON_ORE = 440,\n\tSILVER_ORE = 442,\n\tGOLD_ORE = 444,\n\tMITHRIL_ORE = 447,\n\tADAMANTITE_ORE = 449,\n\tRUNITE_ORE = 451,\n\tCOAL = 453,\n\tSTRANGE_FRUIT = 464,\n\tBONES = 526,\n\tBURNT_BONES = 528,\n\tBAT_BONES = 530,\n\tBIG_BONES = 532,\n\tBABYDRAGON_BONES = 534,\n\tDRAGON_BONES = 536,\n\tDRUIDS_ROBE = 538,\n\tDRUIDS_ROBE_TOP = 540,\n\tMONKS_ROBE = 542,\n\tMONKS_ROBE_TOP = 544,\n\tSHADE_ROBE_TOP = 546,\n\tSHADE_ROBE = 548,\n\tFIRE_RUNE = 554,\n\tWATER_RUNE = 555,\n\tAIR_RUNE = 556,\n\tEARTH_RUNE = 557,\n\tMIND_RUNE = 558,\n\tBODY_RUNE = 559,\n\tDEATH_RUNE = 560,\n\tNATURE_RUNE = 561,\n\tCHAOS_RUNE = 562,\n\tLAW_RUNE = 563,\n\tCOSMIC_RUNE = 564,\n\tBLOOD_RUNE = 565,\n\tSOUL_RUNE = 566,\n\tUNPOWERED_ORB = 567,\n\tFIRE_ORB = 569,\n\tWATER_ORB = 571,\n\tAIR_ORB = 573,\n\tEARTH_ORB = 575,\n\tBLUE_WIZARD_ROBE = 577,\n\tBLUE_WIZARD_HAT = 579,\n\tBLACK_ROBE = 581,\n\tTINDERBOX = 590,\n\tASHES = 592,\n\tUNLIT_TORCH = 596,\n\tSHIP_TICKET = 621,\n\tPINK_BOOTS = 626,\n\tGREEN_BOOTS = 628,\n\tBLUE_BOOTS = 630,\n\tCREAM_BOOTS = 632,\n\tTURQUOISE_BOOTS = 634,\n\tPINK_ROBE_TOP = 636,\n\tGREEN_ROBE_TOP = 638,\n\tBLUE_ROBE_TOP = 640,\n\tCREAM_ROBE_TOP = 642,\n\tTURQUOISE_ROBE_TOP = 644,\n\tPINK_ROBE_BOTTOMS = 646,\n\tGREEN_ROBE_BOTTOMS = 648,\n\tBLUE_ROBE_BOTTOMS = 650,\n\tCREAM_ROBE_BOTTOMS = 652,\n\tTURQUOISE_ROBE_BOTTOMS = 654,\n\tPINK_HAT = 656,\n\tGREEN_HAT = 658,\n\tBLUE_HAT = 660,\n\tCREAM_HAT = 662,\n\tTURQUOISE_HAT = 664,\n\tOLD_BOOT = 685,\n\tRUSTY_SWORD = 686,\n\tBROKEN_ARROW = 687,\n\tBUTTONS = 688,\n\tBROKEN_STAFF = 689,\n\tBROKEN_GLASS = 690,\n\tDAMAGED_ARMOUR = 697,\n\tBULLROARER = 716,\n\tGOLD_BOWL = 721,\n\tGNOMEBALL = 751,\n\tCADAVA_BERRIES = 753,\n\tCOAL_BAG = 764,\n\tGEM_BAG = 766,\n\tCOOKING_GAUNTLETS = 775,\n\tGOLDSMITH_GAUNTLETS = 776,\n\tWAR_SHIP = 795,\n\tBRONZE_THROWNAXE = 800,\n\tIRON_THROWNAXE = 801,\n\tSTEEL_THROWNAXE = 802,\n\tMITHRIL_THROWNAXE = 803,\n\tADAMANT_THROWNAXE = 804,\n\tRUNE_THROWNAXE = 805,\n\tBRONZE_DART = 806,\n\tIRON_DART = 807,\n\tSTEEL_DART = 808,\n\tMITHRIL_DART = 809,\n\tADAMANT_DART = 810,\n\tRUNE_DART = 811,\n\tIRON_DART_P = 813,\n\tBRONZE_DART_TIP = 819,\n\tIRON_DART_TIP = 820,\n\tSTEEL_DART_TIP = 821,\n\tMITHRIL_DART_TIP = 822,\n\tADAMANT_DART_TIP = 823,\n\tRUNE_DART_TIP = 824,\n\tBRONZE_JAVELIN = 825,\n\tIRON_JAVELIN = 826,\n\tSTEEL_JAVELIN = 827,\n\tMITHRIL_JAVELIN = 828,\n\tADAMANT_JAVELIN = 829,\n\tRUNE_JAVELIN = 830,\n\tCROSSBOW = 837,\n\tLONGBOW = 839,\n\tSHORTBOW = 841,\n\tOAK_SHORTBOW = 843,\n\tOAK_LONGBOW = 845,\n\tWILLOW_LONGBOW = 847,\n\tWILLOW_SHORTBOW = 849,\n\tMAPLE_LONGBOW = 851,\n\tMAPLE_SHORTBOW = 853,\n\tYEW_LONGBOW = 855,\n\tYEW_SHORTBOW = 857,\n\tMAGIC_LONGBOW = 859,\n\tMAGIC_SHORTBOW = 861,\n\tIRON_KNIFE = 863,\n\tBRONZE_KNIFE = 864,\n\tSTEEL_KNIFE = 865,\n\tMITHRIL_KNIFE = 866,\n\tADAMANT_KNIFE = 867,\n\tRUNE_KNIFE = 868,\n\tBLACK_KNIFE = 869,\n\tBRONZE_BOLTS = 877,\n\tOPAL_BOLTS = 879,\n\tPEARL_BOLTS = 880,\n\tBARBED_BOLTS = 881,\n\tBRONZE_ARROW = 882,\n\tIRON_ARROW = 884,\n\tSTEEL_ARROW = 886,\n\tMITHRIL_ARROW = 888,\n\tADAMANT_ARROW = 890,\n\tRUNE_ARROW = 892,\n\tKNIFE = 946,\n\tBEAR_FUR = 948,\n\tSILK = 950,\n\tSPADE = 952,\n\tROPE = 954,\n\tFLYER = 956,\n\tGREY_WOLF_FUR = 958,\n\tPLANK = 960,\n\tCHRISTMAS_CRACKER = 962,\n\tSKULL = 964,\n\tPAPYRUS = 970,\n\tCHARCOAL = 973,\n\tMACHETE = 975,\n\tDISK_OF_RETURNING = 981,\n\tBRASS_KEY = 983,\n\tTOOTH_HALF_OF_KEY = 985,\n\tLOOP_HALF_OF_KEY = 987,\n\tCRYSTAL_KEY = 989,\n\tMUDDY_KEY = 991,\n\tSINISTER_KEY = 993,\n\tCOINS = 995,\n\tWHITE_APRON = 1005,\n\tRED_CAPE = 1007,\n\tBRASS_NECKLACE = 1009,\n\tBLUE_SKIRT = 1011,\n\tPINK_SKIRT = 1013,\n\tBLACK_SKIRT = 1015,\n\tWIZARD_HAT = 1017,\n\tBLACK_CAPE = 1019,\n\tBLUE_CAPE = 1021,\n\tYELLOW_CAPE = 1023,\n\tRIGHT_EYE_PATCH = 1025,\n\tGREEN_CAPE = 1027,\n\tPURPLE_CAPE = 1029,\n\tORANGE_CAPE = 1031,\n\tZAMORAK_MONK_BOTTOM = 1033,\n\tZAMORAK_MONK_TOP = 1035,\n\tBUNNY_EARS = 1037,\n\tRED_PARTYHAT = 1038,\n\tYELLOW_PARTYHAT = 1040,\n\tBLUE_PARTYHAT = 1042,\n\tGREEN_PARTYHAT = 1044,\n\tPURPLE_PARTYHAT = 1046,\n\tWHITE_PARTYHAT = 1048,\n\tSANTA_HAT = 1050,\n\tCAPE_OF_LEGENDS = 1052,\n\tGREEN_HALLOWEEN_MASK = 1053,\n\tBLUE_HALLOWEEN_MASK = 1055,\n\tRED_HALLOWEEN_MASK = 1057,\n\tLEATHER_GLOVES = 1059,\n\tLEATHER_BOOTS = 1061,\n\tLEATHER_VAMBRACES = 1063,\n\tGREEN_DHIDE_VAMBRACES = 1065,\n\tIRON_PLATELEGS = 1067,\n\tSTEEL_PLATELEGS = 1069,\n\tMITHRIL_PLATELEGS = 1071,\n\tADAMANT_PLATELEGS = 1073,\n\tBRONZE_PLATELEGS = 1075,\n\tBLACK_PLATELEGS = 1077,\n\tRUNE_PLATELEGS = 1079,\n\tIRON_PLATESKIRT = 1081,\n\tSTEEL_PLATESKIRT = 1083,\n\tMITHRIL_PLATESKIRT = 1085,\n\tBRONZE_PLATESKIRT = 1087,\n\tBLACK_PLATESKIRT = 1089,\n\tADAMANT_PLATESKIRT = 1091,\n\tRUNE_PLATESKIRT = 1093,\n\tLEATHER_CHAPS = 1095,\n\tSTUDDED_CHAPS = 1097,\n\tGREEN_DHIDE_CHAPS = 1099,\n\tIRON_CHAINBODY = 1101,\n\tBRONZE_CHAINBODY = 1103,\n\tSTEEL_CHAINBODY = 1105,\n\tBLACK_CHAINBODY = 1107,\n\tMITHRIL_CHAINBODY = 1109,\n\tADAMANT_CHAINBODY = 1111,\n\tRUNE_CHAINBODY = 1113,\n\tIRON_PLATEBODY = 1115,\n\tBRONZE_PLATEBODY = 1117,\n\tSTEEL_PLATEBODY = 1119,\n\tMITHRIL_PLATEBODY = 1121,\n\tADAMANT_PLATEBODY = 1123,\n\tBLACK_PLATEBODY = 1125,\n\tRUNE_PLATEBODY = 1127,\n\tLEATHER_BODY = 1129,\n\tHARDLEATHER_BODY = 1131,\n\tSTUDDED_BODY = 1133,\n\tGREEN_DHIDE_BODY = 1135,\n\tIRON_MED_HELM = 1137,\n\tBRONZE_MED_HELM = 1139,\n\tSTEEL_MED_HELM = 1141,\n\tMITHRIL_MED_HELM = 1143,\n\tADAMANT_MED_HELM = 1145,\n\tRUNE_MED_HELM = 1147,\n\tDRAGON_MED_HELM = 1149,\n\tBLACK_MED_HELM = 1151,\n\tIRON_FULL_HELM = 1153,\n\tBRONZE_FULL_HELM = 1155,\n\tSTEEL_FULL_HELM = 1157,\n\tMITHRIL_FULL_HELM = 1159,\n\tADAMANT_FULL_HELM = 1161,\n\tRUNE_FULL_HELM = 1163,\n\tBLACK_FULL_HELM = 1165,\n\tLEATHER_COWL = 1167,\n\tCOIF = 1169,\n\tWOODEN_SHIELD = 1171,\n\tBRONZE_SQ_SHIELD = 1173,\n\tIRON_SQ_SHIELD = 1175,\n\tSTEEL_SQ_SHIELD = 1177,\n\tBLACK_SQ_SHIELD = 1179,\n\tMITHRIL_SQ_SHIELD = 1181,\n\tADAMANT_SQ_SHIELD = 1183,\n\tRUNE_SQ_SHIELD = 1185,\n\tDRAGON_SQ_SHIELD = 1187,\n\tBRONZE_KITESHIELD = 1189,\n\tIRON_KITESHIELD = 1191,\n\tSTEEL_KITESHIELD = 1193,\n\tBLACK_KITESHIELD = 1195,\n\tMITHRIL_KITESHIELD = 1197,\n\tADAMANT_KITESHIELD = 1199,\n\tRUNE_KITESHIELD = 1201,\n\tIRON_DAGGER = 1203,\n\tBRONZE_DAGGER = 1205,\n\tSTEEL_DAGGER = 1207,\n\tMITHRIL_DAGGER = 1209,\n\tADAMANT_DAGGER = 1211,\n\tRUNE_DAGGER = 1213,\n\tDRAGON_DAGGER = 1215,\n\tBLACK_DAGGER = 1217,\n\tBRONZE_SPEAR = 1237,\n\tIRON_SPEAR = 1239,\n\tSTEEL_SPEAR = 1241,\n\tMITHRIL_SPEAR = 1243,\n\tADAMANT_SPEAR = 1245,\n\tRUNE_SPEAR = 1247,\n\tDRAGON_SPEAR = 1249,\n\tBRONZE_PICKAXE = 1265,\n\tIRON_PICKAXE = 1267,\n\tSTEEL_PICKAXE = 1269,\n\tADAMANT_PICKAXE = 1271,\n\tMITHRIL_PICKAXE = 1273,\n\tRUNE_PICKAXE = 1275,\n\tBRONZE_SWORD = 1277,\n\tIRON_SWORD = 1279,\n\tSTEEL_SWORD = 1281,\n\tBLACK_SWORD = 1283,\n\tMITHRIL_SWORD = 1285,\n\tADAMANT_SWORD = 1287,\n\tRUNE_SWORD = 1289,\n\tBRONZE_LONGSWORD = 1291,\n\tIRON_LONGSWORD = 1293,\n\tSTEEL_LONGSWORD = 1295,\n\tBLACK_LONGSWORD = 1297,\n\tMITHRIL_LONGSWORD = 1299,\n\tADAMANT_LONGSWORD = 1301,\n\tRUNE_LONGSWORD = 1303,\n\tDRAGON_LONGSWORD = 1305,\n\tBRONZE_2H_SWORD = 1307,\n\tIRON_2H_SWORD = 1309,\n\tSTEEL_2H_SWORD = 1311,\n\tBLACK_2H_SWORD = 1313,\n\tMITHRIL_2H_SWORD = 1315,\n\tADAMANT_2H_SWORD = 1317,\n\tRUNE_2H_SWORD = 1319,\n\tBRONZE_SCIMITAR = 1321,\n\tIRON_SCIMITAR = 1323,\n\tSTEEL_SCIMITAR = 1325,\n\tBLACK_SCIMITAR = 1327,\n\tMITHRIL_SCIMITAR = 1329,\n\tADAMANT_SCIMITAR = 1331,\n\tIRON_WARHAMMER = 1335,\n\tBRONZE_WARHAMMER = 1337,\n\tSTEEL_WARHAMMER = 1339,\n\tBLACK_WARHAMMER = 1341,\n\tMITHRIL_WARHAMMER = 1343,\n\tADAMANT_WARHAMMER = 1345,\n\tRUNE_WARHAMMER = 1347,\n\tIRON_AXE = 1349,\n\tBRONZE_AXE = 1351,\n\tSTEEL_AXE = 1353,\n\tMITHRIL_AXE = 1355,\n\tADAMANT_AXE = 1357,\n\tRUNE_AXE = 1359,\n\tBLACK_AXE = 1361,\n\tIRON_BATTLEAXE = 1363,\n\tSTEEL_BATTLEAXE = 1365,\n\tBLACK_BATTLEAXE = 1367,\n\tMITHRIL_BATTLEAXE = 1369,\n\tADAMANT_BATTLEAXE = 1371,\n\tRUNE_BATTLEAXE = 1373,\n\tBRONZE_BATTLEAXE = 1375,\n\tDRAGON_BATTLEAXE = 1377,\n\tSTAFF = 1379,\n\tSTAFF_OF_AIR = 1381,\n\tSTAFF_OF_WATER = 1383,\n\tSTAFF_OF_EARTH = 1385,\n\tSTAFF_OF_FIRE = 1387,\n\tMAGIC_STAFF = 1389,\n\tBATTLESTAFF = 1391,\n\tFIRE_BATTLESTAFF = 1393,\n\tWATER_BATTLESTAFF = 1395,\n\tAIR_BATTLESTAFF = 1397,\n\tEARTH_BATTLESTAFF = 1399,\n\tMYSTIC_FIRE_STAFF = 1401,\n\tMYSTIC_WATER_STAFF = 1403,\n\tMYSTIC_AIR_STAFF = 1405,\n\tMYSTIC_EARTH_STAFF = 1407,\n\tIBANS_STAFF = 1409,\n\tSCYTHE = 1419,\n\tIRON_MACE = 1420,\n\tBRONZE_MACE = 1422,\n\tSTEEL_MACE = 1424,\n\tBLACK_MACE = 1426,\n\tMITHRIL_MACE = 1428,\n\tADAMANT_MACE = 1430,\n\tRUNE_MACE = 1432,\n\tDRAGON_MACE = 1434,\n\tRUNE_ESSENCE = 1436,\n\tAIR_TALISMAN = 1438,\n\tEARTH_TALISMAN = 1440,\n\tFIRE_TALISMAN = 1442,\n\tWATER_TALISMAN = 1444,\n\tBODY_TALISMAN = 1446,\n\tMIND_TALISMAN = 1448,\n\tBLOOD_TALISMAN = 1450,\n\tCHAOS_TALISMAN = 1452,\n\tCOSMIC_TALISMAN = 1454,\n\tDEATH_TALISMAN = 1456,\n\tLAW_TALISMAN = 1458,\n\tNATURE_TALISMAN = 1462,\n\tARCHERY_TICKET = 1464,\n\tRED_BEAD = 1470,\n\tYELLOW_BEAD = 1472,\n\tBLACK_BEAD = 1474,\n\tWHITE_BEAD = 1476,\n\tAMULET_OF_ACCURACY = 1478,\n\tGAS_MASK = 1506,\n\tLOGS = 1511,\n\tMAGIC_LOGS = 1513,\n\tYEW_LOGS = 1515,\n\tMAPLE_LOGS = 1517,\n\tWILLOW_LOGS = 1519,\n\tOAK_LOGS = 1521,\n\tLOCKPICK = 1523,\n\tSNAKE_WEED = 1526,\n\tSTEEL_NAILS = 1539,\n\tANTIDRAGON_SHIELD = 1540,\n\tGARLIC = 1550,\n\tSEASONED_SARDINE = 1552,\n\tDOOGLE_LEAVES = 1573,\n\tRING_MOULD = 1592,\n\tUNHOLY_MOULD = 1594,\n\tAMULET_MOULD = 1595,\n\tNECKLACE_MOULD = 1597,\n\tHOLY_MOULD = 1599,\n\tDIAMOND = 1601,\n\tRUBY = 1603,\n\tEMERALD = 1605,\n\tSAPPHIRE = 1607,\n\tOPAL = 1609,\n\tJADE = 1611,\n\tRED_TOPAZ = 1613,\n\tDRAGONSTONE = 1615,\n\tUNCUT_DIAMOND = 1617,\n\tUNCUT_RUBY = 1619,\n\tUNCUT_EMERALD = 1621,\n\tUNCUT_SAPPHIRE = 1623,\n\tUNCUT_OPAL = 1625,\n\tUNCUT_JADE = 1627,\n\tUNCUT_RED_TOPAZ = 1629,\n\tUNCUT_DRAGONSTONE = 1631,\n\tCRUSHED_GEM = 1633,\n\tGOLD_RING = 1635,\n\tSAPPHIRE_RING = 1637,\n\tEMERALD_RING = 1639,\n\tRUBY_RING = 1641,\n\tDIAMOND_RING = 1643,\n\tDRAGONSTONE_RING = 1645,\n\tGOLD_NECKLACE = 1654,\n\tSAPPHIRE_NECKLACE = 1656,\n\tEMERALD_NECKLACE = 1658,\n\tRUBY_NECKLACE = 1660,\n\tDIAMOND_NECKLACE = 1662,\n\tDRAGON_NECKLACE = 1664,\n\tGOLD_AMULET_U = 1673,\n\tSAPPHIRE_AMULET_U = 1675,\n\tEMERALD_AMULET_U = 1677,\n\tRUBY_AMULET_U = 1679,\n\tDIAMOND_AMULET_U = 1681,\n\tDRAGONSTONE_AMULET_U = 1683,\n\tGOLD_AMULET = 1692,\n\tSAPPHIRE_AMULET = 1694,\n\tEMERALD_AMULET = 1696,\n\tRUBY_AMULET = 1698,\n\tDIAMOND_AMULET = 1700,\n\tDRAGONSTONE_AMULET = 1702,\n\tAMULET_OF_GLORY = 1704,\n\tAMULET_OF_GLORY4 = 1712,\n\tUNSTRUNG_SYMBOL = 1714,\n\tUNBLESSED_SYMBOL = 1716,\n\tHOLY_SYMBOL = 1718,\n\tUNSTRUNG_EMBLEM = 1720,\n\tUNPOWERED_SYMBOL = 1722,\n\tUNHOLY_SYMBOL = 1724,\n\tAMULET_OF_STRENGTH = 1725,\n\tAMULET_OF_MAGIC = 1727,\n\tAMULET_OF_DEFENCE = 1729,\n\tAMULET_OF_POWER = 1731,\n\tNEEDLE = 1733,\n\tTHREAD = 1734,\n\tSHEARS = 1735,\n\tWOOL = 1737,\n\tCOWHIDE = 1739,\n\tLEATHER = 1741,\n\tHARD_LEATHER = 1743,\n\tGREEN_DRAGON_LEATHER = 1745,\n\tBLACK_DRAGONHIDE = 1747,\n\tRED_DRAGONHIDE = 1749,\n\tBLUE_DRAGONHIDE = 1751,\n\tGREEN_DRAGONHIDE = 1753,\n\tCHISEL = 1755,\n\tBROWN_APRON = 1757,\n\tBALL_OF_WOOL = 1759,\n\tSOFT_CLAY = 1761,\n\tRED_DYE = 1763,\n\tYELLOW_DYE = 1765,\n\tBLUE_DYE = 1767,\n\tORANGE_DYE = 1769,\n\tGREEN_DYE = 1771,\n\tPURPLE_DYE = 1773,\n\tMOLTEN_GLASS = 1775,\n\tBOW_STRING = 1777,\n\tFLAX = 1779,\n\tSODA_ASH = 1781,\n\tBUCKET_OF_SAND = 1783,\n\tGLASSBLOWING_PIPE = 1785,\n\tUNFIRED_POT = 1787,\n\tUNFIRED_PIE_DISH = 1789,\n\tUNFIRED_BOWL = 1791,\n\tWOAD_LEAF = 1793,\n\tBRONZE_WIRE = 1794,\n\tWATERSKIN4 = 1823,\n\tWATERSKIN0 = 1831,\n\tDESERT_SHIRT = 1833,\n\tDESERT_ROBE = 1835,\n\tDESERT_BOOTS = 1837,\n\tSHANTAY_PASS = 1854,\n\tRAW_UGTHANKI_MEAT = 1859,\n\tUGTHANKI_MEAT = 1861,\n\tPITTA_BREAD = 1865,\n\tCHOPPED_TOMATO = 1869,\n\tCHOPPED_ONION = 1871,\n\tCHOPPED_UGTHANKI = 1873,\n\tONION_TOMATO = 1875,\n\tUGTHANKI_ONION = 1877,\n\tUGTHANKI_TOMATO = 1879,\n\tKEBAB_MIX = 1881,\n\tCAKE_TIN = 1887,\n\tCAKE = 1891,\n\tCHOCOLATE_CAKE = 1897,\n\tCHOCOLATE_SLICE = 1901,\n\tWIZARDS_MIND_BOMB = 1907,\n\tDWARVEN_STOUT = 1913,\n\tGROG = 1915,\n\tBEER = 1917,\n\tBEER_GLASS = 1919,\n\tBOWL_OF_WATER = 1921,\n\tBOWL = 1923,\n\tBUCKET = 1925,\n\tBUCKET_OF_MILK = 1927,\n\tBUCKET_OF_WATER = 1929,\n\tPOT = 1931,\n\tPOT_OF_FLOUR = 1933,\n\tJUG = 1935,\n\tJUG_OF_WATER = 1937,\n\tSWAMP_TAR = 1939,\n\tSWAMP_PASTE = 1941,\n\tPOTATO = 1942,\n\tEGG = 1944,\n\tGRAIN = 1947,\n\tCHEFS_HAT = 1949,\n\tREDBERRIES = 1951,\n\tPASTRY_DOUGH = 1953,\n\tCOOKING_APPLE = 1955,\n\tONION = 1957,\n\tPUMPKIN = 1959,\n\tEASTER_EGG = 1961,\n\tBANANA = 1963,\n\tCABBAGE = 1965,\n\tSPINACH_ROLL = 1969,\n\tKEBAB = 1971,\n\tCHOCOLATE_BAR = 1973,\n\tCHOCOLATE_DUST = 1975,\n\tEMPTY_CUP = 1980,\n\tTOMATO = 1982,\n\tCHEESE = 1985,\n\tGRAPES = 1987,\n\tHALF_FULL_WINE_JUG = 1989,\n\tJUG_OF_BAD_WINE = 1991,\n\tJUG_OF_WINE = 1993,\n\tSTEW = 2003,\n\tSPICE = 2007,\n\tCURRY = 2011,\n\tVODKA = 2015,\n\tWHISKY = 2017,\n\tGIN = 2019,\n\tBRANDY = 2021,\n\tCOCKTAIL_GUIDE = 2023,\n\tCOCKTAIL_SHAKER = 2025,\n\tCOCKTAIL_GLASS = 2026,\n\tPREMADE_BLURB_SP = 2028,\n\tPREMADE_CHOC_SDY = 2030,\n\tPREMADE_DR_DRAGON = 2032,\n\tPREMADE_FR_BLAST = 2034,\n\tPREMADE_P_PUNCH = 2036,\n\tPREMADE_SGG = 2038,\n\tPREMADE_WIZ_BLZD = 2040,\n\tPINEAPPLE_PUNCH = 2048,\n\tWIZARD_BLIZZARD = 2054,\n\tBLURBERRY_SPECIAL = 2064,\n\tCHOC_SATURDAY = 2074,\n\tSHORT_GREEN_GUY = 2080,\n\tFRUIT_BLAST = 2084,\n\tDRUNK_DRAGON = 2092,\n\tLEMON = 2102,\n\tLEMON_CHUNKS = 2104,\n\tLEMON_SLICES = 2106,\n\tORANGE = 2108,\n\tORANGE_CHUNKS = 2110,\n\tORANGE_SLICES = 2112,\n\tPINEAPPLE = 2114,\n\tPINEAPPLE_CHUNKS = 2116,\n\tPINEAPPLE_RING = 2118,\n\tLIME = 2120,\n\tLIME_CHUNKS = 2122,\n\tLIME_SLICES = 2124,\n\tDWELLBERRIES = 2126,\n\tEQUA_LEAVES = 2128,\n\tPOT_OF_CREAM = 2130,\n\tRAW_BEEF = 2132,\n\tRAW_RAT_MEAT = 2134,\n\tRAW_BEAR_MEAT = 2136,\n\tRAW_CHICKEN = 2138,\n\tCOOKED_CHICKEN = 2140,\n\tCOOKED_MEAT = 2142,\n\tBURNT_CHICKEN = 2144,\n\tBURNT_MEAT = 2146,\n\tSWAMP_TOAD = 2150,\n\tTOADS_LEGS = 2152,\n\tKING_WORM = 2162,\n\tBATTA_TIN = 2164,\n\tCRUNCHY_TRAY = 2165,\n\tGNOMEBOWL_MOULD = 2166,\n\tGIANNES_COOK_BOOK = 2167,\n\tGNOME_SPICE = 2169,\n\tGIANNE_DOUGH = 2171,\n\tCHOCOLATE_BOMB = 2185,\n\tTANGLED_TOADS_LEGS = 2187,\n\tWORM_HOLE = 2191,\n\tVEG_BALL = 2195,\n\tWORM_CRUNCHIES = 2205,\n\tCHOCCHIP_CRUNCHIES = 2209,\n\tSPICY_CRUNCHIES = 2213,\n\tTOAD_CRUNCHIES = 2217,\n\tPREMADE_WM_BATTA = 2219,\n\tPREMADE_TD_BATTA = 2221,\n\tPREMADE_CT_BATTA = 2223,\n\tPREMADE_FRT_BATTA = 2225,\n\tPREMADE_VEG_BATTA = 2227,\n\tPREMADE_CHOC_BOMB = 2229,\n\tPREMADE_TTL = 2231,\n\tPREMADE_WORM_HOLE = 2233,\n\tPREMADE_VEG_BALL = 2235,\n\tPREMADE_WM_CRUN = 2237,\n\tPREMADE_CH_CRUNCH = 2239,\n\tPREMADE_SY_CRUNCH = 2241,\n\tPREMADE_TD_CRUNCH = 2243,\n\tWORM_BATTA = 2253,\n\tTOAD_BATTA = 2255,\n\tCHEESETOM_BATTA = 2259,\n\tFRUIT_BATTA = 2277,\n\tVEGETABLE_BATTA = 2281,\n\tPIZZA_BASE = 2283,\n\tPLAIN_PIZZA = 2289,\n\tMEAT_PIZZA = 2293,\n\tANCHOVY_PIZZA = 2297,\n\tPINEAPPLE_PIZZA = 2301,\n\tBREAD_DOUGH = 2307,\n\tBREAD = 2309,\n\tBURNT_BREAD = 2311,\n\tPIE_DISH = 2313,\n\tPIE_SHELL = 2315,\n\tUNCOOKED_APPLE_PIE = 2317,\n\tUNCOOKED_MEAT_PIE = 2319,\n\tUNCOOKED_BERRY_PIE = 2321,\n\tAPPLE_PIE = 2323,\n\tREDBERRY_PIE = 2325,\n\tMEAT_PIE = 2327,\n\tRAW_OOMLIE = 2337,\n\tWRAPPED_OOMLIE = 2341,\n\tCOOKED_OOMLIE_WRAP = 2343,\n\tHAMMER = 2347,\n\tBRONZE_BAR = 2349,\n\tIRON_BAR = 2351,\n\tSTEEL_BAR = 2353,\n\tSILVER_BAR = 2355,\n\tGOLD_BAR = 2357,\n\tMITHRIL_BAR = 2359,\n\tADAMANTITE_BAR = 2361,\n\tRUNITE_BAR = 2363,\n\tSHIELD_LEFT_HALF = 2366,\n\tSHIELD_RIGHT_HALF = 2368,\n\tSTEEL_STUDS = 2370,\n\tCAVE_NIGHTSHADE = 2398,\n\tSILVERLIGHT = 2402,\n\tSARADOMIN_CAPE = 2412,\n\tGUTHIX_CAPE = 2413,\n\tZAMORAK_CAPE = 2414,\n\tATTACK_POTION4 = 2428,\n\tRESTORE_POTION4 = 2430,\n\tDEFENCE_POTION4 = 2432,\n\tPRAYER_POTION4 = 2434,\n\tSUPER_ATTACK4 = 2436,\n\tFISHING_POTION4 = 2438,\n\tSUPER_STRENGTH4 = 2440,\n\tSUPER_DEFENCE4 = 2442,\n\tRANGING_POTION4 = 2444,\n\tANTIPOISON4 = 2446,\n\tSUPERANTIPOISON4 = 2448,\n\tZAMORAK_BREW4 = 2450,\n\tANTIFIRE_POTION4 = 2452,\n\tANTIFIRE_POTION3 = 2454,\n\tANTIFIRE_POTION2 = 2456,\n\tANTIFIRE_POTION1 = 2458,\n\tASSORTED_FLOWERS = 2460,\n\tRED_FLOWERS = 2462,\n\tBLUE_FLOWERS = 2464,\n\tYELLOW_FLOWERS = 2466,\n\tPURPLE_FLOWERS = 2468,\n\tORANGE_FLOWERS = 2470,\n\tMIXED_FLOWERS = 2472,\n\tWHITE_FLOWERS = 2474,\n\tBLACK_FLOWERS = 2476,\n\tLANTADYME = 2481,\n\tLANTADYME_POTION_UNF = 2483,\n\tGRIMY_LANTADYME = 2485,\n\tBLUE_DHIDE_VAMBRACES = 2487,\n\tRED_DHIDE_VAMBRACES = 2489,\n\tBLACK_DHIDE_VAMBRACES = 2491,\n\tBLUE_DHIDE_CHAPS = 2493,\n\tRED_DHIDE_CHAPS = 2495,\n\tBLACK_DHIDE_CHAPS = 2497,\n\tBLUE_DHIDE_BODY = 2499,\n\tRED_DHIDE_BODY = 2501,\n\tBLACK_DHIDE_BODY = 2503,\n\tBLUE_DRAGON_LEATHER = 2505,\n\tRED_DRAGON_LEATHER = 2507,\n\tBLACK_DRAGON_LEATHER = 2509,\n\tBROWN_TOY_HORSEY = 2520,\n\tWHITE_TOY_HORSEY = 2522,\n\tBLACK_TOY_HORSEY = 2524,\n\tGREY_TOY_HORSEY = 2526,\n\tLAMP = 2528,\n\tADAMANT_FIRE_ARROW = 2538,\n\tRING_OF_RECOIL = 2550,\n\tRING_OF_DUELING8 = 2552,\n\tRING_OF_FORGING = 2568,\n\tRING_OF_LIFE = 2570,\n\tRING_OF_WEALTH = 2572,\n\tRANGER_BOOTS = 2577,\n\tWIZARD_BOOTS = 2579,\n\tROBIN_HOOD_HAT = 2581,\n\tBLACK_PLATEBODY_T = 2583,\n\tBLACK_PLATELEGS_T = 2585,\n\tBLACK_FULL_HELM_T = 2587,\n\tBLACK_KITESHIELD_T = 2589,\n\tBLACK_PLATEBODY_G = 2591,\n\tBLACK_PLATELEGS_G = 2593,\n\tBLACK_FULL_HELM_G = 2595,\n\tBLACK_KITESHIELD_G = 2597,\n\tADAMANT_PLATEBODY_T = 2599,\n\tADAMANT_PLATELEGS_T = 2601,\n\tADAMANT_KITESHIELD_T = 2603,\n\tADAMANT_FULL_HELM_T = 2605,\n\tADAMANT_PLATEBODY_G = 2607,\n\tADAMANT_PLATELEGS_G = 2609,\n\tADAMANT_KITESHIELD_G = 2611,\n\tADAMANT_FULL_HELM_G = 2613,\n\tRUNE_PLATEBODY_G = 2615,\n\tRUNE_PLATELEGS_G = 2617,\n\tRUNE_FULL_HELM_G = 2619,\n\tRUNE_KITESHIELD_G = 2621,\n\tRUNE_PLATEBODY_T = 2623,\n\tRUNE_PLATELEGS_T = 2625,\n\tRUNE_FULL_HELM_T = 2627,\n\tRUNE_KITESHIELD_T = 2629,\n\tHIGHWAYMAN_MASK = 2631,\n\tBLUE_BERET = 2633,\n\tBLACK_BERET = 2635,\n\tWHITE_BERET = 2637,\n\tTAN_CAVALIER = 2639,\n\tDARK_CAVALIER = 2641,\n\tBLACK_CAVALIER = 2643,\n\tRED_HEADBAND = 2645,\n\tBLACK_HEADBAND = 2647,\n\tBROWN_HEADBAND = 2649,\n\tPIRATES_HAT = 2651,\n\tZAMORAK_PLATEBODY = 2653,\n\tZAMORAK_PLATELEGS = 2655,\n\tZAMORAK_FULL_HELM = 2657,\n\tZAMORAK_KITESHIELD = 2659,\n\tSARADOMIN_PLATEBODY = 2661,\n\tSARADOMIN_PLATELEGS = 2663,\n\tSARADOMIN_FULL_HELM = 2665,\n\tSARADOMIN_KITESHIELD = 2667,\n\tGUTHIX_PLATEBODY = 2669,\n\tGUTHIX_PLATELEGS = 2671,\n\tGUTHIX_FULL_HELM = 2673,\n\tGUTHIX_KITESHIELD = 2675,\n\tCLUE_SCROLL_EASY = 2677,\n\tCLUE_SCROLL_HARD = 2722,\n\tCLUE_SCROLL_MEDIUM = 2801,\n\tWOLF_BONES = 2859,\n\tWOLFBONE_ARROWTIPS = 2861,\n\tACHEY_TREE_LOGS = 2862,\n\tOGRE_ARROW_SHAFT = 2864,\n\tFLIGHTED_OGRE_ARROW = 2865,\n\tOGRE_ARROW = 2866,\n\tRAW_CHOMPY = 2876,\n\tCOOKED_CHOMPY = 2878,\n\tOGRE_BOW = 2883,\n\tELEMENTAL_SHIELD = 2890,\n\tGREY_BOOTS = 2894,\n\tGREY_ROBE_TOP = 2896,\n\tGREY_ROBE_BOTTOMS = 2898,\n\tGREY_HAT = 2900,\n\tGREY_GLOVES = 2902,\n\tRED_BOOTS = 2904,\n\tRED_ROBE_TOP = 2906,\n\tRED_ROBE_BOTTOMS = 2908,\n\tRED_HAT = 2910,\n\tRED_GLOVES = 2912,\n\tYELLOW_BOOTS = 2914,\n\tYELLOW_ROBE_TOP = 2916,\n\tYELLOW_ROBE_BOTTOMS = 2918,\n\tYELLOW_HAT = 2920,\n\tYELLOW_GLOVES = 2922,\n\tTEAL_BOOTS = 2924,\n\tTEAL_ROBE_TOP = 2926,\n\tTEAL_ROBE_BOTTOMS = 2928,\n\tTEAL_HAT = 2930,\n\tTEAL_GLOVES = 2932,\n\tPURPLE_BOOTS = 2934,\n\tPURPLE_ROBE_TOP = 2936,\n\tPURPLE_ROBE_BOTTOMS = 2938,\n\tPURPLE_HAT = 2940,\n\tPURPLE_GLOVES = 2942,\n\tMOONLIGHT_MEAD = 2955,\n\tSILVER_SICKLE = 2961,\n\tMORT_MYRE_FUNGUS = 2970,\n\tMORT_MYRE_STEM = 2972,\n\tMORT_MYRE_PEAR = 2974,\n\tSICKLE_MOULD = 2976,\n\tAGILITY_ARENA_TICKET = 2996,\n\tPIRATES_HOOK = 2997,\n\tTOADFLAX = 2998,\n\tSNAPDRAGON = 3000,\n\tTOADFLAX_POTION_UNF = 3002,\n\tSNAPDRAGON_POTION_UNF = 3004,\n\tENERGY_POTION4 = 3008,\n\tENERGY_POTION3 = 3010,\n\tENERGY_POTION2 = 3012,\n\tENERGY_POTION1 = 3014,\n\tSUPER_ENERGY4 = 3016,\n\tSUPER_ENERGY3 = 3018,\n\tSUPER_ENERGY2 = 3020,\n\tSUPER_ENERGY1 = 3022,\n\tSUPER_RESTORE4 = 3024,\n\tSUPER_RESTORE3 = 3026,\n\tSUPER_RESTORE2 = 3028,\n\tSUPER_RESTORE1 = 3030,\n\tAGILITY_POTION4 = 3032,\n\tAGILITY_POTION3 = 3034,\n\tAGILITY_POTION2 = 3036,\n\tAGILITY_POTION1 = 3038,\n\tMAGIC_POTION4 = 3040,\n\tMAGIC_POTION3 = 3042,\n\tMAGIC_POTION2 = 3044,\n\tMAGIC_POTION1 = 3046,\n\tGRIMY_TOADFLAX = 3049,\n\tGRIMY_SNAPDRAGON = 3051,\n\tMIME_MASK = 3057,\n\tMIME_TOP = 3058,\n\tMIME_LEGS = 3059,\n\tMIME_GLOVES = 3060,\n\tMIME_BOOTS = 3061,\n\tBLACK_DART = 3093,\n\tBRONZE_CLAWS = 3095,\n\tIRON_CLAWS = 3096,\n\tSTEEL_CLAWS = 3097,\n\tBLACK_CLAWS = 3098,\n\tMITHRIL_CLAWS = 3099,\n\tADAMANT_CLAWS = 3100,\n\tRUNE_CLAWS = 3101,\n\tCLIMBING_BOOTS = 3105,\n\tSPIKED_BOOTS = 3107,\n\tGRANITE_SHIELD = 3122,\n\tSHAIKAHAN_BONES = 3123,\n\tJOGRE_BONES = 3125,\n\tPOTATO_CACTUS = 3138,\n\tDRAGON_CHAINBODY = 3140,\n\tRAW_KARAMBWAN = 3142,\n\tCOOKED_KARAMBWAN = 3144,\n\tBURNT_KARAMBWAN = 3148,\n\tRAW_KARAMBWANJI = 3150,\n\tSLICED_BANANA = 3162,\n\tSMALL_NINJA_MONKEY_BONES = 3179,\n\tMONKEY_BONES = 3183,\n\tCLEANING_CLOTH = 3188,\n\tBRONZE_HALBERD = 3190,\n\tIRON_HALBERD = 3192,\n\tSTEEL_HALBERD = 3194,\n\tBLACK_HALBERD = 3196,\n\tMITHRIL_HALBERD = 3198,\n\tADAMANT_HALBERD = 3200,\n\tRUNE_HALBERD = 3202,\n\tDRAGON_HALBERD = 3204,\n\tLIMESTONE = 3211,\n\tBARREL = 3216,\n\tRAW_RABBIT = 3226,\n\tCOOKED_RABBIT = 3228,\n\tBARK = 3239,\n\tGOUTWEED = 3261,\n\tVAMPYRE_DUST = 3325,\n\tBROKEN_BARK_SNELM = 3335,\n\tBLAMISH_BARK_SHELL = 3353,\n\tTHIN_SNAIL = 3363,\n\tLEAN_SNAIL = 3365,\n\tFAT_SNAIL = 3367,\n\tTHIN_SNAIL_MEAT = 3369,\n\tLEAN_SNAIL_MEAT = 3371,\n\tFAT_SNAIL_MEAT = 3373,\n\tRAW_SLIMY_EEL = 3379,\n\tCOOKED_SLIMY_EEL = 3381,\n\tSPLITBARK_HELM = 3385,\n\tSPLITBARK_BODY = 3387,\n\tSPLITBARK_LEGS = 3389,\n\tSPLITBARK_GAUNTLETS = 3391,\n\tSPLITBARK_BOOTS = 3393,\n\tLOAR_REMAINS = 3396,\n\tPHRIN_REMAINS = 3398,\n\tRIYL_REMAINS = 3400,\n\tASYN_REMAINS = 3402,\n\tFIYR_REMAINS = 3404,\n\tUNFINISHED_POTION = 3406,\n\tSERUM_207_4 = 3408,\n\tSERUM_207_3 = 3410,\n\tSERUM_207_2 = 3412,\n\tSERUM_207_1 = 3414,\n\tLIMESTONE_BRICK = 3420,\n\tOLIVE_OIL4 = 3422,\n\tOLIVE_OIL3 = 3424,\n\tOLIVE_OIL2 = 3426,\n\tOLIVE_OIL1 = 3428,\n\tSACRED_OIL4 = 3430,\n\tSACRED_OIL3 = 3432,\n\tSACRED_OIL2 = 3434,\n\tSACRED_OIL1 = 3436,\n\tPYRE_LOGS = 3438,\n\tOAK_PYRE_LOGS = 3440,\n\tWILLOW_PYRE_LOGS = 3442,\n\tMAPLE_PYRE_LOGS = 3444,\n\tYEW_PYRE_LOGS = 3446,\n\tMAGIC_PYRE_LOGS = 3448,\n\tBRONZE_KEY_RED = 3450,\n\tBRONZE_KEY_BROWN = 3451,\n\tBRONZE_KEY_CRIMSON = 3452,\n\tBRONZE_KEY_BLACK = 3453,\n\tBRONZE_KEY_PURPLE = 3454,\n\tSTEEL_KEY_RED = 3455,\n\tSTEEL_KEY_BROWN = 3456,\n\tSTEEL_KEY_CRIMSON = 3457,\n\tSTEEL_KEY_BLACK = 3458,\n\tSTEEL_KEY_PURPLE = 3459,\n\tBLACK_KEY_RED = 3460,\n\tBLACK_KEY_BROWN = 3461,\n\tBLACK_KEY_CRIMSON = 3462,\n\tBLACK_KEY_BLACK = 3463,\n\tBLACK_KEY_PURPLE = 3464,\n\tSILVER_KEY_RED = 3465,\n\tSILVER_KEY_BROWN = 3466,\n\tSILVER_KEY_CRIMSON = 3467,\n\tSILVER_KEY_BLACK = 3468,\n\tSILVER_KEY_PURPLE = 3469,\n\tFINE_CLOTH = 3470,\n\tBLACK_PLATESKIRT_T = 3472,\n\tBLACK_PLATESKIRT_G = 3473,\n\tADAMANT_PLATESKIRT_T = 3474,\n\tADAMANT_PLATESKIRT_G = 3475,\n\tRUNE_PLATESKIRT_G = 3476,\n\tRUNE_PLATESKIRT_T = 3477,\n\tZAMORAK_PLATESKIRT = 3478,\n\tSARADOMIN_PLATESKIRT = 3479,\n\tGUTHIX_PLATESKIRT = 3480,\n\tGILDED_PLATEBODY = 3481,\n\tGILDED_PLATELEGS = 3483,\n\tGILDED_PLATESKIRT = 3485,\n\tGILDED_FULL_HELM = 3486,\n\tGILDED_KITESHIELD = 3488,\n\tFLAMTAER_HAMMER = 3678,\n\tPET_ROCK = 3695,\n\tFREMENNIK_HELM = 3748,\n\tARCHER_HELM = 3749,\n\tBERSERKER_HELM = 3751,\n\tWARRIOR_HELM = 3753,\n\tFARSEER_HELM = 3755,\n\tFREMENNIK_BLADE = 3757,\n\tFREMENNIK_SHIELD = 3758,\n\tFREMENNIK_CYAN_CLOAK = 3759,\n\tFREMENNIK_BROWN_CLOAK = 3761,\n\tFREMENNIK_BLUE_CLOAK = 3763,\n\tFREMENNIK_GREEN_CLOAK = 3765,\n\tFREMENNIK_BROWN_SHIRT = 3767,\n\tFREMENNIK_GREY_SHIRT = 3769,\n\tFREMENNIK_BEIGE_SHIRT = 3771,\n\tFREMENNIK_RED_SHIRT = 3773,\n\tFREMENNIK_BLUE_SHIRT = 3775,\n\tFREMENNIK_RED_CLOAK = 3777,\n\tFREMENNIK_GREY_CLOAK = 3779,\n\tFREMENNIK_YELLOW_CLOAK = 3781,\n\tFREMENNIK_TEAL_CLOAK = 3783,\n\tFREMENNIK_PURPLE_CLOAK = 3785,\n\tFREMENNIK_PINK_CLOAK = 3787,\n\tFREMENNIK_BLACK_CLOAK = 3789,\n\tFREMENNIK_BOOTS = 3791,\n\tFREMENNIK_ROBE = 3793,\n\tFREMENNIK_SKIRT = 3795,\n\tFREMENNIK_HAT = 3797,\n\tFREMENNIK_GLOVES = 3799,\n\tBEER_TANKARD = 3803,\n\tSARADOMIN_PAGE_1 = 3827,\n\tSARADOMIN_PAGE_2 = 3828,\n\tSARADOMIN_PAGE_3 = 3829,\n\tSARADOMIN_PAGE_4 = 3830,\n\tZAMORAK_PAGE_1 = 3831,\n\tZAMORAK_PAGE_2 = 3832,\n\tZAMORAK_PAGE_3 = 3833,\n\tZAMORAK_PAGE_4 = 3834,\n\tGUTHIX_PAGE_1 = 3835,\n\tGUTHIX_PAGE_2 = 3836,\n\tGUTHIX_PAGE_3 = 3837,\n\tGUTHIX_PAGE_4 = 3838,\n\tHOLY_BOOK = 3840,\n\tUNHOLY_BOOK = 3842,\n\tBOOK_OF_BALANCE = 3844,\n\tGAMES_NECKLACE8 = 3853,\n\tMONKEY_NUTS = 4012,\n\tMONKEY_BAR = 4014,\n\tBANANA_STEW = 4016,\n\tSARADOMIN_BANNER = 4037,\n\tZAMORAK_BANNER = 4039,\n\tCASTLE_WARS_TICKET = 4067,\n\tYOYO = 4079,\n\tSALVE_AMULET = 4081,\n\tDRAGON_PLATELEGS = 4087,\n\tMYSTIC_HAT = 4089,\n\tMYSTIC_ROBE_TOP = 4091,\n\tMYSTIC_ROBE_BOTTOM = 4093,\n\tMYSTIC_GLOVES = 4095,\n\tMYSTIC_BOOTS = 4097,\n\tMYSTIC_HAT_DARK = 4099,\n\tMYSTIC_ROBE_TOP_DARK = 4101,\n\tMYSTIC_ROBE_BOTTOM_DARK = 4103,\n\tMYSTIC_GLOVES_DARK = 4105,\n\tMYSTIC_BOOTS_DARK = 4107,\n\tMYSTIC_HAT_LIGHT = 4109,\n\tMYSTIC_ROBE_TOP_LIGHT = 4111,\n\tMYSTIC_ROBE_BOTTOM_LIGHT = 4113,\n\tMYSTIC_GLOVES_LIGHT = 4115,\n\tMYSTIC_BOOTS_LIGHT = 4117,\n\tBRONZE_BOOTS = 4119,\n\tIRON_BOOTS = 4121,\n\tSTEEL_BOOTS = 4123,\n\tBLACK_BOOTS = 4125,\n\tMITHRIL_BOOTS = 4127,\n\tADAMANT_BOOTS = 4129,\n\tRUNE_BOOTS = 4131,\n\tABYSSAL_WHIP = 4151,\n\tENCHANTED_GEM = 4155,\n\tMIRROR_SHIELD = 4156,\n\tLEAFBLADED_SPEAR = 4158,\n\tBROAD_ARROWS = 4160,\n\tBAG_OF_SALT = 4161,\n\tROCK_HAMMER = 4162,\n\tFACEMASK = 4164,\n\tEARMUFFS = 4166,\n\tNOSE_PEG = 4168,\n\tSLAYERS_STAFF = 4170,\n\tRING_OF_CHAROS = 4202,\n\tCRYSTAL_WEAPON_SEED = 4207,\n\tHAM_SHIRT = 4298,\n\tHAM_ROBE = 4300,\n\tHAM_HOOD = 4302,\n\tHAM_CLOAK = 4304,\n\tHAM_LOGO = 4306,\n\tHAM_GLOVES = 4308,\n\tHAM_BOOTS = 4310,\n\tTEAM1_CAPE = 4315,\n\tTEAM2_CAPE = 4317,\n\tTEAM3_CAPE = 4319,\n\tTEAM4_CAPE = 4321,\n\tTEAM5_CAPE = 4323,\n\tTEAM6_CAPE = 4325,\n\tTEAM7_CAPE = 4327,\n\tTEAM8_CAPE = 4329,\n\tTEAM9_CAPE = 4331,\n\tTEAM10_CAPE = 4333,\n\tTEAM11_CAPE = 4335,\n\tTEAM12_CAPE = 4337,\n\tTEAM13_CAPE = 4339,\n\tTEAM14_CAPE = 4341,\n\tTEAM15_CAPE = 4343,\n\tTEAM16_CAPE = 4345,\n\tTEAM17_CAPE = 4347,\n\tTEAM18_CAPE = 4349,\n\tTEAM19_CAPE = 4351,\n\tTEAM20_CAPE = 4353,\n\tTEAM21_CAPE = 4355,\n\tTEAM22_CAPE = 4357,\n\tTEAM23_CAPE = 4359,\n\tTEAM24_CAPE = 4361,\n\tTEAM25_CAPE = 4363,\n\tTEAM26_CAPE = 4365,\n\tTEAM27_CAPE = 4367,\n\tTEAM28_CAPE = 4369,\n\tTEAM29_CAPE = 4371,\n\tTEAM30_CAPE = 4373,\n\tTEAM31_CAPE = 4375,\n\tTEAM32_CAPE = 4377,\n\tTEAM33_CAPE = 4379,\n\tTEAM34_CAPE = 4381,\n\tTEAM35_CAPE = 4383,\n\tTEAM36_CAPE = 4385,\n\tTEAM37_CAPE = 4387,\n\tTEAM38_CAPE = 4389,\n\tTEAM39_CAPE = 4391,\n\tTEAM40_CAPE = 4393,\n\tTEAM41_CAPE = 4395,\n\tTEAM42_CAPE = 4397,\n\tTEAM43_CAPE = 4399,\n\tTEAM44_CAPE = 4401,\n\tTEAM45_CAPE = 4403,\n\tTEAM46_CAPE = 4405,\n\tTEAM47_CAPE = 4407,\n\tTEAM48_CAPE = 4409,\n\tTEAM49_CAPE = 4411,\n\tTEAM50_CAPE = 4413,\n\tGUTHIX_REST4 = 4417,\n\tGUTHIX_REST3 = 4419,\n\tGUTHIX_REST2 = 4421,\n\tGUTHIX_REST1 = 4423,\n\tAIRTIGHT_POT = 4436,\n\tUNFIRED_POT_LID = 4438,\n\tPOT_LID = 4440,\n\tBOWL_OF_HOT_WATER = 4456,\n\tCUP_OF_WATER = 4458,\n\tCUP_OF_HOT_WATER = 4460,\n\tBEARHEAD = 4502,\n\tGIANT_FROG_LEGS = 4517,\n\tOIL_LAMP = 4522,\n\tEMPTY_OIL_LAMP = 4525,\n\tEMPTY_CANDLE_LANTERN = 4527,\n\tEMPTY_OIL_LANTERN = 4535,\n\tOIL_LANTERN = 4537,\n\tOIL_LANTERN_FRAME = 4540,\n\tLANTERN_LENS = 4542,\n\tBULLSEYE_LANTERN_UNF = 4544,\n\tBULLSEYE_LANTERN_EMPTY = 4546,\n\tBULLSEYE_LANTERN = 4548,\n\tSPINY_HELMET = 4551,\n\tEASTER_BASKET = 4565,\n\tRUBBER_CHICKEN = 4566,\n\tGOLD_HELMET = 4567,\n\tBLACK_SPEAR = 4580,\n\tDRAGON_PLATESKIRT = 4585,\n\tDRAGON_SCIMITAR = 4587,\n\tKHARIDIAN_HEADPIECE = 4591,\n\tFAKE_BEARD = 4593,\n\tWILLOW_BLACKJACK = 4600,\n\tSNAKE_CHARM = 4605,\n\tSUPER_KEBAB = 4608,\n\tSPINNING_PLATE = 4613,\n\tBANDITS_BREW = 4627,\n\tGARLIC_POWDER = 4668,\n\tANCIENT_STAFF = 4675,\n\tLINEN = 4684,\n\tBUCKET_OF_SAP = 4687,\n\tPILE_OF_SALT = 4689,\n\tSTEAM_RUNE = 4694,\n\tMIST_RUNE = 4695,\n\tDUST_RUNE = 4696,\n\tSMOKE_RUNE = 4697,\n\tMUD_RUNE = 4698,\n\tLAVA_RUNE = 4699,\n\tAHRIMS_HOOD = 4708,\n\tAHRIMS_STAFF = 4710,\n\tAHRIMS_ROBETOP = 4712,\n\tAHRIMS_ROBESKIRT = 4714,\n\tDHAROKS_HELM = 4716,\n\tDHAROKS_GREATAXE = 4718,\n\tDHAROKS_PLATEBODY = 4720,\n\tDHAROKS_PLATELEGS = 4722,\n\tGUTHANS_HELM = 4724,\n\tGUTHANS_WARSPEAR = 4726,\n\tGUTHANS_PLATEBODY = 4728,\n\tGUTHANS_CHAINSKIRT = 4730,\n\tKARILS_COIF = 4732,\n\tKARILS_CROSSBOW = 4734,\n\tKARILS_LEATHERTOP = 4736,\n\tKARILS_LEATHERSKIRT = 4738,\n\tBOLT_RACK = 4740,\n\tTORAGS_HELM = 4745,\n\tTORAGS_HAMMERS = 4747,\n\tTORAGS_PLATEBODY = 4749,\n\tTORAGS_PLATELEGS = 4751,\n\tVERACS_HELM = 4753,\n\tVERACS_FLAIL = 4755,\n\tVERACS_BRASSARD = 4757,\n\tVERACS_PLATESKIRT = 4759,\n\tBRONZE_BRUTAL = 4773,\n\tIRON_BRUTAL = 4778,\n\tSTEEL_BRUTAL = 4783,\n\tBLACK_BRUTAL = 4788,\n\tMITHRIL_BRUTAL = 4793,\n\tADAMANT_BRUTAL = 4798,\n\tRUNE_BRUTAL = 4803,\n\tZOGRE_BONES = 4812,\n\tBRONZE_NAILS = 4819,\n\tIRON_NAILS = 4820,\n\tBLACK_NAILS = 4821,\n\tMITHRIL_NAILS = 4822,\n\tADAMANTITE_NAILS = 4823,\n\tRUNE_NAILS = 4824,\n\tUNSTRUNG_COMP_BOW = 4825,\n\tCOMP_OGRE_BOW = 4827,\n\tFAYRG_BONES = 4830,\n\tRAURG_BONES = 4832,\n\tOURG_BONES = 4834,\n\tRELICYMS_BALM4 = 4842,\n\tRELICYMS_BALM3 = 4844,\n\tRELICYMS_BALM2 = 4846,\n\tRELICYMS_BALM1 = 4848,\n\tOGRE_COFFIN_KEY = 4850,\n\tAHRIMS_HOOD_0 = 4860,\n\tAHRIMS_STAFF_0 = 4866,\n\tAHRIMS_ROBETOP_0 = 4872,\n\tAHRIMS_ROBESKIRT_0 = 4878,\n\tDHAROKS_HELM_0 = 4884,\n\tDHAROKS_GREATAXE_0 = 4890,\n\tDHAROKS_PLATEBODY_0 = 4896,\n\tDHAROKS_PLATELEGS_0 = 4902,\n\tGUTHANS_HELM_0 = 4908,\n\tGUTHANS_WARSPEAR_0 = 4914,\n\tGUTHANS_PLATEBODY_0 = 4920,\n\tGUTHANS_CHAINSKIRT_0 = 4926,\n\tKARILS_COIF_0 = 4932,\n\tKARILS_CROSSBOW_0 = 4938,\n\tKARILS_LEATHERTOP_0 = 4944,\n\tKARILS_LEATHERSKIRT_0 = 4950,\n\tTORAGS_HELM_0 = 4956,\n\tTORAGS_HAMMERS_0 = 4962,\n\tTORAGS_PLATEBODY_0 = 4968,\n\tTORAGS_PLATELEGS_0 = 4974,\n\tVERACS_HELM_0 = 4980,\n\tVERACS_FLAIL_0 = 4986,\n\tVERACS_BRASSARD_0 = 4992,\n\tVERACS_PLATESKIRT_0 = 4998,\n\tRAW_CAVE_EEL = 5001,\n\tBURNT_CAVE_EEL = 5002,\n\tCAVE_EEL = 5003,\n\tFROG_SPAWN = 5004,\n\tMINING_HELMET = 5014,\n\tBONE_SPEAR = 5016,\n\tBONE_CLUB = 5018,\n\tMARIGOLD_SEED = 5096,\n\tROSEMARY_SEED = 5097,\n\tNASTURTIUM_SEED = 5098,\n\tWOAD_SEED = 5099,\n\tLIMPWURT_SEED = 5100,\n\tREDBERRY_SEED = 5101,\n\tCADAVABERRY_SEED = 5102,\n\tDWELLBERRY_SEED = 5103,\n\tJANGERBERRY_SEED = 5104,\n\tWHITEBERRY_SEED = 5105,\n\tPOISON_IVY_SEED = 5106,\n\tCACTUS_SEED = 5280,\n\tBELLADONNA_SEED = 5281,\n\tMUSHROOM_SPORE = 5282,\n\tAPPLE_TREE_SEED = 5283,\n\tBANANA_TREE_SEED = 5284,\n\tORANGE_TREE_SEED = 5285,\n\tCURRY_TREE_SEED = 5286,\n\tPINEAPPLE_SEED = 5287,\n\tPAPAYA_TREE_SEED = 5288,\n\tPALM_TREE_SEED = 5289,\n\tCALQUAT_TREE_SEED = 5290,\n\tGUAM_SEED = 5291,\n\tMARRENTILL_SEED = 5292,\n\tTARROMIN_SEED = 5293,\n\tHARRALANDER_SEED = 5294,\n\tRANARR_SEED = 5295,\n\tTOADFLAX_SEED = 5296,\n\tIRIT_SEED = 5297,\n\tAVANTOE_SEED = 5298,\n\tKWUARM_SEED = 5299,\n\tSNAPDRAGON_SEED = 5300,\n\tCADANTINE_SEED = 5301,\n\tLANTADYME_SEED = 5302,\n\tDWARF_WEED_SEED = 5303,\n\tTORSTOL_SEED = 5304,\n\tBARLEY_SEED = 5305,\n\tJUTE_SEED = 5306,\n\tHAMMERSTONE_SEED = 5307,\n\tASGARNIAN_SEED = 5308,\n\tYANILLIAN_SEED = 5309,\n\tKRANDORIAN_SEED = 5310,\n\tWILDBLOOD_SEED = 5311,\n\tACORN = 5312,\n\tWILLOW_SEED = 5313,\n\tMAPLE_SEED = 5314,\n\tYEW_SEED = 5315,\n\tMAGIC_SEED = 5316,\n\tSPIRIT_SEED = 5317,\n\tPOTATO_SEED = 5318,\n\tONION_SEED = 5319,\n\tSWEETCORN_SEED = 5320,\n\tWATERMELON_SEED = 5321,\n\tTOMATO_SEED = 5322,\n\tSTRAWBERRY_SEED = 5323,\n\tCABBAGE_SEED = 5324,\n\tGARDENING_TROWEL = 5325,\n\tSECATEURS = 5329,\n\tWATERING_CAN = 5331,\n\tRAKE = 5341,\n\tSEED_DIBBER = 5343,\n\tGARDENING_BOOTS = 5345,\n\tEMPTY_PLANT_POT = 5350,\n\tUNFIRED_PLANT_POT = 5352,\n\tFILLED_PLANT_POT = 5354,\n\tOAK_SAPLING = 5370,\n\tWILLOW_SAPLING = 5371,\n\tMAPLE_SAPLING = 5372,\n\tYEW_SAPLING = 5373,\n\tMAGIC_SAPLING = 5374,\n\tBASKET = 5376,\n\tAPPLES5 = 5386,\n\tORANGES5 = 5396,\n\tSTRAWBERRIES5 = 5406,\n\tBANANAS5 = 5416,\n\tEMPTY_SACK = 5418,\n\tPOTATOES10 = 5438,\n\tONIONS10 = 5458,\n\tCABBAGES10 = 5478,\n\tAPPLE_SAPLING = 5496,\n\tBANANA_SAPLING = 5497,\n\tORANGE_SAPLING = 5498,\n\tCURRY_SAPLING = 5499,\n\tPINEAPPLE_SAPLING = 5500,\n\tPAPAYA_SAPLING = 5501,\n\tPALM_SAPLING = 5502,\n\tCALQUAT_SAPLING = 5503,\n\tSTRAWBERRY = 5504,\n\tSMALL_POUCH = 5509,\n\tMEDIUM_POUCH = 5510,\n\tLARGE_POUCH = 5512,\n\tGIANT_POUCH = 5514,\n\tELEMENTAL_TALISMAN = 5516,\n\tBINDING_NECKLACE = 5521,\n\tTIARA_MOULD = 5523,\n\tTIARA = 5525,\n\tAIR_TIARA = 5527,\n\tMIND_TIARA = 5529,\n\tWATER_TIARA = 5531,\n\tBODY_TIARA = 5533,\n\tEARTH_TIARA = 5535,\n\tFIRE_TIARA = 5537,\n\tCOSMIC_TIARA = 5539,\n\tNATURE_TIARA = 5541,\n\tCHAOS_TIARA = 5543,\n\tLAW_TIARA = 5545,\n\tDEATH_TIARA = 5547,\n\tBLOOD_TIARA = 5549,\n\tROGUE_TOP = 5553,\n\tROGUE_MASK = 5554,\n\tROGUE_TROUSERS = 5555,\n\tROGUE_GLOVES = 5556,\n\tROGUE_BOOTS = 5557,\n\tINITIATE_SALLET = 5574,\n\tINITIATE_HAUBERK = 5575,\n\tINITIATE_CUISSE = 5576,\n\tASGARNIAN_ALEM = 5739,\n\tMATURE_WMB = 5741,\n\tGREENMANS_ALEM = 5743,\n\tDRAGON_BITTERM = 5745,\n\tDWARVEN_STOUTM = 5747,\n\tMOONLIGHT_MEADM = 5749,\n\tAXEMANS_FOLLY = 5751,\n\tAXEMANS_FOLLYM = 5753,\n\tCHEFS_DELIGHTM = 5757,\n\tSLAYERS_RESPITE = 5759,\n\tSLAYERS_RESPITEM = 5761,\n\tCIDER = 5763,\n\tMATURE_CIDER = 5765,\n\tALE_YEAST = 5767,\n\tCALQUAT_KEG = 5769,\n\tDWARVEN_STOUT4 = 5777,\n\tASGARNIAN_ALE4 = 5785,\n\tGREENMANS_ALE4 = 5793,\n\tMIND_BOMB4 = 5801,\n\tDRAGON_BITTER4 = 5809,\n\tMOONLIGHT_MEAD4 = 5817,\n\tAXEMANS_FOLLY4 = 5825,\n\tCHEFS_DELIGHT4 = 5833,\n\tSLAYERS_RESPITE4 = 5841,\n\tCIDER4 = 5849,\n\tDWARVEN_STOUTM4 = 5857,\n\tASGARNIAN_ALEM4 = 5865,\n\tGREENMANS_ALEM4 = 5873,\n\tMIND_BOMBM4 = 5881,\n\tDRAGON_BITTERM4 = 5889,\n\tMOONLIGHT_MEADM4 = 5897,\n\tAXEMANS_FOLLYM4 = 5905,\n\tCHEFS_DELIGHTM4 = 5913,\n\tSLAYERS_RESPITEM4 = 5921,\n\tCIDERM4 = 5929,\n\tJUTE_FIBRE = 5931,\n\tWILLOW_BRANCH = 5933,\n\tCOCONUT_MILK = 5935,\n\tTOMATOES5 = 5968,\n\tCURRY_LEAF = 5970,\n\tPAPAYA_FRUIT = 5972,\n\tCOCONUT = 5974,\n\tCOCONUT_SHELL = 5978,\n\tCALQUAT_FRUIT = 5980,\n\tWATERMELON = 5982,\n\tWATERMELON_SLICE = 5984,\n\tCOOKED_SWEETCORN = 5988,\n\tAPPLE_MUSH = 5992,\n\tHAMMERSTONE_HOPS = 5994,\n\tASGARNIAN_HOPS = 5996,\n\tYANILLIAN_HOPS = 5998,\n\tKRANDORIAN_HOPS = 6000,\n\tWILDBLOOD_HOPS = 6002,\n\tMUSHROOM = 6004,\n\tBARLEY = 6006,\n\tBARLEY_MALT = 6008,\n\tMARIGOLDS = 6010,\n\tNASTURTIUMS = 6012,\n\tROSEMARY = 6014,\n\tCACTUS_SPINE = 6016,\n\tPOISON_IVY_BERRIES = 6018,\n\tLEAVES = 6020,\n\tOAK_LEAVES = 6022,\n\tWILLOW_LEAVES = 6024,\n\tYEW_LEAVES = 6026,\n\tMAPLE_LEAVES = 6028,\n\tMAGIC_LEAVES = 6030,\n\tCOMPOST = 6032,\n\tSUPERCOMPOST = 6034,\n\tPLANT_CURE = 6036,\n\tMAGIC_STRING = 6038,\n\tOAK_ROOTS = 6043,\n\tWILLOW_ROOTS = 6045,\n\tMAPLE_ROOTS = 6047,\n\tYEW_ROOTS = 6049,\n\tMAGIC_ROOTS = 6051,\n\tWEEDS = 6055,\n\tMOURNER_TROUSERS = 6067,\n\tMOURNER_GLOVES = 6068,\n\tMOURNER_BOOTS = 6069,\n\tMOURNER_CLOAK = 6070,\n\tTELEPORT_CRYSTAL_1 = 6102,\n\tCRYSTAL_TELEPORT_SEED = 6103,\n\tGHOSTLY_BOOTS = 6106,\n\tGHOSTLY_HOOD = 6109,\n\tGHOSTLY_GLOVES = 6110,\n\tGHOSTLY_CLOAK = 6111,\n\tROCKSHELL_HELM = 6128,\n\tROCKSHELL_PLATE = 6129,\n\tROCKSHELL_LEGS = 6130,\n\tSPINED_HELM = 6131,\n\tSPINED_BODY = 6133,\n\tSPINED_CHAPS = 6135,\n\tSKELETAL_HELM = 6137,\n\tSKELETAL_TOP = 6139,\n\tSKELETAL_BOTTOMS = 6141,\n\tSPINED_BOOTS = 6143,\n\tROCKSHELL_BOOTS = 6145,\n\tSKELETAL_BOOTS = 6147,\n\tSPINED_GLOVES = 6149,\n\tROCKSHELL_GLOVES = 6151,\n\tSKELETAL_GLOVES = 6153,\n\tDAGANNOTH_HIDE = 6155,\n\tROCKSHELL_CHUNK = 6157,\n\tROCKSHELL_SHARD = 6159,\n\tROCKSHELL_SPLINTER = 6161,\n\tSKULL_PIECE = 6163,\n\tRIBCAGE_PIECE = 6165,\n\tFIBULA_PIECE = 6167,\n\tCIRCULAR_HIDE = 6169,\n\tFLATTENED_HIDE = 6171,\n\tSTRETCHED_HIDE = 6173,\n\tLEDERHOSEN_TOP = 6180,\n\tLEDERHOSEN_SHORTS = 6181,\n\tLEDERHOSEN_HAT = 6182,\n\tFROG_TOKEN = 6183,\n\tROYAL_FROG_TUNIC = 6184,\n\tROYAL_FROG_LEGGINGS = 6185,\n\tROYAL_FROG_BLOUSE = 6186,\n\tROYAL_FROG_SKIRT = 6187,\n\tFROG_MASK = 6188,\n\tMYSTERY_BOX = 6199,\n\tTEAK_PYRE_LOGS = 6211,\n\tMAHOGANY_PYRE_LOGS = 6213,\n\tTHATCH_SPAR_LIGHT = 6281,\n\tTHATCH_SPAR_MED = 6283,\n\tTHATCH_SPAR_DENSE = 6285,\n\tSNAKESKIN = 6289,\n\tSPIDER_CARCASS = 6291,\n\tSPIDER_ON_STICK = 6297,\n\tSPIDER_ON_SHAFT = 6299,\n\tSKEWER_STICK = 6305,\n\tTRADING_STICKS = 6306,\n\tGOUT_TUBER = 6311,\n\tOPAL_MACHETE = 6313,\n\tJADE_MACHETE = 6315,\n\tRED_TOPAZ_MACHETE = 6317,\n\tPROBOSCIS = 6319,\n\tSNAKESKIN_BODY = 6322,\n\tSNAKESKIN_CHAPS = 6324,\n\tSNAKESKIN_BANDANA = 6326,\n\tSNAKESKIN_BOOTS = 6328,\n\tSNAKESKIN_VAMBRACES = 6330,\n\tMAHOGANY_LOGS = 6332,\n\tTEAK_LOGS = 6333,\n\tFEZ = 6382,\n\tDESERT_ROBES = 6386,\n\tDESERT_LEGS = 6390,\n\tMENAPHITE_PURPLE_HAT = 6392,\n\tMENAPHITE_PURPLE_TOP = 6394,\n\tMENAPHITE_PURPLE_ROBE = 6396,\n\tMENAPHITE_PURPLE_KILT = 6398,\n\tMENAPHITE_RED_HAT = 6400,\n\tMENAPHITE_RED_TOP = 6402,\n\tMENAPHITE_RED_ROBE = 6404,\n\tMENAPHITE_RED_KILT = 6406,\n\tOAK_BLACKJACKO = 6408,\n\tOAK_BLACKJACKD = 6410,\n\tWILLOW_BLACKJACKO = 6412,\n\tWILLOW_BLACKJACKD = 6414,\n\tMAPLE_BLACKJACK = 6416,\n\tMAPLE_BLACKJACKO = 6418,\n\tMAPLE_BLACKJACKD = 6420,\n\tCOMPOST_POTION4 = 6470,\n\tCOMPOST_POTION3 = 6472,\n\tCOMPOST_POTION2 = 6474,\n\tCOMPOST_POTION1 = 6476,\n\tTOKTZXILUL = 6522,\n\tTOKTZXILAK = 6523,\n\tTOKTZKETXIL = 6524,\n\tTOKTZXILEK = 6525,\n\tTOKTZMEJTAL = 6526,\n\tTZHAARKETEM = 6527,\n\tTZHAARKETOM = 6528,\n\tTOKKUL = 6529,\n\tDOCTORS_HAT = 6547,\n\tNURSE_HAT = 6548,\n\tMUD_BATTLESTAFF = 6562,\n\tMYSTIC_MUD_STAFF = 6563,\n\tOBSIDIAN_CAPE = 6568,\n\tFIRE_CAPE = 6570,\n\tUNCUT_ONYX = 6571,\n\tONYX = 6573,\n\tONYX_RING = 6575,\n\tONYX_NECKLACE = 6577,\n\tONYX_AMULET_U = 6579,\n\tONYX_AMULET = 6581,\n\tRING_OF_STONE = 6583,\n\tAMULET_OF_FURY = 6585,\n\tWHITE_CLAWS = 6587,\n\tWHITE_BATTLEAXE = 6589,\n\tWHITE_DAGGER = 6591,\n\tWHITE_HALBERD = 6599,\n\tWHITE_MACE = 6601,\n\tWHITE_MAGIC_STAFF = 6603,\n\tWHITE_SWORD = 6605,\n\tWHITE_LONGSWORD = 6607,\n\tWHITE_2H_SWORD = 6609,\n\tWHITE_SCIMITAR = 6611,\n\tWHITE_WARHAMMER = 6613,\n\tWHITE_CHAINBODY = 6615,\n\tWHITE_PLATEBODY = 6617,\n\tWHITE_BOOTS = 6619,\n\tWHITE_MED_HELM = 6621,\n\tWHITE_FULL_HELM = 6623,\n\tWHITE_PLATELEGS = 6625,\n\tWHITE_PLATESKIRT = 6627,\n\tWHITE_GLOVES = 6629,\n\tWHITE_SQ_SHIELD = 6631,\n\tWHITE_KITESHIELD = 6633,\n\tCAMO_TOP = 6654,\n\tCAMO_BOTTOMS = 6655,\n\tCAMO_HELMET = 6656,\n\tMUDSKIPPER_HAT = 6665,\n\tFLIPPERS = 6666,\n\tEMPTY_FISHBOWL = 6667,\n\tGROUND_GUAM = 6681,\n\tSARADOMIN_BREW4 = 6685,\n\tSARADOMIN_BREW3 = 6687,\n\tSARADOMIN_BREW2 = 6689,\n\tSARADOMIN_BREW1 = 6691,\n\tCRUSHED_NEST = 6693,\n\tPAT_OF_BUTTER = 6697,\n\tBAKED_POTATO = 6701,\n\tPOTATO_WITH_BUTTER = 6703,\n\tPOTATO_WITH_CHEESE = 6705,\n\tHOLY_WRENCH = 6714,\n\tSEERCULL = 6724,\n\tDAGANNOTH_BONES = 6729,\n\tSEERS_RING = 6731,\n\tARCHERS_RING = 6733,\n\tWARRIOR_RING = 6735,\n\tBERSERKER_RING = 6737,\n\tDRAGON_AXE = 6739,\n\tDARKLIGHT = 6746,\n\tBLACK_DESERT_SHIRT = 6750,\n\tBLACK_DESERT_ROBE = 6752,\n\tGUTHIX_MJOLNIR = 6760,\n\tSARADOMIN_MJOLNIR = 6762,\n\tZAMORAK_MJOLNIR = 6764,\n\tRAT_POLE = 6773,\n\tCHOCICE = 6794,\n\tEARTH_WARRIOR_CHAMPION_SCROLL = 6798,\n\tGHOUL_CHAMPION_SCROLL = 6799,\n\tGIANT_CHAMPION_SCROLL = 6800,\n\tGOBLIN_CHAMPION_SCROLL = 6801,\n\tHOBGOBLIN_CHAMPION_SCROLL = 6802,\n\tIMP_CHAMPION_SCROLL = 6803,\n\tJOGRE_CHAMPION_SCROLL = 6804,\n\tLESSER_DEMON_CHAMPION_SCROLL = 6805,\n\tSKELETON_CHAMPION_SCROLL = 6806,\n\tZOMBIE_CHAMPION_SCROLL = 6807,\n\tGRANITE_LEGS = 6809,\n\tWYVERN_BONES = 6812,\n\tFUR = 6814,\n\tBOBBLE_HAT = 6856,\n\tBOBBLE_SCARF = 6857,\n\tJESTER_HAT = 6858,\n\tJESTER_SCARF = 6859,\n\tTRIJESTER_HAT = 6860,\n\tTRIJESTER_SCARF = 6861,\n\tWOOLLY_HAT = 6862,\n\tWOOLLY_SCARF = 6863,\n\tMAGES_BOOK = 6889,\n\tARENA_BOOK = 6891,\n\tBEGINNER_WAND = 6908,\n\tAPPRENTICE_WAND = 6910,\n\tTEACHER_WAND = 6912,\n\tMASTER_WAND = 6914,\n\tINFINITY_TOP = 6916,\n\tINFINITY_HAT = 6918,\n\tINFINITY_BOOTS = 6920,\n\tINFINITY_GLOVES = 6922,\n\tINFINITY_BOTTOMS = 6924,\n\tPINK_CAPE = 6959,\n\tBAGUETTE = 6961,\n\tTRIANGLE_SANDWICH = 6962,\n\tROLL = 6963,\n\tSQUARE_SANDWICH = 6965,\n\tSANDSTONE_1KG = 6971,\n\tSANDSTONE_2KG = 6973,\n\tSANDSTONE_5KG = 6975,\n\tSANDSTONE_10KG = 6977,\n\tGRANITE_500G = 6979,\n\tGRANITE_2KG = 6981,\n\tGRANITE_5KG = 6983,\n\tUNLIT_BUG_LANTERN = 7051,\n\tCHILLI_POTATO = 7054,\n\tEGG_POTATO = 7056,\n\tMUSHROOM_POTATO = 7058,\n\tTUNA_POTATO = 7060,\n\tCHILLI_CON_CARNE = 7062,\n\tEGG_AND_TOMATO = 7064,\n\tMUSHROOM_ONION = 7066,\n\tTUNA_AND_CORN = 7068,\n\tMINCED_MEAT = 7070,\n\tSPICY_SAUCE = 7072,\n\tCHOPPED_GARLIC = 7074,\n\tUNCOOKED_EGG = 7076,\n\tSCRAMBLED_EGG = 7078,\n\tSLICED_MUSHROOMS = 7080,\n\tFRIED_MUSHROOMS = 7082,\n\tFRIED_ONIONS = 7084,\n\tCHOPPED_TUNA = 7086,\n\tPIRATE_BOOTS = 7114,\n\tDRAGON_2H_SWORD = 7158,\n\tINSULATED_BOOTS = 7159,\n\tPIE_RECIPE_BOOK = 7162,\n\tRAW_MUD_PIE = 7168,\n\tMUD_PIE = 7170,\n\tRAW_GARDEN_PIE = 7176,\n\tGARDEN_PIE = 7178,\n\tRAW_FISH_PIE = 7186,\n\tFISH_PIE = 7188,\n\tRAW_ADMIRAL_PIE = 7196,\n\tADMIRAL_PIE = 7198,\n\tRAW_WILD_PIE = 7206,\n\tWILD_PIE = 7208,\n\tRAW_SUMMER_PIE = 7216,\n\tSUMMER_PIE = 7218,\n\tROAST_RABBIT = 7223,\n\tIRON_SPIT = 7225,\n\tRED_BOATER = 7319,\n\tORANGE_BOATER = 7321,\n\tGREEN_BOATER = 7323,\n\tBLUE_BOATER = 7325,\n\tBLACK_BOATER = 7327,\n\tRED_FIRELIGHTER = 7329,\n\tGREEN_FIRELIGHTER = 7330,\n\tBLUE_FIRELIGHTER = 7331,\n\tBLACK_SHIELD_H1 = 7332,\n\tADAMANT_SHIELD_H1 = 7334,\n\tRUNE_SHIELD_H1 = 7336,\n\tBLACK_SHIELD_H2 = 7338,\n\tADAMANT_SHIELD_H2 = 7340,\n\tRUNE_SHIELD_H2 = 7342,\n\tBLACK_SHIELD_H3 = 7344,\n\tADAMANT_SHIELD_H3 = 7346,\n\tRUNE_SHIELD_H3 = 7348,\n\tBLACK_SHIELD_H4 = 7350,\n\tADAMANT_SHIELD_H4 = 7352,\n\tRUNE_SHIELD_H4 = 7354,\n\tBLACK_SHIELD_H5 = 7356,\n\tADAMANT_SHIELD_H5 = 7358,\n\tRUNE_SHIELD_H5 = 7360,\n\tSTUDDED_BODY_G = 7362,\n\tSTUDDED_BODY_T = 7364,\n\tSTUDDED_CHAPS_G = 7366,\n\tSTUDDED_CHAPS_T = 7368,\n\tGREEN_DHIDE_BODY_G = 7370,\n\tGREEN_DHIDE_BODY_T = 7372,\n\tBLUE_DHIDE_BODY_G = 7374,\n\tBLUE_DHIDE_BODY_T = 7376,\n\tGREEN_DHIDE_CHAPS_G = 7378,\n\tGREEN_DHIDE_CHAPS_T = 7380,\n\tBLUE_DHIDE_CHAPS_G = 7382,\n\tBLUE_DHIDE_CHAPS_T = 7384,\n\tBLUE_SKIRT_G = 7386,\n\tBLUE_SKIRT_T = 7388,\n\tBLUE_WIZARD_ROBE_G = 7390,\n\tBLUE_WIZARD_ROBE_T = 7392,\n\tBLUE_WIZARD_HAT_G = 7394,\n\tBLUE_WIZARD_HAT_T = 7396,\n\tENCHANTED_ROBE = 7398,\n\tENCHANTED_TOP = 7399,\n\tENCHANTED_HAT = 7400,\n\tMAGIC_SECATEURS = 7409,\n\tMOLE_CLAW = 7416,\n\tMOLE_SKIN = 7418,\n\tFUNGICIDE = 7432,\n\tWOODEN_SPOON = 7433,\n\tEGG_WHISK = 7435,\n\tSPORK = 7437,\n\tSPATULA = 7439,\n\tFRYING_PAN = 7441,\n\tSKEWER = 7443,\n\tROLLING_PIN = 7445,\n\tKITCHEN_KNIFE = 7447,\n\tMEAT_TENDERISER = 7449,\n\tCLEAVER = 7451,\n\tHARDLEATHER_GLOVES = 7453,\n\tBRONZE_GLOVES = 7454,\n\tIRON_GLOVES = 7455,\n\tSTEEL_GLOVES = 7456,\n\tBLACK_GLOVES = 7457,\n\tMITHRIL_GLOVES = 7458,\n\tADAMANT_GLOVES = 7459,\n\tRUNE_GLOVES = 7460,\n\tDRAGON_GLOVES = 7461,\n\tBARROWS_GLOVES = 7462,\n\tPOT_OF_CORNFLOUR = 7468,\n\tCOOKED_CRAB_MEAT = 7521,\n\tRAW_JUBBLY = 7566,\n\tCOOKED_JUBBLY = 7568,\n\tBURNT_JUBBLY = 7570,\n\tZOMBIE_SHIRT = 7592,\n\tZOMBIE_TROUSERS = 7593,\n\tZOMBIE_MASK = 7594,\n\tZOMBIE_GLOVES = 7595,\n\tZOMBIE_BOOTS = 7596,\n\tSILVER_DUST = 7650,\n\tGUTHIX_BALANCE4 = 7660,\n\tGUTHIX_BALANCE3 = 7662,\n\tGUTHIX_BALANCE2 = 7664,\n\tGUTHIX_BALANCE1 = 7666,\n\tGADDERHAMMER = 7668,\n\tTOY_SOLDIER = 7759,\n\tTOY_SOLDIER_WOUND = 7761,\n\tTOY_DOLL = 7763,\n\tTOY_DOLL_WOUND = 7765,\n\tTOY_MOUSE = 7767,\n\tTOY_MOUSE_WOUND = 7769,\n\tTOY_CAT = 7771,\n\tRAM_SKULL_HELM = 7917,\n\tBONESACK = 7918,\n\tBOTTLE_OF_WINE = 7919,\n\tEASTER_RING = 7927,\n\tPURE_ESSENCE = 7936,\n\tTORTOISE_SHELL = 7939,\n\tRAW_MONKFISH = 7944,\n\tMONKFISH = 7946,\n\tBURNT_MONKFISH = 7948,\n\tBURNT_SHRIMP = 7954,\n\tCOCKATRICE_HEAD = 7976,\n\tBASILISK_HEAD = 7977,\n\tKURASK_HEAD = 7978,\n\tABYSSAL_HEAD = 7979,\n\tKBD_HEADS = 7980,\n\tKQ_HEAD = 7981,\n\tBIG_BASS = 7989,\n\tBIG_SWORDFISH = 7991,\n\tBIG_SHARK = 7993,\n\tVARROCK_TELEPORT = 8007,\n\tLUMBRIDGE_TELEPORT = 8008,\n\tFALADOR_TELEPORT = 8009,\n\tCAMELOT_TELEPORT = 8010,\n\tARDOUGNE_TELEPORT = 8011,\n\tWATCHTOWER_TELEPORT = 8012,\n\tTELEPORT_TO_HOUSE = 8013,\n\tBONES_TO_BANANAS = 8014,\n\tBONES_TO_PEACHES = 8015,\n\tENCHANT_SAPPHIRE_OR_OPAL = 8016,\n\tENCHANT_EMERALD_OR_JADE = 8017,\n\tENCHANT_RUBY_OR_TOPAZ = 8018,\n\tENCHANT_DIAMOND = 8019,\n\tENCHANT_DRAGONSTONE = 8020,\n\tENCHANT_ONYX = 8021,\n\tBAGGED_DEAD_TREE = 8417,\n\tBAGGED_NICE_TREE = 8419,\n\tBAGGED_OAK_TREE = 8421,\n\tBAGGED_WILLOW_TREE = 8423,\n\tBAGGED_MAPLE_TREE = 8425,\n\tBAGGED_YEW_TREE = 8427,\n\tBAGGED_MAGIC_TREE = 8429,\n\tBAGGED_PLANT_1 = 8431,\n\tBAGGED_PLANT_2 = 8433,\n\tBAGGED_PLANT_3 = 8435,\n\tTHORNY_HEDGE = 8437,\n\tNICE_HEDGE = 8439,\n\tSMALL_BOX_HEDGE = 8441,\n\tTOPIARY_HEDGE = 8443,\n\tFANCY_HEDGE = 8445,\n\tTALL_FANCY_HEDGE = 8447,\n\tTALL_BOX_HEDGE = 8449,\n\tBAGGED_FLOWER = 8451,\n\tBAGGED_DAFFODILS = 8453,\n\tBAGGED_BLUEBELLS = 8455,\n\tBAGGED_SUNFLOWER = 8457,\n\tBAGGED_MARIGOLDS = 8459,\n\tBAGGED_ROSES = 8461,\n\tCRUDE_CHAIR = 8496,\n\tWOODEN_CHAIR = 8498,\n\tROCKING_CHAIR = 8500,\n\tOAK_CHAIR = 8502,\n\tOAK_ARMCHAIR = 8504,\n\tTEAK_ARMCHAIR = 8506,\n\tMAHOGANY_ARMCHAIR = 8508,\n\tBOOKCASE = 8510,\n\tOAK_BOOKCASE = 8512,\n\tMAHOGANY_BOOKCASE = 8514,\n\tBEER_BARREL = 8516,\n\tCIDER_BARREL = 8518,\n\tKITCHEN_TABLE = 8528,\n\tOAK_KITCHEN_TABLE = 8530,\n\tTEAK_KITCHEN_TABLE = 8532,\n\tWOOD_DINING_TABLE = 8548,\n\tOAK_DINING_TABLE = 8550,\n\tCARVED_OAK_TABLE = 8552,\n\tTEAK_TABLE = 8554,\n\tCARVED_TEAK_TABLE = 8556,\n\tMAHOGANY_TABLE = 8558,\n\tOPULENT_TABLE = 8560,\n\tWOODEN_BENCH = 8562,\n\tOAK_BENCH = 8564,\n\tCARVED_OAK_BENCH = 8566,\n\tTEAK_DINING_BENCH = 8568,\n\tCARVED_TEAK_BENCH = 8570,\n\tMAHOGANY_BENCH = 8572,\n\tGILDED_BENCH = 8574,\n\tWOODEN_BED = 8576,\n\tOAK_BED = 8578,\n\tLARGE_OAK_BED = 8580,\n\tTEAK_BED = 8582,\n\tLARGE_TEAK_BED = 8584,\n\tFOURPOSTER_BED = 8586,\n\tGILDED_FOURPOSTER = 8588,\n\tOAK_CLOCK = 8590,\n\tTEAK_CLOCK = 8592,\n\tGILDED_CLOCK = 8594,\n\tSHAVING_STAND = 8596,\n\tOAK_SHAVING_STAND = 8598,\n\tOAK_DRESSER = 8600,\n\tTEAK_DRESSER = 8602,\n\tFANCY_TEAK_DRESSER = 8604,\n\tMAHOGANY_DRESSER = 8606,\n\tGILDED_DRESSER = 8608,\n\tSHOE_BOX = 8610,\n\tOAK_DRAWERS = 8612,\n\tOAK_WARDROBE = 8614,\n\tTEAK_DRAWERS = 8616,\n\tTEAK_WARDROBE = 8618,\n\tMAHOGANY_WARDROBE = 8620,\n\tGILDED_WARDROBE = 8622,\n\tOAK_PLANK = 8778,\n\tTEAK_PLANK = 8780,\n\tMAHOGANY_PLANK = 8782,\n\tGOLD_LEAF = 8784,\n\tMARBLE_BLOCK = 8786,\n\tMAGIC_STONE = 8788,\n\tBOLT_OF_CLOTH = 8790,\n\tCLOCKWORK = 8792,\n\tSAW = 8794,\n\tTIMBER_BEAM = 8837,\n\tVOID_KNIGHT_TOP = 8839,\n\tVOID_KNIGHT_ROBE = 8840,\n\tVOID_KNIGHT_MACE = 8841,\n\tVOID_KNIGHT_GLOVES = 8842,\n\tBRONZE_DEFENDER = 8844,\n\tIRON_DEFENDER = 8845,\n\tSTEEL_DEFENDER = 8846,\n\tBLACK_DEFENDER = 8847,\n\tMITHRIL_DEFENDER = 8848,\n\tADAMANT_DEFENDER = 8849,\n\tRUNE_DEFENDER = 8850,\n\tWARRIOR_GUILD_TOKEN = 8851,\n\tSTEEL_KEY = 8866,\n\tBRONZE_KEY = 8867,\n\tSILVER_KEY = 8868,\n\tIRON_KEY = 8869,\n\tBONE_DAGGER = 8872,\n\tDORGESHUUN_CROSSBOW = 8880,\n\tBONE_BOLTS = 8882,\n\tBLACK_MASK_10 = 8901,\n\tBLACK_MASK = 8921,\n\tHAT_EYEPATCH = 8928,\n\tPIRATE_HAT = 8950,\n\tPIECES_OF_EIGHT = 8951,\n\tBLUE_NAVAL_SHIRT = 8952,\n\tGREEN_NAVAL_SHIRT = 8953,\n\tRED_NAVAL_SHIRT = 8954,\n\tBROWN_NAVAL_SHIRT = 8955,\n\tBLACK_NAVAL_SHIRT = 8956,\n\tPURPLE_NAVAL_SHIRT = 8957,\n\tGREY_NAVAL_SHIRT = 8958,\n\tBLUE_TRICORN_HAT = 8959,\n\tGREEN_TRICORN_HAT = 8960,\n\tRED_TRICORN_HAT = 8961,\n\tBROWN_TRICORN_HAT = 8962,\n\tBLACK_TRICORN_HAT = 8963,\n\tPURPLE_TRICORN_HAT = 8964,\n\tGREY_TRICORN_HAT = 8965,\n\tCUTTHROAT_FLAG = 8966,\n\tGILDED_SMILE_FLAG = 8967,\n\tBRONZE_FIST_FLAG = 8968,\n\tLUCKY_SHOT_FLAG = 8969,\n\tTREASURE_FLAG = 8970,\n\tPHASMATYS_FLAG = 8971,\n\tTHE_STUFF = 8988,\n\tBLUE_NAVY_SLACKS = 8991,\n\tGREEN_NAVY_SLACKS = 8992,\n\tRED_NAVY_SLACKS = 8993,\n\tBROWN_NAVY_SLACKS = 8994,\n\tBLACK_NAVY_SLACKS = 8995,\n\tPURPLE_NAVY_SLACKS = 8996,\n\tGREY_NAVY_SLACKS = 8997,\n\tSECURITY_BOOK = 9003,\n\tSTRONGHOLD_NOTES = 9004,\n\tFANCY_BOOTS = 9005,\n\tFIGHTING_BOOTS = 9006,\n\tRIGHT_SKULL_HALF = 9007,\n\tLEFT_SKULL_HALF = 9008,\n\tTOP_OF_SCEPTRE = 9010,\n\tBOTTOM_OF_SCEPTRE = 9011,\n\tMAGIC_ESSENCE4 = 9021,\n\tMAGIC_ESSENCE3 = 9022,\n\tMAGIC_ESSENCE2 = 9023,\n\tMAGIC_ESSENCE1 = 9024,\n\tIVORY_COMB = 9026,\n\tGOLDEN_SCARAB = 9028,\n\tSTONE_SCARAB = 9030,\n\tPOTTERY_SCARAB = 9032,\n\tGOLDEN_STATUETTE = 9034,\n\tPOTTERY_STATUETTE = 9036,\n\tSTONE_STATUETTE = 9038,\n\tGOLD_SEAL = 9040,\n\tSTONE_SEAL = 9042,\n\tPHARAOHS_SCEPTRE = 9044,\n\tLOCUST_MEAT = 9052,\n\tMOONCLAN_HELM = 9068,\n\tMOONCLAN_HAT = 9069,\n\tMOONCLAN_ARMOUR = 9070,\n\tMOONCLAN_SKIRT = 9071,\n\tMOONCLAN_GLOVES = 9072,\n\tMOONCLAN_BOOTS = 9073,\n\tMOONCLAN_CAPE = 9074,\n\tASTRAL_RUNE = 9075,\n\tSUQAH_TOOTH = 9079,\n\tSUQAH_HIDE = 9080,\n\tLUNAR_STAFF = 9084,\n\tLUNAR_HELM = 9096,\n\tLUNAR_TORSO = 9097,\n\tLUNAR_LEGS = 9098,\n\tLUNAR_GLOVES = 9099,\n\tLUNAR_BOOTS = 9100,\n\tLUNAR_CAPE = 9101,\n\tLUNAR_AMULET = 9102,\n\tLUNAR_RING = 9104,\n\tIRON_BOLTS = 9140,\n\tSTEEL_BOLTS = 9141,\n\tMITHRIL_BOLTS = 9142,\n\tADAMANT_BOLTS = 9143,\n\tRUNITE_BOLTS = 9144,\n\tSILVER_BOLTS = 9145,\n\tBRONZE_CROSSBOW = 9174,\n\tBLURITE_CROSSBOW = 9176,\n\tIRON_CROSSBOW = 9177,\n\tSTEEL_CROSSBOW = 9179,\n\tMITHRIL_CROSSBOW = 9181,\n\tADAMANT_CROSSBOW = 9183,\n\tRUNE_CROSSBOW = 9185,\n\tJADE_BOLT_TIPS = 9187,\n\tTOPAZ_BOLT_TIPS = 9188,\n\tSAPPHIRE_BOLT_TIPS = 9189,\n\tEMERALD_BOLT_TIPS = 9190,\n\tRUBY_BOLT_TIPS = 9191,\n\tDIAMOND_BOLT_TIPS = 9192,\n\tDRAGONSTONE_BOLT_TIPS = 9193,\n\tONYX_BOLT_TIPS = 9194,\n\tOPAL_BOLTS_E = 9236,\n\tPEARL_BOLTS_E = 9238,\n\tTOPAZ_BOLTS_E = 9239,\n\tSAPPHIRE_BOLTS_E = 9240,\n\tEMERALD_BOLTS_E = 9241,\n\tRUBY_BOLTS_E = 9242,\n\tDIAMOND_BOLTS_E = 9243,\n\tDRAGONSTONE_BOLTS_E = 9244,\n\tONYX_BOLTS_E = 9245,\n\tTOPAZ_BOLTS = 9336,\n\tSAPPHIRE_BOLTS = 9337,\n\tEMERALD_BOLTS = 9338,\n\tRUBY_BOLTS = 9339,\n\tDIAMOND_BOLTS = 9340,\n\tDRAGONSTONE_BOLTS = 9341,\n\tONYX_BOLTS = 9342,\n\tBRONZE_BOLTS_UNF = 9375,\n\tIRON_BOLTS_UNF = 9377,\n\tSTEEL_BOLTS_UNF = 9378,\n\tMITHRIL_BOLTS_UNF = 9379,\n\tADAMANT_BOLTSUNF = 9380,\n\tRUNITE_BOLTS_UNF = 9381,\n\tSILVER_BOLTS_UNF = 9382,\n\tMITH_GRAPPLE_TIP = 9416,\n\tBRONZE_LIMBS = 9420,\n\tIRON_LIMBS = 9423,\n\tSTEEL_LIMBS = 9425,\n\tMITHRIL_LIMBS = 9427,\n\tADAMANTITE_LIMBS = 9429,\n\tRUNITE_LIMBS = 9431,\n\tBOLT_MOULD = 9434,\n\tSINEW = 9436,\n\tCROSSBOW_STRING = 9438,\n\tWOODEN_STOCK = 9440,\n\tOAK_STOCK = 9442,\n\tWILLOW_STOCK = 9444,\n\tTEAK_STOCK = 9446,\n\tMAPLE_STOCK = 9448,\n\tMAHOGANY_STOCK = 9450,\n\tYEW_STOCK = 9452,\n\tBRONZE_CROSSBOW_U = 9454,\n\tBLURITE_CROSSBOW_U = 9456,\n\tIRON_CROSSBOW_U = 9457,\n\tSTEEL_CROSSBOW_U = 9459,\n\tMITHRIL_CROSSBOW_U = 9461,\n\tADAMANT_CROSSBOW_U = 9463,\n\tRUNITE_CROSSBOW_U = 9465,\n\tGRAND_SEED_POD = 9469,\n\tGNOME_SCARF = 9470,\n\tGNOME_GOGGLES = 9472,\n\tMINT_CAKE = 9475,\n\tTYRAS_HELM = 9629,\n\tVYREWATCH_TOP = 9634,\n\tVYREWATCH_LEGS = 9636,\n\tVYREWATCH_SHOES = 9638,\n\tCITIZEN_TOP = 9640,\n\tCITIZEN_TROUSERS = 9642,\n\tCITIZEN_SHOES = 9644,\n\tPROSELYTE_HARNESS_M = 9666,\n\tINITIATE_HARNESS_M = 9668,\n\tPROSELYTE_HARNESS_F = 9670,\n\tPROSELYTE_SALLET = 9672,\n\tPROSELYTE_HAUBERK = 9674,\n\tPROSELYTE_CUISSE = 9676,\n\tPROSELYTE_TASSET = 9678,\n\tELEMENTAL_HELMET = 9729,\n\tMIND_SHIELD = 9731,\n\tMIND_HELMET = 9733,\n\tDESERT_GOAT_HORN = 9735,\n\tGOAT_HORN_DUST = 9736,\n\tCOMBAT_POTION4 = 9739,\n\tCOMBAT_POTION3 = 9741,\n\tCOMBAT_POTION2 = 9743,\n\tCOMBAT_POTION1 = 9745,\n\tATTACK_CAPE = 9747,\n\tATTACK_CAPET = 9748,\n\tATTACK_HOOD = 9749,\n\tSTRENGTH_CAPE = 9750,\n\tSTRENGTH_CAPET = 9751,\n\tSTRENGTH_HOOD = 9752,\n\tDEFENCE_CAPE = 9753,\n\tDEFENCE_CAPET = 9754,\n\tDEFENCE_HOOD = 9755,\n\tRANGING_CAPE = 9756,\n\tRANGING_CAPET = 9757,\n\tRANGING_HOOD = 9758,\n\tPRAYER_CAPE = 9759,\n\tPRAYER_CAPET = 9760,\n\tPRAYER_HOOD = 9761,\n\tMAGIC_CAPE = 9762,\n\tMAGIC_CAPET = 9763,\n\tMAGIC_HOOD = 9764,\n\tRUNECRAFT_CAPE = 9765,\n\tRUNECRAFT_CAPET = 9766,\n\tRUNECRAFT_HOOD = 9767,\n\tHITPOINTS_CAPE = 9768,\n\tHITPOINTS_CAPET = 9769,\n\tHITPOINTS_HOOD = 9770,\n\tAGILITY_CAPE = 9771,\n\tAGILITY_CAPET = 9772,\n\tAGILITY_HOOD = 9773,\n\tHERBLORE_CAPE = 9774,\n\tHERBLORE_CAPET = 9775,\n\tHERBLORE_HOOD = 9776,\n\tTHIEVING_CAPE = 9777,\n\tTHIEVING_CAPET = 9778,\n\tTHIEVING_HOOD = 9779,\n\tCRAFTING_CAPE = 9780,\n\tCRAFTING_CAPET = 9781,\n\tCRAFTING_HOOD = 9782,\n\tFLETCHING_CAPE = 9783,\n\tFLETCHING_CAPET = 9784,\n\tFLETCHING_HOOD = 9785,\n\tSLAYER_CAPE = 9786,\n\tSLAYER_CAPET = 9787,\n\tSLAYER_HOOD = 9788,\n\tCONSTRUCT_CAPE = 9789,\n\tCONSTRUCT_CAPET = 9790,\n\tCONSTRUCT_HOOD = 9791,\n\tMINING_CAPE = 9792,\n\tMINING_CAPET = 9793,\n\tMINING_HOOD = 9794,\n\tSMITHING_CAPE = 9795,\n\tSMITHING_CAPET = 9796,\n\tSMITHING_HOOD = 9797,\n\tFISHING_CAPE = 9798,\n\tFISHING_CAPET = 9799,\n\tFISHING_HOOD = 9800,\n\tCOOKING_CAPE = 9801,\n\tCOOKING_CAPET = 9802,\n\tCOOKING_HOOD = 9803,\n\tFIREMAKING_CAPE = 9804,\n\tFIREMAKING_CAPET = 9805,\n\tFIREMAKING_HOOD = 9806,\n\tWOODCUTTING_CAPE = 9807,\n\tWOODCUT_CAPET = 9808,\n\tWOODCUTTING_HOOD = 9809,\n\tFARMING_CAPE = 9810,\n\tFARMING_CAPET = 9811,\n\tFARMING_HOOD = 9812,\n\tQUEST_POINT_CAPE = 9813,\n\tQUEST_POINT_HOOD = 9814,\n\tOAK_CAPE_RACK = 9843,\n\tTEAK_CAPE_RACK = 9844,\n\tMAHOGANY_CAPE_RACK = 9845,\n\tGILDED_CAPE_RACK = 9846,\n\tMARBLE_CAPE_RACK = 9847,\n\tMAGIC_CAPE_RACK = 9848,\n\tOAK_TOY_BOX = 9849,\n\tTEAK_TOY_BOX = 9850,\n\tMAHOGANY_TOY_BOX = 9851,\n\tOAK_MAGIC_WARDROBE = 9852,\n\tCARVED_OAK_MAGIC_WARDROBE = 9853,\n\tTEAK_MAGIC_WARDROBE = 9854,\n\tCARVED_TEAK_MAGIC_WARDROBE = 9855,\n\tMAHOGANY_MAGIC_WARDROBE = 9856,\n\tGILDED_MAGIC_WARDROBE = 9857,\n\tMARBLE_MAGIC_WARDROBE = 9858,\n\tOAK_ARMOUR_CASE = 9859,\n\tTEAK_ARMOUR_CASE = 9860,\n\tMAHOGANY_ARMOUR_CASE = 9861,\n\tOAK_TREASURE_CHEST = 9862,\n\tTEAK_TREASURE_CHEST = 9863,\n\tM_TREASURE_CHEST = 9864,\n\tOAK_FANCY_DRESS_BOX = 9865,\n\tTEAK_FANCY_DRESS_BOX = 9866,\n\tMAHOGANY_FANCY_DRESS_BOX = 9867,\n\tSAILING_BOOK = 9904,\n\tJACK_LANTERN_MASK = 9920,\n\tSKELETON_BOOTS = 9921,\n\tSKELETON_GLOVES = 9922,\n\tSKELETON_LEGGINGS = 9923,\n\tSKELETON_SHIRT = 9924,\n\tSKELETON_MASK = 9925,\n\tBOMBER_JACKET = 9944,\n\tBOMBER_CAP = 9945,\n\tHUNTER_CAPE = 9948,\n\tHUNTER_CAPET = 9949,\n\tHUNTER_HOOD = 9950,\n\tRAW_BIRD_MEAT = 9978,\n\tROAST_BIRD_MEAT = 9980,\n\tRAW_BEAST_MEAT = 9986,\n\tROAST_BEAST_MEAT = 9988,\n\tSPICY_TOMATO = 9994,\n\tSPICY_MINCED_MEAT = 9996,\n\tHUNTER_POTION4 = 9998,\n\tHUNTER_POTION3 = 10000,\n\tHUNTER_POTION2 = 10002,\n\tHUNTER_POTION1 = 10004,\n\tBIRD_SNARE = 10006,\n\tBOX_TRAP = 10008,\n\tBUTTERFLY_NET = 10010,\n\tBUTTERFLY_JAR = 10012,\n\tBLACK_WARLOCK = 10014,\n\tSNOWY_KNIGHT = 10016,\n\tSAPPHIRE_GLACIALIS = 10018,\n\tRUBY_HARVEST = 10020,\n\tMAGIC_BOX = 10025,\n\tIMPINABOX2 = 10027,\n\tTEASING_STICK = 10029,\n\tRABBIT_SNARE = 10031,\n\tCHINCHOMPA = 10033,\n\tRED_CHINCHOMPA = 10034,\n\tKYATT_LEGS = 10035,\n\tKYATT_TOP = 10037,\n\tKYATT_HAT = 10039,\n\tLARUPIA_LEGS = 10041,\n\tLARUPIA_TOP = 10043,\n\tLARUPIA_HAT = 10045,\n\tGRAAHK_LEGS = 10047,\n\tGRAAHK_TOP = 10049,\n\tGRAAHK_HEADDRESS = 10051,\n\tWOOD_CAMO_TOP = 10053,\n\tWOOD_CAMO_LEGS = 10055,\n\tJUNGLE_CAMO_TOP = 10057,\n\tJUNGLE_CAMO_LEGS = 10059,\n\tDESERT_CAMO_TOP = 10061,\n\tDESERT_CAMO_LEGS = 10063,\n\tPOLAR_CAMO_TOP = 10065,\n\tPOLAR_CAMO_LEGS = 10067,\n\tSPOTTED_CAPE = 10069,\n\tSPOTTIER_CAPE = 10071,\n\tGLOVES_OF_SILENCE = 10075,\n\tSPIKY_VAMBRACES = 10077,\n\tGREEN_SPIKY_VAMBRACES = 10079,\n\tBLUE_SPIKY_VAMBRACES = 10081,\n\tRED_SPIKY_VAMBRACES = 10083,\n\tBLACK_SPIKY_VAMBRACES = 10085,\n\tSTRIPY_FEATHER = 10087,\n\tRED_FEATHER = 10088,\n\tBLUE_FEATHER = 10089,\n\tYELLOW_FEATHER = 10090,\n\tORANGE_FEATHER = 10091,\n\tFERRET = 10092,\n\tTATTY_LARUPIA_FUR = 10093,\n\tLARUPIA_FUR = 10095,\n\tTATTY_GRAAHK_FUR = 10097,\n\tGRAAHK_FUR = 10099,\n\tTATTY_KYATT_FUR = 10101,\n\tKYATT_FUR = 10103,\n\tKEBBIT_SPIKE = 10105,\n\tLONG_KEBBIT_SPIKE = 10107,\n\tKEBBIT_TEETH = 10109,\n\tKEBBIT_TEETH_DUST = 10111,\n\tKEBBIT_CLAWS = 10113,\n\tDARK_KEBBIT_FUR = 10115,\n\tPOLAR_KEBBIT_FUR = 10117,\n\tFELDIP_WEASEL_FUR = 10119,\n\tCOMMON_KEBBIT_FUR = 10121,\n\tDESERT_DEVIL_FUR = 10123,\n\tSPOTTED_KEBBIT_FUR = 10125,\n\tDASHING_KEBBIT_FUR = 10127,\n\tBARBTAIL_HARPOON = 10129,\n\tSTRUNG_RABBIT_FOOT = 10132,\n\tRABBIT_FOOT = 10134,\n\tRAINBOW_FISH = 10136,\n\tRAW_RAINBOW_FISH = 10138,\n\tGUAM_TAR = 10142,\n\tMARRENTILL_TAR = 10143,\n\tTARROMIN_TAR = 10144,\n\tHARRALANDER_TAR = 10145,\n\tORANGE_SALAMANDER = 10146,\n\tRED_SALAMANDER = 10147,\n\tBLACK_SALAMANDER = 10148,\n\tSWAMP_LIZARD = 10149,\n\tNOOSE_WAND = 10150,\n\tHUNTERS_CROSSBOW = 10156,\n\tKEBBIT_BOLTS = 10158,\n\tLONG_KEBBIT_BOLTS = 10159,\n\tWILLOW_COMP_BOW = 10280,\n\tYEW_COMP_BOW = 10282,\n\tMAGIC_COMP_BOW = 10284,\n\tRUNE_HELM_H1 = 10286,\n\tRUNE_HELM_H2 = 10288,\n\tRUNE_HELM_H3 = 10290,\n\tRUNE_HELM_H4 = 10292,\n\tRUNE_HELM_H5 = 10294,\n\tADAMANT_HELM_H1 = 10296,\n\tADAMANT_HELM_H2 = 10298,\n\tADAMANT_HELM_H3 = 10300,\n\tADAMANT_HELM_H4 = 10302,\n\tADAMANT_HELM_H5 = 10304,\n\tBLACK_HELM_H1 = 10306,\n\tBLACK_HELM_H2 = 10308,\n\tBLACK_HELM_H3 = 10310,\n\tBLACK_HELM_H4 = 10312,\n\tBLACK_HELM_H5 = 10314,\n\tBOBS_RED_SHIRT = 10316,\n\tBOBS_BLUE_SHIRT = 10318,\n\tBOBS_GREEN_SHIRT = 10320,\n\tBOBS_BLACK_SHIRT = 10322,\n\tBOBS_PURPLE_SHIRT = 10324,\n\tPURPLE_FIRELIGHTER = 10326,\n\tWHITE_FIRELIGHTER = 10327,\n\tTHIRD_AGE_RANGE_TOP = 10330,\n\tTHIRD_AGE_RANGE_LEGS = 10332,\n\tTHIRD_AGE_RANGE_COIF = 10334,\n\tTHIRD_AGE_VAMBRACES = 10336,\n\tTHIRD_AGE_ROBE_TOP = 10338,\n\tTHIRD_AGE_ROBE = 10340,\n\tTHIRD_AGE_MAGE_HAT = 10342,\n\tTHIRD_AGE_AMULET = 10344,\n\tTHIRD_AGE_PLATELEGS = 10346,\n\tTHIRD_AGE_PLATEBODY = 10348,\n\tTHIRD_AGE_FULL_HELMET = 10350,\n\tTHIRD_AGE_KITESHIELD = 10352,\n\tAMULET_OF_GLORY_T4 = 10354,\n\tAMULET_OF_GLORY_T = 10362,\n\tSTRENGTH_AMULET_T = 10364,\n\tAMULET_OF_MAGIC_T = 10366,\n\tZAMORAK_BRACERS = 10368,\n\tZAMORAK_DHIDE_BODY = 10370,\n\tZAMORAK_CHAPS = 10372,\n\tZAMORAK_COIF = 10374,\n\tGUTHIX_BRACERS = 10376,\n\tGUTHIX_DHIDE_BODY = 10378,\n\tGUTHIX_CHAPS = 10380,\n\tGUTHIX_COIF = 10382,\n\tSARADOMIN_BRACERS = 10384,\n\tSARADOMIN_DHIDE_BODY = 10386,\n\tSARADOMIN_CHAPS = 10388,\n\tSARADOMIN_COIF = 10390,\n\tA_POWDERED_WIG = 10392,\n\tFLARED_TROUSERS = 10394,\n\tPANTALOONS = 10396,\n\tSLEEPING_CAP = 10398,\n\tBLACK_ELEGANT_SHIRT = 10400,\n\tBLACK_ELEGANT_LEGS = 10402,\n\tRED_ELEGANT_SHIRT = 10404,\n\tRED_ELEGANT_LEGS = 10406,\n\tBLUE_ELEGANT_SHIRT = 10408,\n\tBLUE_ELEGANT_LEGS = 10410,\n\tGREEN_ELEGANT_SHIRT = 10412,\n\tGREEN_ELEGANT_LEGS = 10414,\n\tPURPLE_ELEGANT_SHIRT = 10416,\n\tPURPLE_ELEGANT_LEGS = 10418,\n\tWHITE_ELEGANT_BLOUSE = 10420,\n\tWHITE_ELEGANT_SKIRT = 10422,\n\tRED_ELEGANT_BLOUSE = 10424,\n\tRED_ELEGANT_SKIRT = 10426,\n\tBLUE_ELEGANT_BLOUSE = 10428,\n\tBLUE_ELEGANT_SKIRT = 10430,\n\tGREEN_ELEGANT_BLOUSE = 10432,\n\tGREEN_ELEGANT_SKIRT = 10434,\n\tPURPLE_ELEGANT_BLOUSE = 10436,\n\tPURPLE_ELEGANT_SKIRT = 10438,\n\tSARADOMIN_CROZIER = 10440,\n\tGUTHIX_CROZIER = 10442,\n\tZAMORAK_CROZIER = 10444,\n\tSARADOMIN_CLOAK = 10446,\n\tGUTHIX_CLOAK = 10448,\n\tZAMORAK_CLOAK = 10450,\n\tSARADOMIN_MITRE = 10452,\n\tGUTHIX_MITRE = 10454,\n\tZAMORAK_MITRE = 10456,\n\tSARADOMIN_ROBE_TOP = 10458,\n\tZAMORAK_ROBE_TOP = 10460,\n\tGUTHIX_ROBE_TOP = 10462,\n\tSARADOMIN_ROBE_LEGS = 10464,\n\tGUTHIX_ROBE_LEGS = 10466,\n\tZAMORAK_ROBE_LEGS = 10468,\n\tSARADOMIN_STOLE = 10470,\n\tGUTHIX_STOLE = 10472,\n\tZAMORAK_STOLE = 10474,\n\tPURPLE_SWEETS = 10476,\n\tPOLISHED_BUTTONS = 10496,\n\tAVAS_ACCUMULATOR = 10499,\n\tSNOWBALL = 10501,\n\tREINDEER_HAT = 10507,\n\tWINTUMBER_TREE = 10508,\n\tCRACKERS = 10513,\n\tHEALER_HAT = 10547,\n\tFIGHTER_HAT = 10548,\n\tRUNNER_HAT = 10549,\n\tRANGER_HAT = 10550,\n\tFIGHTER_TORSO = 10551,\n\tRUNNER_BOOTS = 10552,\n\tPENANCE_GLOVES = 10553,\n\tPENANCE_SKIRT = 10555,\n\tGRANITE_BODY = 10564,\n\tTARNS_DIARY = 10587,\n\tSALVE_AMULET_E = 10588,\n\tGRANITE_HELM = 10589,\n\tARCTIC_PYRE_LOGS = 10808,\n\tARCTIC_PINE_LOGS = 10810,\n\tSPLIT_LOG = 10812,\n\tHAIR = 10814,\n\tRAW_YAK_MEAT = 10816,\n\tYAKHIDE = 10818,\n\tCURED_YAKHIDE = 10820,\n\tNEITIZNOT_SHIELD = 10826,\n\tHELM_OF_NEITIZNOT = 10828,\n\tSILLY_JESTER_HAT = 10836,\n\tSILLY_JESTER_TOP = 10837,\n\tSILLY_JESTER_TIGHTS = 10838,\n\tSILLY_JESTER_BOOTS = 10839,\n\tSHADOW_SWORD = 10858,\n\tTEA_FLASK = 10859,\n\tPLAIN_SATCHEL = 10877,\n\tGREEN_SATCHEL = 10878,\n\tRED_SATCHEL = 10879,\n\tBLACK_SATCHEL = 10880,\n\tGOLD_SATCHEL = 10881,\n\tRUNE_SATCHEL = 10882,\n\tBARRELCHEST_ANCHOR = 10887,\n\tWOODEN_CAT = 10891,\n\tSANFEW_SERUM4 = 10925,\n\tSANFEW_SERUM3 = 10927,\n\tSANFEW_SERUM2 = 10929,\n\tSANFEW_SERUM1 = 10931,\n\tLUMBERJACK_BOOTS = 10933,\n\tNAIL_BEAST_NAILS = 10937,\n\tLUMBERJACK_TOP = 10939,\n\tLUMBERJACK_LEGS = 10940,\n\tLUMBERJACK_HAT = 10941,\n\tSLAYER_BELL = 10952,\n\tFROGLEATHER_BODY = 10954,\n\tFROGLEATHER_CHAPS = 10956,\n\tFROGLEATHER_BOOTS = 10958,\n\tGREEN_GLOOP_SOUP = 10960,\n\tFROGSPAWN_GUMBO = 10961,\n\tFROGBURGER = 10962,\n\tCOATED_FROGS_LEGS = 10963,\n\tBAT_SHISH = 10964,\n\tFINGERS = 10965,\n\tLIGHT_ORB = 10973,\n\tLONG_BONE = 10976,\n\tCURVED_BONE = 10977,\n\tSWAMP_WEED = 10978,\n\tEMPTY_LIGHT_ORB = 10980,\n\tCAVE_GOBLIN_WIRE = 10981,\n\tGOBLIN_BOOK = 10999,\n\tCHICKEN_FEET = 11019,\n\tCHICKEN_WINGS = 11020,\n\tCHICKEN_HEAD = 11021,\n\tCHICKEN_LEGS = 11022,\n\tCHOCOLATE_KEBBIT = 11026,\n\tBRINE_SABRE = 11037,\n\tANCIENT_MACE = 11061,\n\tBRACELET_MOULD = 11065,\n\tGOLD_BRACELET = 11069,\n\tSAPPHIRE_BRACELET = 11072,\n\tBRACELET_OF_CLAY = 11074,\n\tEMERALD_BRACELET = 11076,\n\tCASTLE_WARS_BRACELET3 = 11079,\n\tRUBY_BRACELET = 11085,\n\tINOCULATION_BRACELET = 11088,\n\tPHOENIX_NECKLACE = 11090,\n\tDIAMOND_BRACELET = 11092,\n\tABYSSAL_BRACELET5 = 11095,\n\tSKILLS_NECKLACE4 = 11105,\n\tSKILLS_NECKLACE = 11113,\n\tDRAGONSTONE_BRACELET = 11115,\n\tCOMBAT_BRACELET4 = 11118,\n\tCOMBAT_BRACELET = 11126,\n\tBERSERKER_NECKLACE = 11128,\n\tONYX_BRACELET = 11130,\n\tREGEN_BRACELET = 11133,\n\tKARAMJA_GLOVES_1 = 11136,\n\tKARAMJA_GLOVES_2 = 11138,\n\tKARAMJA_GLOVES_3 = 11140,\n\tDIGSITE_PENDANT_5 = 11194,\n\tDWARVEN_HELMET = 11200,\n\tSHRUNK_OGLEROOT = 11205,\n\tDRAGON_ARROW = 11212,\n\tDRAGON_DART = 11230,\n\tDRAGON_DART_TIP = 11232,\n\tDRAGON_ARROWTIPS = 11237,\n\tBABY_IMPLING_JAR = 11238,\n\tYOUNG_IMPLING_JAR = 11240,\n\tGOURMET_IMPLING_JAR = 11242,\n\tEARTH_IMPLING_JAR = 11244,\n\tESSENCE_IMPLING_JAR = 11246,\n\tECLECTIC_IMPLING_JAR = 11248,\n\tNATURE_IMPLING_JAR = 11250,\n\tMAGPIE_IMPLING_JAR = 11252,\n\tNINJA_IMPLING_JAR = 11254,\n\tDRAGON_IMPLING_JAR = 11256,\n\tIMPLING_JAR = 11260,\n\tCAVALIER_MASK = 11280,\n\tDRACONIC_VISAGE = 11286,\n\tROE = 11324,\n\tCAVIAR = 11326,\n\tLEAPING_TROUT = 11328,\n\tLEAPING_SALMON = 11330,\n\tLEAPING_STURGEON = 11332,\n\tFISH_OFFCUTS = 11334,\n\tDRAGON_FULL_HELM = 11335,\n\tCHEWED_BONES = 11338,\n\tBRONZE_HASTA = 11367,\n\tIRON_HASTA = 11369,\n\tSTEEL_HASTA = 11371,\n\tMITHRIL_HASTA = 11373,\n\tADAMANT_HASTA = 11375,\n\tRUNE_HASTA = 11377,\n\tATTACK_MIX2 = 11429,\n\tATTACK_MIX1 = 11431,\n\tANTIPOISON_MIX2 = 11433,\n\tANTIPOISON_MIX1 = 11435,\n\tRELICYMS_MIX2 = 11437,\n\tRELICYMS_MIX1 = 11439,\n\tSTRENGTH_MIX1 = 11441,\n\tSTRENGTH_MIX2 = 11443,\n\tCOMBAT_MIX2 = 11445,\n\tCOMBAT_MIX1 = 11447,\n\tRESTORE_MIX2 = 11449,\n\tRESTORE_MIX1 = 11451,\n\tENERGY_MIX2 = 11453,\n\tENERGY_MIX1 = 11455,\n\tDEFENCE_MIX2 = 11457,\n\tDEFENCE_MIX1 = 11459,\n\tAGILITY_MIX2 = 11461,\n\tAGILITY_MIX1 = 11463,\n\tPRAYER_MIX2 = 11465,\n\tPRAYER_MIX1 = 11467,\n\tSUPERATTACK_MIX2 = 11469,\n\tSUPERATTACK_MIX1 = 11471,\n\tANTIPOISON_SUPERMIX2 = 11473,\n\tANTIPOISON_SUPERMIX1 = 11475,\n\tFISHING_MIX2 = 11477,\n\tFISHING_MIX1 = 11479,\n\tSUPER_ENERGY_MIX2 = 11481,\n\tSUPER_ENERGY_MIX1 = 11483,\n\tSUPER_STR_MIX2 = 11485,\n\tSUPER_STR_MIX1 = 11487,\n\tMAGIC_ESSENCE_MIX2 = 11489,\n\tMAGIC_ESSENCE_MIX1 = 11491,\n\tSUPER_RESTORE_MIX2 = 11493,\n\tSUPER_RESTORE_MIX1 = 11495,\n\tSUPER_DEF_MIX2 = 11497,\n\tSUPER_DEF_MIX1 = 11499,\n\tANTIDOTE_MIX2 = 11501,\n\tANTIDOTE_MIX1 = 11503,\n\tANTIFIRE_MIX2 = 11505,\n\tANTIFIRE_MIX1 = 11507,\n\tRANGING_MIX2 = 11509,\n\tRANGING_MIX1 = 11511,\n\tMAGIC_MIX2 = 11513,\n\tMAGIC_MIX1 = 11515,\n\tHUNTING_MIX2 = 11517,\n\tHUNTING_MIX1 = 11519,\n\tZAMORAK_MIX2 = 11521,\n\tZAMORAK_MIX1 = 11523,\n\tBOOK_OF_KNOWLEDGE = 11640,\n\tVOID_MAGE_HELM = 11663,\n\tVOID_RANGER_HELM = 11664,\n\tVOID_MELEE_HELM = 11665,\n\tVOID_SEAL8 = 11666,\n\tSEERS_RING_I = 11770,\n\tARCHERS_RING_I = 11771,\n\tWARRIOR_RING_I = 11772,\n\tBERSERKER_RING_I = 11773,\n\tBLACK_MASK_I = 11784,\n\tARMADYL_CROSSBOW = 11785,\n\tSTAFF_OF_THE_DEAD = 11791,\n\tGODSWORD_BLADE = 11798,\n\tARMADYL_GODSWORD = 11802,\n\tBANDOS_GODSWORD = 11804,\n\tSARADOMIN_GODSWORD = 11806,\n\tZAMORAK_GODSWORD = 11808,\n\tARMADYL_HILT = 11810,\n\tBANDOS_HILT = 11812,\n\tSARADOMIN_HILT = 11814,\n\tZAMORAK_HILT = 11816,\n\tGODSWORD_SHARD_1 = 11818,\n\tGODSWORD_SHARD_2 = 11820,\n\tGODSWORD_SHARD_3 = 11822,\n\tZAMORAKIAN_SPEAR = 11824,\n\tARMADYL_HELMET = 11826,\n\tARMADYL_CHESTPLATE = 11828,\n\tARMADYL_CHAINSKIRT = 11830,\n\tBANDOS_CHESTPLATE = 11832,\n\tBANDOS_TASSETS = 11834,\n\tBANDOS_BOOTS = 11836,\n\tSARADOMIN_SWORD = 11838,\n\tDRAGON_BOOTS = 11840,\n\tBLACK_HWEEN_MASK = 11847,\n\tMARK_OF_GRACE = 11849,\n\tBLACK_PARTYHAT = 11862,\n\tRAINBOW_PARTYHAT = 11863,\n\tSLAYER_HELMET = 11864,\n\tSLAYER_HELMET_I = 11865,\n\tSLAYER_RING_8 = 11866,\n\tBROAD_ARROWHEADS = 11874,\n\tBROAD_BOLTS = 11875,\n\tUNFINISHED_BROAD_BOLTS = 11876,\n\tBROAD_ARROWHEAD_PACK = 11885,\n\tUNFINISHED_BROAD_BOLT_PACK = 11887,\n\tZAMORAKIAN_HASTA = 11889,\n\tLEAFBLADED_SWORD = 11902,\n\tTRIDENT_OF_THE_SEAS_FULL = 11905,\n\tUNCHARGED_TRIDENT = 11908,\n\tCHOCOLATE_STRAWBERRY = 11910,\n\tSLICE_OF_BIRTHDAY_CAKE = 11916,\n\tBIRTHDAY_PRESENT = 11918,\n\tCOW_MASK = 11919,\n\tODIUM_SHARD_1 = 11928,\n\tODIUM_SHARD_2 = 11929,\n\tODIUM_SHARD_3 = 11930,\n\tMALEDICTION_SHARD_1 = 11931,\n\tMALEDICTION_SHARD_2 = 11932,\n\tMALEDICTION_SHARD_3 = 11933,\n\tRAW_DARK_CRAB = 11934,\n\tDARK_CRAB = 11936,\n\tBURNT_DARK_CRAB = 11938,\n\tDARK_FISHING_BAIT = 11940,\n\tLOOTING_BAG = 11941,\n\tECUMENICAL_KEY = 11942,\n\tLAVA_DRAGON_BONES = 11943,\n\tEXTENDED_ANTIFIRE4 = 11951,\n\tEXTENDED_ANTIFIRE3 = 11953,\n\tEXTENDED_ANTIFIRE2 = 11955,\n\tEXTENDED_ANTIFIRE1 = 11957,\n\tBLACK_CHINCHOMPA = 11959,\n\tEXTENDED_ANTIFIRE_MIX2 = 11960,\n\tEXTENDED_ANTIFIRE_MIX1 = 11962,\n\tAMULET_OF_GLORY_T6 = 11964,\n\tSKILLS_NECKLACE6 = 11968,\n\tCOMBAT_BRACELET6 = 11972,\n\tAMULET_OF_GLORY6 = 11978,\n\tRING_OF_WEALTH_5 = 11980,\n\tFEDORA = 11990,\n\tLAVA_SCALE = 11992,\n\tLAVA_SCALE_SHARD = 11994,\n\tPET_CHAOS_ELEMENTAL = 11995,\n\tSMOKE_BATTLESTAFF = 11998,\n\tMYSTIC_SMOKE_STAFF = 12000,\n\tOCCULT_NECKLACE = 12002,\n\tKRAKEN_TENTACLE = 12004,\n\tABYSSAL_TENTACLE = 12006,\n\tJAR_OF_DIRT = 12007,\n\tSOFT_CLAY_PACK = 12009,\n\tGOLDEN_NUGGET = 12012,\n\tPROSPECTOR_HELMET = 12013,\n\tPROSPECTOR_JACKET = 12014,\n\tPROSPECTOR_LEGS = 12015,\n\tPROSPECTOR_BOOTS = 12016,\n\tSALVE_AMULETI = 12017,\n\tSALVE_AMULETEI = 12018,\n\tCLUE_SCROLL_ELITE = 12073,\n\tANCIENT_ROBE_TOP = 12193,\n\tANCIENT_ROBE_LEGS = 12195,\n\tANCIENT_CLOAK = 12197,\n\tANCIENT_CROZIER = 12199,\n\tANCIENT_STOLE = 12201,\n\tANCIENT_MITRE = 12203,\n\tBRONZE_PLATEBODY_G = 12205,\n\tBRONZE_PLATELEGS_G = 12207,\n\tBRONZE_PLATESKIRT_G = 12209,\n\tBRONZE_FULL_HELM_G = 12211,\n\tBRONZE_KITESHIELD_G = 12213,\n\tBRONZE_PLATEBODY_T = 12215,\n\tBRONZE_PLATELEGS_T = 12217,\n\tBRONZE_PLATESKIRT_T = 12219,\n\tBRONZE_FULL_HELM_T = 12221,\n\tBRONZE_KITESHIELD_T = 12223,\n\tIRON_PLATEBODY_T = 12225,\n\tIRON_PLATELEGS_T = 12227,\n\tIRON_PLATESKIRT_T = 12229,\n\tIRON_FULL_HELM_T = 12231,\n\tIRON_KITESHIELD_T = 12233,\n\tIRON_PLATEBODY_G = 12235,\n\tIRON_PLATELEGS_G = 12237,\n\tIRON_PLATESKIRT_G = 12239,\n\tIRON_FULL_HELM_G = 12241,\n\tIRON_KITESHIELD_G = 12243,\n\tBEANIE = 12245,\n\tRED_BERET = 12247,\n\tIMP_MASK = 12249,\n\tGOBLIN_MASK = 12251,\n\tARMADYL_ROBE_TOP = 12253,\n\tARMADYL_ROBE_LEGS = 12255,\n\tARMADYL_STOLE = 12257,\n\tARMADYL_MITRE = 12259,\n\tARMADYL_CLOAK = 12261,\n\tARMADYL_CROZIER = 12263,\n\tBANDOS_ROBE_TOP = 12265,\n\tBANDOS_ROBE_LEGS = 12267,\n\tBANDOS_STOLE = 12269,\n\tBANDOS_MITRE = 12271,\n\tBANDOS_CLOAK = 12273,\n\tBANDOS_CROZIER = 12275,\n\tMITHRIL_PLATEBODY_G = 12277,\n\tMITHRIL_PLATELEGS_G = 12279,\n\tMITHRIL_KITESHIELD_G = 12281,\n\tMITHRIL_FULL_HELM_G = 12283,\n\tMITHRIL_PLATESKIRT_G = 12285,\n\tMITHRIL_PLATEBODY_T = 12287,\n\tMITHRIL_PLATELEGS_T = 12289,\n\tMITHRIL_KITESHIELD_T = 12291,\n\tMITHRIL_FULL_HELM_T = 12293,\n\tMITHRIL_PLATESKIRT_T = 12295,\n\tBLACK_PICKAXE = 12297,\n\tWHITE_HEADBAND = 12299,\n\tBLUE_HEADBAND = 12301,\n\tGOLD_HEADBAND = 12303,\n\tPINK_HEADBAND = 12305,\n\tGREEN_HEADBAND = 12307,\n\tPINK_BOATER = 12309,\n\tPURPLE_BOATER = 12311,\n\tWHITE_BOATER = 12313,\n\tPINK_ELEGANT_SHIRT = 12315,\n\tPINK_ELEGANT_LEGS = 12317,\n\tCRIER_HAT = 12319,\n\tWHITE_CAVALIER = 12321,\n\tRED_CAVALIER = 12323,\n\tNAVY_CAVALIER = 12325,\n\tRED_DHIDE_BODY_G = 12327,\n\tRED_DHIDE_CHAPS_G = 12329,\n\tRED_DHIDE_BODY_T = 12331,\n\tRED_DHIDE_CHAPS_T = 12333,\n\tBRIEFCASE = 12335,\n\tSAGACIOUS_SPECTACLES = 12337,\n\tPINK_ELEGANT_BLOUSE = 12339,\n\tPINK_ELEGANT_SKIRT = 12341,\n\tGOLD_ELEGANT_BLOUSE = 12343,\n\tGOLD_ELEGANT_SKIRT = 12345,\n\tGOLD_ELEGANT_SHIRT = 12347,\n\tGOLD_ELEGANT_LEGS = 12349,\n\tMUSKETEER_HAT = 12351,\n\tMONOCLE = 12353,\n\tBIG_PIRATE_HAT = 12355,\n\tKATANA = 12357,\n\tLEPRECHAUN_HAT = 12359,\n\tCAT_MASK = 12361,\n\tBRONZE_DRAGON_MASK = 12363,\n\tIRON_DRAGON_MASK = 12365,\n\tSTEEL_DRAGON_MASK = 12367,\n\tMITHRIL_DRAGON_MASK = 12369,\n\tLAVA_DRAGON_MASK = 12371,\n\tDRAGON_CANE = 12373,\n\tBLACK_CANE = 12375,\n\tADAMANT_CANE = 12377,\n\tRUNE_CANE = 12379,\n\tBLACK_DHIDE_BODY_G = 12381,\n\tBLACK_DHIDE_CHAPS_G = 12383,\n\tBLACK_DHIDE_BODY_T = 12385,\n\tBLACK_DHIDE_CHAPS_T = 12387,\n\tGILDED_SCIMITAR = 12389,\n\tGILDED_BOOTS = 12391,\n\tROYAL_GOWN_TOP = 12393,\n\tROYAL_GOWN_BOTTOM = 12395,\n\tROYAL_CROWN = 12397,\n\tPARTYHAT_SPECS = 12399,\n\tNARDAH_TELEPORT = 12402,\n\tDIGSITE_TELEPORT = 12403,\n\tFELDIP_HILLS_TELEPORT = 12404,\n\tLUNAR_ISLE_TELEPORT = 12405,\n\tMORTTON_TELEPORT = 12406,\n\tPEST_CONTROL_TELEPORT = 12407,\n\tPISCATORIS_TELEPORT = 12408,\n\tTAI_BWO_WANNAI_TELEPORT = 12409,\n\tIORWERTH_CAMP_TELEPORT = 12410,\n\tMOS_LEHARMLESS_TELEPORT = 12411,\n\tPIRATE_HAT_PATCH = 12412,\n\tDRAGON_CHAINBODY_G = 12414,\n\tDRAGON_PLATELEGS_G = 12415,\n\tDRAGON_PLATESKIRT_G = 12416,\n\tDRAGON_FULL_HELM_G = 12417,\n\tDRAGON_SQ_SHIELD_G = 12418,\n\tLIGHT_INFINITY_HAT = 12419,\n\tLIGHT_INFINITY_TOP = 12420,\n\tLIGHT_INFINITY_BOTTOMS = 12421,\n\tTHIRD_AGE_WAND = 12422,\n\tTHIRD_AGE_BOW = 12424,\n\tTHIRD_AGE_LONGSWORD = 12426,\n\tPENGUIN_MASK = 12428,\n\tAFRO = 12430,\n\tTOP_HAT = 12432,\n\tTOP_HAT_MONOCLE = 12434,\n\tAMULET_OF_FURY_OR = 12436,\n\tTHIRD_AGE_CLOAK = 12437,\n\tROYAL_SCEPTRE = 12439,\n\tMUSKETEER_TABARD = 12441,\n\tMUSKETEER_PANTS = 12443,\n\tBLACK_SKIRT_G = 12445,\n\tBLACK_SKIRT_T = 12447,\n\tBLACK_WIZARD_ROBE_G = 12449,\n\tBLACK_WIZARD_ROBE_T = 12451,\n\tBLACK_WIZARD_HAT_G = 12453,\n\tBLACK_WIZARD_HAT_T = 12455,\n\tDARK_INFINITY_HAT = 12457,\n\tDARK_INFINITY_TOP = 12458,\n\tDARK_INFINITY_BOTTOMS = 12459,\n\tANCIENT_PLATEBODY = 12460,\n\tANCIENT_PLATELEGS = 12462,\n\tANCIENT_PLATESKIRT = 12464,\n\tANCIENT_FULL_HELM = 12466,\n\tANCIENT_KITESHIELD = 12468,\n\tARMADYL_PLATEBODY = 12470,\n\tARMADYL_PLATELEGS = 12472,\n\tARMADYL_PLATESKIRT = 12474,\n\tARMADYL_FULL_HELM = 12476,\n\tARMADYL_KITESHIELD = 12478,\n\tBANDOS_PLATEBODY = 12480,\n\tBANDOS_PLATELEGS = 12482,\n\tBANDOS_PLATESKIRT = 12484,\n\tBANDOS_FULL_HELM = 12486,\n\tBANDOS_KITESHIELD = 12488,\n\tANCIENT_BRACERS = 12490,\n\tANCIENT_DHIDE_BODY = 12492,\n\tANCIENT_CHAPS = 12494,\n\tANCIENT_COIF = 12496,\n\tBANDOS_BRACERS = 12498,\n\tBANDOS_DHIDE_BODY = 12500,\n\tBANDOS_CHAPS = 12502,\n\tBANDOS_COIF = 12504,\n\tARMADYL_BRACERS = 12506,\n\tARMADYL_DHIDE_BODY = 12508,\n\tARMADYL_CHAPS = 12510,\n\tARMADYL_COIF = 12512,\n\tEXPLORER_BACKPACK = 12514,\n\tPITH_HELMET = 12516,\n\tGREEN_DRAGON_MASK = 12518,\n\tBLUE_DRAGON_MASK = 12520,\n\tRED_DRAGON_MASK = 12522,\n\tBLACK_DRAGON_MASK = 12524,\n\tFURY_ORNAMENT_KIT = 12526,\n\tDARK_INFINITY_COLOUR_KIT = 12528,\n\tLIGHT_INFINITY_COLOUR_KIT = 12530,\n\tDRAGON_SQ_SHIELD_ORNAMENT_KIT = 12532,\n\tDRAGON_CHAINBODY_ORNAMENT_KIT = 12534,\n\tDRAGON_LEGSSKIRT_ORNAMENT_KIT = 12536,\n\tDRAGON_FULL_HELM_ORNAMENT_KIT = 12538,\n\tDEERSTALKER = 12540,\n\tRANGERS_TUNIC = 12596,\n\tHOLY_SANDALS = 12598,\n\tDRUIDIC_WREATH = 12600,\n\tRING_OF_THE_GODS = 12601,\n\tTYRANNICAL_RING = 12603,\n\tTREASONOUS_RING = 12605,\n\tBOOK_OF_WAR = 12608,\n\tBOOK_OF_LAW = 12610,\n\tBOOK_OF_DARKNESS = 12612,\n\tBANDOS_PAGE_1 = 12613,\n\tBANDOS_PAGE_2 = 12614,\n\tBANDOS_PAGE_3 = 12615,\n\tBANDOS_PAGE_4 = 12616,\n\tARMADYL_PAGE_1 = 12617,\n\tARMADYL_PAGE_2 = 12618,\n\tARMADYL_PAGE_3 = 12619,\n\tARMADYL_PAGE_4 = 12620,\n\tANCIENT_PAGE_1 = 12621,\n\tANCIENT_PAGE_2 = 12622,\n\tANCIENT_PAGE_3 = 12623,\n\tANCIENT_PAGE_4 = 12624,\n\tSTAMINA_POTION4 = 12625,\n\tSTAMINA_POTION3 = 12627,\n\tSTAMINA_POTION2 = 12629,\n\tSTAMINA_POTION1 = 12631,\n\tSTAMINA_MIX2 = 12633,\n\tSTAMINA_MIX1 = 12635,\n\tSARADOMIN_HALO = 12637,\n\tZAMORAK_HALO = 12638,\n\tGUTHIX_HALO = 12639,\n\tAMYLASE_CRYSTAL = 12640,\n\tAMYLASE_PACK = 12641,\n\tLUMBERYARD_TELEPORT = 12642,\n\tPET_DAGANNOTH_SUPREME = 12643,\n\tPET_DAGANNOTH_PRIME = 12644,\n\tPET_DAGANNOTH_REX = 12645,\n\tBABY_MOLE = 12646,\n\tKALPHITE_PRINCESS = 12647,\n\tPET_SMOKE_DEVIL = 12648,\n\tPET_KREEARRA = 12649,\n\tPET_GENERAL_GRAARDOR = 12650,\n\tPET_ZILYANA = 12651,\n\tPET_KRIL_TSUTSAROTH = 12652,\n\tPRINCE_BLACK_DRAGON = 12653,\n\tPET_KRAKEN = 12655,\n\tTYRANNICAL_RING_I = 12691,\n\tTREASONOUS_RING_I = 12692,\n\tSUPER_COMBAT_POTION4 = 12695,\n\tSUPER_COMBAT_POTION3 = 12697,\n\tSUPER_COMBAT_POTION2 = 12699,\n\tSUPER_COMBAT_POTION1 = 12701,\n\tPET_PENANCE_QUEEN = 12703,\n\tGOBLIN_PAINT_CANNON = 12727,\n\tBLUE_DARK_BOW_PAINT = 12757,\n\tGREEN_DARK_BOW_PAINT = 12759,\n\tYELLOW_DARK_BOW_PAINT = 12761,\n\tWHITE_DARK_BOW_PAINT = 12763,\n\tFROZEN_WHIP_MIX = 12769,\n\tVOLCANIC_WHIP_MIX = 12771,\n\tVOLCANIC_ABYSSAL_WHIP = 12773,\n\tFROZEN_ABYSSAL_WHIP = 12774,\n\tANNAKARL_TELEPORT = 12775,\n\tCARRALLANGER_TELEPORT = 12776,\n\tDAREEYAK_TELEPORT = 12777,\n\tGHORROCK_TELEPORT = 12778,\n\tKHARYRLL_TELEPORT = 12779,\n\tLASSAR_TELEPORT = 12780,\n\tPADDEWWA_TELEPORT = 12781,\n\tSENNTISTEN_TELEPORT = 12782,\n\tRING_OF_WEALTH_SCROLL = 12783,\n\tRING_OF_WEALTH_I = 12785,\n\tMAGIC_SHORTBOW_SCROLL = 12786,\n\tMAGIC_SHORTBOW_I = 12788,\n\tCLUE_BOX = 12789,\n\tRUNE_POUCH = 12791,\n\tNEST_BOX_EMPTY = 12792,\n\tNEST_BOX_SEEDS = 12793,\n\tNEST_BOX_RING = 12794,\n\tSTEAM_STAFF_UPGRADE_KIT = 12798,\n\tDRAGON_PICKAXE_UPGRADE_KIT = 12800,\n\tWARD_UPGRADE_KIT = 12802,\n\tSARADOMINS_TEAR = 12804,\n\tSARADOMINS_BLESSED_SWORD = 12809,\n\tIRONMAN_HELM = 12810,\n\tIRONMAN_PLATEBODY = 12811,\n\tIRONMAN_PLATELEGS = 12812,\n\tPET_DARK_CORE = 12816,\n\tELYSIAN_SPIRIT_SHIELD = 12817,\n\tELYSIAN_SIGIL = 12819,\n\tSPECTRAL_SPIRIT_SHIELD = 12821,\n\tSPECTRAL_SIGIL = 12823,\n\tARCANE_SPIRIT_SHIELD = 12825,\n\tARCANE_SIGIL = 12827,\n\tSPIRIT_SHIELD = 12829,\n\tBLESSED_SPIRIT_SHIELD = 12831,\n\tHOLY_ELIXIR = 12833,\n\tGRIM_REAPER_HOOD = 12845,\n\tTARGET_TELEPORT_SCROLL = 12846,\n\tGRANITE_CLAMP = 12849,\n\tAMULET_OF_THE_DAMNED_FULL = 12851,\n\tFLAMTAER_BAG = 12854,\n\tDWARF_CANNON_SET = 12863,\n\tGREEN_DRAGONHIDE_SET = 12865,\n\tBLUE_DRAGONHIDE_SET = 12867,\n\tRED_DRAGONHIDE_SET = 12869,\n\tBLACK_DRAGONHIDE_SET = 12871,\n\tGUTHANS_ARMOUR_SET = 12873,\n\tVERACS_ARMOUR_SET = 12875,\n\tDHAROKS_ARMOUR_SET = 12877,\n\tTORAGS_ARMOUR_SET = 12879,\n\tAHRIMS_ARMOUR_SET = 12881,\n\tKARILS_ARMOUR_SET = 12883,\n\tJAR_OF_SAND = 12885,\n\tSANTA_MASK = 12887,\n\tSANTA_JACKET = 12888,\n\tSANTA_PANTALOONS = 12889,\n\tSANTA_GLOVES = 12890,\n\tSANTA_BOOTS = 12891,\n\tANTISANTA_MASK = 12892,\n\tANTISANTA_JACKET = 12893,\n\tANTISANTA_PANTALOONS = 12894,\n\tANTISANTA_GLOVES = 12895,\n\tANTISANTA_BOOTS = 12896,\n\tTRIDENT_OF_THE_SWAMP = 12899,\n\tUNCHARGED_TOXIC_TRIDENT = 12900,\n\tTOXIC_STAFF_UNCHARGED = 12902,\n\tPET_SNAKELING = 12921,\n\tTANZANITE_FANG = 12922,\n\tTOXIC_BLOWPIPE_EMPTY = 12924,\n\tTOXIC_BLOWPIPE = 12926,\n\tSERPENTINE_VISAGE = 12927,\n\tSERPENTINE_HELM_UNCHARGED = 12929,\n\tSERPENTINE_HELM = 12931,\n\tMAGIC_FANG = 12932,\n\tZULRAHS_SCALES = 12934,\n\tJAR_OF_SWAMP = 12936,\n\tZULANDRA_TELEPORT = 12938,\n\tDRAGON_DEFENDER = 12954,\n\tCOW_TOP = 12956,\n\tCOW_TROUSERS = 12957,\n\tCOW_GLOVES = 12958,\n\tCOW_SHOES = 12959,\n\tBRONZE_SET_LG = 12960,\n\tBRONZE_SET_SK = 12962,\n\tBRONZE_TRIMMED_SET_LG = 12964,\n\tBRONZE_TRIMMED_SET_SK = 12966,\n\tBRONZE_GOLDTRIMMED_SET_LG = 12968,\n\tBRONZE_GOLDTRIMMED_SET_SK = 12970,\n\tIRON_SET_LG = 12972,\n\tIRON_SET_SK = 12974,\n\tIRON_TRIMMED_SET_LG = 12976,\n\tIRON_TRIMMED_SET_SK = 12978,\n\tIRON_GOLDTRIMMED_SET_LG = 12980,\n\tIRON_GOLDTRIMMED_SET_SK = 12982,\n\tSTEEL_SET_LG = 12984,\n\tSTEEL_SET_SK = 12986,\n\tBLACK_SET_LG = 12988,\n\tBLACK_SET_SK = 12990,\n\tBLACK_TRIMMED_SET_LG = 12992,\n\tBLACK_TRIMMED_SET_SK = 12994,\n\tBLACK_GOLDTRIMMED_SET_LG = 12996,\n\tBLACK_GOLDTRIMMED_SET_SK = 12998,\n\tMITHRIL_SET_LG = 13000,\n\tMITHRIL_SET_SK = 13002,\n\tMITHRIL_TRIMMED_SET_LG = 13004,\n\tMITHRIL_TRIMMED_SET_SK = 13006,\n\tMITHRIL_GOLDTRIMMED_SET_LG = 13008,\n\tMITHRIL_GOLDTRIMMED_SET_SK = 13010,\n\tADAMANT_SET_LG = 13012,\n\tADAMANT_SET_SK = 13014,\n\tADAMANT_TRIMMED_SET_LG = 13016,\n\tADAMANT_TRIMMED_SET_SK = 13018,\n\tADAMANT_GOLDTRIMMED_SET_LG = 13020,\n\tADAMANT_GOLDTRIMMED_SET_SK = 13022,\n\tRUNE_ARMOUR_SET_LG = 13024,\n\tRUNE_ARMOUR_SET_SK = 13026,\n\tRUNE_TRIMMED_SET_LG = 13028,\n\tRUNE_TRIMMED_SET_SK = 13030,\n\tRUNE_GOLDTRIMMED_SET_LG = 13032,\n\tRUNE_GOLDTRIMMED_SET_SK = 13034,\n\tGILDED_ARMOUR_SET_LG = 13036,\n\tGILDED_ARMOUR_SET_SK = 13038,\n\tSARADOMIN_ARMOUR_SET_LG = 13040,\n\tSARADOMIN_ARMOUR_SET_SK = 13042,\n\tZAMORAK_ARMOUR_SET_LG = 13044,\n\tZAMORAK_ARMOUR_SET_SK = 13046,\n\tGUTHIX_ARMOUR_SET_LG = 13048,\n\tGUTHIX_ARMOUR_SET_SK = 13050,\n\tARMADYL_RUNE_ARMOUR_SET_LG = 13052,\n\tARMADYL_RUNE_ARMOUR_SET_SK = 13054,\n\tBANDOS_RUNE_ARMOUR_SET_LG = 13056,\n\tBANDOS_RUNE_ARMOUR_SET_SK = 13058,\n\tANCIENT_RUNE_ARMOUR_SET_LG = 13060,\n\tANCIENT_RUNE_ARMOUR_SET_SK = 13062,\n\tCOMBAT_POTION_SET = 13064,\n\tSUPER_POTION_SET = 13066,\n\tQUEST_POINT_CAPE_T = 13068,\n\tACHIEVEMENT_DIARY_CAPE_T = 13069,\n\tACHIEVEMENT_DIARY_HOOD = 13070,\n\tCHOMPY_CHICK = 13071,\n\tELITE_VOID_TOP = 13072,\n\tELITE_VOID_ROBE = 13073,\n\tKARAMJA_GLOVES_4 = 13103,\n\tVARROCK_ARMOUR_1 = 13104,\n\tVARROCK_ARMOUR_2 = 13105,\n\tVARROCK_ARMOUR_3 = 13106,\n\tVARROCK_ARMOUR_4 = 13107,\n\tWILDERNESS_SWORD_1 = 13108,\n\tWILDERNESS_SWORD_2 = 13109,\n\tWILDERNESS_SWORD_3 = 13110,\n\tWILDERNESS_SWORD_4 = 13111,\n\tMORYTANIA_LEGS_1 = 13112,\n\tMORYTANIA_LEGS_2 = 13113,\n\tMORYTANIA_LEGS_3 = 13114,\n\tMORYTANIA_LEGS_4 = 13115,\n\tFALADOR_SHIELD_1 = 13117,\n\tFALADOR_SHIELD_2 = 13118,\n\tFALADOR_SHIELD_3 = 13119,\n\tFALADOR_SHIELD_4 = 13120,\n\tARDOUGNE_CLOAK_1 = 13121,\n\tARDOUGNE_CLOAK_2 = 13122,\n\tARDOUGNE_CLOAK_3 = 13123,\n\tARDOUGNE_CLOAK_4 = 13124,\n\tEXPLORERS_RING_1 = 13125,\n\tEXPLORERS_RING_2 = 13126,\n\tEXPLORERS_RING_3 = 13127,\n\tEXPLORERS_RING_4 = 13128,\n\tFREMENNIK_SEA_BOOTS_1 = 13129,\n\tFREMENNIK_SEA_BOOTS_2 = 13130,\n\tFREMENNIK_SEA_BOOTS_3 = 13131,\n\tFREMENNIK_SEA_BOOTS_4 = 13132,\n\tDESERT_AMULET_1 = 13133,\n\tDESERT_AMULET_2 = 13134,\n\tDESERT_AMULET_3 = 13135,\n\tDESERT_AMULET_4 = 13136,\n\tKANDARIN_HEADGEAR_1 = 13137,\n\tKANDARIN_HEADGEAR_2 = 13138,\n\tKANDARIN_HEADGEAR_3 = 13139,\n\tKANDARIN_HEADGEAR_4 = 13140,\n\tWESTERN_BANNER_1 = 13141,\n\tWESTERN_BANNER_2 = 13142,\n\tWESTERN_BANNER_3 = 13143,\n\tWESTERN_BANNER_4 = 13144,\n\tHOLY_BOOK_PAGE_SET = 13149,\n\tUNHOLY_BOOK_PAGE_SET = 13151,\n\tBOOK_OF_BALANCE_PAGE_SET = 13153,\n\tBOOK_OF_WAR_PAGE_SET = 13155,\n\tBOOK_OF_LAW_PAGE_SET = 13157,\n\tBOOK_OF_DARKNESS_PAGE_SET = 13159,\n\tZAMORAK_DRAGONHIDE_SET = 13161,\n\tSARADOMIN_DRAGONHIDE_SET = 13163,\n\tGUTHIX_DRAGONHIDE_SET = 13165,\n\tBANDOS_DRAGONHIDE_SET = 13167,\n\tARMADYL_DRAGONHIDE_SET = 13169,\n\tANCIENT_DRAGONHIDE_SET = 13171,\n\tPARTYHAT_SET = 13173,\n\tHALLOWEEN_MASK_SET = 13175,\n\tVENENATIS_SPIDERLING = 13177,\n\tCALLISTO_CUB = 13178,\n\tVETION_JR = 13179,\n\tSCORPIAS_OFFSPRING = 13181,\n\tBUNNY_FEET = 13182,\n\tDIANGOS_CLAWS = 13188,\n\tOLD_SCHOOL_BOND = 13190,\n\tTANZANITE_MUTAGEN = 13200,\n\tMAGMA_MUTAGEN = 13201,\n\tRING_OF_THE_GODS_I = 13202,\n\tMASK_OF_BALANCE = 13203,\n\tTIGER_TOY = 13215,\n\tLION_TOY = 13216,\n\tSNOW_LEOPARD_TOY = 13217,\n\tAMUR_LEOPARD_TOY = 13218,\n\tMUSIC_CAPE = 13221,\n\tMUSIC_CAPET = 13222,\n\tMUSIC_HOOD = 13223,\n\tTZREKJAD = 13225,\n\tHERB_SACK = 13226,\n\tETERNAL_CRYSTAL = 13227,\n\tPEGASIAN_CRYSTAL = 13229,\n\tPRIMORDIAL_CRYSTAL = 13231,\n\tSMOULDERING_STONE = 13233,\n\tETERNAL_BOOTS = 13235,\n\tPEGASIAN_BOOTS = 13237,\n\tPRIMORDIAL_BOOTS = 13239,\n\tINFERNAL_AXE = 13241,\n\tINFERNAL_PICKAXE = 13243,\n\tJAR_OF_SOULS = 13245,\n\tHELLPUPPY = 13247,\n\tKEY_MASTER_TELEPORT = 13249,\n\tSARADOMINS_LIGHT = 13256,\n\tANGLER_HAT = 13258,\n\tANGLER_TOP = 13259,\n\tANGLER_WADERS = 13260,\n\tANGLER_BOOTS = 13261,\n\tABYSSAL_ORPHAN = 13262,\n\tABYSSAL_BLUDGEON = 13263,\n\tABYSSAL_DAGGER = 13265,\n\tUNSIRED = 13273,\n\tBLUDGEON_SPINE = 13274,\n\tBLUDGEON_CLAW = 13275,\n\tBLUDGEON_AXON = 13276,\n\tJAR_OF_MIASMA = 13277,\n\tMAX_CAPE = 13280,\n\tMAX_HOOD = 13281,\n\tGRAVEDIGGER_MASK = 13283,\n\tGRAVEDIGGER_TOP = 13284,\n\tGRAVEDIGGER_LEGGINGS = 13285,\n\tGRAVEDIGGER_BOOTS = 13286,\n\tGRAVEDIGGER_GLOVES = 13287,\n\tANTIPANTIES = 13288,\n\tDEADMANS_CHEST = 13317,\n\tDEADMANS_LEGS = 13318,\n\tDEADMANS_CAPE = 13319,\n\tHERON = 13320,\n\tROCK_GOLEM = 13321,\n\tBEAVER = 13322,\n\tBABY_CHINCHOMPA = 13323,\n\tGREEN_BANNER = 13328,\n\tFIRE_MAX_CAPE = 13329,\n\tFIRE_MAX_HOOD = 13330,\n\tBLACK_SANTA_HAT = 13343,\n\tINVERTED_SANTA_HAT = 13344,\n\tGRICOLLERS_CAN = 13353,\n\tSHAYZIEN_GLOVES_1 = 13357,\n\tSHAYZIEN_BOOTS_1 = 13358,\n\tSHAYZIEN_HELM_1 = 13359,\n\tSHAYZIEN_GREAVES_1 = 13360,\n\tSHAYZIEN_PLATEBODY_1 = 13361,\n\tSHAYZIEN_GLOVES_2 = 13362,\n\tSHAYZIEN_BOOTS_2 = 13363,\n\tSHAYZIEN_HELM_2 = 13364,\n\tSHAYZIEN_GREAVES_2 = 13365,\n\tSHAYZIEN_PLATEBODY_2 = 13366,\n\tSHAYZIEN_GLOVES_3 = 13367,\n\tSHAYZIEN_BOOTS_3 = 13368,\n\tSHAYZIEN_HELM_3 = 13369,\n\tSHAYZIEN_GREAVES_3 = 13370,\n\tSHAYZIEN_PLATEBODY_3 = 13371,\n\tSHAYZIEN_GLOVES_4 = 13372,\n\tSHAYZIEN_BOOTS_4 = 13373,\n\tSHAYZIEN_HELM_4 = 13374,\n\tSHAYZIEN_GREAVES_4 = 13375,\n\tSHAYZIEN_PLATEBODY_4 = 13376,\n\tSHAYZIEN_GLOVES_5 = 13377,\n\tSHAYZIEN_BOOTS_5 = 13378,\n\tSHAYZIEN_HELM_5 = 13379,\n\tSHAYZIEN_GREAVES_5 = 13380,\n\tSHAYZIEN_BODY_5 = 13381,\n\tXERICIAN_FABRIC = 13383,\n\tXERICIAN_HAT = 13385,\n\tXERICIAN_TOP = 13387,\n\tXERICIAN_ROBE = 13389,\n\tLIZARDMAN_FANG = 13391,\n\tXERICS_TALISMAN_INERT = 13392,\n\tTRAINING_MANUAL = 13396,\n\tSALTPETRE = 13421,\n\tSANDWORMS = 13431,\n\tRAW_ANGLERFISH = 13439,\n\tANGLERFISH = 13441,\n\tBURNT_ANGLERFISH = 13443,\n\tBOOK_OF_ARCANE_KNOWLEDGE = 13513,\n\tVOLCANIC_SULPHUR = 13571,\n\tDYNAMITE = 13573,\n\tDRAGON_WARHAMMER = 13576,\n\tSEED_BOX = 13639,\n\tFARMERS_BORO_TROUSERS = 13640,\n\tFARMERS_JACKET = 13642,\n\tFARMERS_SHIRT = 13643,\n\tFARMERS_BOOTS = 13644,\n\tFARMERS_STRAWHAT = 13646,\n\tDRAGON_CLAWS = 13652,\n\tGNOME_CHILD_HAT = 13655,\n\tGRAPE_SEED = 13657,\n\tTELEPORT_CARD = 13658,\n\tBUNNY_TOP = 13663,\n\tBUNNY_LEGS = 13664,\n\tBUNNY_PAWS = 13665,\n\tBAG_FULL_OF_GEMS = 19473,\n\tACHIEVEMENT_DIARY_CAPE = 19476,\n\tLIGHT_BALLISTA = 19478,\n\tHEAVY_BALLISTA = 19481,\n\tDRAGON_JAVELIN = 19484,\n\tZENYTE = 19493,\n\tUNCUT_ZENYTE = 19496,\n\tZENYTE_AMULET_U = 19501,\n\tZENYTE_SHARD = 19529,\n\tZENYTE_BRACELET = 19532,\n\tZENYTE_NECKLACE = 19535,\n\tZENYTE_RING = 19538,\n\tZENYTE_AMULET = 19541,\n\tTORMENTED_BRACELET = 19544,\n\tNECKLACE_OF_ANGUISH = 19547,\n\tRING_OF_SUFFERING = 19550,\n\tAMULET_OF_TORTURE = 19553,\n\tROYAL_SEED_POD = 19564,\n\tBRONZE_JAVELIN_HEADS = 19570,\n\tIRON_JAVELIN_HEADS = 19572,\n\tSTEEL_JAVELIN_HEADS = 19574,\n\tMITHRIL_JAVELIN_HEADS = 19576,\n\tADAMANT_JAVELIN_HEADS = 19578,\n\tRUNE_JAVELIN_HEADS = 19580,\n\tDRAGON_JAVELIN_HEADS = 19582,\n\tJAVELIN_SHAFT = 19584,\n\tLIGHT_FRAME = 19586,\n\tHEAVY_FRAME = 19589,\n\tBALLISTA_LIMBS = 19592,\n\tINCOMPLETE_LIGHT_BALLISTA = 19595,\n\tINCOMPLETE_HEAVY_BALLISTA = 19598,\n\tBALLISTA_SPRING = 19601,\n\tUNSTRUNG_LIGHT_BALLISTA = 19604,\n\tUNSTRUNG_HEAVY_BALLISTA = 19607,\n\tMONKEY_TAIL = 19610,\n\tARCEUUS_LIBRARY_TELEPORT = 19613,\n\tDRAYNOR_MANOR_TELEPORT = 19615,\n\tMIND_ALTAR_TELEPORT = 19617,\n\tSALVE_GRAVEYARD_TELEPORT = 19619,\n\tFENKENSTRAINS_CASTLE_TELEPORT = 19621,\n\tWEST_ARDOUGNE_TELEPORT = 19623,\n\tHARMONY_ISLAND_TELEPORT = 19625,\n\tCEMETERY_TELEPORT = 19627,\n\tBARROWS_TELEPORT = 19629,\n\tAPE_ATOLL_TELEPORT = 19631,\n\tBLACK_SLAYER_HELMET = 19639,\n\tBLACK_SLAYER_HELMET_I = 19641,\n\tGREEN_SLAYER_HELMET = 19643,\n\tGREEN_SLAYER_HELMET_I = 19645,\n\tRED_SLAYER_HELMET = 19647,\n\tRED_SLAYER_HELMET_I = 19649,\n\tGOLOVANOVA_FRUIT_TOP = 19653,\n\tUNCOOKED_BOTANICAL_PIE = 19656,\n\tBOTANICAL_PIE = 19662,\n\tDAMAGED_MONKEY_TAIL = 19665,\n\tREDWOOD_LOGS = 19669,\n\tREDWOOD_PYRE_LOGS = 19672,\n\tARCLIGHT = 19675,\n\tANCIENT_SHARD = 19677,\n\tDARK_TOTEM_BASE = 19679,\n\tDARK_TOTEM_MIDDLE = 19681,\n\tDARK_TOTEM_TOP = 19683,\n\tDARK_TOTEM = 19685,\n\tHELM_OF_RAEDWALD = 19687,\n\tCLUE_HUNTER_GARB = 19689,\n\tCLUE_HUNTER_GLOVES = 19691,\n\tCLUE_HUNTER_TROUSERS = 19693,\n\tCLUE_HUNTER_BOOTS = 19695,\n\tCLUE_HUNTER_CLOAK = 19697,\n\tHORNWOOD_HELM = 19699,\n\tJAR_OF_DARKNESS = 19701,\n\tAMULET_OF_ETERNAL_GLORY = 19707,\n\tRING_OF_SUFFERING_I = 19710,\n\tOCCULT_NECKLACE_OR = 19720,\n\tDRAGON_DEFENDER_T = 19722,\n\tLEFT_EYE_PATCH = 19724,\n\tDOUBLE_EYE_PATCH = 19727,\n\tBLOODHOUND = 19730,\n\tLUCKY_IMPLING_JAR = 19732,\n\tCLUE_SCROLL_MASTER = 19835,\n\tREWARD_CASKET_MASTER = 19836,\n\tCYCLOPS_HEAD = 19915,\n\tNUNCHAKU = 19918,\n\tANCIENT_DHIDE_BOOTS = 19921,\n\tBANDOS_DHIDE_BOOTS = 19924,\n\tGUTHIX_DHIDE_BOOTS = 19927,\n\tARMADYL_DHIDE_BOOTS = 19930,\n\tSARADOMIN_DHIDE_BOOTS = 19933,\n\tZAMORAK_DHIDE_BOOTS = 19936,\n\tHEAVY_CASKET = 19941,\n\tARCEUUS_SCARF = 19943,\n\tHOSIDIUS_SCARF = 19946,\n\tLOVAKENGJ_SCARF = 19949,\n\tPISCARILIUS_SCARF = 19952,\n\tSHAYZIEN_SCARF = 19955,\n\tDARK_TUXEDO_JACKET = 19958,\n\tDARK_TUXEDO_CUFFS = 19961,\n\tDARK_TROUSERS = 19964,\n\tDARK_TUXEDO_SHOES = 19967,\n\tDARK_BOW_TIE = 19970,\n\tLIGHT_TUXEDO_JACKET = 19973,\n\tLIGHT_TUXEDO_CUFFS = 19976,\n\tLIGHT_TROUSERS = 19979,\n\tLIGHT_TUXEDO_SHOES = 19982,\n\tLIGHT_BOW_TIE = 19985,\n\tBLACKSMITHS_HELM = 19988,\n\tBUCKET_HELM = 19991,\n\tRANGER_GLOVES = 19994,\n\tHOLY_WRAPS = 19997,\n\tDRAGON_SCIMITAR_OR = 20000,\n\tDRAGON_SCIMITAR_ORNAMENT_KIT = 20002,\n\tRING_OF_NATURE = 20005,\n\tFANCY_TIARA = 20008,\n\tTHIRD_AGE_AXE = 20011,\n\tTHIRD_AGE_PICKAXE = 20014,\n\tRING_OF_COINS = 20017,\n\tLESSER_DEMON_MASK = 20020,\n\tGREATER_DEMON_MASK = 20023,\n\tBLACK_DEMON_MASK = 20026,\n\tOLD_DEMON_MASK = 20029,\n\tJUNGLE_DEMON_MASK = 20032,\n\tSAMURAI_KASA = 20035,\n\tSAMURAI_SHIRT = 20038,\n\tSAMURAI_GLOVES = 20041,\n\tSAMURAI_GREAVES = 20044,\n\tSAMURAI_BOOTS = 20047,\n\tOBSIDIAN_CAPE_R = 20050,\n\tHALF_MOON_SPECTACLES = 20053,\n\tALE_OF_THE_GODS = 20056,\n\tBUCKET_HELM_G = 20059,\n\tTORTURE_ORNAMENT_KIT = 20062,\n\tOCCULT_ORNAMENT_KIT = 20065,\n\tARMADYL_GODSWORD_ORNAMENT_KIT = 20068,\n\tBANDOS_GODSWORD_ORNAMENT_KIT = 20071,\n\tSARADOMIN_GODSWORD_ORNAMENT_KIT = 20074,\n\tZAMORAK_GODSWORD_ORNAMENT_KIT = 20077,\n\tMUMMYS_HEAD = 20080,\n\tMUMMYS_BODY = 20083,\n\tMUMMYS_HANDS = 20086,\n\tMUMMYS_LEGS = 20089,\n\tMUMMYS_FEET = 20092,\n\tANKOU_MASK = 20095,\n\tANKOU_TOP = 20098,\n\tANKOU_GLOVES = 20101,\n\tANKOUS_LEGGINGS = 20104,\n\tANKOU_SOCKS = 20107,\n\tBOWL_WIG = 20110,\n\tARCEUUS_HOOD = 20113,\n\tHOSIDIUS_HOOD = 20116,\n\tLOVAKENGJ_HOOD = 20119,\n\tPISCARILIUS_HOOD = 20122,\n\tSHAYZIEN_HOOD = 20125,\n\tHOOD_OF_DARKNESS = 20128,\n\tROBE_TOP_OF_DARKNESS = 20131,\n\tGLOVES_OF_DARKNESS = 20134,\n\tROBE_BOTTOM_OF_DARKNESS = 20137,\n\tBOOTS_OF_DARKNESS = 20140,\n\tDRAGON_DEFENDER_ORNAMENT_KIT = 20143,\n\tGILDED_MED_HELM = 20146,\n\tGILDED_CHAINBODY = 20149,\n\tGILDED_SQ_SHIELD = 20152,\n\tGILDED_2H_SWORD = 20155,\n\tGILDED_SPEAR = 20158,\n\tGILDED_HASTA = 20161,\n\tLARGE_SPADE = 20164,\n\tWOODEN_SHIELD_G = 20166,\n\tSTEEL_PLATEBODY_G = 20169,\n\tSTEEL_PLATELEGS_G = 20172,\n\tSTEEL_PLATESKIRT_G = 20175,\n\tSTEEL_FULL_HELM_G = 20178,\n\tSTEEL_KITESHIELD_G = 20181,\n\tSTEEL_PLATEBODY_T = 20184,\n\tSTEEL_PLATELEGS_T = 20187,\n\tSTEEL_PLATESKIRT_T = 20190,\n\tSTEEL_FULL_HELM_T = 20193,\n\tSTEEL_KITESHIELD_T = 20196,\n\tMONKS_ROBE_TOP_G = 20199,\n\tMONKS_ROBE_G = 20202,\n\tGOLDEN_CHEFS_HAT = 20205,\n\tGOLDEN_APRON = 20208,\n\tTEAM_CAPE_ZERO = 20211,\n\tTEAM_CAPE_X = 20214,\n\tTEAM_CAPE_I = 20217,\n\tHOLY_BLESSING = 20220,\n\tUNHOLY_BLESSING = 20223,\n\tPEACEFUL_BLESSING = 20226,\n\tHONOURABLE_BLESSING = 20229,\n\tWAR_BLESSING = 20232,\n\tANCIENT_BLESSING = 20235,\n\tCHARGE_DRAGONSTONE_JEWELLERY_SCROLL = 20238,\n\tCRIER_COAT = 20240,\n\tCRIER_BELL = 20243,\n\tBLACK_LEPRECHAUN_HAT = 20246,\n\tCLUELESS_SCROLL = 20249,\n\tARCEUUS_BANNER = 20251,\n\tHOSIDIUS_BANNER = 20254,\n\tLOVAKENGJ_BANNER = 20257,\n\tPISCARILIUS_BANNER = 20260,\n\tSHAYZIEN_BANNER = 20263,\n\tBLACK_UNICORN_MASK = 20266,\n\tWHITE_UNICORN_MASK = 20269,\n\tCABBAGE_ROUND_SHIELD = 20272,\n\tGNOMISH_FIRELIGHTER = 20275,\n\tAMULET_OF_TORTURE_OR = 20366,\n\tARMADYL_GODSWORD_OR = 20368,\n\tBANDOS_GODSWORD_OR = 20370,\n\tSARADOMIN_GODSWORD_OR = 20372,\n\tZAMORAK_GODSWORD_OR = 20374,\n\tSTEEL_TRIMMED_SET_LG = 20376,\n\tSTEEL_TRIMMED_SET_SK = 20379,\n\tSTEEL_GOLDTRIMMED_SET_LG = 20382,\n\tSTEEL_GOLDTRIMMED_SET_SK = 20385,\n\tEVIL_CHICKEN_FEET = 20433,\n\tEVIL_CHICKEN_WINGS = 20436,\n\tEVIL_CHICKEN_HEAD = 20439,\n\tEVIL_CHICKEN_LEGS = 20442,\n\tELDER_CHAOS_TOP = 20517,\n\tELDER_CHAOS_ROBE = 20520,\n\tREWARD_CASKET_ELITE = 20543,\n\tREWARD_CASKET_HARD = 20544,\n\tREWARD_CASKET_MEDIUM = 20545,\n\tREWARD_CASKET_EASY = 20546,\n\tSTALE_BAGUETTE = 20590,\n\tELDER_CHAOS_HOOD = 20595,\n\tFAIRY_ENCHANTMENT = 20609,\n\tANCIENT_SIGNET = 20611,\n\tLUNAR_SIGNET = 20613,\n\tARCEUUS_SIGNET = 20615,\n\tGIANT_SQUIRREL = 20659,\n\tTANGLEROOT = 20661,\n\tROCKY = 20663,\n\tRIFT_GUARDIAN = 20665,\n\tPHOENIX = 20693,\n\tPYROMANCER_GARB = 20704,\n\tPYROMANCER_ROBE = 20706,\n\tPYROMANCER_HOOD = 20708,\n\tPYROMANCER_BOOTS = 20710,\n\tWARM_GLOVES = 20712,\n\tTOME_OF_FIRE = 20714,\n\tTOME_OF_FIRE_EMPTY = 20716,\n\tBURNT_PAGE = 20718,\n\tBRUMA_TORCH = 20720,\n\tIMBUED_HEART = 20724,\n\tLEAFBLADED_BATTLEAXE = 20727,\n\tMIST_BATTLESTAFF = 20730,\n\tMYSTIC_MIST_STAFF = 20733,\n\tDUST_BATTLESTAFF = 20736,\n\tMYSTIC_DUST_STAFF = 20739,\n\tBOLOGAS_BLESSING = 20747,\n\tZAMORAKS_GRAPES = 20749,\n\tGIANT_KEY = 20754,\n\tHILL_GIANT_CLUB = 20756,\n\tARDOUGNE_MAX_CAPE = 20760,\n\tARDOUGNE_MAX_HOOD = 20764,\n\tBANSHEE_MASK = 20773,\n\tBANSHEE_TOP = 20775,\n\tBANSHEE_ROBE = 20777,\n\tHUNTING_KNIFE = 20779,\n\tSNOW_GLOBE = 20832,\n\tSACK_OF_PRESENTS = 20834,\n\tGIANT_PRESENT = 20836,\n\tDRAGON_THROWNAXE = 20849,\n\tOLMLET = 20851,\n\tTWISTED_BOW = 20997,\n\tTWISTED_BUCKLER = 21000,\n\tELDER_MAUL = 21003,\n\tKODAI_WAND = 21006,\n\tDRAGON_SWORD = 21009,\n\tDRAGON_HUNTER_CROSSBOW = 21012,\n\tDINHS_BULWARK = 21015,\n\tANCESTRAL_HAT = 21018,\n\tANCESTRAL_ROBE_TOP = 21021,\n\tANCESTRAL_ROBE_BOTTOM = 21024,\n\tDARK_RELIC = 21027,\n\tDRAGON_HARPOON = 21028,\n\tINFERNAL_HARPOON = 21031,\n\tDEXTEROUS_PRAYER_SCROLL = 21034,\n\tKODAI_INSIGNIA = 21043,\n\tANCIENT_TABLET = 21046,\n\tTORN_PRAYER_SCROLL = 21047,\n\tANCESTRAL_ROBES_SET = 21049,\n\tARCANE_PRAYER_SCROLL = 21079,\n\tOPAL_RING = 21081,\n\tJADE_RING = 21084,\n\tTOPAZ_RING = 21087,\n\tOPAL_NECKLACE = 21090,\n\tJADE_NECKLACE = 21093,\n\tTOPAZ_NECKLACE = 21096,\n\tOPAL_AMULET_U = 21099,\n\tJADE_AMULET_U = 21102,\n\tTOPAZ_AMULET_U = 21105,\n\tOPAL_AMULET = 21108,\n\tJADE_AMULET = 21111,\n\tTOPAZ_AMULET = 21114,\n\tOPAL_BRACELET = 21117,\n\tJADE_BRACELET = 21120,\n\tTOPAZ_BRACELET = 21123,\n\tRING_OF_PURSUIT = 21126,\n\tRING_OF_RETURNING5 = 21129,\n\tEFARITAYS_AID = 21140,\n\tDODGY_NECKLACE = 21143,\n\tNECKLACE_OF_PASSAGE5 = 21146,\n\tNECKLACE_OF_FAITH = 21157,\n\tAMULET_OF_BOUNTY = 21160,\n\tAMULET_OF_CHEMISTRY = 21163,\n\tBURNING_AMULET5 = 21166,\n\tEXPEDITIOUS_BRACELET = 21177,\n\tFLAMTAER_BRACELET = 21180,\n\tBRACELET_OF_SLAUGHTER = 21183,\n\tLAVA_STAFF_UPGRADE_KIT = 21202,\n\tBIRTHDAY_BALLOONS = 21209,\n\tEASTER_EGG_HELM = 21214,\n\tSLAYERS_ENCHANTMENT = 21257,\n\tPURPLE_SLAYER_HELMET = 21264,\n\tPURPLE_SLAYER_HELMET_I = 21266,\n\tSLAYER_RING_ETERNAL = 21268,\n\tETERNAL_GEM = 21270,\n\tSKOTOS = 21273,\n\tDARK_CLAW = 21275,\n\tOBSIDIAN_ARMOUR_SET = 21279,\n\tINFERNAL_MAX_HOOD = 21282,\n\tINFERNAL_MAX_CAPE = 21285,\n\tJALNIBREK = 21291,\n\tINFERNAL_EEL = 21293,\n\tINFERNAL_CAPE = 21295,\n\tOBSIDIAN_HELMET = 21298,\n\tOBSIDIAN_PLATEBODY = 21301,\n\tOBSIDIAN_PLATELEGS = 21304,\n\tRAINBOW_SCARF = 21314,\n\tAMETHYST_BROAD_BOLTS = 21316,\n\tAMETHYST_JAVELIN = 21318,\n\tAMETHYST_ARROW = 21326,\n\tAMETHYST_BOLT_TIPS = 21338,\n\tUNIDENTIFIED_MINERALS = 21341,\n\tMINING_GLOVES = 21343,\n\tSUPERIOR_MINING_GLOVES = 21345,\n\tAMETHYST = 21347,\n\tAMETHYST_ARROWTIPS = 21350,\n\tAMETHYST_JAVELIN_HEADS = 21352,\n\tHAND_FAN = 21354,\n\tMINNOW = 21356,\n\tMASTER_SCROLL_BOOK_EMPTY = 21387,\n\tMASTER_SCROLL_BOOK = 21389,\n\tEXPERT_MINING_GLOVES = 21392,\n\tCHAMPIONS_CAPE = 21439,\n\tTEAK_SAPLING = 21477,\n\tMAHOGANY_SAPLING = 21480,\n\tULTRACOMPOST = 21483,\n\tTEAK_SEED = 21486,\n\tMAHOGANY_SEED = 21488,\n\tSEAWEED_SPORE = 21490,\n\tGIANT_SEAWEED = 21504,\n\tHERBI = 21509,\n\tBIRD_HOUSE = 21512,\n\tOAK_BIRD_HOUSE = 21515,\n\tWILLOW_BIRD_HOUSE = 21518,\n\tTEAK_BIRD_HOUSE = 21521,\n\tVOLCANIC_MINE_TELEPORT = 21541,\n\tCALCITE = 21543,\n\tPYROPHOSPHITE = 21545,\n\tNUMULITE = 21555,\n\tUNIDENTIFIED_SMALL_FOSSIL = 21562,\n\tUNIDENTIFIED_MEDIUM_FOSSIL = 21564,\n\tUNIDENTIFIED_LARGE_FOSSIL = 21566,\n\tUNIDENTIFIED_RARE_FOSSIL = 21568,\n\tVOLCANIC_ASH = 21622,\n\tSULLIUSCEP_CAP = 21626,\n\tWYVERN_VISAGE = 21637,\n\tGRANITE_BOOTS = 21643,\n\tGRANITE_LONGSWORD = 21646,\n\tMERFOLK_TRIDENT = 21649,\n\tDRIFT_NET = 21652,\n\tPUFFERFISH = 21655,\n\tMERMAIDS_TEAR = 21656,\n\tSCRIBBLED_NOTE = 21664,\n\tPARTIAL_NOTE = 21666,\n\tANCIENT_NOTE = 21668,\n\tANCIENT_WRITINGS = 21670,\n\tEXPERIMENTAL_NOTE = 21672,\n\tPARAGRAPH_OF_TEXT = 21674,\n\tMUSTY_SMELLING_NOTE = 21676,\n\tHASTILY_SCRAWLED_NOTE = 21678,\n\tOLD_WRITING = 21680,\n\tSHORT_NOTE = 21682,\n\tUNCOOKED_MUSHROOM_PIE = 21684,\n\tMUSHROOM_PIE = 21690,\n\tBOWL_OF_FISH = 21693,\n\tASH_COVERED_TOME = 21697,\n\tJONAS_MASK = 21719,\n\tBRITTLE_KEY = 21724,\n\tGRANITE_DUST = 21726,\n\tBLACK_TOURMALINE_CORE = 21730,\n\tGUARDIAN_BOOTS = 21733,\n\tGRANITE_GLOVES = 21736,\n\tGRANITE_RING = 21739,\n\tGRANITE_HAMMER = 21742,\n\tJAR_OF_STONE = 21745,\n\tNOON = 21748,\n\tMIDNIGHT = 21750,\n\tGRANITE_RING_I = 21752,\n\tROCK_THROWNHAMMER = 21754,\n\tIMBUED_SARADOMIN_MAX_CAPE = 21776,\n\tIMBUED_SARADOMIN_MAX_HOOD = 21778,\n\tIMBUED_ZAMORAK_MAX_CAPE = 21780,\n\tIMBUED_ZAMORAK_MAX_HOOD = 21782,\n\tIMBUED_GUTHIX_MAX_CAPE = 21784,\n\tIMBUED_GUTHIX_MAX_HOOD = 21786,\n\tIMBUED_SARADOMIN_CAPE = 21791,\n\tIMBUED_GUTHIX_CAPE = 21793,\n\tIMBUED_ZAMORAK_CAPE = 21795,\n\tREVENANT_CAVE_TELEPORT = 21802,\n\tANCIENT_CRYSTAL = 21804,\n\tANCIENT_EMBLEM = 21807,\n\tANCIENT_TOTEM = 21810,\n\tANCIENT_STATUETTE = 21813,\n\tBRACELET_OF_ETHEREUM = 21816,\n\tBRACELET_OF_ETHEREUM_UNCHARGED = 21817,\n\tREVENANT_ETHER = 21820,\n\tSHAMAN_MASK = 21838,\n\tSNOW_IMP_COSTUME_HEAD = 21841,\n\tSNOW_IMP_COSTUME_BODY = 21842,\n\tSNOW_IMP_COSTUME_LEGS = 21843,\n\tSNOW_IMP_COSTUME_TAIL = 21844,\n\tSNOW_IMP_COSTUME_GLOVES = 21845,\n\tSNOW_IMP_COSTUME_FEET = 21846,\n\tBULGING_SACK = 21874,\n\tWRATH_RUNE = 21880,\n\tDRAGON_ARMOUR_SET_LG = 21882,\n\tDRAGON_ARMOUR_SET_SK = 21885,\n\tTURQUOISE_SLAYER_HELMET = 21888,\n\tTURQUOISE_SLAYER_HELMET_I = 21890,\n\tDRAGON_PLATEBODY = 21892,\n\tDRAGON_KITESHIELD = 21895,\n\tASSEMBLER_MAX_CAPE = 21898,\n\tASSEMBLER_MAX_HOOD = 21900,\n\tDRAGON_CROSSBOW = 21902,\n\tDRAGON_BOLTS = 21905,\n\tVORKATHS_HEAD = 21907,\n\tDRAGON_LIMBS = 21918,\n\tDRAGON_CROSSBOW_U = 21921,\n\tDRAGON_BOLTS_UNF = 21930,\n\tOPAL_DRAGON_BOLTS_E = 21932,\n\tJADE_DRAGON_BOLTS_E = 21934,\n\tPEARL_DRAGON_BOLTS_E = 21936,\n\tTOPAZ_DRAGON_BOLTS_E = 21938,\n\tSAPPHIRE_DRAGON_BOLTS_E = 21940,\n\tEMERALD_DRAGON_BOLTS_E = 21942,\n\tRUBY_DRAGON_BOLTS_E = 21944,\n\tDIAMOND_DRAGON_BOLTS_E = 21946,\n\tDRAGONSTONE_DRAGON_BOLTS_E = 21948,\n\tONYX_DRAGON_BOLTS_E = 21950,\n\tMAGIC_STOCK = 21952,\n\tOPAL_DRAGON_BOLTS = 21955,\n\tJADE_DRAGON_BOLTS = 21957,\n\tPEARL_DRAGON_BOLTS = 21959,\n\tTOPAZ_DRAGON_BOLTS = 21961,\n\tSAPPHIRE_DRAGON_BOLTS = 21963,\n\tEMERALD_DRAGON_BOLTS = 21965,\n\tRUBY_DRAGON_BOLTS = 21967,\n\tDIAMOND_DRAGON_BOLTS = 21969,\n\tDRAGONSTONE_DRAGON_BOLTS = 21971,\n\tONYX_DRAGON_BOLTS = 21973,\n\tCRUSHED_SUPERIOR_DRAGON_BONES = 21975,\n\tSUPER_ANTIFIRE_POTION4 = 21978,\n\tSUPER_ANTIFIRE_POTION3 = 21981,\n\tSUPER_ANTIFIRE_POTION2 = 21984,\n\tSUPER_ANTIFIRE_POTION1 = 21987,\n\tVORKI = 21992,\n\tSUPER_ANTIFIRE_MIX2 = 21994,\n\tSUPER_ANTIFIRE_MIX1 = 21997,\n\tSKELETAL_VISAGE = 22006,\n\tDRAGON_METAL_SHARD = 22097,\n\tDRAGON_METAL_SLICE = 22100,\n\tDRAGON_METAL_LUMP = 22103,\n\tJAR_OF_DECAY = 22106,\n\tAVAS_ASSEMBLER = 22109,\n\tDRAGONBONE_NECKLACE = 22111,\n\tMYTHICAL_CAPE = 22114,\n\tWRATH_TALISMAN = 22118,\n\tWRATH_TIARA = 22121,\n\tSUPERIOR_DRAGON_BONES = 22124,\n\tMAPLE_BIRD_HOUSE = 22192,\n\tMAHOGANY_BIRD_HOUSE = 22195,\n\tYEW_BIRD_HOUSE = 22198,\n\tMAGIC_BIRD_HOUSE = 22201,\n\tREDWOOD_BIRD_HOUSE = 22204,\n\tEXTENDED_SUPER_ANTIFIRE4 = 22209,\n\tEXTENDED_SUPER_ANTIFIRE3 = 22212,\n\tEXTENDED_SUPER_ANTIFIRE2 = 22215,\n\tEXTENDED_SUPER_ANTIFIRE1 = 22218,\n\tEXTENDED_SUPER_ANTIFIRE_MIX2 = 22221,\n\tEXTENDED_SUPER_ANTIFIRE_MIX1 = 22224,\n\tDRAGON_BOOTS_ORNAMENT_KIT = 22231,\n\tDRAGON_BOOTS_G = 22234,\n\tDRAGON_PLATEBODY_ORNAMENT_KIT = 22236,\n\tDRAGON_KITESHIELD_ORNAMENT_KIT = 22239,\n\tDRAGON_PLATEBODY_G = 22242,\n\tDRAGON_KITESHIELD_G = 22244,\n\tANGUISH_ORNAMENT_KIT = 22246,\n\tNECKLACE_OF_ANGUISH_OR = 22249,\n\tOAK_SHIELD = 22251,\n\tWILLOW_SHIELD = 22254,\n\tMAPLE_SHIELD = 22257,\n\tYEW_SHIELD = 22260,\n\tMAGIC_SHIELD = 22263,\n\tREDWOOD_SHIELD = 22266,\n\tHARD_LEATHER_SHIELD = 22269,\n\tSNAKESKIN_SHIELD = 22272,\n\tGREEN_DHIDE_SHIELD = 22275,\n\tBLUE_DHIDE_SHIELD = 22278,\n\tRED_DHIDE_SHIELD = 22281,\n\tBLACK_DHIDE_SHIELD = 22284,\n\tUNCHARGED_TRIDENT_E = 22290,\n\tUNCHARGED_TOXIC_TRIDENT_E = 22294,\n\tSTAFF_OF_LIGHT = 22296,\n\tANCIENT_MEDALLION = 22299,\n\tANCIENT_EFFIGY = 22302,\n\tANCIENT_RELIC = 22305,\n\tPROP_SWORD = 22316,\n\tTZREKZUK = 22319,\n\tAVERNIC_DEFENDER = 22322,\n\tSANGUINESTI_STAFF = 22323,\n\tGHRAZI_RAPIER = 22324,\n\tSCYTHE_OF_VITUR = 22325,\n\tJUSTICIAR_FACEGUARD = 22326,\n\tJUSTICIAR_CHESTGUARD = 22327,\n\tJUSTICIAR_LEGGUARDS = 22328,\n\tEGGSHELL_PLATEBODY = 22351,\n\tEGGSHELL_PLATELEGS = 22353,\n\tHOLY_HANDEGG = 22355,\n\tPEACEFUL_HANDEGG = 22358,\n\tCHAOTIC_HANDEGG = 22361,\n\tBRYOPHYTAS_STAFF_UNCHARGED = 22368,\n\tBRYOPHYTAS_STAFF = 22370,\n\tBRYOPHYTAS_ESSENCE = 22372,\n\tMOSSY_KEY = 22374,\n\tPUPPADILE = 22376,\n\tTEKTINY = 22378,\n\tVANGUARD = 22380,\n\tVASA_MINIRIO = 22382,\n\tVESPINA = 22384,\n\tMETAMORPHIC_DUST = 22386,\n\tXERICS_GUARD = 22388,\n\tXERICS_WARRIOR = 22390,\n\tXERICS_SENTINEL = 22392,\n\tXERICS_GENERAL = 22394,\n\tXERICS_CHAMPION = 22396,\n\tIVANDIS_FLAIL = 22398,\n\tBLOODY_BRACER = 22430,\n\tJUSTICIAR_ARMOUR_SET = 22438,\n\tCADANTINE_BLOOD_POTION_UNF = 22443,\n\tVIAL_OF_BLOOD = 22446,\n\tBATTLEMAGE_POTION4 = 22449,\n\tBATTLEMAGE_POTION3 = 22452,\n\tBATTLEMAGE_POTION2 = 22455,\n\tBATTLEMAGE_POTION1 = 22458,\n\tBASTION_POTION4 = 22461,\n\tBASTION_POTION3 = 22464,\n\tBASTION_POTION2 = 22467,\n\tBASTION_POTION1 = 22470,\n\tLIL_ZIK = 22473,\n\tAVERNIC_DEFENDER_HILT = 22477,\n\tSANGUINESTI_STAFF_UNCHARGED = 22481,\n\tSCYTHE_OF_VITUR_UNCHARGED = 22486,\n\tSINHAZA_SHROUD_TIER_1 = 22494,\n\tSINHAZA_SHROUD_TIER_2 = 22496,\n\tSINHAZA_SHROUD_TIER_3 = 22498,\n\tSINHAZA_SHROUD_TIER_4 = 22500,\n\tSINHAZA_SHROUD_TIER_5 = 22502,\n\tVIGGORAS_CHAINMACE_U = 22542,\n\tVIGGORAS_CHAINMACE = 22545,\n\tCRAWS_BOW_U = 22547,\n\tCRAWS_BOW = 22550,\n\tTHAMMARONS_SCEPTRE_U = 22552,\n\tTHAMMARONS_SCEPTRE = 22555,\n\tAMULET_OF_AVARICE = 22557,\n\tTE_SALT = 22593,\n\tEFH_SALT = 22595,\n\tURT_SALT = 22597,\n\tICY_BASALT = 22599,\n\tSTONY_BASALT = 22601,\n\tBASALT = 22603,\n\tVESTAS_SPEAR = 22610,\n\tVESTAS_LONGSWORD = 22613,\n\tSTATIUSS_WARHAMMER = 22622,\n\tMORRIGANS_THROWING_AXE = 22634,\n\tMORRIGANS_JAVELIN = 22636,\n\tZURIELS_STAFF = 22647,\n\tSCROLL_SACK = 22675,\n\tEEK = 22684,\n\tCLOWN_MASK = 22689,\n\tCLOWN_BOW_TIE = 22692,\n\tCLOWN_GOWN = 22695,\n\tCLOWN_TROUSERS = 22698,\n\tCLOWN_SHOES = 22701,\n\tSTARFACE = 22713,\n\tTREE_TOP = 22715,\n\tTREE_SKIRT = 22717,\n\tCANDY_CANE = 22719,\n\tDRAGON_HASTA = 22731,\n\tIKKLE_HYDRA = 22746,\n\tWYRM_BONES = 22780,\n\tDRAKE_BONES = 22783,\n\tHYDRA_BONES = 22786,\n\tUNCOOKED_DRAGONFRUIT_PIE = 22789,\n\tDRAGONFRUIT_PIE = 22795,\n\tDRAGON_KNIFE = 22804,\n\tFISH_CHUNKS = 22818,\n\tMOLCH_PEARL = 22820,\n\tBLUEGILL = 22826,\n\tCOMMON_TENCH = 22829,\n\tMOTTLED_EEL = 22832,\n\tGREATER_SIREN = 22835,\n\tFISH_SACK = 22838,\n\tGOLDEN_TENCH = 22840,\n\tPEARL_BARBARIAN_ROD = 22842,\n\tPEARL_FLY_FISHING_ROD = 22844,\n\tPEARL_FISHING_ROD = 22846,\n\tCELASTRUS_SAPLING = 22856,\n\tREDWOOD_SAPLING = 22859,\n\tDRAGONFRUIT_SAPLING = 22866,\n\tCELASTRUS_SEED = 22869,\n\tREDWOOD_TREE_SEED = 22871,\n\tPOTATO_CACTUS_SEED = 22873,\n\tHESPORI_SEED = 22875,\n\tDRAGONFRUIT_TREE_SEED = 22877,\n\tSNAPE_GRASS_SEED = 22879,\n\tATTAS_SEED = 22881,\n\tIASOR_SEED = 22883,\n\tKRONOS_SEED = 22885,\n\tWHITE_LILY_SEED = 22887,\n\tDRAGONFRUIT = 22929,\n\tWHITE_LILY = 22932,\n\tCELASTRUS_BARK = 22935,\n\tRADAS_BLESSING_1 = 22941,\n\tRADAS_BLESSING_2 = 22943,\n\tRADAS_BLESSING_3 = 22945,\n\tRADAS_BLESSING_4 = 22947,\n\tBATTLEFRONT_TELEPORT = 22949,\n\tBOOTS_OF_BRIMSTONE = 22951,\n\tDEVOUT_BOOTS = 22954,\n\tDRAKES_CLAW = 22957,\n\tDRAKES_TOOTH = 22960,\n\tBROKEN_DRAGON_HASTA = 22963,\n\tHYDRAS_CLAW = 22966,\n\tHYDRAS_HEART = 22969,\n\tHYDRAS_FANG = 22971,\n\tHYDRAS_EYE = 22973,\n\tBRIMSTONE_RING = 22975,\n\tDRAGON_HUNTER_LANCE = 22978,\n\tFEROCIOUS_GLOVES = 22981,\n\tHYDRA_LEATHER = 22983,\n\tHYDRA_TAIL = 22988,\n\tSEED_PACK = 22993,\n\tBOTTOMLESS_COMPOST_BUCKET = 22994,\n\tBOTTLED_DRAGONBREATH_UNPOWERED = 22999,\n\tBOTTLED_DRAGONBREATH = 23002,\n\tBOOTS_OF_STONE = 23037,\n\tMYSTIC_HAT_DUSK = 23047,\n\tMYSTIC_ROBE_TOP_DUSK = 23050,\n\tMYSTIC_ROBE_BOTTOM_DUSK = 23053,\n\tMYSTIC_GLOVES_DUSK = 23056,\n\tMYSTIC_BOOTS_DUSK = 23059,\n\tJAR_OF_CHEMICALS = 23064,\n\tHYDRA_SLAYER_HELMET = 23073,\n\tHYDRA_SLAYER_HELMET_I = 23075,\n\tALCHEMICAL_HYDRA_HEADS = 23077,\n\tBRIMSTONE_KEY = 23083,\n\tMYSTIC_SET_LIGHT = 23110,\n\tMYSTIC_SET_BLUE = 23113,\n\tMYSTIC_SET_DARK = 23116,\n\tMYSTIC_SET_DUSK = 23119,\n\tGILDED_DRAGONHIDE_SET = 23124,\n\tCLUE_SCROLL_BEGINNER = 23182,\n\tRING_OF_THIRD_AGE = 23185,\n\tGUTHIX_DHIDE_SHIELD = 23188,\n\tSARADOMIN_DHIDE_SHIELD = 23191,\n\tZAMORAK_DHIDE_SHIELD = 23194,\n\tANCIENT_DHIDE_SHIELD = 23197,\n\tARMADYL_DHIDE_SHIELD = 23200,\n\tBANDOS_DHIDE_SHIELD = 23203,\n\tDUAL_SAI = 23206,\n\tRUNE_PLATEBODY_H1 = 23209,\n\tRUNE_PLATEBODY_H2 = 23212,\n\tRUNE_PLATEBODY_H3 = 23215,\n\tRUNE_PLATEBODY_H4 = 23218,\n\tRUNE_PLATEBODY_H5 = 23221,\n\tTHIEVING_BAG = 23224,\n\tRUNE_DEFENDER_ORNAMENT_KIT = 23227,\n\tRUNE_DEFENDER_T = 23230,\n\tTZHAARKETOM_ORNAMENT_KIT = 23232,\n\tTZHAARKETOM_T = 23235,\n\tBERSERKER_NECKLACE_ORNAMENT_KIT = 23237,\n\tBERSERKER_NECKLACE_OR = 23240,\n\tTHIRD_AGE_PLATESKIRT = 23242,\n\tREWARD_CASKET_BEGINNER = 23245,\n\tFREMENNIK_KILT = 23246,\n\tRANGERS_TIGHTS = 23249,\n\tGIANT_BOOT = 23252,\n\tURIS_HAT = 23255,\n\tGILDED_COIF = 23258,\n\tGILDED_DHIDE_VAMBRACES = 23261,\n\tGILDED_DHIDE_BODY = 23264,\n\tGILDED_DHIDE_CHAPS = 23267,\n\tADAMANT_DRAGON_MASK = 23270,\n\tRUNE_DRAGON_MASK = 23273,\n\tGILDED_PICKAXE = 23276,\n\tGILDED_AXE = 23279,\n\tGILDED_SPADE = 23282,\n\tMOLE_SLIPPERS = 23285,\n\tFROG_SLIPPERS = 23288,\n\tBEAR_FEET = 23291,\n\tDEMON_FEET = 23294,\n\tJESTER_CAPE = 23297,\n\tSHOULDER_PARROT = 23300,\n\tMONKS_ROBE_TOP_T = 23303,\n\tMONKS_ROBE_T = 23306,\n\tAMULET_OF_DEFENCE_T = 23309,\n\tSANDWICH_LADY_HAT = 23312,\n\tSANDWICH_LADY_TOP = 23315,\n\tSANDWICH_LADY_BOTTOM = 23318,\n\tRUNE_SCIMITAR_ORNAMENT_KIT_GUTHIX = 23321,\n\tRUNE_SCIMITAR_ORNAMENT_KIT_SARADOMIN = 23324,\n\tRUNE_SCIMITAR_ORNAMENT_KIT_ZAMORAK = 23327,\n\tTHIRD_AGE_DRUIDIC_ROBE_TOP = 23336,\n\tTHIRD_AGE_DRUIDIC_ROBE_BOTTOMS = 23339,\n\tTHIRD_AGE_DRUIDIC_STAFF = 23342,\n\tTHIRD_AGE_DRUIDIC_CLOAK = 23345,\n\tTORMENTED_ORNAMENT_KIT = 23348,\n\tCAPE_OF_SKULLS = 23351,\n\tAMULET_OF_POWER_T = 23354,\n\tRAIN_BOW = 23357,\n\tHAM_JOINT = 23360,\n\tSTAFF_OF_BOB_THE_CAT = 23363,\n\tBLACK_PLATEBODY_H1 = 23366,\n\tBLACK_PLATEBODY_H2 = 23369,\n\tBLACK_PLATEBODY_H3 = 23372,\n\tBLACK_PLATEBODY_H4 = 23375,\n\tBLACK_PLATEBODY_H5 = 23378,\n\tLEATHER_BODY_G = 23381,\n\tLEATHER_CHAPS_G = 23384,\n\tWATSON_TELEPORT = 23387,\n\tSPIKED_MANACLES = 23389,\n\tADAMANT_PLATEBODY_H1 = 23392,\n\tADAMANT_PLATEBODY_H2 = 23395,\n\tADAMANT_PLATEBODY_H3 = 23398,\n\tADAMANT_PLATEBODY_H4 = 23401,\n\tADAMANT_PLATEBODY_H5 = 23404,\n\tWOLF_MASK = 23407,\n\tWOLF_CLOAK = 23410,\n\tCLIMBING_BOOTS_G = 23413,\n\tTORMENTED_BRACELET_OR = 23444,\n\tGIANT_EASTER_EGG = 23446,\n\tBUNNYMAN_MASK = 23448,\n\tLARRANS_KEY = 23490,\n\tSRARACHA = 23495,\n\tGRUBBY_KEY = 23499,\n\tTATTERED_MOON_PAGE = 23510,\n\tTATTERED_SUN_PAGE = 23512,\n\tTATTERED_TEMPLE_PAGE = 23514,\n\tGIANT_EGG_SACFULL = 23517,\n\tMASK_OF_RANUL = 23522,\n\tJAR_OF_EYES = 23525,\n\tSARACHNIS_CUDGEL = 23528,\n\tCRYSTAL_ACORN = 23661,\n\tDRAGONSTONE_ARMOUR_SET = 23667,\n\tCRYSTAL_AXE = 23673,\n\tCRYSTAL_PICKAXE = 23680,\n\tDIVINE_SUPER_COMBAT_POTION4 = 23685,\n\tDIVINE_SUPER_COMBAT_POTION3 = 23688,\n\tDIVINE_SUPER_COMBAT_POTION2 = 23691,\n\tDIVINE_SUPER_COMBAT_POTION1 = 23694,\n\tDIVINE_SUPER_ATTACK_POTION4 = 23697,\n\tDIVINE_SUPER_ATTACK_POTION3 = 23700,\n\tDIVINE_SUPER_ATTACK_POTION2 = 23703,\n\tDIVINE_SUPER_ATTACK_POTION1 = 23706,\n\tDIVINE_SUPER_STRENGTH_POTION4 = 23709,\n\tDIVINE_SUPER_STRENGTH_POTION3 = 23712,\n\tDIVINE_SUPER_STRENGTH_POTION2 = 23715,\n\tDIVINE_SUPER_STRENGTH_POTION1 = 23718,\n\tDIVINE_SUPER_DEFENCE_POTION4 = 23721,\n\tDIVINE_SUPER_DEFENCE_POTION3 = 23724,\n\tDIVINE_SUPER_DEFENCE_POTION2 = 23727,\n\tDIVINE_SUPER_DEFENCE_POTION1 = 23730,\n\tDIVINE_RANGING_POTION4 = 23733,\n\tDIVINE_RANGING_POTION3 = 23736,\n\tDIVINE_RANGING_POTION2 = 23739,\n\tDIVINE_RANGING_POTION1 = 23742,\n\tDIVINE_MAGIC_POTION4 = 23745,\n\tDIVINE_MAGIC_POTION3 = 23748,\n\tDIVINE_MAGIC_POTION2 = 23751,\n\tDIVINE_MAGIC_POTION1 = 23754,\n\tYOUNGLLEF = 23757,\n\tCORRUPTED_YOUNGLLEF = 23759,\n\tSMOLCANO = 23760,\n\tCRYSTAL_HARPOON = 23762,\n\tCRYSTAL_IMPLING_JAR = 23768,\n\tARDOUGNE_KNIGHT_HELM = 23785,\n\tARDOUGNE_KNIGHT_PLATEBODY = 23787,\n\tARDOUGNE_KNIGHT_PLATELEGS = 23789,\n\tGAUNTLET_CAPE = 23859,\n\tZALCANO_SHARD = 23908,\n\tELVEN_SIGNET = 23943,\n\tETERNAL_TELEPORT_CRYSTAL = 23946,\n\tELVEN_DAWN = 23948,\n\tENHANCED_CRYSTAL_KEY = 23951,\n\tCRYSTAL_TOOL_SEED = 23953,\n\tCRYSTAL_ARMOUR_SEED = 23956,\n\tENHANCED_CRYSTAL_TELEPORT_SEED = 23959,\n\tCRYSTAL_SHARD = 23962,\n\tCRYSTAL_HELM = 23971,\n\tCRYSTAL_BODY = 23975,\n\tCRYSTAL_LEGS = 23979,\n\tCRYSTAL_BOW = 23983,\n\tCRYSTAL_HALBERD = 23987,\n\tBLADE_OF_SAELDOR_INACTIVE = 23997,\n\tCRYSTAL_GRAIL = 24000,\n\tELVEN_BOOTS = 24003,\n\tELVEN_GLOVES = 24006,\n\tELVEN_LEGWEAR = 24024,\n\tDRAGONSTONE_FULL_HELM = 24034,\n\tDRAGONSTONE_PLATEBODY = 24037,\n\tDRAGONSTONE_PLATELEGS = 24040,\n\tDRAGONSTONE_BOOTS = 24043,\n\tDRAGONSTONE_GAUNTLETS = 24046,\n\tSTAFF_OF_BALANCE = 24144,\n\tTROUVER_PARCHMENT = 24187,\n\tARMADYL_HALO = 24192,\n\tBANDOS_HALO = 24195,\n\tSEREN_HALO = 24198,\n\tANCIENT_HALO = 24201,\n\tBRASSICA_HALO = 24204,\n\tVICTORS_CAPE_1 = 24207,\n\tVICTORS_CAPE_10 = 24209,\n\tVICTORS_CAPE_50 = 24211,\n\tVICTORS_CAPE_100 = 24213,\n\tVICTORS_CAPE_500 = 24215,\n\tGUTHIXIAN_ICON = 24217,\n\tSWIFT_BLADE = 24219,\n\tORNATE_MAUL_HANDLE = 24229,\n\tWILDERNESS_CRABS_TELEPORT = 24251,\n\tBASILISK_JAW = 24268,\n\tNEITIZNOT_FACEGUARD = 24271,\n\tDECORATIVE_EMBLEM = 24287,\n\tDAGONHAI_HAT = 24288,\n\tDAGONHAI_ROBE_TOP = 24291,\n\tDAGONHAI_ROBE_BOTTOM = 24294,\n\tSPOOKY_HOOD = 24300,\n\tSPOOKY_ROBE = 24301,\n\tSPOOKY_SKIRT = 24302,\n\tSPOOKY_GLOVES = 24303,\n\tSPOOKY_BOOTS = 24304,\n\tPUMPKIN_LANTERN = 24325,\n\tSKELETON_LANTERN = 24327,\n\tDAGONHAI_ROBES_SET = 24333,\n\tTARGET_TELEPORT = 24336,\n\tTWISTED_SLAYER_HELMET = 24370,\n\tTWISTED_DRAGON_TROPHY = 24372,\n\tTWISTED_RUNE_TROPHY = 24374,\n\tTWISTED_ADAMANT_TROPHY = 24376,\n\tTWISTED_MITHRIL_TROPHY = 24378,\n\tTWISTED_STEEL_TROPHY = 24380,\n\tTWISTED_IRON_TROPHY = 24382,\n\tTWISTED_BRONZE_TROPHY = 24384,\n\tTWISTED_HAT_T3 = 24387,\n\tTWISTED_COAT_T3 = 24389,\n\tTWISTED_TROUSERS_T3 = 24391,\n\tTWISTED_BOOTS_T3 = 24393,\n\tTWISTED_CANE = 24395,\n\tTWISTED_HAT_T2 = 24397,\n\tTWISTED_COAT_T2 = 24399,\n\tTWISTED_TROUSERS_T2 = 24401,\n\tTWISTED_BOOTS_T2 = 24403,\n\tTWISTED_HAT_T1 = 24405,\n\tTWISTED_COAT_T1 = 24407,\n\tTWISTED_TROUSERS_T1 = 24409,\n\tTWISTED_BOOTS_T1 = 24411,\n\tTWISTED_BANNER = 24413,\n\tINQUISITORS_MACE = 24417,\n\tINQUISITORS_GREAT_HELM = 24419,\n\tINQUISITORS_HAUBERK = 24420,\n\tINQUISITORS_PLATESKIRT = 24421,\n\tNIGHTMARE_STAFF = 24422,\n\tHARMONISED_NIGHTMARE_STAFF = 24423,\n\tVOLATILE_NIGHTMARE_STAFF = 24424,\n\tELDRITCH_NIGHTMARE_STAFF = 24425,\n\tGREEN_GINGERBREAD_SHIELD = 24428,\n\tRED_GINGERBREAD_SHIELD = 24430,\n\tBLUE_GINGERBREAD_SHIELD = 24431,\n\tTWISTED_SLAYER_HELMET_I = 24444,\n\tTWISTED_TELEPORT_SCROLL = 24460,\n\tTWISTED_BLUEPRINTS = 24463,\n\tTWISTED_HORNS = 24466,\n\tTWISTED_RELIC_HUNTER_T1_ARMOUR_SET = 24469,\n\tTWISTED_RELIC_HUNTER_T2_ARMOUR_SET = 24472,\n\tTWISTED_RELIC_HUNTER_T3_ARMOUR_SET = 24475,\n\tINQUISITORS_ARMOUR_SET = 24488,\n\tLITTLE_NIGHTMARE = 24491,\n\tJAR_OF_DREAMS = 24495,\n\tHARMONISED_ORB = 24511,\n\tVOLATILE_ORB = 24514,\n\tELDRITCH_ORB = 24517,\n\tVICTORS_CAPE_1000 = 24520,\n\tCAT_EARS = 24525,\n\tHELL_CAT_EARS = 24527,\n\tMAGIC_EGG_BALL = 24535,\n\tCARROT_SWORD = 24537,\n\t\"24CARAT_SWORD\" = 24539,\n\tCARROT = 24546,\n\tBLADE_OF_SAELDOR_C = 24551,\n\tLOOTING_BAG_NOTE = 24585,\n\tRUNE_POUCH_NOTE = 24587,\n\tBLIGHTED_MANTA_RAY = 24589,\n\tBLIGHTED_ANGLERFISH = 24592,\n\tBLIGHTED_KARAMBWAN = 24595,\n\tBLIGHTED_SUPER_RESTORE4 = 24598,\n\tBLIGHTED_SUPER_RESTORE3 = 24601,\n\tBLIGHTED_SUPER_RESTORE2 = 24603,\n\tBLIGHTED_SUPER_RESTORE1 = 24605,\n\tBLIGHTED_ANCIENT_ICE_SACK = 24607,\n\tBLIGHTED_ENTANGLE_SACK = 24613,\n\tBLIGHTED_TELEPORT_SPELL_SACK = 24615,\n\tVESTAS_LONGSWORD_INACTIVE = 24619,\n\tBLIGHTED_VENGEANCE_SACK = 24621,\n\tDIVINE_BATTLEMAGE_POTION4 = 24623,\n\tDIVINE_BATTLEMAGE_POTION3 = 24626,\n\tDIVINE_BATTLEMAGE_POTION2 = 24629,\n\tDIVINE_BATTLEMAGE_POTION1 = 24632,\n\tDIVINE_BASTION_POTION4 = 24635,\n\tDIVINE_BASTION_POTION3 = 24638,\n\tDIVINE_BASTION_POTION2 = 24641,\n\tDIVINE_BASTION_POTION1 = 24644,\n\tTWISTED_ANCESTRAL_HAT = 24664,\n\tTWISTED_ANCESTRAL_ROBE_TOP = 24666,\n\tTWISTED_ANCESTRAL_ROBE_BOTTOM = 24668,\n\tTWISTED_ANCESTRAL_COLOUR_KIT = 24670,\n\tBLISTERWOOD_FLAIL = 24699,\n\tDARK_SQUIRREL = 24701,\n\tDAEYALT_ESSENCE = 24704,\n\tDAEYALT_SHARD = 24706,\n\tHALLOWED_CRYSTAL_SHARD = 24709,\n\tHALLOWED_MARK = 24711,\n\tHALLOWED_TOKEN = 24719,\n\tHALLOWED_GRAPPLE = 24721,\n\tHALLOWED_FOCUS = 24723,\n\tHALLOWED_SYMBOL = 24725,\n\tHALLOWED_HAMMER = 24727,\n\tDARK_DYE = 24729,\n\tHALLOWED_RING = 24731,\n\tDARK_ACORN = 24733,\n\tRING_OF_ENDURANCE = 24736,\n\tSTRANGE_OLD_LOCKPICK = 24738,\n\tSTRANGE_OLD_LOCKPICK_FULL = 24740,\n\tSTRANGE_HALLOWED_TOME = 24761,\n\tBLOOD_PINT = 24774,\n\tBLOOD_SHARD = 24777,\n\tAMULET_OF_BLOOD_FURY = 24780,\n\tRAW_MYSTERY_MEAT = 24782,\n\tCOOKED_MYSTERY_MEAT = 24785,\n\tRING_OF_ENDURANCE_UNCHARGED = 24844,\n\tRED = 24847,\n\tZIGGY = 24849,\n\tMYTHICAL_MAX_CAPE = 24855,\n\tMYTHICAL_MAX_HOOD = 24857,\n\tKARAMJAN_MONKEY = 24862,\n\tZOMBIE_MONKEY = 24863,\n\tMANIACAL_MONKEY = 24864,\n\tSKELETON_MONKEY = 24865,\n\tKRUK_JR = 24866,\n\tPRINCELY_MONKEY = 24867,\n\tGOLDEN_ARMADYL_SPECIAL_ATTACK = 24868,\n\tGOLDEN_BANDOS_SPECIAL_ATTACK = 24869,\n\tGOLDEN_SARADOMIN_SPECIAL_ATTACK = 24870,\n\tGOLDEN_ZAMORAK_SPECIAL_ATTACK = 24871,\n\tCARPENTERS_HELMET = 24872,\n\tCARPENTERS_SHIRT = 24874,\n\tCARPENTERS_TROUSERS = 24876,\n\tCARPENTERS_BOOTS = 24878,\n\tAMYS_SAW = 24880,\n\tPLANK_SACK = 24882,\n\tSUPPLY_CRATE = 24884,\n\tHOSIDIUS_BLUEPRINTS = 24885,\n\tHALLOWED_SACK = 24946,\n\tMOONCLAN_TELEPORT = 24949,\n\tOURANIA_TELEPORT = 24951,\n\tWATERBIRTH_TELEPORT = 24953,\n\tBARBARIAN_TELEPORT = 24955,\n\tKHAZARD_TELEPORT = 24957,\n\tFISHING_GUILD_TELEPORT = 24959,\n\tCATHERBY_TELEPORT = 24961,\n\tICE_PLATEAU_TELEPORT = 24963,\n\tHEADLESS_HEAD = 24975,\n\tMAGICAL_PUMPKIN = 24977,\n\tTRAILBLAZER_HOOD_T3 = 25001,\n\tTRAILBLAZER_TOP_T3 = 25004,\n\tTRAILBLAZER_TROUSERS_T3 = 25007,\n\tTRAILBLAZER_BOOTS_T3 = 25010,\n\tTRAILBLAZER_CANE = 25013,\n\tTRAILBLAZER_HOOD_T2 = 25016,\n\tTRAILBLAZER_TOP_T2 = 25019,\n\tTRAILBLAZER_TROUSERS_T2 = 25022,\n\tTRAILBLAZER_BOOTS_T2 = 25025,\n\tTRAILBLAZER_HOOD_T1 = 25028,\n\tTRAILBLAZER_TOP_T1 = 25031,\n\tTRAILBLAZER_TROUSERS_T1 = 25034,\n\tTRAILBLAZER_BOOTS_T1 = 25037,\n\tTRAILBLAZER_DRAGON_TROPHY = 25042,\n\tTRAILBLAZER_RUNE_TROPHY = 25044,\n\tTRAILBLAZER_ADAMANT_TROPHY = 25046,\n\tTRAILBLAZER_MITHRIL_TROPHY = 25048,\n\tTRAILBLAZER_STEEL_TROPHY = 25050,\n\tTRAILBLAZER_IRON_TROPHY = 25052,\n\tTRAILBLAZER_BRONZE_TROPHY = 25054,\n\tTRAILBLAZER_BANNER = 25056,\n\tINFERNAL_HARPOON_OR = 25059,\n\tINFERNAL_PICKAXE_OR = 25063,\n\tINFERNAL_AXE_OR = 25066,\n\tTRAILBLAZER_TELEPORT_SCROLL = 25087,\n\tTRAILBLAZER_TOOL_ORNAMENT_KIT = 25090,\n\tTRAILBLAZER_GLOBE = 25093,\n\tTRAILBLAZER_RUG = 25096,\n\tTRAILBLAZER_GRACEFUL_ORNAMENT_KIT = 25099,\n\tBEEKEEPERS_HAT = 25129,\n\tBEEKEEPERS_TOP = 25131,\n\tBEEKEEPERS_LEGS = 25133,\n\tBEEKEEPERS_GLOVES = 25135,\n\tBEEKEEPERS_BOOTS = 25137,\n\tBONE_FRAGMENTS = 25139,\n\tSLED = 25282,\n\tGIANT_BOULDER = 25314,\n\tECTOPLASMATOR = 25340,\n\tSPOILS_OF_WAR = 25342,\n\tLIL_CREATOR = 25348,\n\tDRAGON_HARPOON_OR = 25373,\n\tDRAGON_AXE_OR = 25378,\n\tTRAILBLAZER_RELIC_HUNTER_T1_ARMOUR_SET = 25380,\n\tTRAILBLAZER_RELIC_HUNTER_T2_ARMOUR_SET = 25383,\n\tTRAILBLAZER_RELIC_HUNTER_T3_ARMOUR_SET = 25386,\n\tSWAMPBARK_BODY = 25389,\n\tSWAMPBARK_GAUNTLETS = 25392,\n\tSWAMPBARK_BOOTS = 25395,\n\tSWAMPBARK_HELM = 25398,\n\tSWAMPBARK_LEGS = 25401,\n\tBLOODBARK_BODY = 25404,\n\tBLOODBARK_GAUNTLETS = 25407,\n\tBLOODBARK_BOOTS = 25410,\n\tBLOODBARK_HELM = 25413,\n\tBLOODBARK_LEGS = 25416,\n\tURIUM_REMAINS = 25419,\n\tGOLD_KEY_RED = 25424,\n\tGOLD_KEY_BROWN = 25426,\n\tGOLD_KEY_CRIMSON = 25428,\n\tGOLD_KEY_BLACK = 25430,\n\tGOLD_KEY_PURPLE = 25432,\n\tZEALOTS_ROBE_TOP = 25434,\n\tZEALOTS_ROBE_BOTTOM = 25436,\n\tZEALOTS_HELM = 25438,\n\tZEALOTS_BOOTS = 25440,\n\tBRONZE_LOCKS = 25442,\n\tSTEEL_LOCKS = 25445,\n\tBLACK_LOCKS = 25448,\n\tSILVER_LOCKS = 25451,\n\tGOLD_LOCKS = 25454,\n\tBROKEN_COFFIN = 25457,\n\tBRONZE_COFFIN = 25459,\n\tSTEEL_COFFIN = 25461,\n\tBLACK_COFFIN = 25463,\n\tSILVER_COFFIN = 25465,\n\tGOLD_COFFIN = 25467,\n\tTREE_WIZARDS_JOURNAL = 25474,\n\tBLOODY_NOTES = 25476,\n\tRUNESCROLL_OF_SWAMPBARK = 25478,\n\tRUNESCROLL_OF_BLOODBARK = 25481,\n\tSOULREAPER_AXE = 25484,\n\tULTOR_RING = 25485,\n\tMAGUS_RING = 25486,\n\tVENATOR_RING = 25487,\n\tBELLATOR_RING = 25488,\n\tCURSED_BANANA = 25500,\n\tBANANA_CAPE = 25502,\n\tJAR_OF_SPIRITS = 25521,\n\tJAR_OF_SMOKE = 25524,\n\tSTARDUST = 25527,\n\tCELESTIAL_RING_UNCHARGED = 25539,\n\tCELESTIAL_RING = 25541,\n\tCELESTIAL_SIGNET = 25545,\n\tSTAR_FRAGMENT = 25547,\n\tGOLDEN_PROSPECTOR_HELMET = 25549,\n\tGOLDEN_PROSPECTOR_JACKET = 25551,\n\tGOLDEN_PROSPECTOR_LEGS = 25553,\n\tGOLDEN_PROSPECTOR_BOOTS = 25555,\n\tBIG_HARPOONFISH = 25559,\n\tTOME_OF_WATER_EMPTY = 25576,\n\tSOAKED_PAGE = 25578,\n\tTACKLE_BOX = 25580,\n\tFISH_BARREL = 25582,\n\tFISH_SACK_BARREL = 25585,\n\tSPIRIT_FLAKES = 25588,\n\tSPIRIT_ANGLER_HEADBAND = 25592,\n\tSPIRIT_ANGLER_TOP = 25594,\n\tSPIRIT_ANGLER_WADERS = 25596,\n\tSPIRIT_ANGLER_BOOTS = 25598,\n\tGREAT_BLUE_HERON = 25600,\n\tTINY_TEMPOR = 25602,\n\tGREGGS_EASTDOOR = 25604,\n\tPROPELLER_HAT = 25606,\n\tPASTEL_FLOWERS = 25609,\n\tBABY_MOLERAT = 25613,\n\tLARGE_WATER_CONTAINER = 25615,\n\tIMCANDO_HAMMER_BROKEN = 25633,\n\tBARRONITE_HEAD = 25635,\n\tBARRONITE_HANDLE = 25637,\n\tBARRONITE_GUARD = 25639,\n\tBARRONITE_MACE = 25641,\n\tIMCANDO_HAMMER = 25644,\n\tRAW_GUPPY = 25652,\n\tRAW_CAVEFISH = 25658,\n\tRAW_TETRA = 25664,\n\tRAW_CATFISH = 25670,\n\tBARRONITE_SHARDS = 25676,\n\tBARRONITE_DEPOSIT = 25684,\n\tANCIENT_GLOBE = 25686,\n\tANCIENT_LEDGER = 25688,\n\tANCIENT_ASTROSCOPE = 25690,\n\tANCIENT_TREATISE = 25692,\n\tANCIENT_CARCANET = 25694,\n\tMIND_CORE = 25696,\n\tBODY_CORE = 25698,\n\tCHAOS_CORE = 25700,\n\tHOLY_SANGUINESTI_STAFF = 25731,\n\tHOLY_SANGUINESTI_STAFF_UNCHARGED = 25733,\n\tHOLY_GHRAZI_RAPIER = 25734,\n\tHOLY_SCYTHE_OF_VITUR = 25736,\n\tHOLY_SCYTHE_OF_VITUR_UNCHARGED = 25738,\n\tSANGUINE_SCYTHE_OF_VITUR = 25739,\n\tSANGUINE_SCYTHE_OF_VITUR_UNCHARGED = 25741,\n\tHOLY_ORNAMENT_KIT = 25742,\n\tSANGUINE_ORNAMENT_KIT = 25744,\n\tSANGUINE_DUST = 25746,\n\tLIL_MAIDEN = 25748,\n\tLIL_BLOAT = 25749,\n\tLIL_NYLO = 25750,\n\tLIL_SOT = 25751,\n\tLIL_XARP = 25752,\n\tFIENDISH_ASHES = 25766,\n\tVILE_ASHES = 25769,\n\tMALICIOUS_ASHES = 25772,\n\tABYSSAL_ASHES = 25775,\n\tINFERNAL_ASHES = 25778,\n\tASH_SANCTIFIER = 25781,\n\tLIZARDKICKER = 25826,\n\tRAW_BOAR_MEAT = 25833,\n\tLITTLE_PARASITE = 25836,\n\tSLEPEY_TABLET = 25837,\n\tPARASITIC_EGG = 25838,\n\tBANANA_HAT = 25840,\n\tORANGE_EGG_SAC = 25844,\n\tBLUE_EGG_SAC = 25846,\n\tAMETHYST_DART = 25849,\n\tAMETHYST_DART_TIP = 25853,\n\tENHANCED_CRYSTAL_WEAPON_SEED = 25859,\n\tBOW_OF_FAERDHINEN_INACTIVE = 25862,\n\tBOW_OF_FAERDHINEN_C = 25867,\n\tTZTOK_SLAYER_HELMET = 25898,\n\tTZTOK_SLAYER_HELMET_I = 25900,\n\tVAMPYRIC_SLAYER_HELMET = 25904,\n\tVAMPYRIC_SLAYER_HELMET_I = 25906,\n\tTZKAL_SLAYER_HELMET = 25910,\n\tTZKAL_SLAYER_HELMET_I = 25912,\n\tDRAGON_HUNTER_CROSSBOW_T = 25916,\n\tDRAGON_HUNTER_CROSSBOW_B = 25918,\n\tGHOMMALS_HILT_1 = 25926,\n\tGHOMMALS_HILT_2 = 25928,\n\tGHOMMALS_HILT_3 = 25930,\n\tGHOMMALS_HILT_4 = 25932,\n\tGHOMMALS_HILT_5 = 25934,\n\tGHOMMALS_HILT_6 = 25936,\n\tLIGHTBEARER = 25975,\n\tKERIS_PARTISAN = 25979,\n\tKERIS_PARTISAN_OF_BREACHING = 25981,\n\tELIDINIS_WARD = 25985,\n\tSIGIL_OF_RESILIENCE = 25991,\n\tSIGIL_OF_CONSISTENCY = 25994,\n\tSIGIL_OF_THE_FORMIDABLE_FIGHTER = 25997,\n\tSIGIL_OF_THE_RIGOROUS_RANGER = 26000,\n\tSIGIL_OF_THE_METICULOUS_MAGE = 26003,\n\tSIGIL_OF_FORTIFICATION = 26006,\n\tSIGIL_OF_BARROWS = 26009,\n\tSIGIL_OF_DEFT_STRIKES = 26012,\n\tSIGIL_OF_FREEDOM = 26015,\n\tSIGIL_OF_ENHANCED_HARVEST = 26018,\n\tSIGIL_OF_STORAGE = 26021,\n\tSIGIL_OF_THE_SMITH = 26024,\n\tSIGIL_OF_THE_ALCHEMIST = 26027,\n\tSIGIL_OF_THE_FLETCHER = 26030,\n\tSIGIL_OF_THE_CHEF = 26033,\n\tSIGIL_OF_THE_CRAFTSMAN = 26036,\n\tSIGIL_OF_THE_ABYSS = 26039,\n\tSIGIL_OF_STAMINA = 26042,\n\tSIGIL_OF_THE_POTION_MASTER = 26045,\n\tSIGIL_OF_THE_ETERNAL_JEWELLER = 26048,\n\tSIGIL_OF_THE_TREASURE_HUNTER = 26051,\n\tSIGIL_OF_MOBILITY = 26054,\n\tSIGIL_OF_EXAGGERATION = 26057,\n\tSIGIL_OF_SPECIALISED_STRIKES = 26060,\n\tSIGIL_OF_THE_PORCUPINE = 26063,\n\tSIGIL_OF_BINDING = 26066,\n\tSIGIL_OF_ESCAPING = 26069,\n\tSIGIL_OF_THE_RUTHLESS_RANGER = 26072,\n\tSIGIL_OF_THE_FERAL_FIGHTER = 26075,\n\tSIGIL_OF_THE_MENACING_MAGE = 26078,\n\tSIGIL_OF_PROSPERITY = 26081,\n\tSIGIL_OF_THE_DWARVES = 26084,\n\tSIGIL_OF_THE_ELVES = 26087,\n\tSIGIL_OF_THE_BARBARIANS = 26090,\n\tSIGIL_OF_THE_GNOMES = 26093,\n\tSIGIL_OF_NATURE = 26096,\n\tSIGIL_OF_DEVOTION = 26099,\n\tSIGIL_OF_THE_FORAGER = 26102,\n\tSIGIL_OF_GARMENTS = 26105,\n\tSIGIL_OF_SLAUGHTER = 26108,\n\tSIGIL_OF_THE_FORTUNE_FARMER = 26111,\n\tSIGIL_OF_VERSATILITY = 26114,\n\tSIGIL_OF_THE_SERPENT = 26117,\n\tSIGIL_OF_SUPREME_STAMINA = 26120,\n\tSIGIL_OF_PRESERVATION = 26123,\n\tSIGIL_OF_FINALITY = 26126,\n\tSIGIL_OF_PIOUS_PROTECTION = 26129,\n\tSIGIL_OF_AGGRESSION = 26132,\n\tSIGIL_OF_RAMPAGE = 26135,\n\tSIGIL_OF_THE_SKILLER = 26138,\n\tSIGIL_OF_REMOTE_STORAGE = 26141,\n\tSIGIL_OF_LAST_RECALL = 26144,\n\tSIGIL_OF_THE_GUARDIAN_ANGEL = 26147,\n\tOSMUMTENS_FANG = 26219,\n\tANCIENT_CEREMONIAL_TOP = 26221,\n\tANCIENT_CEREMONIAL_LEGS = 26223,\n\tANCIENT_CEREMONIAL_MASK = 26225,\n\tANCIENT_CEREMONIAL_GLOVES = 26227,\n\tANCIENT_CEREMONIAL_BOOTS = 26229,\n\tNIHIL_SHARD = 26231,\n\tANCIENT_GODSWORD = 26233,\n\tZARYTE_VAMBRACES = 26235,\n\tVIRTUS_MASK = 26241,\n\tVIRTUS_ROBE_TOP = 26243,\n\tVIRTUS_ROBE_BOTTOM = 26245,\n\tSAUCEPAN = 26254,\n\tUGLY_HALLOWEEN_JUMPER_ORANGE = 26256,\n\tUGLY_HALLOWEEN_JUMPER_BLACK = 26258,\n\tHAUNTED_WINE_BOTTLE = 26260,\n\tCONDENSED_GOLD = 26266,\n\tPINK_STAINED_PLATEBODY = 26280,\n\tPINK_STAINED_PLATELEGS = 26282,\n\tPINK_STAINED_FULL_HELM = 26284,\n\tSECRET_SANTA_PRESENT = 26298,\n\tFESTIVE_ELF_SLIPPERS = 26310,\n\tFESTIVE_ELF_HAT = 26312,\n\tSNOWMAN_RING = 26314,\n\tANCIENT_BREW4 = 26340,\n\tANCIENT_BREW3 = 26342,\n\tANCIENT_BREW2 = 26344,\n\tANCIENT_BREW1 = 26346,\n\tNEXLING = 26348,\n\tANCIENT_MIX2 = 26350,\n\tANCIENT_MIX1 = 26353,\n\tFROZEN_KEY = 26356,\n\tFROZEN_KEY_PIECE_ARMADYL = 26358,\n\tFROZEN_KEY_PIECE_BANDOS = 26360,\n\tFROZEN_KEY_PIECE_ZAMORAK = 26362,\n\tFROZEN_KEY_PIECE_SARADOMIN = 26364,\n\tNIHIL_DUST = 26368,\n\tANCIENT_HILT = 26370,\n\tNIHIL_HORN = 26372,\n\tZARYTE_CROSSBOW = 26374,\n\tTORVA_FULL_HELM_DAMAGED = 26376,\n\tTORVA_PLATEBODY_DAMAGED = 26378,\n\tTORVA_PLATELEGS_DAMAGED = 26380,\n\tTORVA_FULL_HELM = 26382,\n\tTORVA_PLATEBODY = 26384,\n\tTORVA_PLATELEGS = 26386,\n\tECUMENICAL_KEY_SHARD = 26388,\n\tBLOOD_ESSENCE = 26390,\n\tBANDOSIAN_COMPONENTS = 26394,\n\tSHATTERED_RELICS_VARIETY_ORNAMENT_KIT = 26421,\n\tSHATTERED_BANNER = 26424,\n\tSHATTERED_HOOD_T1 = 26427,\n\tSHATTERED_TOP_T1 = 26430,\n\tSHATTERED_TROUSERS_T1 = 26433,\n\tSHATTERED_BOOTS_T1 = 26436,\n\tSHATTERED_HOOD_T2 = 26439,\n\tSHATTERED_TOP_T2 = 26442,\n\tSHATTERED_TROUSERS_T2 = 26445,\n\tSHATTERED_BOOTS_T2 = 26448,\n\tSHATTERED_HOOD_T3 = 26451,\n\tSHATTERED_TOP_T3 = 26454,\n\tSHATTERED_TROUSERS_T3 = 26457,\n\tSHATTERED_BOOTS_T3 = 26460,\n\tVOID_KNIGHT_TOP_OR = 26463,\n\tVOID_KNIGHT_ROBE_OR = 26465,\n\tVOID_KNIGHT_GLOVES_OR = 26467,\n\tELITE_VOID_TOP_OR = 26469,\n\tELITE_VOID_ROBE_OR = 26471,\n\tVOID_MAGE_HELM_OR = 26473,\n\tVOID_RANGER_HELM_OR = 26475,\n\tVOID_MELEE_HELM_OR = 26477,\n\tSHATTERED_RELICS_VOID_ORNAMENT_KIT = 26479,\n\tABYSSAL_WHIP_OR = 26482,\n\tABYSSAL_TENTACLE_OR = 26484,\n\tRUNE_CROSSBOW_OR = 26486,\n\tBOOK_OF_BALANCE_OR = 26488,\n\tBOOK_OF_DARKNESS_OR = 26490,\n\tBOOK_OF_LAW_OR = 26492,\n\tBOOK_OF_WAR_OR = 26494,\n\tHOLY_BOOK_OR = 26496,\n\tUNHOLY_BOOK_OR = 26498,\n\tSHATTERED_TELEPORT_SCROLL = 26500,\n\tSHATTERED_CANE = 26517,\n\tCANNON_BASE_OR = 26520,\n\tCANNON_STAND_OR = 26522,\n\tCANNON_BARRELS_OR = 26524,\n\tCANNON_FURNACE_OR = 26526,\n\tSHATTERED_CANNON_ORNAMENT_KIT = 26528,\n\tMYSTIC_HAT_OR = 26531,\n\tMYSTIC_ROBE_TOP_OR = 26533,\n\tMYSTIC_ROBE_BOTTOM_OR = 26535,\n\tMYSTIC_GLOVES_OR = 26537,\n\tMYSTIC_BOOTS_OR = 26539,\n\tSHATTERED_RELICS_MYSTIC_ORNAMENT_KIT = 26541,\n\tSHATTERED_RELIC_HUNTER_T1_ARMOUR_SET = 26554,\n\tSHATTERED_RELIC_HUNTER_T2_ARMOUR_SET = 26557,\n\tSHATTERED_RELIC_HUNTER_T3_ARMOUR_SET = 26560,\n\tOSMANS_REPORT = 26602,\n\tCOLOSSAL_POUCH = 26784,\n\tGOLD_TIARA = 26788,\n\tABYSSAL_PEARLS = 26792,\n\tCATALYTIC_TALISMAN = 26798,\n\tCATALYTIC_TIARA = 26801,\n\tELEMENTAL_TIARA = 26804,\n\tABYSSAL_GREEN_DYE = 26807,\n\tABYSSAL_BLUE_DYE = 26809,\n\tABYSSAL_RED_DYE = 26811,\n\tABYSSAL_NEEDLE = 26813,\n\tRING_OF_THE_ELEMENTS = 26815,\n\tGUARDIANS_EYE = 26820,\n\tABYSSAL_LANTERN = 26822,\n\tHAT_OF_THE_EYE = 26850,\n\tROBE_TOP_OF_THE_EYE = 26852,\n\tROBE_BOTTOMS_OF_THE_EYE = 26854,\n\tBOOTS_OF_THE_EYE = 26856,\n\tHAT_OF_THE_EYE_RED = 26858,\n\tROBE_TOP_OF_THE_EYE_RED = 26860,\n\tROBE_BOTTOMS_OF_THE_EYE_RED = 26862,\n\tHAT_OF_THE_EYE_GREEN = 26864,\n\tROBE_TOP_OF_THE_EYE_GREEN = 26866,\n\tROBE_BOTTOMS_OF_THE_EYE_GREEN = 26868,\n\tHAT_OF_THE_EYE_BLUE = 26870,\n\tROBE_TOP_OF_THE_EYE_BLUE = 26872,\n\tROBE_BOTTOMS_OF_THE_EYE_BLUE = 26874,\n\tATLAXS_DIARY = 26876,\n\tGREATISH_GUARDIAN = 26899,\n\tABYSSAL_PROTECTOR = 26901,\n\tINTRICATE_POUCH = 26908,\n\tTARNISHED_LOCKET = 26910,\n\tLOST_BAG = 26912,\n\tEASTER_HAT = 26937,\n\tCRATE_RING = 26939,\n\tDOUBLE_AMMO_MOULD = 27012,\n\tKOVACS_GROG = 27014,\n\tSMITHING_CATALYST = 27017,\n\tCOLOSSAL_BLADE = 27021,\n\tSMITHS_TUNIC = 27023,\n\tSMITHS_TROUSERS = 27025,\n\tSMITHS_BOOTS = 27027,\n\tSMITHS_GLOVES = 27029,\n\tMENAPHITE_REMEDY4 = 27202,\n\tMENAPHITE_REMEDY3 = 27205,\n\tMENAPHITE_REMEDY2 = 27208,\n\tMENAPHITE_REMEDY1 = 27211,\n\tMASORI_MASK = 27226,\n\tMASORI_BODY = 27229,\n\tMASORI_CHAPS = 27232,\n\tMASORI_MASK_F = 27235,\n\tMASORI_BODY_F = 27238,\n\tMASORI_CHAPS_F = 27241,\n\tOSMUMTENS_FANG_OR = 27246,\n\tCURSED_PHALANX = 27248,\n\tELIDINIS_WARD_F = 27251,\n\tELIDINIS_WARD_OR = 27253,\n\tMENAPHITE_ORNAMENT_KIT = 27255,\n\tICTHLARINS_SHROUD_TIER_1 = 27257,\n\tICTHLARINS_SHROUD_TIER_2 = 27259,\n\tICTHLARINS_SHROUD_TIER_3 = 27261,\n\tICTHLARINS_SHROUD_TIER_4 = 27263,\n\tICTHLARINS_SHROUD_TIER_5 = 27265,\n\tICTHLARINS_HOOD_TIER_5 = 27267,\n\tARMADYLEAN_PLATE = 27269,\n\tLILY_OF_THE_SANDS = 27272,\n\tTUMEKENS_SHADOW = 27275,\n\tTUMEKENS_SHADOW_UNCHARGED = 27277,\n\tTHREAD_OF_ELIDINIS = 27279,\n\tDIVINE_RUNE_POUCH = 27281,\n\tBREACH_OF_THE_SCARAB = 27283,\n\tEYE_OF_THE_CORRUPTOR = 27285,\n\tKERIS_PARTISAN_OF_CORRUPTION = 27287,\n\tJEWEL_OF_THE_SUN = 27289,\n\tKERIS_PARTISAN_OF_THE_SUN = 27291,\n\tCACHE_OF_RUNES = 27293,\n\tTUMEKENS_GUARDIAN = 27352,\n\tMASORI_ARMOUR_SET_F = 27355,\n\tMASORI_ASSEMBLER_MAX_CAPE = 27363,\n\tMASORI_ASSEMBLER_MAX_HOOD = 27366,\n\tMASK_OF_REBIRTH = 27370,\n\tMASORI_CRAFTING_KIT = 27372,\n\tMASORI_ASSEMBLER = 27374,\n\tREMNANT_OF_AKKHA = 27377,\n\tREMNANT_OF_BABA = 27378,\n\tREMNANT_OF_KEPHRI = 27379,\n\tREMNANT_OF_ZEBAK = 27380,\n\tANCIENT_REMNANT = 27381,\n\tAKKHITO = 27382,\n\tBABI = 27383,\n\tKEPHRITI = 27384,\n\tZEBO = 27385,\n\tTUMEKENS_DAMAGED_GUARDIAN = 27386,\n\tELIDINIS_DAMAGED_GUARDIAN = 27387,\n\tWITCH_HAT = 27473,\n\tWITCH_TOP = 27475,\n\tWITCH_ROBES = 27477,\n\tWITCH_BOOTS = 27479,\n\tWITCH_CAPE = 27481,\n\tHALLOWEEN_WIG = 27497,\n\tGHOMMALS_LUCKY_PENNY = 27544,\n\tGHOMMALS_AVERNIC_DEFENDER_5 = 27550,\n\tGHOMMALS_AVERNIC_DEFENDER_6 = 27552,\n\tSACK_OF_COAL = 27558,\n\tEGGNOG = 27563,\n\tSANTAS_LIST = 27564,\n\tCHRISTMAS_JUMPER = 27566,\n\tSNOW_GOGGLES_HAT = 27568,\n\tFESTIVE_NUTCRACKER_TOP = 27572,\n\tFESTIVE_NUTCRACKER_TROUSERS = 27574,\n\tFESTIVE_NUTCRACKER_HAT = 27576,\n\tFESTIVE_NUTCRACKER_BOOTS = 27578,\n\tFESTIVE_NUTCRACKER_STAFF = 27580,\n\tSWEET_NUTCRACKER_TOP = 27582,\n\tSWEET_NUTCRACKER_TROUSERS = 27583,\n\tSWEET_NUTCRACKER_HAT = 27584,\n\tSWEET_NUTCRACKER_BOOTS = 27585,\n\tSWEET_NUTCRACKER_STAFF = 27586,\n\tFESTIVE_GAMES_CROWN = 27588,\n\tMUPHIN = 27590,\n\tVENATOR_BOW = 27610,\n\tVENATOR_BOW_UNCHARGED = 27612,\n\tVENATOR_SHARD = 27614,\n\tANCIENT_ESSENCE = 27616,\n\tFROZEN_CACHE = 27622,\n\tANCIENT_ICON = 27627,\n\tFORGOTTEN_BREW4 = 27629,\n\tFORGOTTEN_BREW3 = 27632,\n\tFORGOTTEN_BREW2 = 27635,\n\tFORGOTTEN_BREW1 = 27638,\n\tSATURATED_HEART = 27641,\n\tCHARGED_ICE = 27643,\n\tWEBWEAVER_BOW_U = 27652,\n\tWEBWEAVER_BOW = 27655,\n\tURSINE_CHAINMACE_U = 27657,\n\tURSINE_CHAINMACE = 27660,\n\tACCURSED_SCEPTRE_U = 27662,\n\tACCURSED_SCEPTRE = 27665,\n\tCLAWS_OF_CALLISTO = 27667,\n\tFANGS_OF_VENENATIS = 27670,\n\tSKULL_OF_VETION = 27673,\n\tACCURSED_SCEPTRE_AU = 27676,\n\tVOIDWAKER_HILT = 27681,\n\tVOIDWAKER_BLADE = 27684,\n\tVOIDWAKER_GEM = 27687,\n\tVOIDWAKER = 27690,\n\tDRAGON_PICKAXE_BROKEN = 27695,\n\tTHAMMARONS_SCEPTRE_AU = 27785,\n\tSCALY_BLUE_DRAGONHIDE = 27897,\n\tANIMAINFUSED_BARK = 28134,\n\tFORESTRY_KIT = 28136,\n\tFUNKY_SHAPED_LOG = 28138,\n\tLOG_BASKET = 28140,\n\tFORESTRY_BASKET = 28143,\n\tLOG_BRACE = 28146,\n\tSTURDY_HARNESS = 28149,\n\tNATURE_OFFERINGS = 28152,\n\tRITUAL_MULCH = 28154,\n\tFORESTERS_RATION = 28157,\n\tSECATEURS_BLADE = 28159,\n\tSECATEURS_ATTACHMENT = 28161,\n\tCLOTHES_POUCH = 28163,\n\tCLOTHES_POUCH_BLUEPRINT = 28166,\n\tFORESTRY_TOP = 28169,\n\tFORESTRY_LEGS = 28171,\n\tFORESTRY_HAT = 28173,\n\tFORESTRY_BOOTS = 28175,\n\tFELLING_AXE_HANDLE = 28177,\n\tLEPRECHAUN_CHARM = 28179,\n\tCLOVER_INSIGNIA = 28181,\n\tBEE_ON_A_STICK = 28184,\n\tPOWDERED_POLLEN = 28190,\n\tUNFIRED_CUP = 28193,\n\tBRONZE_FELLING_AXE = 28196,\n\tIRON_FELLING_AXE = 28199,\n\tSTEEL_FELLING_AXE = 28202,\n\tBLACK_FELLING_AXE = 28205,\n\tMITHRIL_FELLING_AXE = 28208,\n\tADAMANT_FELLING_AXE = 28211,\n\tRUNE_FELLING_AXE = 28214,\n\tDRAGON_FELLING_AXE = 28217,\n\tCRYSTAL_FELLING_AXE = 28220,\n\tTHIRD_AGE_FELLING_AXE = 28226,\n\tWISP = 28246,\n\tBUTCH = 28248,\n\tBARON = 28250,\n\tLILVIATHAN = 28252,\n\tSANGUINE_TORVA_FULL_HELM = 28254,\n\tSANGUINE_TORVA_PLATEBODY = 28256,\n\tSANGUINE_TORVA_PLATELEGS = 28258,\n\tBLOOD_QUARTZ = 28268,\n\tICE_QUARTZ = 28270,\n\tSHADOW_QUARTZ = 28272,\n\tSMOKE_QUARTZ = 28274,\n\tCHROMIUM_INGOT = 28276,\n\tBELLATOR_VESTIGE = 28279,\n\tMAGUS_VESTIGE = 28281,\n\tVENATOR_VESTIGE = 28283,\n\tULTOR_VESTIGE = 28285,\n\tULTOR_ICON = 28287,\n\tVENATOR_ICON = 28289,\n\tMAGUS_ICON = 28291,\n\tBELLATOR_ICON = 28293,\n\tBERSERKER_ICON = 28295,\n\tARCHER_ICON = 28298,\n\tWARRIOR_ICON = 28301,\n\tSEERS_ICON = 28304,\n\tEXECUTIONERS_AXE_HEAD = 28319,\n\tEYE_OF_THE_DUKE = 28321,\n\tSIRENS_STAFF = 28323,\n\tLEVIATHANS_LURE = 28325,\n\tRING_OF_SHADOWS = 28327,\n\tSTRANGLED_TABLET = 28330,\n\tSIRENIC_TABLET = 28331,\n\tSCARRED_TABLET = 28332,\n\tFROZEN_TABLET = 28333,\n\tAWAKENERS_ORB = 28334,\n\tANCIENT_BLOOD_ORNAMENT_KIT = 28336,\n\tANCIENT_LAMP = 28409,\n\tSIGIL_OF_SUSTENANCE = 28478,\n\tSIGIL_OF_HOARDING = 28481,\n\tSIGIL_OF_THE_ALCHEMANIAC = 28484,\n\tSIGIL_OF_THE_HUNTER = 28487,\n\tSIGIL_OF_RESISTANCE = 28490,\n\tSIGIL_OF_AGILE_FORTUNE = 28493,\n\tSIGIL_OF_THE_FOOD_MASTER = 28496,\n\tSIGIL_OF_THE_WELLFED = 28499,\n\tSIGIL_OF_THE_INFERNAL_CHEF = 28502,\n\tSIGIL_OF_THE_INFERNAL_SMITH = 28505,\n\tSIGIL_OF_THE_LIGHTBEARER = 28508,\n\tSIGIL_OF_THE_BLOODHOUND = 28511,\n\tSIGIL_OF_PRECISION = 28514,\n\tSIGIL_OF_THE_AUGMENTED_THRALL = 28517,\n\tSIGIL_OF_FAITH = 28520,\n\tSIGIL_OF_TITANIUM = 28523,\n\tSIGIL_OF_THE_NINJA = 28526,\n\tSIGIL_OF_WOODCRAFT = 28529,\n\tCORRUPTED_VOIDWAKER = 28531,\n\tCORRUPTED_DRAGON_CLAWS = 28534,\n\tCORRUPTED_ARMADYL_GODSWORD = 28537,\n\tCORRUPTED_TWISTED_BOW = 28540,\n\tCORRUPTED_SCYTHE_OF_VITUR_UNCHARGED = 28545,\n\tCORRUPTED_TUMEKENS_SHADOW_UNCHARGED = 28549,\n\tTRINKET_OF_VENGEANCE = 28561,\n\tTRINKET_OF_FAIRIES = 28564,\n\tTRINKET_OF_ADVANCED_WEAPONRY = 28567,\n\tTRINKET_OF_UNDEAD = 28570,\n\tWARPED_SCEPTRE_UNCHARGED = 28583,\n\tMAGIC_LAMP_STRENGTH = 28587,\n\tMAGIC_LAMP_SLAYER = 28588,\n\tMAGIC_LAMP_THIEVING = 28589,\n\tMAGIC_LAMP_MAGIC = 28590,\n\tCAPE_POUCH = 28613,\n\tPHEASANT_CAPE = 28616,\n\tPHEASANT_BOOTS = 28618,\n\tPHEASANT_HAT = 28620,\n\tPHEASANT_LEGS = 28622,\n\tPHEASANT_TAIL_FEATHERS = 28624,\n\tFOX_WHISTLE = 28626,\n\tSAWMILL_VOUCHER = 28628,\n\tTWITCHERS_GLOVES = 28630,\n\tPETAL_GARLAND = 28655,\n\tGOLDEN_PHEASANT_EGG = 28663,\n\tPHEASANT = 28669,\n\tFOX = 28670,\n\tSTURDY_BEEHIVE_PARTS = 28674,\n\tTRAILBLAZER_RELOADED_BULWARK_ORNAMENT_KIT = 28684,\n\tTRAILBLAZER_RELOADED_BLOWPIPE_ORNAMENT_KIT = 28690,\n\tTRAILBLAZER_RELOADED_ALCHEMY_SCROLL = 28693,\n\tTRAILBLAZER_RELOADED_VENGEANCE_SCROLL = 28696,\n\tTRAILBLAZER_RELOADED_DEATH_SCROLL = 28699,\n\tTRAILBLAZER_RELOADED_BANNER = 28702,\n\tTRAILBLAZER_RELOADED_HOME_TELEPORT_SCROLL = 28705,\n\tTRAILBLAZER_RELOADED_REJUVENATION_POOL_SCROLL = 28708,\n\tTRAILBLAZER_RELOADED_HEADBAND_T1 = 28712,\n\tTRAILBLAZER_RELOADED_TOP_T1 = 28715,\n\tTRAILBLAZER_RELOADED_TROUSERS_T1 = 28718,\n\tTRAILBLAZER_RELOADED_BOOTS_T1 = 28721,\n\tTRAILBLAZER_RELOADED_HEADBAND_T2 = 28724,\n\tTRAILBLAZER_RELOADED_TOP_T2 = 28727,\n\tTRAILBLAZER_RELOADED_TROUSERS_T2 = 28730,\n\tTRAILBLAZER_RELOADED_BOOTS_T2 = 28733,\n\tTRAILBLAZER_RELOADED_HEADBAND_T3 = 28736,\n\tTRAILBLAZER_RELOADED_TOP_T3 = 28739,\n\tTRAILBLAZER_RELOADED_TROUSERS_T3 = 28742,\n\tTRAILBLAZER_RELOADED_BOOTS_T3 = 28745,\n\tTRAILBLAZER_RELOADED_TORCH = 28748,\n\tTRAILBLAZER_RELOADED_RELIC_HUNTER_T1_ARMOUR_SET = 28777,\n\tTRAILBLAZER_RELOADED_RELIC_HUNTER_T2_ARMOUR_SET = 28780,\n\tTRAILBLAZER_RELOADED_RELIC_HUNTER_T3_ARMOUR_SET = 28783,\n\tKOUREND_CASTLE_TELEPORT = 28790,\n\tBONE_MACE = 28792,\n\tBONE_SHORTBOW = 28794,\n\tBONE_STAFF = 28796,\n\tSCURRIUS_SPINE = 28798,\n\tSCURRY = 28801,\n\tZOMBIE_AXE = 28810,\n\tBROKEN_ZOMBIE_AXE = 28813,\n\tCIVITAS_ILLA_FORTIS_TELEPORT = 28824,\n\tIMMATURE_TECU_SALAMANDER = 28831,\n\tTECU_SALAMANDER = 28834,\n\tIRIT_TAR = 28837,\n\tHUNTERS_SUNLIGHT_CROSSBOW = 28869,\n\tSUNLIGHT_ANTLER_BOLTS = 28872,\n\tMOONLIGHT_ANTLER_BOLTS = 28878,\n\tSUNLIGHT_MOTH = 28890,\n\tMOONLIGHT_MOTH = 28893,\n\tWYRMLING_BONES = 28899,\n\tDIZANAS_MAX_CAPE = 28902,\n\tDIZANAS_MAX_HOOD = 28904,\n\tTONALZTICS_OF_RALOS_UNCHARGED = 28919,\n\tSUNFIRE_SPLINTERS = 28924,\n\tSUNFIRE_RUNE = 28929,\n\tSEARING_PAGE = 28931,\n\tSUNFIRE_FANATIC_HELM = 28933,\n\tSUNFIRE_FANATIC_CUIRASS = 28936,\n\tSUNFIRE_FANATIC_CHAUSSES = 28939,\n\tECHO_CRYSTAL = 28942,\n\tDIZANAS_QUIVER_UNCHARGED = 28947,\n\tBLESSED_DIZANAS_QUIVER = 28955,\n\tSMOL_HEREDIT = 28960,\n\tBLUE_MOON_SPEAR = 28988,\n\tATLATL_DART = 28991,\n\tDUAL_MACUAHUITL = 28997,\n\tECLIPSE_ATLATL = 29000,\n\tECLIPSE_MOON_CHESTPLATE = 29004,\n\tECLIPSE_MOON_TASSETS = 29007,\n\tECLIPSE_MOON_HELM = 29010,\n\tBLUE_MOON_CHESTPLATE = 29013,\n\tBLUE_MOON_TASSETS = 29016,\n\tBLUE_MOON_HELM = 29019,\n\tBLOOD_MOON_CHESTPLATE = 29022,\n\tBLOOD_MOON_TASSETS = 29025,\n\tBLOOD_MOON_HELM = 29028,\n\tECLIPSE_MOON_CHESTPLATE_BROKEN = 29049,\n\tECLIPSE_MOON_TASSETS_BROKEN = 29052,\n\tECLIPSE_MOON_HELM_BROKEN = 29055,\n\tBLUE_MOON_CHESTPLATE_BROKEN = 29058,\n\tBLUE_MOON_TASSETS_BROKEN = 29061,\n\tBLUE_MOON_HELM_BROKEN = 29064,\n\tBLOOD_MOON_CHESTPLATE_BROKEN = 29067,\n\tBLOOD_MOON_TASSETS_BROKEN = 29070,\n\tBLOOD_MOON_HELM_BROKEN = 29073,\n\tSULPHUR_BLADES = 29084,\n\tCALCIFIED_MOTH = 29090,\n\tRAW_BARBTAILED_KEBBIT = 29101,\n\tRAW_WILD_KEBBIT = 29104,\n\tRAW_DASHING_KEBBIT = 29107,\n\tRAW_PYRE_FOX = 29110,\n\tRAW_MOONLIGHT_ANTELOPE = 29113,\n\tRAW_SUNLIGHT_ANTELOPE = 29116,\n\tRAW_GRAAHK = 29119,\n\tRAW_LARUPIA = 29122,\n\tRAW_KYATT = 29125,\n\tCOOKED_WILD_KEBBIT = 29128,\n\tCOOKED_BARBTAILED_KEBBIT = 29131,\n\tCOOKED_DASHING_KEBBIT = 29134,\n\tCOOKED_PYRE_FOX = 29137,\n\tCOOKED_SUNLIGHT_ANTELOPE = 29140,\n\tCOOKED_MOONLIGHT_ANTELOPE = 29143,\n\tCOOKED_LARUPIA = 29146,\n\tCOOKED_GRAAHK = 29149,\n\tCOOKED_KYATT = 29152,\n\tFOX_FUR = 29163,\n\tJERBOA_TAIL = 29166,\n\tSUNLIGHT_ANTELOPE_ANTLER = 29168,\n\tMOONLIGHT_ANTELOPE_ANTLER = 29171,\n\tMOONLIGHT_ANTELOPE_FUR = 29174,\n\tSUNLIGHT_ANTELOPE_FUR = 29177,\n\tSAPPHIRE_GLACIALIS_MIX_2 = 29180,\n\tSNOWY_KNIGHT_MIX_2 = 29183,\n\tRUBY_HARVEST_MIX_2 = 29186,\n\tBLACK_WARLOCK_MIX_2 = 29189,\n\tSUNLIGHT_MOTH_MIX_2 = 29192,\n\tMOONLIGHT_MOTH_MIX_2 = 29195,\n\tSAPPHIRE_GLACIALIS_MIX_1 = 29198,\n\tSNOWY_KNIGHT_MIX_1 = 29201,\n\tRUBY_HARVEST_MIX_1 = 29204,\n\tBLACK_WARLOCK_MIX_1 = 29207,\n\tSUNLIGHT_MOTH_MIX_1 = 29210,\n\tMOONLIGHT_MOTH_MIX_1 = 29213,\n\tJAGUAR_FUR = 29218,\n\tENHANCED_QUETZAL_WHISTLE_BLUEPRINT = 29253,\n\tPERFECTED_QUETZAL_WHISTLE_BLUEPRINT = 29256,\n\tTRAPPERS_TIPPLE = 29277,\n\tMIXED_HIDE_TOP = 29280,\n\tMIXED_HIDE_LEGS = 29283,\n\tMIXED_HIDE_BOOTS = 29286,\n\tMIXED_HIDE_CAPE = 29289,\n\tMIXED_HIDE_BASE = 29292,\n\tHUNTERS_SPEAR = 29305,\n\tQUETZAL_FEED = 29307,\n\tHUNTER_SPEAR_TIPS = 29311,\n\tSUNBEAM_ALE = 29409,\n\tSTEAMFORGE_BREW = 29412,\n\tECLIPSE_RED = 29415,\n\tMOONLITE = 29418,\n\tSUNSHINE = 29421,\n\tSUNFIRE_FANATIC_ARMOUR_SET = 29424,\n\tZOMBIE_PIRATE_KEY = 29449,\n\tTELEPORT_ANCHORING_SCROLL = 29455,\n\tADAMANT_SEEDS = 29458,\n\tBRIMHAVEN_VOUCHER = 29482,\n\tCURSED_AMULET_OF_MAGIC = 29486,\n\tRAINBOW_CAPE = 29489,\n\tRAINBOW_CROWN_SHIRT = 29507,\n\tELITE_BLACK_FULL_HELM = 29560,\n\tELITE_BLACK_PLATEBODY = 29562,\n\tELITE_BLACK_PLATELEGS = 29564,\n\tDARK_SQUALL_HOOD = 29566,\n\tDARK_SQUALL_ROBE_TOP = 29568,\n\tDARK_SQUALL_ROBE_BOTTOM = 29570,\n\tSILIF = 29572,\n\tLIT_EXPLOSIVE = 29573,\n\tBURNING_CLAW = 29574,\n\tBURNING_CLAWS = 29577,\n\tTORMENTED_SYNAPSE = 29580,\n\tSMOULDERING_HEART = 29583,\n\tSMOULDERING_PILE_OF_FLESH = 29585,\n\tSMOULDERING_GLAND = 29587,\n\tEMBERLIGHT = 29589,\n\tSCORCHING_BOW = 29591,\n\tPURGING_STAFF = 29594,\n\tDURADELS_NOTES = 29596,\n\tDEADMAN_RUG = 29598,\n\tCORRUPTED_DARK_BOW = 29599,\n\tCORRUPTED_VOLATILE_NIGHTMARE_STAFF = 29602,\n\tARMADYL_GODSWORD_DEADMAN = 29605,\n\tVOIDWAKER_DEADMAN = 29607,\n\tVOLATILE_NIGHTMARE_STAFF_DEADMAN = 29609,\n\tDARK_BOW_DEADMAN = 29611,\n\tIMBUED_ZAMORAK_CAPE_DEADMAN = 29613,\n\tIMBUED_GUTHIX_CAPE_DEADMAN = 29615,\n\tIMBUED_SARADOMIN_CAPE_DEADMAN = 29617,\n\tARMAGEDDON_RUG = 29619,\n\tARMAGEDDON_TELEPORT_SCROLL = 29622,\n\tARMAGEDDON_WEAPON_SCROLL = 29625,\n\tARMAGEDDON_CAPE_FABRIC = 29628,\n\tBLIGHTED_OVERLOAD_4 = 29631,\n\tBLIGHTED_OVERLOAD_3 = 29634,\n\tBLIGHTED_OVERLOAD_2 = 29637,\n\tBLIGHTED_OVERLOAD_1 = 29640,\n\tCHITIN = 29643,\n\tGUTHIXIAN_TEMPLE_TELEPORT = 29684,\n\tCOAGULATED_VENOM = 29781,\n\tSPIDER_CAVE_TELEPORT = 29782,\n\tARAXYTE_VENOM_SACK = 29784,\n\tJAR_OF_VENOM = 29786,\n\tARAXYTE_HEAD = 29788,\n\tNOXIOUS_POINT = 29790,\n\tNOXIOUS_BLADE = 29792,\n\tNOXIOUS_POMMEL = 29794,\n\tNOXIOUS_HALBERD = 29796,\n\tARAXYTE_FANG = 29799,\n\tAMULET_OF_RANCOUR = 29801,\n\tAMULET_OF_RANCOUR_S = 29804,\n\tARANEA_BOOTS = 29806,\n\tARAXYTE_SLAYER_HELMET = 29816,\n\tARAXYTE_SLAYER_HELMET_I = 29818,\n\tEXTENDED_ANTIVENOM4 = 29824,\n\tEXTENDED_ANTIVENOM3 = 29827,\n\tEXTENDED_ANTIVENOM2 = 29830,\n\tEXTENDED_ANTIVENOM1 = 29833,\n\tNID = 29836,\n\tRAX = 29838,\n\tGLACIAL_TEMOTLI = 29889,\n\tFROZEN_TEAR = 29895,\n\tVARLAMORIAN_KEBAB = 29900,\n\tBUTLERS_TRAY = 29912,\n\tCOSTUME_NEEDLE = 29920,\n\tBLACKBIRD_RED = 29944,\n\tCHILHUAC_RED = 29947,\n\tIXCOZTIC_WHITE = 29952,\n\tMETZTONALLI_WHITE = 29955,\n\tTONAMEYO_WHITE = 29958,\n\tCHICHILIHUI_ROS = 29963,\n\tIMPERIAL_ROS = 29966,\n\tALDARIUM = 29993,\n\tPREPOT_DEVICE_DISASSEMBLED = 30002,\n\tCOLOSSAL_WYRM_TELEPORT_SCROLL = 30040,\n\tCALCIFIED_ACORN = 30042,\n\tGRACEFUL_CRAFTING_KIT = 30044,\n\tTOME_OF_EARTH_EMPTY = 30066,\n\tSOILED_PAGE = 30068,\n\tDRAGON_HUNTER_WAND = 30070,\n\tHUEYCOATL_HIDE_COIF = 30073,\n\tHUEYCOATL_HIDE_BODY = 30076,\n\tHUEYCOATL_HIDE_CHAPS = 30079,\n\tHUEYCOATL_HIDE_VAMBRACES = 30082,\n\tHUEYCOATL_HIDE = 30085,\n\tHUASCA_SEED = 30088,\n\tGRIMY_HUASCA = 30094,\n\tHUASCA = 30097,\n\tHUASCA_POTION_UNF = 30100,\n\tPRAYER_REGENERATION_POTION4 = 30125,\n\tPRAYER_REGENERATION_POTION3 = 30128,\n\tPRAYER_REGENERATION_POTION2 = 30131,\n\tPRAYER_REGENERATION_POTION1 = 30134,\n\tGOADING_POTION4 = 30137,\n\tGOADING_POTION3 = 30140,\n\tGOADING_POTION2 = 30143,\n\tGOADING_POTION1 = 30146,\n\tBONE_SQUIRREL = 30151,\n}\n", "export enum EMonster {\n\tARAXXOR = 13668,\n\tCORPOREAL_BEAST = 319,\n\tDAGANNOTH_PRIME = 2266,\n\tDAGANNOTH_REX = 2267,\n\tDAGANNOTH_SUPREME = 2265,\n\tGIANT_MOLE = 5779,\n\tKALPHITE_QUEEN = 963,\n\tOBOR = 7416,\n\tSARACHNIS = 8713,\n\tVORKATH = 8061,\n\tZULRAH = 2042,\n\tCOMMANDER_ZILYANA = 2205,\n\tGENERAL_GRAARDOR = 2215,\n\tKREEARRA = 3162,\n\tKRIL_TSUTSAROTH = 3129,\n\tBRYOPHYTA = 8195,\n\tSKOTIZO = 7286,\n\tDERANGED_ARCHAEOLOGIST = 7806,\n\tPHANTOM_MUSPAH = 12077,\n\tDUKE_SUCELLUS = 12191,\n\tVARDORVIS = 12223,\n\tTHE_LEVIATHAN = 12214,\n\tTHE_WHISPERER = 12204,\n\tDUKE_SUCELLUS_AWAKENED = 12192,\n\tTHE_LEVIATHAN_AWAKENED = 12215,\n\tTHE_WHISPERER_AWAKENED = 12205,\n\tVARDORVIS_AWAKENED = 12224,\n\tSCURRIUS = 7222,\n\tCALLISTO = 6503,\n\tCHAOS_ELEMENTAL = 2054,\n\tCRAZY_ARCHAEOLOGIST = 6618,\n\tKING_BLACK_DRAGON = 6502,\n\tSCORPIA = 6615,\n\tVENENATIS = 6610,\n\tVETION = 6611,\n\tCHAOS_FANATIC = 6619,\n\tARTIO = 11992,\n\tSPINDEL = 11998,\n\tCALVARION = 11993,\n\tABYSSAL_SIRE = 5886,\n\tCERBERUS = 5862,\n\tALCHEMICAL_HYDRA = 8615,\n\tGROTESQUE_GUARDIANS = 7851,\n\tTHERMONUCLEAR_SMOKE_DEVIL = 499,\n\tKRAKEN = 494,\n\tARAXYTE = 11175,\n\tBLOOD_REAVER = 11293,\n\tBRUTAL_BLACK_DRAGON = 7275,\n\tBABY_BLACK_DRAGON = 1871,\n\tBANDIT = 6605,\n\tARMADYLIAN_GUARD = 6587,\n\tBLACK_KNIGHT = 516,\n\tDARK_WARRIOR = 531,\n\tDEADLY_RED_SPIDER = 3021,\n\tELDER_CHAOS_DRUID = 6607,\n\tENT = 6594,\n\tREVENANT_CYCLOPS = 7934,\n\tREVENANT_PYREFIEND = 7932,\n\tREVENANT_ORK = 7937,\n\tREVENANT_KNIGHT = 7939,\n\tREVENANT_IMP = 7881,\n\tREVENANT_HOBGOBLIN = 7933,\n\tREVENANT_HELLHOUND = 7935,\n\tREVENANT_GOBLIN = 7931,\n\tREVENANT_DRAGON = 7940,\n\tREVENANT_DEMON = 7936,\n\tREVENANT_DARK_BEAST = 7938,\n\tPIRATE = 521,\n\tMAMMOTH = 6604,\n\tMAGIC_AXE = 2844,\n\tLAVA_DRAGON = 6593,\n\tGUARD_BANDIT = 1027,\n\tDAGANNOTH_SPAWN = 3184,\n\tFERAL_VAMPYRE = 3234,\n\tFEVER_SPIDER = 626,\n\tGIANT_SEA_SNAKE = 1101,\n\tGREATER_NECHRYAEL = 7278,\n\tGREEN_DRAGON = 260,\n\tHARPIE_BUG_SWARM = 464,\n\tINFERNAL_MAGE = 447,\n\tJUNGLE_HORROR = 1042,\n\tKILLERWATT = 469,\n\tLESSER_DEMON = 2005,\n\tELF_ARCHER = 5295,\n\tFLESH_CRAWLER = 2498,\n\tFIYR_SHADE = 1286,\n\tDEVIANT_SPECTRE = 7279,\n\tDAGANNOTH_FLEDGELING = 2264,\n\tHYDRA = 8609,\n\tICE_GIANT = 2085,\n\tICE_TROLL = 648,\n\tICE_WARRIOR = 2841,\n\tPHRIN_SHADE = 1280,\n\tOTHERWORLDLY_BEING = 2843,\n\tMUTATED_BLOODVELD = 7276,\n\tMOURNER = 8844,\n\tMOSS_GIANT = 2090,\n\tMOLANISK = 1,\n\tMOGRE = 2592,\n\tLOAR_SHADE = 1277,\n\tLIZARDMAN_BRUTE = 6918,\n\tJELLY = 437,\n\tIORWERTH_ARCHER = 3428,\n\tIORWERTH_WARRIOR = 3429,\n\tWEREWOLF = 2593,\n\tWATERFIEND = 2916,\n\tWARPED_JELLY = 7277,\n\tWALL_BEAST = 476,\n\tVYREWATCH_SENTINEL = 9756,\n\tVYREWATCH = 3717,\n\tVAMPYRE_JUVINATE = 3694,\n\tTZHAARKET = 2173,\n\tTROLL_GENERAL = 4120,\n\tTERROR_DOG = 6473,\n\tSHADOW_WARRIOR = 2853,\n\tSHADE = 5633,\n\tSEA_SNAKE_YOUNG = 1097,\n\tSEA_SNAKE_HATCHLING = 1098,\n\tROCKSLUG = 421,\n\tRIYL_SHADE = 1282,\n\tPYREFIEND = 433,\n\tPYRELORD = 6762,\n\tPORAZDIR = 7860,\n\tOGRE = 136,\n\tOGRESS_SHAMAN = 7991,\n\tOGRESS_WARRIOR = 7990,\n\tANCIENT_ZYGOMITE = 7797,\n\tASYN_SHADE = 1284,\n\tBABY_BLUE_DRAGON = 241,\n\tBABY_GREEN_DRAGON = 5194,\n\tBABY_RED_DRAGON = 137,\n\tBRONZE_DRAGON = 270,\n\tBRUTAL_BLUE_DRAGON = 7273,\n\tBRUTAL_GREEN_DRAGON = 2918,\n\tBRUTAL_RED_DRAGON = 7274,\n\tCATABLEPON = 2475,\n\tCOCKATRICE = 420,\n\tCROCODILE = 4184,\n\tCYCLOPS = 2097,\n\tTEMPLE_SPIDER = 8703,\n\tTERRORBIRD = 2064,\n\tTORTURED_GORILLA = 7097,\n\tTORTURED_SOUL = 2999,\n\tTWISTED_BANSHEE = 7272,\n\tUNDEAD_CHICKEN = 2993,\n\tUNDEAD_COW = 2992,\n\tUNDEAD_DRUID = 2145,\n\tUNDEAD_ONE = 5342,\n\tURIUM_SHADE = 10589,\n\tWHITE_WOLF = 108,\n\tWILD_DOG = 112,\n\tZOGRE = 866,\n\tZOMBIE_RAT = 3969,\n\tPENGUIN = 2063,\n\tPIT_SCORPION = 3026,\n\tPOISON_SCORPION = 3025,\n\tROOSTER = 3663,\n\tSEAGULL = 1338,\n\tSHADOW_SPIDER = 3016,\n\tSKELETON_FREMENNIK = 4498,\n\tSKELETON_MAGE = 4319,\n\tSKOGRE = 878,\n\tSMALL_LIZARD = 463,\n\tSULPHUR_LIZARD = 8614,\n\tGIANT_BAT = 2834,\n\tGIANT_CRYPT_SPIDER = 1684,\n\tGIANT_RAT = 2510,\n\tGIANT_SPIDER = 2477,\n\tGRIZZLY_BEAR = 3423,\n\tGRIZZLY_BEAR_CUB = 3425,\n\tICE_WOLF = 645,\n\tJACKAL = 4185,\n\tJUNGLE_WOLF = 232,\n\tKALPHITE_GUARDIAN = 959,\n\tKALPHITE_SOLDIER = 957,\n\tKING_SCORPION = 3027,\n\tLOBSTROSITY = 7796,\n\tMONKEY_ARCHER = 5272,\n\tMONKEY_GUARD = 5271,\n\tMONKEY_ZOMBIE = 5281,\n\tMOUNTED_TERRORBIRD_GNOME = 2067,\n\tBEAR_CUB = 3909,\n\tBIG_WOLF = 115,\n\tBIRD = 5240,\n\tBLACK_GUARD = 6046,\n\tCAVE_GOBLIN_GUARD = 5334,\n\tCHAOS_DWARF = 291,\n\tCHICKEN = 3316,\n\tCHOMPY_BIRD = 1475,\n\tCOW_CALF = 2792,\n\tCRYPT_RAT = 1679,\n\tDEATH_WING = 509,\n\tDESERT_LIZARD = 459,\n\tDESERT_WOLF = 4649,\n\tDUCK = 1838,\n\tDUCKLING = 2001,\n\tDUNGEON_RAT = 2865,\n\tDWARF_GANG_MEMBER = 1354,\n\tABERRANT_SPECTRE = 2,\n\tDAGANNOTH = 3185,\n\tGUARD = 995,\n\tRED_DRAGON = 247,\n\tABYSSAL_DEMON = 415,\n\tDARK_BEAST = 4005,\n\tHELLHOUND = 104,\n\tRUNE_DRAGON = 8031,\n\tADAMANT_DRAGON = 8030,\n\tDEMONIC_GORILLA = 7144,\n\tSCARAB_MAGE = 794,\n\tANKOU = 2514,\n\tDRAKE = 8612,\n\tIRON_DRAGON = 272,\n\tSKELETAL_WYVERN = 465,\n\tAVIANSIE = 3169,\n\tDUST_DEVIL = 423,\n\tKALPHITE_WORKER = 955,\n\tSMOKE_DEVIL = 498,\n\tBASILISK_KNIGHT = 9293,\n\tELF_WARRIOR = 5293,\n\tKURASK = 410,\n\tSPIRITUAL_MAGE = 2212,\n\tBASILISK = 417,\n\tFIRE_GIANT = 2075,\n\tLIZARDMAN_SHAMAN = 6766,\n\tSPIRITUAL_RANGER = 2211,\n\tBLACK_DEMON = 240,\n\tANCIENT_WYVERN = 7795,\n\tLIZARDMAN = 6914,\n\tSPIRITUAL_WARRIOR = 2210,\n\tBLACK_DRAGON = 252,\n\tLONGTAILED_WYVERN = 7792,\n\tLOCUST_RIDER = 795,\n\tSTEEL_DRAGON = 8086,\n\tBLOODVELD = 484,\n\tSPITTING_WYVERN = 7794,\n\tMAN = 1118,\n\tSUQAH = 787,\n\tBLUE_DRAGON = 265,\n\tTALONED_WYVERN = 7793,\n\tMITHRIL_DRAGON = 2919,\n\tTUROTH = 426,\n\tBRINE_RAT = 4501,\n\tGARGOYLE = 412,\n\tMOUNTAIN_TROLL = 936,\n\tWOMAN = 1119,\n\tCAVE_HORROR = 1047,\n\tGOBLIN = 655,\n\tZYGOMITE = 537,\n\tWYRM = 8610,\n\tCAVE_KRAKEN = 492,\n\tGREATER_DEMON = 2025,\n\tNECHRYAEL = 8,\n\tBANSHEE = 414,\n\tCAVE_BUG = 481,\n\tCOW = 2790,\n\tDWARF = 290,\n\tLIZARD = 458,\n\tRAT = 2854,\n\tSPIDER = 3019,\n\tBAT = 2827,\n\tCAVE_CRAWLER = 406,\n\tCRAWLING_HAND = 448,\n\tGHOST = 85,\n\tMINOTAUR = 2481,\n\tSCORPION = 3024,\n\tWOLF = 106,\n\tBLACK_BEAR = 2839,\n\tCAVE_SLIME = 480,\n\tGUARD_DOG = 114,\n\tICEFIEND = 3140,\n\tMONKEY = 2848,\n\tSKELETON = 70,\n\tZOMBIE = 26,\n\tHILL_GIANT = 2098,\n\tPOLLNIVNIAN_BANDIT = 736,\n\tCAVE_GOBLIN = 6434,\n\tDESERT_BANDIT = 690,\n\tELF = 5299,\n\tFARMER = 3114,\n\tFREMENNIK_CITIZEN = 3937,\n\tGNOME = 5969,\n\tGOAT = 1792,\n\tMALE_HAM_MEMBER = 2540,\n\tFEMALE_HAM_MEMBER = 2541,\n\tHERO = 3295,\n\tKNIGHT_OF_ARDOUGNE = 3297,\n\tMASTER_FARMER = 5730,\n\tPALADIN = 1144,\n\tWATCHMAN = 5420,\n\tVYRE = 9710,\n\tTZHAARHUR = 2161,\n\tROGUE = 526,\n\tPRIFDDINAS_ELF = 9076,\n\tWARRIOR_WOMAN = 3260,\n\tALKHARID_WARRIOR = 3292,\n\tGHOUL = 289,\n\tEARTH_WARRIOR = 2840,\n\tIMP = 5007,\n\tJOGRE = 2094,\n\tHOBGOBLIN = 3049,\n\tCHAOS_DRUID = 520,\n\tUNICORN = 2837,\n\tMENAPHITE_THUG = 3549,\n\tRABBIT = 9118,\n\tTZHAARXIL = 2168,\n\tTZHAARMEJ = 2154,\n\tGIANT_FROG = 477,\n\tJUBBLY_BIRD = 4863,\n\tMANIACAL_MONKEY = 7118,\n\tZOMBIE_PIRATE = 13489,\n\tTORMENTED_DEMON = 13600,\n\tARMOURED_ZOMBIE = 12720,\n\tCRAB = 4819,\n\tBARROWS = 1673,\n\tTZTOKJAD = 3127,\n\tHESPORI = 8583,\n\tTZKALZUK = 7706,\n\tABHORRENT_SPECTRE = 7402,\n\tBASILISK_SENTINEL = 9258,\n\tCAVE_ABOMINATION = 7401,\n\tCHASM_CRAWLER = 7389,\n\tCHOKE_DEVIL = 7404,\n\tCOCKATHRICE = 7393,\n\tCOLOSSAL_HYDRA = 10402,\n\tCRUSHING_HAND = 7388,\n\tDREADBORN_ARAXYTE = 13680,\n\tFLAMING_PYRELORD = 7394,\n\tGIANT_ROCKSLUG = 7392,\n\tGREATER_ABYSSAL_DEMON = 7410,\n\tGUARDIAN_DRAKE = 10400,\n\tINSATIABLE_BLOODVELD = 7397,\n\tINSATIABLE_MUTATED_BLOODVELD = 7398,\n\tKING_KURASK = 7405,\n\tMALEVOLENT_MAGE = 7396,\n\tMARBLE_GARGOYLE = 7407,\n\tMONSTROUS_BASILISK = 7395,\n\tNECHRYARCH = 7411,\n\tNIGHT_BEAST = 7409,\n\tNUCLEAR_SMOKE_DEVIL = 7406,\n\tREPUGNANT_SPECTRE = 7403,\n\tSCREAMING_BANSHEE = 7390,\n\tSCREAMING_TWISTED_BANSHEE = 7391,\n\tSHADOW_WYRM = 10398,\n\tSPIKED_TUROTH = 10397,\n\tVITREOUS_JELLY = 7399,\n\tVITREOUS_WARPED_JELLY = 7400,\n\tFROGEEL = 3600,\n\tNEWTROOST = 3605,\n\tSPIDINE = 3602,\n\tSWORDCHICK = 3603,\n\tUNICOW = 3601,\n\tJUBSTER = 3604,\n\tREANIMATED_GOBLIN = 7018,\n\tREANIMATED_MONKEY = 7019,\n\tREANIMATED_IMP = 7020,\n\tREANIMATED_MINOTAUR = 7021,\n\tREANIMATED_SCORPION = 7022,\n\tREANIMATED_BEAR = 7023,\n\tREANIMATED_UNICORN = 7024,\n\tREANIMATED_DOG = 7025,\n\tREANIMATED_CHAOS_DRUID = 7026,\n\tREANIMATED_GIANT = 7027,\n\tREANIMATED_OGRE = 7028,\n\tREANIMATED_ELF = 7029,\n\tREANIMATED_TROLL = 7030,\n\tREANIMATED_HORROR = 7031,\n\tREANIMATED_KALPHITE = 7032,\n\tREANIMATED_DAGANNOTH = 7033,\n\tREANIMATED_BLOODVELD = 7034,\n\tREANIMATED_TZHAAR = 7035,\n\tREANIMATED_DEMON = 7036,\n\tREANIMATED_HELLHOUND = 11463,\n\tREANIMATED_AVIANSIE = 7037,\n\tREANIMATED_ABYSSAL = 7038,\n\tREANIMATED_DRAGON = 7039,\n\tFLAWED_GOLEM = 10695,\n\tMIND_GOLEM = 10693,\n\tBODY_GOLEM = 10691,\n\tCHAOS_GOLEM = 10689,\n}\n", "import type { BossRecords } from \"./meta/types\";\n\nexport const BASE_API_URL = \"https://services.runescape.com\";\n\nexport const SKILLS = [\n\t\"overall\",\n\t\"attack\",\n\t\"defence\",\n\t\"strength\",\n\t\"hitpoints\",\n\t\"ranged\",\n\t\"prayer\",\n\t\"magic\",\n\t\"cooking\",\n\t\"woodcutting\",\n\t\"fletching\",\n\t\"fishing\",\n\t\"firemaking\",\n\t\"crafting\",\n\t\"smithing\",\n\t\"mining\",\n\t\"herblore\",\n\t\"agility\",\n\t\"thieving\",\n\t\"slayer\",\n\t\"farming\",\n\t\"runecraft\",\n\t\"hunter\",\n\t\"construction\",\n] as const;\n\nexport const MINIGAMES = [\n\t\"bountyHunter\",\n\t\"bountyHunterRogue\",\n\t\"bountyHunterLegacy\",\n\t\"bountyHunterLegacyRogue\",\n\t\"LMS\",\n\t\"pvpArena\",\n\t\"soulWars\",\n\t\"riftsClosed\",\n\t\"colosseumGlory\",\n] as const;\n\nexport const CLUES = [\"all\", \"beginner\", \"easy\", \"medium\", \"hard\", \"elite\", \"master\"] as const;\n\nexport const mappedBossNames = [\n\t[\"abyssalSire\", \"Abyssal Sire\"],\n\t[\"alchemicalHydra\", \"Alchemical Hydra\"],\n\t[\"amoxliatl\", \"Amoxliatl\"],\n\t[\"araxxor\", \"Araxxor\"],\n\t[\"artio\", \"Artio\"],\n\t[\"barrowsChests\", \"Barrows Chests\"],\n\t[\"bryophyta\", \"Bryophyta\"],\n\t[\"callisto\", \"Callisto\"],\n\t[\"calvarion\", \"Calvar'ion\"],\n\t[\"cerberus\", \"Cerberus\"],\n\t[\"chambersofXeric\", \"Chambers of Xeric\"],\n\t[\"chambersofXericChallengeMode\", \"Chambers of Xeric: Challenge Mode\"],\n\t[\"chaosElemental\", \"Chaos Elemental\"],\n\t[\"chaosFanatic\", \"Chaos Fanatic\"],\n\t[\"commanderZilyana\", \"Commander Zilyana\"],\n\t[\"corporealBeast\", \"Corporeal Beast\"],\n\t[\"crazyArchaeologist\", \"Crazy Archaeologist\"],\n\t[\"dagannothPrime\", \"Dagannoth Prime\"],\n\t[\"dagannothRex\", \"Dagannoth Rex\"],\n\t[\"dagannothSupreme\", \"Dagannoth Supreme\"],\n\t[\"derangedArchaeologist\", \"Deranged Archaeologist\"],\n\t[\"dukeSucellus\", \"Duke Sucellus\"],\n\t[\"generalGraardor\", \"General Graardor\"],\n\t[\"giantMole\", \"Giant Mole\"],\n\t[\"grotesqueGuardians\", \"Grotesque Guardians\"],\n\t[\"hespori\", \"Hespori\"],\n\t[\"kalphiteQueen\", \"Kalphite Queen\"],\n\t[\"kingBlackDragon\", \"King Black Dragon\"],\n\t[\"kraken\", \"Kraken\"],\n\t[\"kreeArra\", \"Kree'Arra\"],\n\t[\"krilTsutsaroth\", \"K'ril Tsutsaroth\"],\n\t[\"lunarChests\", \"Lunar Chests\"],\n\t[\"mimic\", \"Mimic\"],\n\t[\"nex\", \"Nex\"],\n\t[\"nightmare\", \"The Nightmare\"],\n\t[\"phosanisNightmare\", \"Phosani's Nightmare\"],\n\t[\"obor\", \"Obor\"],\n\t[\"phantomMuspah\", \"Phantom Muspah\"],\n\t[\"sarachnis\", \"Sarachnis\"],\n\t[\"scorpia\", \"Scorpia\"],\n\t[\"scurrius\", \"Scurrius\"],\n\t[\"skotizo\", \"Skotizo\"],\n\t[\"solHeredit\", \"Sol Heredit\"],\n\t[\"spindel\", \"Spindel\"],\n\t[\"tempoross\", \"Tempoross\"],\n\t[\"theGauntlet\", \"The Gauntlet\"],\n\t[\"theCorruptedGauntlet\", \"The Corrupted Gauntlet\"],\n\t[\"theHueycoatl\", \"The Hueycoatl\"],\n\t[\"theLeviathan\", \"The Leviathan\"],\n\t[\"theWhisperer\", \"The Whisperer\"],\n\t[\"theatreofBlood\", \"Theatre of Blood\"],\n\t[\"theatreofBloodHard\", \"Theatre of Blood: Hard Mode\"],\n\t[\"thermonuclearSmokeDevil\", \"Thermonuclear Smoke Devil\"],\n\t[\"tombsofAmascut\", \"Tombs of Amascut\"],\n\t[\"tombsofAmascutExpert\", \"Tombs of Amascut: Expert Mode\"],\n\t[\"tzKalZuk\", \"TzKal-Zuk\"],\n\t[\"tzTokJad\", \"TzTok-Jad\"],\n\t[\"vardorvis\", \"Vardorvis\"],\n\t[\"venenatis\", \"Venenatis\"],\n\t[\"vetion\", \"Vet'ion\"],\n\t[\"vorkath\", \"Vorkath\"],\n\t[\"wintertodt\", \"Wintertodt\"],\n\t[\"zalcano\", \"Zalcano\"],\n\t[\"zulrah\", \"Zulrah\"],\n] as const;\n\nexport const bossNameMap: Map<keyof BossRecords, string> = new Map(mappedBossNames);\n\n// Hiscores\n\nfunction hiscoreURL(type: string): string {\n\treturn `${BASE_API_URL}/m=${type}/index_lite.ws?player=`;\n}\n\nexport const hiscoreURLs = {\n\tnormal: hiscoreURL(\"hiscore_oldschool\"),\n\tironman: hiscoreURL(\"hiscore_oldschool_ironman\"),\n\tultimate: hiscoreURL(\"hiscore_oldschool_ultimate\"),\n\thardcore: hiscoreURL(\"hiscore_oldschool_hardcore_ironman\"),\n\tdeadman: hiscoreURL(\"hiscore_oldschool_deadman\"),\n\tseasonal: hiscoreURL(\"hiscore_oldschool_seasonal\"),\n\ttournament: hiscoreURL(\"hiscore_oldschool_tournament\"),\n\tskiller: hiscoreURL(\"hiscore_oldschool_skiller\"),\n\tskiller_defence: hiscoreURL(\"hiscore_oldschool_skiller_defence\"),\n} as const;\n\nexport const ACCOUNT_TYPES: (keyof typeof hiscoreURLs)[] = [\n\t\"normal\",\n\t\"ironman\",\n\t\"ultimate\",\n\t\"hardcore\",\n\t\"deadman\",\n\t\"seasonal\",\n\t\"tournament\",\n\t\"skiller\",\n\t\"skiller_defence\",\n];\n\n// Errors\n\nexport enum Errors {\n\tINVALID_USERNAME = \"INVALID_USERNAME\",\n\tINVALID_ACCOUNT_TYPE = \"INVALID_ACCOUNT_TYPE\",\n\tACCOUNT_NOT_FOUND = \"ACCOUNT_NOT_FOUND\",\n\tFAILED_REQUEST = \"FAILED_REQUEST\",\n}\n\nexport const ErrorDescriptions: Record<string, string> = {\n\tINVALID_USERNAME: \"A malformed, invalid or incorrect username was passed and rejected.\",\n\tINVALID_ACCOUNT_TYPE: \"A invalid account type (normal, ironman, etc) was passed.\",\n\tACCOUNT_NOT_FOUND: \"Could not find a RuneScape account with the provided username.\",\n\tFAILED_REQUEST: \"A request to an API/External resource failed unexpectedly.\",\n\tITEM_NOT_FOUND: \"No item with the provided ID/Name could be found.\",\n};\n\nexport const EMPTY_BIRD_NEST_ID = 5075;\n\nexport enum SkillsEnum {\n\tAgility = \"agility\",\n\tCooking = \"cooking\",\n\tFishing = \"fishing\",\n\tMining = \"mining\",\n\tSmithing = \"smithing\",\n\tWoodcutting = \"woodcutting\",\n\tFiremaking = \"firemaking\",\n\tRunecraft = \"runecraft\",\n\tCrafting = \"crafting\",\n\tPrayer = \"prayer\",\n\tFletching = \"fletching\",\n\tFarming = \"farming\",\n\tHerblore = \"herblore\",\n\tThieving = \"thieving\",\n\tHunter = \"hunter\",\n\tConstruction = \"construction\",\n\tAttack = \"attack\",\n\tDefence = \"defence\",\n\tStrength = \"strength\",\n\tRanged = \"ranged\",\n\tMagic = \"magic\",\n\tHitpoints = \"hitpoints\",\n\tSlayer = \"slayer\",\n}\n", "export enum MonsterAttribute {\n\tDemon = \"demon\",\n\tDragon = \"dragon\",\n\tFiery = \"fiery\",\n\tKalphite = \"kalphite\",\n\tLeafy = \"leafy\",\n\tPenance = \"penance\",\n\tShade = \"shade\",\n\tUndead = \"undead\",\n\tVampyre = \"vampyre\",\n\tXerician = \"xerician\",\n}\n\nexport enum MonsterSlayerMaster {\n\tTurael = \"turael\",\n\tKrystilia = \"krystilia\",\n\tMazchna = \"mazchna\",\n\tVannaka = \"vannaka\",\n\tChaeldar = \"chaeldar\",\n\tKonar = \"konar\",\n\tNieve = \"nieve\",\n\tDuradel = \"duradel\",\n}\n\nexport enum MonsterAttackType {\n\tMelee = \"melee\",\n\tMagic = \"magic\",\n\tRange = \"range\",\n}\n\nexport interface MonsterData {\n\tmembers: boolean;\n\tcombatLevel: number;\n\thitpoints?: number | null;\n\tmaxHit?: number | null;\n\tattackType: MonsterAttackType[];\n\tattackSpeed: number | null;\n\taggressive: boolean;\n\tpoisonous?: boolean;\n\timmuneToPoison: boolean;\n\timmuneToVenom: boolean;\n\tattributes: MonsterAttribute[];\n\tcategory: string[];\n\texamineText?: string;\n\twikiName: string;\n\twikiURL: string;\n\tattackLevel: number;\n\tstrengthLevel: number;\n\tdefenceLevel: number;\n\tmagicLevel: number;\n\trangedLevel: number;\n\tattackStab: number;\n\tattackSlash: number;\n\tattackCrush: number;\n\tattackMagic: number;\n\tattackRanged: number;\n\tdefenceStab: number;\n\tdefenceSlash: number;\n\tdefenceCrush: number;\n\tdefenceMagic: number;\n\tdefenceRanged: number;\n\tattackAccuracy: number;\n\tmeleeStrength: number;\n\trangedStrength: number;\n\tmagicDamage: number;\n\tisSlayerMonster: boolean;\n\tslayerLevelRequired: number;\n\tslayerXP: number;\n\tassignableSlayerMasters: MonsterSlayerMaster[];\n}\n", "import LootTable from \"../../structures/LootTable\";\nimport { BarbarianAssault } from \"./BarbarianAssault\";\nimport { ChambersOfXeric } from \"./ChambersOfXeric\";\nimport { FishingTrawler } from \"./FishingTrawler\";\nimport { Gauntlet } from \"./Gauntlet\";\nimport Nightmare from \"./Nightmare\";\nimport { Tempoross } from \"./Tempoross\";\nimport Zalcano from \"./Zalcano\";\n\nexport const GrandHallowedCoffin = new LootTable()\n\t.every(\"Hallowed mark\", [8, 10])\n\t.tertiary(200, \"Ring of endurance (uncharged)\")\n\t.tertiary(30, \"Clue scroll (elite)\")\n\t.add(\"Rune 2h sword\")\n\t.add(\"Rune platebody\")\n\t.add(\"Law rune\", [150, 250])\n\t.add(\"Blood rune\", [150, 250])\n\t.add(\"Soul rune\", [150, 250])\n\t.add(\"Runite bolts\", [100, 300])\n\t.add(\"Monkfish\", [2, 6])\n\t.add(\"Sanfew serum(4)\", [1, 2])\n\t.add(\"Ranarr seed\", [1, 2])\n\t.add(\"Coins\", [17_500, 25_000]);\n\nexport { BarbarianAssault, ChambersOfXeric, FishingTrawler, Gauntlet, Nightmare, Tempoross, Zalcano };\n\nexport * from \"./Mimic\";\nexport * from \"./TheatreOfBlood\";\nexport type { ChambersOfXericOptions } from \"./ChambersOfXeric\";\n", "import { randArrItem } from \"e\";\nimport itemID from \"../util/itemID\";\nimport Bank from \"./Bank\";\nimport Items from \"./Items\";\n\nexport function reduceNumByPercent(value: number, percent: number): number {\n\tif (percent <= 0) return value;\n\treturn value - value * (percent / 100);\n}\nexport function randInt(min: number, max: number): number {\n\treturn Math.floor(Math.random() * (max - min + 1) + min);\n}\nexport function randFloat(min: number, max: number): number {\n\treturn Math.random() * (max - min) + min;\n}\n\nexport function roll(upperLimit: number): boolean {\n\treturn randInt(1, upperLimit) === 1;\n}\n\nexport interface LootTableOptions {\n\tlimit?: number;\n}\n\nexport interface LootTableMoreOptions {\n\tmultiply?: boolean;\n\tfreeze?: boolean;\n}\n\nexport interface LootTableItem {\n\titem: number | LootTable;\n\tweight?: number;\n\tquantity: number | number[];\n\toptions?: LootTableMoreOptions;\n}\n\nexport interface OneInItems extends LootTableItem {\n\tchance: number;\n}\nexport function isArrayOfItemTuples(x: readonly unknown[]): x is [string, (number | number[])?][] {\n\treturn Array.isArray(x[0]);\n}\n\nexport interface LootTableRollOptions {\n\t/**\n\t * Map<item_id, percentage>\n\t *\n\t * item_id droprate will be decreased by percentage%.\n\t */\n\ttertiaryItemPercentageChanges?: Map<string, number>;\n\ttargetBank?: Bank;\n}\n\nexport default class LootTable {\n\tpublic length: number;\n\tpublic table: LootTableItem[];\n\tpublic totalWeight: number;\n\tpublic limit?: number;\n\tpublic oneInItems: OneInItems[];\n\tpublic tertiaryItems: OneInItems[];\n\tpublic everyItems: LootTableItem[];\n\tpublic allItems: number[];\n\n\tpublic constructor(lootTableOptions: LootTableOptions = {}) {\n\t\tthis.table = [];\n\t\tthis.oneInItems = [];\n\t\tthis.tertiaryItems = [];\n\t\tthis.everyItems = [];\n\t\tthis.length = 0;\n\t\tthis.totalWeight = 0;\n\t\tthis.limit = lootTableOptions.limit;\n\t\tthis.allItems = [];\n\t}\n\n\tpublic clone(): LootTable {\n\t\tconst newTable = new LootTable();\n\t\tnewTable.table = [...this.table];\n\t\tnewTable.oneInItems = [...this.oneInItems];\n\t\tnewTable.tertiaryItems = [...this.tertiaryItems];\n\t\tnewTable.everyItems = [...this.everyItems];\n\t\tnewTable.length = this.length;\n\t\tnewTable.totalWeight = this.totalWeight;\n\t\tnewTable.limit = this.limit;\n\t\tnewTable.allItems = [...this.allItems];\n\n\t\treturn newTable;\n\t}\n\n\tprivate resolveName(name: string): number {\n\t\treturn itemID(name);\n\t}\n\n\tprivate addToAllItems(items: number | number[] | LootTable | LootTableItem | LootTableItem[]): void {\n\t\tif (Array.isArray(items)) {\n\t\t\tfor (const item of items) {\n\t\t\t\tthis.addToAllItems(item);\n\t\t\t}\n\t\t\treturn;\n\t\t}\n\n\t\tif (items instanceof LootTable) {\n\t\t\tthis.allItems = Array.from(new Set(this.allItems.concat(Array.isArray(items) ? items : items.allItems)));\n\t\t\treturn;\n\t\t}\n\n\t\tif (typeof items === \"number\") {\n\t\t\tif (this.allItems.includes(items)) return;\n\t\t\tthis.allItems.push(items);\n\t\t} else {\n\t\t\tthis.addToAllItems(items.item);\n\t\t}\n\t}\n\n\tpublic oneIn(\n\t\tchance: number,\n\t\titem: LootTable | number | string,\n\t\tquantity: number | number[] = 1,\n\t\toptions?: LootTableMoreOptions,\n\t): this {\n\t\tconst resolved = typeof item === \"string\" ? this.resolveName(item) : item;\n\t\tthis.oneInItems.push({\n\t\t\titem: resolved,\n\t\t\tchance,\n\t\t\tquantity,\n\t\t\toptions,\n\t\t});\n\n\t\tthis.addToAllItems(resolved);\n\n\t\treturn this;\n\t}\n\n\tpublic tertiary(\n\t\tchance: number,\n\t\titem: LootTable | number | string,\n\t\tquantity: number | number[] = 1,\n\t\toptions?: LootTableMoreOptions,\n\t): this {\n\t\tconst resolved = typeof item === \"string\" ? this.resolveName(item) : item;\n\t\tthis.tertiaryItems.push({\n\t\t\titem: resolved,\n\t\t\tchance,\n\t\t\tquantity,\n\t\t\toptions,\n\t\t});\n\n\t\tthis.addToAllItems(resolved);\n\n\t\treturn this;\n\t}\n\n\tpublic every(\n\t\titem: LootTable | number | string,\n\t\tquantity: number | number[] = 1,\n\t\toptions?: LootTableMoreOptions,\n\t): this {\n\t\tconst resolved = typeof item === \"string\" ? this.resolveName(item) : item;\n\t\tthis.everyItems.push({\n\t\t\titem: resolved,\n\t\t\tquantity,\n\t\t\toptions,\n\t\t});\n\n\t\tthis.addToAllItems(resolved);\n\n\t\treturn this;\n\t}\n\n\tpublic add(\n\t\titem: LootTable | number | string,\n\t\tquantity: number[] | number = 1,\n\t\tweight = 1,\n\t\toptions?: LootTableMoreOptions,\n\t): this {\n\t\tif (this.limit && weight + this.totalWeight > this.limit) {\n\t\t\tthrow new Error(\"Loot table total weight exceeds limit\");\n\t\t}\n\t\tif (typeof item === \"string\") {\n\t\t\treturn this.add(this.resolveName(item), quantity, weight, options);\n\t\t}\n\n\t\tthis.length += 1;\n\t\tthis.totalWeight += weight;\n\n\t\tthis.addToAllItems(item);\n\n\t\tthis.table.push({\n\t\t\titem,\n\t\t\tweight,\n\t\t\tquantity,\n\t\t\toptions,\n\t\t});\n\n\t\treturn this;\n\t}\n\n\tprivate cachedOptimizedTable: number[] | null = null;\n\troll(quantity?: number): Bank;\n\troll(quantity: number, options: { targetBank?: undefined } & LootTableRollOptions): Bank;\n\troll(quantity: number, options: { targetBank: Bank } & LootTableRollOptions): null;\n\tpublic roll(quantity = 1, options: LootTableRollOptions = {}): Bank | null {\n\t\tconst loot = options.targetBank ?? new Bank();\n\t\tconst effectiveTertiaryItems = options.tertiaryItemPercentageChanges\n\t\t\t? this.tertiaryItems.map(i => {\n\t\t\t\t\tif (typeof i.item !== \"number\") return i;\n\t\t\t\t\tif (i.options?.freeze === true) return i;\n\t\t\t\t\tconst change = options.tertiaryItemPercentageChanges?.get(Items.get(i.item)!.name);\n\t\t\t\t\tif (!change) return i;\n\t\t\t\t\treturn {\n\t\t\t\t\t\t...i,\n\t\t\t\t\t\tchance: Math.ceil(reduceNumByPercent(i.chance, change)),\n\t\t\t\t\t};\n\t\t\t\t})\n\t\t\t: this.tertiaryItems;\n\t\tconst limit = this.limit || this.totalWeight;\n\n\t\tif (this.table.every(i => Number.isInteger(i.weight)) && this.cachedOptimizedTable === null) {\n\t\t\tthis.cachedOptimizedTable = [];\n\t\t\tfor (const item of this.table) {\n\t\t\t\tfor (let j = 0; j < item.weight!; j++) {\n\t\t\t\t\tthis.cachedOptimizedTable.push(this.table.indexOf(item));\n\t\t\t\t}\n\t\t\t}\n\t\t\twhile (this.cachedOptimizedTable.length < limit) {\n\t\t\t\tthis.cachedOptimizedTable.push(-1);\n\t\t\t}\n\t\t}\n\n\t\touterLoop: for (let i = 0; i < quantity; i++) {\n\t\t\tfor (let j = 0; j < this.everyItems.length; j++) {\n\t\t\t\tthis.addResultToLoot(this.everyItems[j], loot);\n\t\t\t}\n\n\t\t\tfor (let j = 0; j < effectiveTertiaryItems.length; j++) {\n\t\t\t\tif (roll(effectiveTertiaryItems[j].chance)) {\n\t\t\t\t\tthis.addResultToLoot(effectiveTertiaryItems[j], loot);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tfor (let j = 0; j < this.oneInItems.length; j++) {\n\t\t\t\tif (roll(this.oneInItems[j].chance)) {\n\t\t\t\t\tthis.addResultToLoot(this.oneInItems[j], loot);\n\t\t\t\t\tcontinue outerLoop;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (this.cachedOptimizedTable) {\n\t\t\t\tthis.addResultToLoot(this.table[randArrItem(this.cachedOptimizedTable)], loot);\n\t\t\t} else {\n\t\t\t\tconst randomWeight = randFloat(0, limit);\n\t\t\t\tlet weight = 0;\n\t\t\t\tfor (let i = 0; i < this.table.length; i++) {\n\t\t\t\t\tweight += this.table[i].weight!;\n\t\t\t\t\tif (randomWeight <= weight) {\n\t\t\t\t\t\tthis.addResultToLoot(this.table[i], loot);\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tif (!options.targetBank) {\n\t\t\treturn loot;\n\t\t}\n\t\treturn null;\n\t}\n\n\tprivate addResultToLoot(result: LootTableItem, loot: Bank): void {\n\t\tif (typeof result?.item === \"number\") {\n\t\t\tloot.addItem(result.item, this.determineQuantity(result.quantity));\n\t\t\treturn;\n\t\t}\n\n\t\tif (result?.item instanceof LootTable) {\n\t\t\tconst qty = this.determineQuantity(result.quantity);\n\t\t\tif (result.options?.multiply) loot.add(result.item.roll(1).multiply(qty));\n\t\t\telse result.item.roll(qty, { targetBank: loot });\n\t\t\treturn;\n\t\t}\n\t}\n\n\tprotected determineQuantity(quantity: number | number[]): number {\n\t\tif (Array.isArray(quantity)) {\n\t\t\treturn randInt(quantity[0], quantity[1]);\n\t\t}\n\t\treturn quantity;\n\t}\n}\n", "import Items from \"../structures/Items\";\n\nexport default function itemID(name: string): number {\n\tconst item = Items.get(name);\n\tif (!item) {\n\t\tthrow new Error(`ERROR: ${JSON.stringify(name)} doesnt exist.`);\n\t}\n\treturn item.id;\n}\n", "import { randArrItem } from \"e\";\n\nimport type { BankItem, IntKeyBank, Item, ItemBank } from \"../meta/types\";\nimport itemID from \"../util/itemID\";\nimport { toKMB } from \"../util/smallUtils\";\nimport Items from \"./Items\";\n\nconst frozenErrorStr = \"Tried to mutate a frozen Bank.\";\n\nconst isValidInteger = (str: string): boolean => /^-?\\d+$/.test(str);\n\ntype ItemResolvable = Item | string | number;\n\nfunction isValidBankQuantity(qty: number): boolean {\n\treturn typeof qty === \"number\" && qty >= 1 && Number.isInteger(qty);\n}\n\nfunction sanitizeItemBank(mutSource: ItemBank) {\n\tfor (const [key, qty] of Object.entries(mutSource)) {\n\t\tif (!isValidBankQuantity(qty)) {\n\t\t\tdelete mutSource[key];\n\t\t}\n\t\tconst item = Items.get(Number.parseInt(key));\n\t\tif (!item) {\n\t\t\tdelete mutSource[key];\n\t\t}\n\t}\n}\n\nexport default class Bank {\n\tprivate map: Map<number, number>;\n\tpublic frozen = false;\n\n\tstatic withSanitizedValues(source: ItemBank | IntKeyBank): Bank {\n\t\tconst mutSource = { ...source };\n\t\tsanitizeItemBank(mutSource);\n\t\treturn new Bank(mutSource);\n\t}\n\n\tconstructor(initialBank?: IntKeyBank | ItemBank | Bank) {\n\t\tthis.map = this.makeFromInitialBank(initialBank);\n\t}\n\n\tpublic removeInvalidValues(): Bank {\n\t\tfor (const [key, qty] of this.map.entries()) {\n\t\t\tif (!isValidBankQuantity(qty) || !Items.has(key)) {\n\t\t\t\tthis.map.delete(key);\n\t\t\t}\n\t\t}\n\t\treturn this;\n\t}\n\n\tprivate resolveItemID(item: ItemResolvable): number {\n\t\tif (typeof item === \"number\") return item;\n\t\tif (typeof item === \"string\") return itemID(item);\n\t\treturn item.id;\n\t}\n\n\tpublic clear(item?: Item | string | number): this {\n\t\tif (this.frozen) throw new Error(frozenErrorStr);\n\t\tif (item) {\n\t\t\tthis.set(this.resolveItemID(item), 0);\n\t\t\treturn this;\n\t\t}\n\t\tthis.map.clear();\n\t\treturn this;\n\t}\n\n\tprivate makeFromInitialBank(initialBank?: IntKeyBank | ItemBank | Bank) {\n\t\tif (!initialBank) return new Map();\n\t\tif (initialBank instanceof Bank) {\n\t\t\treturn new Map(initialBank.map.entries());\n\t\t}\n\t\tconst entries = Object.entries(initialBank);\n\t\tif (entries.length === 0) return new Map();\n\t\tif (isValidInteger(entries[0][0])) {\n\t\t\treturn new Map(entries.map(([k, v]) => [Number(k), v]));\n\t\t} else {\n\t\t\treturn new Map(entries.map(([k, v]) => [Items.get(k)!.id, v]));\n\t\t}\n\t}\n\n\tpublic toJSON(): ItemBank {\n\t\treturn Object.fromEntries(this.map);\n\t}\n\n\tpublic set(item: ItemResolvable, quantity: number): this {\n\t\tif (this.frozen) throw new Error(frozenErrorStr);\n\t\tconst id = this.resolveItemID(item);\n\t\tthis.map.set(id, quantity);\n\t\treturn this;\n\t}\n\n\tpublic freeze(): this {\n\t\tthis.frozen = true;\n\t\tObject.freeze(this.map);\n\t\treturn this;\n\t}\n\n\tpublic amount(item: ItemResolvable): number {\n\t\tconst id = this.resolveItemID(item);\n\t\treturn this.map.get(id) ?? 0;\n\t}\n\n\tpublic addItem(item: number, quantity = 1): this {\n\t\tif (this.frozen) throw new Error(frozenErrorStr);\n\t\tif (quantity < 1) return this;\n\t\tthis.map.set(item, (this.map.get(item) ?? 0) + quantity);\n\t\treturn this;\n\t}\n\n\tpublic removeItem(item: number | string, quantity = 1): this {\n\t\tif (this.frozen) throw new Error(frozenErrorStr);\n\t\tconst id = this.resolveItemID(item);\n\t\tconst currentValue = this.map.get(id);\n\n\t\tif (currentValue === undefined) return this;\n\t\tif (currentValue - quantity <= 0) {\n\t\t\tthis.map.delete(id);\n\t\t} else {\n\t\t\tthis.map.set(id, currentValue - quantity);\n\t\t}\n\n\t\treturn this;\n\t}\n\n\tpublic add(item: string | number | IntKeyBank | Bank | Item | undefined, quantity = 1): Bank {\n\t\tif (this.frozen) throw new Error(frozenErrorStr);\n\n\t\t// Bank.add(123);\n\t\tif (typeof item === \"number\") {\n\t\t\treturn this.addItem(item, quantity);\n\t\t}\n\n\t\t// Bank.add('Twisted bow');\n\t\t// Bank.add('Twisted bow', 5);\n\t\tif (typeof item === \"string\") {\n\t\t\treturn this.addItem(itemID(item), quantity);\n\t\t}\n\n\t\tif (item instanceof Bank) {\n\t\t\tfor (const [itemID, qty] of item.map.entries()) {\n\t\t\t\tthis.addItem(itemID, qty);\n\t\t\t}\n\t\t\treturn this;\n\t\t}\n\n\t\tif (!item) {\n\t\t\treturn this;\n\t\t}\n\n\t\tif (\"id\" in item) {\n\t\t\tconst _item = item as Item;\n\t\t\treturn this.addItem(_item.id, quantity);\n\t\t}\n\n\t\tfor (const [itemID, qty] of Object.entries(item)) {\n\t\t\tlet int: number | undefined = Number.parseInt(itemID);\n\t\t\tif (Number.isNaN(int)) {\n\t\t\t\tint = Items.get(itemID)?.id;\n\t\t\t}\n\t\t\tif (!int) {\n\t\t\t\tconsole.trace(`Tried to add a invalid item to a bank with an id of '${itemID}'`);\n\t\t\t\treturn this;\n\t\t\t}\n\t\t\tthis.addItem(int, qty);\n\t\t}\n\n\t\treturn this;\n\t}\n\n\tpublic remove(item: string | number | ItemBank | Bank, quantity = 1): Bank {\n\t\tif (this.frozen) throw new Error(frozenErrorStr);\n\n\t\t// Bank.remove('Twisted bow');\n\t\t// Bank.remove('Twisted bow', 5);\n\t\tif (typeof item === \"string\") {\n\t\t\treturn this.removeItem(itemID(item), quantity);\n\t\t}\n\n\t\t// Bank.remove(123);\n\t\tif (typeof item === \"number\") {\n\t\t\treturn this.removeItem(item, quantity);\n\t\t}\n\n\t\tif (item instanceof Bank) {\n\t\t\tfor (const [itemID, qty] of item.map.entries()) {\n\t\t\t\tthis.removeItem(itemID, qty);\n\t\t\t}\n\t\t\treturn this;\n\t\t}\n\n\t\tthis.remove(new Bank(item));\n\t\treturn this;\n\t}\n\n\tpublic random(): BankItem | null {\n\t\tconst entries = Array.from(this.map.entries());\n\t\tif (entries.length === 0) return null;\n\t\tconst randomEntry = randArrItem(entries);\n\t\treturn { id: randomEntry[0], qty: randomEntry[1] };\n\t}\n\n\tpublic multiply(multiplier: number, itemsToNotMultiply?: number[]): this {\n\t\tif (this.frozen) throw new Error(frozenErrorStr);\n\t\tfor (const [itemID, quantity] of this.map.entries()) {\n\t\t\tif (itemsToNotMultiply?.includes(itemID)) continue;\n\t\t\tthis.map.set(itemID, quantity * multiplier);\n\t\t}\n\t\treturn this;\n\t}\n\n\tpublic has(items: Item | string | number | (string | number)[] | ItemBank | Bank): boolean {\n\t\tif (typeof items === \"string\" || typeof items === \"number\") {\n\t\t\treturn this.amount(items) > 0;\n\t\t}\n\n\t\tif (Array.isArray(items)) {\n\t\t\treturn items.every(item => this.amount(item) > 0);\n\t\t}\n\n\t\tif (items instanceof Bank) {\n\t\t\treturn items.items().every(itemEntry => this.amount(itemEntry[0].id) >= itemEntry[1]);\n\t\t}\n\n\t\tif (\"id\" in items) {\n\t\t\treturn this.has(items.id);\n\t\t}\n\n\t\treturn this.has(new Bank(items));\n\t}\n\n\tpublic items(): [Item, number][] {\n\t\tconst arr: [Item, number][] = [];\n\t\tfor (const [key, val] of this.map.entries()) {\n\t\t\tif (val < 1) continue;\n\t\t\tconst item = Items.get(key)!;\n\t\t\tif (!item) {\n\t\t\t\tconsole.warn(`Bank has an invalid item: ${item}, with quantity of ${val}`);\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\tarr.push([item, val]);\n\t\t}\n\t\treturn arr;\n\t}\n\n\tpublic forEach(fn: (item: Item, quantity: number) => unknown): void {\n\t\tfor (const item of this.items()) {\n\t\t\tfn(...item);\n\t\t}\n\t}\n\n\tpublic clone(): Bank {\n\t\treturn new Bank(this);\n\t}\n\n\tpublic fits(bank: Bank): number {\n\t\tconst items = bank.items();\n\t\tconst divisions = items.map(([item, qty]) => Math.floor(this.amount(item.id) / qty)).sort((a, b) => a - b);\n\t\treturn divisions[0] ?? 0;\n\t}\n\n\tpublic filter(fn: (item: Item, quantity: number) => boolean): Bank {\n\t\tconst result = new Bank();\n\t\tfor (const item of this.items()) {\n\t\t\tif (fn(...item)) {\n\t\t\t\tresult.add(item[0].id, item[1]);\n\t\t\t}\n\t\t}\n\t\treturn result;\n\t}\n\n\tpublic toString(): string {\n\t\tconst items = this.items();\n\t\tif (items.length === 0) {\n\t\t\treturn \"No items\";\n\t\t}\n\t\treturn items\n\t\t\t.sort((a, b) => a[0].name.localeCompare(b[0].name))\n\t\t\t.map(([item, qty]) => `${qty < 1000 ? `${qty}x` : toKMB(qty)} ${item?.name ?? \"Unknown item\"}`)\n\t\t\t.join(\", \");\n\t}\n\n\tpublic get length(): number {\n\t\treturn this.map.size;\n\t}\n\n\tpublic value(): number {\n\t\tlet value = 0;\n\t\tfor (const [item, quantity] of this.items()) {\n\t\t\tvalue += item.price * quantity;\n\t\t}\n\t\treturn value;\n\t}\n\n\tpublic equals(otherBank: Bank): boolean {\n\t\tif (this.length !== otherBank.length) return false;\n\t\tfor (const [item, quantity] of this.items()) {\n\t\t\tif (otherBank.amount(item.id) !== quantity) return false;\n\t\t}\n\t\treturn true;\n\t}\n\n\tpublic difference(otherBank: Bank): Bank {\n\t\treturn this.clone().remove(otherBank).add(otherBank.clone().remove(this));\n\t}\n\n\tpublic validate(): string[] {\n\t\tconst errors: string[] = [];\n\t\tfor (const [item, quantity] of this.map.entries()) {\n\t\t\tif (typeof quantity !== \"number\" || quantity < 1 || !Number.isInteger(quantity)) {\n\t\t\t\terrors.push(`Item ${item} has a quantity of ${quantity}`);\n\t\t\t}\n\t\t\tif (typeof item !== \"number\" || !item || !Items.get(item)?.id) {\n\t\t\t\terrors.push(`Item ${item} does not exist.`);\n\t\t\t}\n\t\t}\n\t\treturn errors;\n\t}\n\n\tpublic validateOrThrow() {\n\t\tconst errors = this.validate();\n\t\tif (errors.length > 0) {\n\t\t\tthrow new Error(`Bank validation failed: ${errors.join(\", \")}`);\n\t\t}\n\t}\n\n\tget itemIDs(): number[] {\n\t\treturn Array.from(this.map.keys());\n\t}\n}\n", "import { round } from \"e\";\n\nexport function toKMB(number: number): string {\n\tif (number > 999_999_999 || number < -999_999_999) {\n\t\treturn `${round(number / 1_000_000_000)}b`;\n\t} else if (number > 999_999 || number < -999_999) {\n\t\treturn `${round(number / 1_000_000)}m`;\n\t} else if (number > 999 || number < -999) {\n\t\treturn `${round(number / 1000)}k`;\n\t}\n\treturn round(number).toString();\n}\n\nexport function fromKMB(number: string): number {\n\tnumber = number.toLowerCase().replace(/,/g, \"\");\n\tconst [numberBefore, numberAfter] = number.split(/[.kmb]/g);\n\n\tlet newNum = numberBefore;\n\tif (number.includes(\"b\")) {\n\t\tnewNum += numberAfter + \"0\".repeat(9).slice(numberAfter.length);\n\t} else if (number.includes(\"m\")) {\n\t\tnewNum += numberAfter + \"0\".repeat(6).slice(numberAfter.length);\n\t} else if (number.includes(\"k\")) {\n\t\tnewNum += numberAfter + \"0\".repeat(3).slice(numberAfter.length);\n\t}\n\n\treturn Number.parseInt(newNum);\n}\n", "import LootTable from \"../../structures/LootTable\";\n\nexport const LowGambleTable = new LootTable()\n\t.add(\"Harralander\", [15, 25])\n\t.add(\"Toadflax\", [15, 25])\n\t.add(\"Irit leaf\", [15, 25])\n\t.add(\"Harralander seed\", [5, 7])\n\t.add(\"Toadflax seed\", [5, 7])\n\t.add(\"Irit seed\", [5, 7])\n\t.add(\"Strawberry seed\", 20)\n\t.add(\"Pineapple seed\", [1, 2])\n\t.add(\"Maple seed\", [1, 2])\n\t.add(\"Rune axe\")\n\t.add(\"Rune med helm\")\n\t.add(\"Rune dagger(p++)\")\n\t.add(\"Lava battlestaff\")\n\t.add(\"Adamant sq shield\")\n\t.add(\"Iron ore\", 200)\n\t.add(\"Feather\", [500, 750])\n\t.add(\"Coal\", 150)\n\t.add(\"Mithril ore\", 20)\n\t.add(\"Mithril bar\", 15)\n\t.add(\"Flax\", [50, 75])\n\t.add(\"Blue dragonhide\", [10, 20])\n\t.add(\"Uncut emerald\", [25, 30])\n\t.add(\"Maple logs\", [150, 200])\n\t.add(\"Uncut emerald\", [25, 30])\n\t.add(\"Oak plank\", [60, 80])\n\t.add(\"Mithril arrow\", [300, 400])\n\t.add(\"Raw lobster\", [125, 150])\n\t.add(\"Tuna\", [90, 110])\n\t.add(\"Cosmic rune\", [150, 200])\n\t.add(\"Chaos rune\", [150, 200])\n\t.add(\"Limpwurt root\", [10, 15])\n\t.add(\"Coins\", [15_000, 20_000]);\n\nexport const MediumGambleTable = new LootTable()\n\t.add(\"Avantoe\", [25, 35])\n\t.add(\"Kwuarm\", [25, 35])\n\t.add(\"Dwarf weed\", [25, 35])\n\t.add(\"Avantoe seed\", [10, 14])\n\t.add(\"Kwuarm seed\", [10, 14])\n\t.add(\"Dwarf weed seed\", [10, 14])\n\t.add(\"Watermelon seed\", 20)\n\t.add(\"Papaya tree seed\", [1, 2])\n\t.add(\"Yew seed\", [1, 2])\n\t.add(\"Rune battleaxe\")\n\t.add(\"Rune sq shield\")\n\t.add(\"Rune full helm\")\n\t.add(\"Mystic lava staff\")\n\t.add(\"Loop half of key\")\n\t.add(\"Tooth half of key\")\n\t.add(\"Feather\", [1200, 1500])\n\t.add(\"Coal\", 400)\n\t.add(\"Adamantite ore\", 40)\n\t.add(\"Adamantite bar\", 25)\n\t.add(\"Big bones\", 120)\n\t.add(\"Red dragonhide\", [20, 30])\n\t.add(\"Uncut ruby\", [25, 30])\n\t.add(\"Yew logs\", [150, 200])\n\t.add(\"Teak plank\", [60, 80])\n\t.add(\"Adamant arrow\", [400, 500])\n\t.add(\"Nature rune\", [250, 300])\n\t.add(\"Death rune\", [250, 300])\n\t.add(\"Raw swordfish\", [180, 210])\n\t.add(\"Swordfish\", [90, 110])\n\t.add(\"Limpwurt root\", [20, 30])\n\t.add(\"Unicorn horn\", [20, 30])\n\t.add(\"Coins\", [30_000, 40_000]);\n\nexport const HighGambleTable = new LootTable()\n\t.oneIn(16_000, \"Dragon med helm\")\n\t.oneIn(16_000, \"Dragon chainbody\")\n\t.tertiary(15, \"Clue scroll (elite)\")\n\t.tertiary(1000, \"Pet penance queen\")\n\t.add(\"Ranarr weed\", [20, 30])\n\t.add(\"Snapdragon\", [20, 30])\n\t.add(\"Torstol\", [20, 30])\n\t.add(\"Ranarr seed\", [3, 4])\n\t.add(\"Snapdragon seed\", [3, 4])\n\t.add(\"Torstol seed\", [3, 4])\n\t.add(\"Watermelon seed\", 50)\n\t.add(\"Palm tree seed\", [1, 2])\n\t.add(\"Magic seed\")\n\t.add(\"Archer helm\")\n\t.add(\"Berserker helm\")\n\t.add(\"Warrior helm\")\n\t.add(\"Farseer helm\")\n\t.add(\"Granite shield\")\n\t.add(\"Granite helm\")\n\t.add(\"Rune kiteshield\")\n\t.add(\"Coal\", 750)\n\t.add(\"Runite ore\", 20)\n\t.add(\"Runite bar\", 15)\n\t.add(\"Dragon bones\", [50, 75])\n\t.add(\"Black dragonhide\", [30, 50])\n\t.add(\"Uncut diamond\", [25, 30])\n\t.add(\"Magic logs\", [50, 100])\n\t.add(\"Mahogany plank\", [60, 80])\n\t.add(\"Rune arrow\", [400, 500])\n\t.add(\"Raw shark\", [250, 300])\n\t.add(\"Shark\", [75, 125])\n\t.add(\"Law rune\", [250, 300])\n\t.add(\"Blood rune\", [250, 300])\n\t.add(\"Limpwurt root\", [30, 50])\n\t.add(\"Unicorn horn\", [30, 50])\n\t.add(\"Coins\", [50_000, 75_000]);\n\nexport const BarbarianAssault = {\n\tLowGambleTable,\n\tMediumGambleTable,\n\tHighGambleTable,\n};\n", "import { Time, randFloat, roll, shuffleArr, sumArr } from \"e\";\n\nimport type { ItemBank, LootBank } from \"../../meta/types\";\nimport Bank from \"../../structures/Bank\";\nimport LootTable from \"../../structures/LootTable\";\nimport Minigame from \"../../structures/Minigame\";\nimport SimpleTable from \"../../structures/SimpleTable\";\nimport { resolveNameBank } from \"../../util/bank\";\nimport itemID from \"../../util/itemID\";\nimport { JSONClone } from \"../../util/util\";\n\nexport interface TeamMember {\n\tid: string;\n\tpersonalPoints: number;\n\t/**\n\t * Whether this team member can receive an ancient tablet, assumed false.\n\t *\n\t * Only received if players do not own one or have not consumed it already.\n\t */\n\tcanReceiveAncientTablet?: boolean;\n\t/**\n\t * Whether this team member can receive Metamorphic dust.\n\t *\n\t * https://twitter.com/JagexAsh/status/1050349088124952576.\n\t */\n\tcanReceiveDust?: boolean;\n}\n\nexport interface ChambersOfXericOptions {\n\t/**\n\t * Whether or not this raid is in Challenge Mode or not.\n\t */\n\tchallengeMode?: boolean;\n\t/**\n\t * The time in *milliseconds* that it took to complete the raid, used for rewarding with dust in challenge mode.\n\t */\n\ttimeToComplete?: number;\n\t/**\n\t * The members of the raid team, can be only 1 person.\n\t */\n\tteam: TeamMember[];\n}\n\nconst itemScales = resolveNameBank({\n\t\"Death rune\": 36,\n\t\"Blood rune\": 32,\n\t\"Soul rune\": 20,\n\t\"Rune arrow\": 14,\n\t\"Dragon arrow\": 202,\n\t\"Grimy toadflax\": 525,\n\t\"Grimy ranarr weed\": 800,\n\t\"Grimy irit leaf\": 162,\n\t\"Grimy avantoe\": 234,\n\t\"Grimy kwuarm\": 378,\n\t\"Grimy snapdragon\": 1348,\n\t\"Grimy cadantine\": 358,\n\t\"Grimy lantadyme\": 249,\n\t\"Grimy dwarf weed\": 201,\n\t\"Grimy torstol\": 824,\n\t\"Silver ore\": 20,\n\tCoal: 20,\n\t\"Gold ore\": 44,\n\t\"Mithril ore\": 32,\n\t\"Adamantite ore\": 167,\n\t\"Runite ore\": 2093,\n\t\"Uncut sapphire\": 189,\n\t\"Uncut emerald\": 142,\n\t\"Uncut ruby\": 250,\n\t\"Uncut diamond\": 514,\n\t\"Lizardman fang\": 28,\n\t\"Pure essence\": 2,\n\tSaltpetre: 24,\n\t\"Teak plank\": 100,\n\t\"Mahogany plank\": 240,\n\tDynamite: 54,\n\t// These 2 items are \"special\" but not really, they just only drop a max of 1.\n\t\"Torn prayer scroll\": 999_999,\n\t\"Dark relic\": 999_999,\n});\n\nconst NonUniqueTable = new SimpleTable<number>();\nfor (const itemID of Object.keys(itemScales)) NonUniqueTable.add(Number.parseInt(itemID));\n\nexport const CoXUniqueTable = new LootTable()\n\t.add(\"Dexterous prayer scroll\", 1, 20)\n\t.add(\"Arcane prayer scroll\", 1, 20)\n\n\t.add(\"Twisted buckler\", 1, 4)\n\t.add(\"Dragon hunter crossbow\", 1, 4)\n\n\t.add(\"Dinh's bulwark\", 1, 3)\n\t.add(\"Ancestral hat\", 1, 3)\n\t.add(\"Ancestral robe top\", 1, 3)\n\t.add(\"Ancestral robe bottom\", 1, 3)\n\t.add(\"Dragon claws\", 1, 3)\n\n\t.add(\"Elder maul\", 1, 2)\n\t.add(\"Kodai insignia\", 1, 2)\n\t.add(\"Twisted bow\", 1, 2);\n\nconst cmTeamTimes = [\n\t[1, Time.Hour + Time.Minute * 10],\n\t[2, Time.Hour + Time.Minute * 5],\n\t[3, Time.Minute * 50],\n\t[4, Time.Minute * 45],\n\t[10, Time.Minute * 42],\n\t[15, Time.Minute * 45],\n\t[23, Time.Hour],\n];\n\nexport class ChambersOfXericClass extends Minigame {\n\tid = 1;\n\taliases = [\"raids\", \"cox\"];\n\tname = \"Chambers of Xeric\";\n\tallItems: number[] = [...CoXUniqueTable.allItems, ...NonUniqueTable.table.map(i => i.item)];\n\tmaxRoll = 570_000 * (1 / 8675);\n\n\t/**\n\t * For every 8,675 total points obtained, a 1% chance to obtain a unique loot is given.\n\t * This chance is capped at 65.7% (570k points), further points will be sent to\n\t * roll for a second unique loot. A team who possesses 855,000 points in total has\n\t * an 65.7% chance to receive a unique loot, then a 32.85% chance to obtain a\n\t * second unique loot. Up to three unique rewards can be obtained per raid.\n\t */\n\tpublic determineUniqueChancesFromTeamPoints(teamPoints: number): number[] {\n\t\tconst chances = [];\n\n\t\tlet totalChancePercentage = teamPoints * (1 / 8675);\n\n\t\tfor (let i = 0; i < 3; i++) {\n\t\t\tif (totalChancePercentage > this.maxRoll) {\n\t\t\t\tchances.push(this.maxRoll);\n\t\t\t\ttotalChancePercentage -= this.maxRoll;\n\t\t\t} else {\n\t\t\t\tchances.push(totalChancePercentage);\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\n\t\treturn chances;\n\t}\n\n\t/**\n\t * Returns true if the team is elligible to receive dust based on their\n\t * completion time.\n\t *\n\t * https://oldschool.runescape.wiki/w/Chambers_of_Xeric/Challenge_Mode#Rewards\n\t *\n\t * @param teamSize How many members in the raid team.\n\t * @param completionTime The completion time of the raid, in *milliseconds*.\n\t */\n\tpublic elligibleForDust(teamSize: number, completionTime: number): boolean {\n\t\t// For every required time there is, if their team size is in that range,\n\t\t// return true if their time is <= the required time.\n\t\tfor (const [teamSizeRange, timeRequired] of cmTeamTimes) {\n\t\t\tif (teamSize <= teamSizeRange) {\n\t\t\t\treturn completionTime <= timeRequired;\n\t\t\t}\n\t\t}\n\n\t\t// If their team is > 23, must be 1h 20m.\n\t\treturn completionTime <= Time.Hour + Time.Minute * 20;\n\t}\n\n\tpublic rollLootFromChances(chances: number[]): Bank {\n\t\tlet rolls = 0;\n\n\t\tfor (const chance of chances) {\n\t\t\tif (randFloat(0, 100) < chance) {\n\t\t\t\trolls++;\n\t\t\t}\n\t\t}\n\n\t\treturn CoXUniqueTable.roll(rolls);\n\t}\n\n\t// We're rolling 2 non-unique loots based off a number of personal points.\n\tpublic rollNonUniqueLoot(personalPoints: number): ItemBank {\n\t\t// First, pick which items we will be giving them, without giving a duplicate.\n\t\tconst items: number[] = [];\n\t\twhile (items.length < 2) {\n\t\t\tconst rolledItem = NonUniqueTable.roll();\n\t\t\tif (!items.includes(rolledItem)) items.push(rolledItem);\n\t\t}\n\n\t\t// Now return an ItemBank of these 2 items, the quantity is [points / scale].\n\t\t// With a minimum of 1.\n\t\tconst loot: ItemBank = {\n\t\t\t[items[0]]: Math.max(1, Math.floor(personalPoints / itemScales[items[0]])),\n\t\t\t[items[1]]: Math.max(1, Math.floor(personalPoints / itemScales[items[1]])),\n\t\t};\n\n\t\tif (roll(12)) {\n\t\t\tloot[itemID(\"Clue scroll (elite)\")] = 1;\n\t\t}\n\n\t\treturn loot;\n\t}\n\n\tpublic complete(_options: ChambersOfXericOptions): LootBank {\n\t\tconst options = JSONClone(_options);\n\n\t\t// Will only check for elligibility for dust if timeToComplete given, and challengeMode = true.\n\t\tconst elligibleForDust =\n\t\t\ttypeof options.timeToComplete === \"number\" &&\n\t\t\toptions.challengeMode &&\n\t\t\tthis.elligibleForDust(options.team.length, options.timeToComplete);\n\n\t\tif (elligibleForDust) {\n\t\t\t// If in challenge mode, and elligible for dust, 5000pts is added to\n\t\t\t// each team member.\n\t\t\t// https://oldschool.runescape.wiki/w/Chambers_of_Xeric/Challenge_Mode#Rewards\n\t\t\tfor (const member of options.team) {\n\t\t\t\tmember.personalPoints += 5000;\n\t\t\t}\n\t\t}\n\n\t\t// The sum of all members personal points is the team points.\n\t\tconst teamPoints = sumArr(options.team.map(val => val.personalPoints));\n\n\t\tconst dropChances = this.determineUniqueChancesFromTeamPoints(teamPoints);\n\t\tconst uniqueLoot = this.rollLootFromChances(dropChances);\n\n\t\tconst lootResult: LootBank = {};\n\n\t\t// This table is used to pick which team member gets the unique(s).\n\t\tconst uniqueDeciderTable = new SimpleTable<string>();\n\n\t\tfor (const teamMember of options.team) {\n\t\t\t// Give every team member a Loot.\n\t\t\tlootResult[teamMember.id] = new Bank();\n\n\t\t\t// If the team and team member is elligible for dust, roll for this user.\n\t\t\tif (elligibleForDust && teamMember.canReceiveDust && roll(400)) {\n\t\t\t\tlootResult[teamMember.id].add(\"Metamorphic dust\");\n\t\t\t}\n\n\t\t\tif (elligibleForDust && roll(75)) {\n\t\t\t\tlootResult[teamMember.id].add(\"Twisted ancestral colour kit\");\n\t\t\t}\n\n\t\t\t// If the team member can receive an Ancient Tablet, roll for this user.\n\t\t\tif (teamMember.canReceiveAncientTablet && roll(10)) {\n\t\t\t\tlootResult[teamMember.id].add(\"Ancient tablet\");\n\t\t\t}\n\n\t\t\t// Add this member to the \"unique decider table\", using their points as the weight.\n\t\t\tuniqueDeciderTable.add(teamMember.id, teamMember.personalPoints);\n\t\t}\n\n\t\t// For every unique item received, add it to someones loot.\n\t\twhile (uniqueLoot.length > 0) {\n\t\t\tif (uniqueDeciderTable.table.length === 0) break;\n\t\t\tconst receipientID = uniqueDeciderTable.roll();\n\t\t\tconst uniqueItem = uniqueLoot.random()!;\n\t\t\tlootResult[receipientID].add(uniqueItem.id, 1);\n\t\t\tuniqueLoot.remove(uniqueItem.id, 1);\n\t\t\tif (roll(53)) {\n\t\t\t\tlootResult[receipientID].add(\"Olmlet\");\n\t\t\t}\n\t\t\tuniqueDeciderTable.delete(receipientID);\n\t\t}\n\n\t\t// For everyone who didn't receive a unique, i.e wasn't removed from the\n\t\t// unique decider table, give them a non-unique roll.\n\t\tfor (const leftOverRecipient of uniqueDeciderTable.table) {\n\t\t\t// Find this member in the team, and get their points.\n\t\t\tconst pointsOfThisMember = options.team.find(\n\t\t\t\tmember => member.id === leftOverRecipient.item,\n\t\t\t)!.personalPoints;\n\n\t\t\tconst entries = Object.entries(this.rollNonUniqueLoot(pointsOfThisMember));\n\t\t\tfor (const [itemID, quantity] of entries) {\n\t\t\t\tlootResult[leftOverRecipient.item].add(Number.parseInt(itemID), quantity);\n\t\t\t}\n\t\t}\n\n\t\tconst onyxChance = options.team.length * 70;\n\t\tfor (const bank of shuffleArr(Object.values(lootResult))) {\n\t\t\tif (roll(onyxChance)) {\n\t\t\t\tbank.add(\"Onyx\");\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\n\t\treturn lootResult;\n\t}\n}\n\nexport const ChambersOfXeric = new ChambersOfXericClass();\n", "export default abstract class Minigame {\n\tpublic abstract id: number;\n\tpublic abstract name: string;\n\tpublic abstract aliases: string[];\n}\n", "import { randInt } from \"e\";\n\nimport type { SimpleTableItem } from \"../meta/types\";\n\nexport default class SimpleTable<T> {\n\tpublic length: number;\n\tpublic table: SimpleTableItem<T>[];\n\tpublic totalWeight: number;\n\n\tpublic constructor() {\n\t\tthis.table = [];\n\t\tthis.length = 0;\n\t\tthis.totalWeight = 0;\n\t}\n\n\tpublic add(item: T, weight = 1): this {\n\t\tthis.length += 1;\n\t\tthis.totalWeight += weight;\n\n\t\tthis.table.push({\n\t\t\titem,\n\t\t\tweight,\n\t\t});\n\n\t\treturn this;\n\t}\n\n\tpublic delete(item: T): this {\n\t\tconst tableItem = this.table.find(_tableItem => _tableItem.item === item);\n\t\tif (!tableItem) {\n\t\t\tthrow `${item} doesn't exist in this SimpleTable.`;\n\t\t}\n\n\t\tthis.length -= 1;\n\t\tthis.totalWeight -= tableItem.weight;\n\n\t\tthis.table = this.table.filter(_item => _item !== tableItem);\n\n\t\treturn this;\n\t}\n\n\tpublic roll(): SimpleTableItem<T>[\"item\"] {\n\t\t// Random number between 1 and the total weighting\n\t\tconst randomWeight = randInt(1, this.totalWeight);\n\n\t\t// The index of the item that will be used.\n\t\tlet result = -1;\n\t\tlet weight = 0;\n\n\t\tfor (let i = 0; i < this.table.length; i++) {\n\t\t\tconst item = this.table[i];\n\n\t\t\tweight += item.weight;\n\t\t\tif (randomWeight <= weight) {\n\t\t\t\tresult = i;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\n\t\treturn this.table[result].item;\n\t}\n}\n", "import { Time, calcWhatPercent, increaseNumByPercent } from \"e\";\nimport type { ItemBank } from \"../meta/types\";\nimport Bank from \"../structures/Bank\";\nimport Items from \"../structures/Items\";\nimport itemID from \"./itemID\";\n\n/**\n * Transforms a string-based bank to an ID-based bank\n * @param nameBank A string-based bank to convert\n */\nexport function resolveNameBank<T>(nameBank: Record<string, T>): Record<string, T> {\n\tconst newBank: Record<string, T> = {};\n\n\tfor (const [name, val] of Object.entries(nameBank)) {\n\t\tnewBank[itemID(name)] = val;\n\t}\n\n\treturn newBank;\n}\n\n/**\n * Resolves a bank which uses item names or item IDs.\n * @param bank A bank to resolve\n */\nexport function resolveBank(bank: Record<string, number>): ItemBank {\n\tconst newBank: ItemBank = {};\n\n\tfor (const [nameOrID, val] of Object.entries(bank)) {\n\t\tconst int = Number(nameOrID);\n\t\tconst id = Number.isNaN(int) ? itemID(nameOrID) : int;\n\t\tnewBank[id] = val;\n\t}\n\n\treturn newBank;\n}\n\n/**\n * Adds an item to a bank\n * @param bank A NumberKeyed bank to add items in\n * @param itemID The item ID to add\n * @param amountToAdd Quantity of items to be added. Defaults to 1\n */\nexport function addItemToBank(bank: ItemBank, itemID: number, amountToAdd = 1): ItemBank {\n\tconst newBank = { ...bank };\n\n\tif (newBank[itemID]) newBank[itemID] += amountToAdd;\n\telse newBank[itemID] = amountToAdd;\n\n\treturn newBank;\n}\n\nexport function fasterResolveBank(bank: ItemBank) {\n\tconst firstKey = Object.keys(bank)[0];\n\tif (!Number.isNaN(Number(firstKey))) {\n\t\treturn bank;\n\t}\n\n\treturn resolveBank(bank);\n}\n\nexport function increaseBankQuantitesByPercent(bank: Bank, percent: number, whitelist: number[] | null = null) {\n\tfor (const [item, qty] of bank.items()) {\n\t\tif (whitelist !== null && !whitelist.includes(item.id)) continue;\n\t\tconst increased = Math.floor(increaseNumByPercent(qty, percent));\n\t\tbank.set(item.id, increased);\n\t}\n}\n\nexport function convertBankToPerHourStats(bank: Bank, time: number) {\n\tconst result = [];\n\tfor (const [item, qty] of bank.items()) {\n\t\tresult.push(`${(qty / (time / Time.Hour)).toFixed(1)}/hr ${item.name}`);\n\t}\n\treturn result;\n}\n\nexport function calcDropRatesFromBank(bank: Bank, iterations: number, uniques: number[]) {\n\tconst result = [];\n\tlet uniquesReceived = 0;\n\tfor (const [item, qty] of bank.items().sort((a, b) => a[1] - b[1])) {\n\t\tif (uniques.includes(item.id)) {\n\t\t\tuniquesReceived += qty;\n\t\t}\n\t\tconst rate = Math.round(iterations / qty);\n\t\tif (rate < 2) continue;\n\t\tlet { name } = item;\n\t\tif (uniques.includes(item.id)) name = `**${name}**`;\n\t\tresult.push(`${qty}x ${name} (1 in ${rate})`);\n\t}\n\tresult.push(\n\t\t`\\n**${uniquesReceived}x Uniques (1 in ${Math.round(iterations / uniquesReceived)} which is ${calcWhatPercent(\n\t\t\tuniquesReceived,\n\t\t\titerations,\n\t\t)}%)**`,\n\t);\n\treturn result.join(\", \");\n}\n\nexport function calcDropRatesFromBankWithoutUniques(bank: Bank, iterations: number) {\n\tconst results: string[] = [];\n\tfor (const [item, qty] of bank.items().sort((a, b) => a[1] - b[1])) {\n\t\tconst rate = Math.round(iterations / qty);\n\t\tif (rate < 2) continue;\n\t\tresults.push(`${item.name} (1 in ${rate})`);\n\t}\n\treturn results;\n}\n\nexport function addBanks(banks: ItemBank[]): Bank {\n\tconst bank = new Bank();\n\tfor (const _bank of banks) {\n\t\tbank.add(_bank);\n\t}\n\treturn bank;\n}\n\nexport function averageBank(bank: Bank, kc: number) {\n\tconst newBank = new Bank();\n\tfor (const [item, qty] of bank.items()) {\n\t\tnewBank.add(item.id, Math.floor(qty / kc));\n\t}\n\treturn newBank;\n}\n\nexport function generateRandomBank(size = 100, amountPerItem = 10000) {\n\tconst bank = new Bank();\n\tfor (let i = 0; i < size; i++) {\n\t\tbank.add(Items.random().id, amountPerItem);\n\t}\n\treturn bank;\n}\n", "import { randFloat, randInt, roll } from \"e\";\n\nimport { CLUES, MINIGAMES, SKILLS, type hiscoreURLs, mappedBossNames } from \"../constants\";\nimport type { CustomKillLogic, Item, MonsterKillOptions } from \"../meta/types\";\nimport type Bank from \"../structures/Bank\";\nimport Items from \"../structures/Items\";\nimport LootTable from \"../structures/LootTable\";\nimport type Player from \"../structures/Player\";\n\nexport function resolvePlayerFromHiscores(csvData: string, accountType: keyof typeof hiscoreURLs): Player {\n\tconst data: string[][] = csvData\n\t\t.trim()\n\t\t.split(\"\\n\")\n\t\t.map((str): string[] => str.split(\",\"));\n\n\tconst resolvedPlayer: any = {\n\t\tskills: {},\n\t\tminigames: {},\n\t\tclues: {},\n\t\tbossRecords: {},\n\t};\n\n\tlet accumulativeIndex = 0;\n\n\tfor (let i = 0; i < SKILLS.length; i++) {\n\t\tresolvedPlayer.skills[SKILLS[i]] = {\n\t\t\trank: Number(data[i][0]),\n\t\t\tlevel: Number(data[i][1]),\n\t\t\txp: Number(data[i][2]),\n\t\t};\n\t}\n\n\tif (accountType === \"seasonal\") {\n\t\tresolvedPlayer.leaguePoints = {\n\t\t\trank: Number(data[accumulativeIndex + SKILLS.length][0]),\n\t\t\tpoints: Number(data[accumulativeIndex + SKILLS.length][1]),\n\t\t};\n\t}\n\n\taccumulativeIndex += SKILLS.length + 2;\n\n\tfor (let i = 0; i < 4; i++) {\n\t\tresolvedPlayer.minigames[MINIGAMES[i]] = {\n\t\t\trank: Number(data[i + accumulativeIndex][0]),\n\t\t\tscore: Number(data[i + accumulativeIndex][1]),\n\t\t};\n\t}\n\n\taccumulativeIndex += 4;\n\n\tfor (let i = 0; i < CLUES.length; i++) {\n\t\tresolvedPlayer.clues[CLUES[i]] = {\n\t\t\trank: Number(data[i + accumulativeIndex][0]),\n\t\t\tscore: Number(data[i + accumulativeIndex][1]),\n\t\t};\n\t}\n\n\taccumulativeIndex += CLUES.length;\n\n\tfor (let i = 0; i < 5; i++) {\n\t\tconst minigameKey = MINIGAMES[i + 4];\n\t\tconst minigameData = {\n\t\t\trank: Number(data[i + accumulativeIndex][0]),\n\t\t\tscore: Number(data[i + accumulativeIndex][1]),\n\t\t};\n\t\tresolvedPlayer.minigames[minigameKey] = minigameData;\n\t}\n\n\taccumulativeIndex += 5;\n\n\tfor (let i = 0; i < mappedBossNames.length; i++) {\n\t\tif (!data[i + accumulativeIndex]) continue;\n\t\tconst bossName = mappedBossNames[i][0];\n\t\tresolvedPlayer.bossRecords[bossName] = {\n\t\t\trank: Number(data[i + accumulativeIndex][0]),\n\t\t\tscore: Number(data[i + accumulativeIndex][1]),\n\t\t};\n\t}\n\n\treturn resolvedPlayer;\n}\n\n/**\n * Determines whether a string is a valid RuneScape username.\n * @param username The username to check.\n */\nexport function isValidUsername(username: string): boolean {\n\treturn Boolean(username.match(\"^[A-Za-z0-9]{1}[A-Za-z0-9 -_\\u00A0]{0,11}$\"));\n}\n\nexport function convertLVLtoXP(lvl: number): number {\n\tlet points = 0;\n\n\tfor (let i = 1; i < lvl; i++) {\n\t\tpoints += Math.floor(i + 300 * Math.pow(2, i / 7));\n\t}\n\n\treturn Math.floor(points / 4);\n}\n\nexport function convertXPtoLVL(xp: number, cap = 99): number {\n\tlet points = 0;\n\n\tfor (let lvl = 1; lvl <= cap; lvl++) {\n\t\tpoints += Math.floor(lvl + 300 * Math.pow(2, lvl / 7));\n\n\t\tif (Math.floor(points / 4) >= xp + 1) {\n\t\t\treturn lvl;\n\t\t}\n\t}\n\n\treturn cap;\n}\n\nexport function getBrimKeyChanceFromCBLevel(combatLevel: number): number {\n\t// https://twitter.com/JagexKieren/status/1083781544135847936\n\tif (combatLevel < 100) {\n\t\treturn Math.round(0.2 * (combatLevel - 100) ** 2 + 100);\n\t}\n\treturn Math.max(Math.round((-1 / 5) * combatLevel + 120), 50);\n}\n\nexport function getLarranKeyChanceFromCBLevel(combatLevel: number, slayerMonster: boolean): number {\n\tlet baseChance = 0;\n\n\tif (combatLevel <= 80) {\n\t\tbaseChance = (3 / 10) * Math.pow(80 - combatLevel, 2) + 100;\n\t} else if (combatLevel <= 350) {\n\t\tbaseChance = (-5 / 27) * combatLevel + 115;\n\t} else {\n\t\tbaseChance = 50;\n\t}\n\n\t// Reduce the base chance by 20% if slayerMonster is true\n\tconst adjustedChance = slayerMonster ? baseChance * 0.8 : baseChance;\n\n\treturn adjustedChance;\n}\n\nexport function JSONClone<O>(object: O): O {\n\treturn JSON.parse(JSON.stringify(object));\n}\n\nexport function getAncientShardChanceFromHP(hitpoints: number): number {\n\treturn Math.round((500 - hitpoints) / 1.5);\n}\n\nexport function getTotemChanceFromHP(hitpoints: number): number {\n\treturn 500 - hitpoints;\n}\n\nexport function getSlayersEnchantmentChanceFromHP(hitpoints: number): number {\n\tconst chanceHitpoints = Math.min(hitpoints, 300);\n\treturn Math.round(320 - (chanceHitpoints * 8) / 10);\n}\n\nexport interface RevTable {\n\tuniqueTable: RevTableItem;\n\tancientEmblem: RevTableItem;\n\tancientTotem: RevTableItem;\n\tancientCrystal: RevTableItem;\n\tancientStatuette: RevTableItem;\n\ttopThree: RevTableItem;\n\tseeds: RevTableItem;\n}\n\ntype RevTableItem = [number, number];\n\nexport const revsUniqueTable = new LootTable()\n\t.add(\"Amulet of avarice\", 1, 2)\n\t.add(\"Craw's bow (u)\", 1, 1)\n\t.add(\"Thammaron's sceptre (u)\", 1, 1)\n\t.add(\"Viggora's chainmace (u)\", 1, 1);\n\nexport function makeRevTable(table: RevTable): CustomKillLogic {\n\treturn (options: MonsterKillOptions, currentLoot: Bank) => {\n\t\tconst index = options.onSlayerTask ? 1 : 0;\n\t\tif (roll(table.uniqueTable[index])) {\n\t\t\tcurrentLoot.add(revsUniqueTable.roll());\n\t\t\treturn;\n\t\t}\n\n\t\tif (roll(table.seeds[index])) {\n\t\t\tcurrentLoot.add(\"Yew seed\", randInt(2, 7));\n\t\t\treturn;\n\t\t}\n\n\t\tif (roll(table.seeds[index])) {\n\t\t\tcurrentLoot.add(\"Magic seed\", randInt(2, 7));\n\t\t\treturn;\n\t\t}\n\n\t\tfor (const [key, itemName] of [\n\t\t\t[\"ancientEmblem\", \"Ancient emblem\"],\n\t\t\t[\"ancientTotem\", \"Ancient totem\"],\n\t\t\t[\"ancientCrystal\", \"Ancient crystal\"],\n\t\t\t[\"ancientStatuette\", \"Ancient statuette\"],\n\t\t\t[\"topThree\", \"Ancient medallion\"],\n\t\t\t[\"topThree\", \"Ancient effigy\"],\n\t\t\t[\"topThree\", \"Ancient relic\"],\n\t\t] as const) {\n\t\t\tif (roll(table[key][index])) {\n\t\t\t\tcurrentLoot.add(itemName);\n\t\t\t\treturn;\n\t\t\t}\n\t\t}\n\t};\n}\n\n/**\n * Adds random variation to a number. For example, if you pass 10%, it can at most lower the value by 10%,\n * or increase it by 10%, and everything in between.\n * @param value The value to add variation too.\n * @param percentage The max percentage to fluctuate the value by, in both negative/positive.\n */\nexport function randomVariation(value: number, percentage: number) {\n\tconst lowerLimit = value * (1 - percentage / 100);\n\tconst upperLimit = value * (1 + percentage / 100);\n\treturn randFloat(lowerLimit, upperLimit);\n}\n\nexport function getItem(itemName: string | number | undefined): Item | null {\n\tif (!itemName) return null;\n\tlet identifier: string | number | undefined = \"\";\n\tif (typeof itemName === \"number\") {\n\t\tidentifier = itemName;\n\t} else {\n\t\tconst parsed = Number(itemName);\n\t\tidentifier = Number.isNaN(parsed) ? itemName : parsed;\n\t}\n\tif (typeof identifier === \"string\") {\n\t\tidentifier = identifier.replace(/\u2019/g, \"'\");\n\t}\n\treturn Items.get(identifier) ?? null;\n}\n\nexport function getItemOrThrow(itemName: string | number | undefined): Item {\n\tconst item = getItem(itemName);\n\tif (!item) throw new Error(`Item ${itemName} not found.`);\n\treturn item;\n}\n\nexport function resolveItems(_itemArray: string | number | (string | number)[]): number[] {\n\tconst itemArray = Array.isArray(_itemArray) ? _itemArray : [_itemArray];\n\tconst newArray: number[] = [];\n\n\tfor (const item of itemArray) {\n\t\tif (typeof item === \"number\") {\n\t\t\tnewArray.push(item);\n\t\t} else {\n\t\t\tconst osItem = Items.get(item);\n\t\t\tif (!osItem) {\n\t\t\t\tthrow new Error(`No item found for: ${item}.`);\n\t\t\t}\n\t\t\tnewArray.push(osItem.id);\n\t\t}\n\t}\n\n\treturn newArray;\n}\n\ntype ResolvableItem = number | string;\nexport type ArrayItemsResolvable = (ResolvableItem | ResolvableItem[])[];\nexport type ArrayItemsResolved = (number | number[])[];\nexport function deepResolveItems(itemArray: ArrayItemsResolvable): ArrayItemsResolved {\n\tconst newArray: ArrayItemsResolved = [];\n\n\tfor (const item of itemArray) {\n\t\tif (typeof item === \"number\") {\n\t\t\tnewArray.push(item);\n\t\t} else if (Array.isArray(item)) {\n\t\t\tconst test = resolveItems(item);\n\t\t\tnewArray.push(test);\n\t\t} else {\n\t\t\tconst osItem = Items.get(item);\n\t\t\tif (!osItem) {\n\t\t\t\tthrow new Error(`No item found for: ${item}.`);\n\t\t\t}\n\t\t\tnewArray.push(osItem.id);\n\t\t}\n\t}\n\n\treturn newArray;\n}\n\nexport function itemTupleToTable(items: [string, number | [number, number]][]): LootTable {\n\tconst table = new LootTable();\n\tfor (const [item, quantity] of items) {\n\t\ttable.every(item, quantity ?? 1);\n\t}\n\treturn table;\n}\n\nexport * from \"./smallUtils\";\n", "import { roll } from \"e\";\n\nimport Bank from \"../../structures/Bank\";\nimport LootTable from \"../../structures/LootTable\";\nimport itemID from \"../../util/itemID\";\nimport { randomVariation } from \"../../util/util\";\n\nconst trawlerFish = [\n\t{\n\t\tid: itemID(\"Raw shrimps\"),\n\t\tlevel: 1,\n\t\txp: 10,\n\t},\n\t{\n\t\tid: itemID(\"Raw sardine\"),\n\t\tlevel: 5,\n\t\txp: 20,\n\t},\n\t{\n\t\tid: itemID(\"Raw anchovies\"),\n\t\tlevel: 15,\n\t\txp: 40,\n\t},\n\t{\n\t\tid: itemID(\"Raw tuna\"),\n\t\tlevel: 35,\n\t\txp: 80,\n\t},\n\t{\n\t\tid: itemID(\"Raw lobster\"),\n\t\tlevel: 40,\n\t\txp: 90,\n\t},\n\t{\n\t\tid: itemID(\"Raw swordfish\"),\n\t\tlevel: 50,\n\t\txp: 100,\n\t},\n\t{\n\t\tid: itemID(\"Raw shark\"),\n\t\tlevel: 76,\n\t\txp: 110,\n\t},\n\t{\n\t\tid: itemID(\"Raw sea turtle\"),\n\t\tlevel: 79,\n\t\txp: 38,\n\t},\n\t{\n\t\tid: itemID(\"Raw manta ray\"),\n\t\tlevel: 81,\n\t\txp: 46,\n\t},\n];\n\nconst RawJunkTable = new LootTable()\n\t.add(\"Broken arrow\")\n\t.add(\"Broken glass\")\n\t.add(\"Broken staff\")\n\t.add(\"Buttons\")\n\t.add(\"Damaged armour\")\n\t.add(\"Old boot\")\n\t.add(\"Oyster\")\n\t.add(\"Pot\")\n\t.add(\"Rusty sword\");\n\nconst JunkTable = new LootTable().add(RawJunkTable, [0, 1]).add(RawJunkTable, [0, 1]);\n\nconst anglerOutfit = [\"Angler hat\", \"Angler top\", \"Angler waders\", \"Angler boots\"].map(itemID);\n\nexport function FishingTrawler(fishingLevel: number, hasEliteArd: boolean, bank?: Bank) {\n\tconst loot = new Bank();\n\tif (roll(5000)) {\n\t\tloot.add(\"Heron\");\n\t}\n\n\tif (roll(8)) {\n\t\tfor (const item of anglerOutfit) {\n\t\t\tif (!bank || !bank.has(item)) {\n\t\t\t\tloot.add(item);\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t}\n\n\tloot.add(JunkTable.roll());\n\n\tconst ableToFish = trawlerFish.filter(i => fishingLevel >= i.level);\n\tlet possibleFish = ableToFish.slice(Math.max(ableToFish.length - 5, 0)).reverse();\n\n\tlet xp = 0;\n\n\tconst len = possibleFish.length;\n\tlet multiplier = 3;\n\tfor (let i = 0; i < len; i++) {\n\t\tconst fishToGive = possibleFish[0];\n\n\t\tlet qty = Math.floor(randomVariation((ableToFish.indexOf(fishToGive) + 1) * multiplier, 50));\n\t\t// 50% Extra fish for having elite diary\n\t\tif (hasEliteArd) {\n\t\t\tqty = Math.floor(qty * 1.5);\n\t\t}\n\n\t\txp += fishToGive.xp * qty;\n\n\t\tmultiplier /= 2;\n\t\tloot.add(fishToGive.id, qty);\n\n\t\t// Cant get same fish twice in 1 trawler\n\t\tpossibleFish = possibleFish.filter(i => i !== fishToGive);\n\t\tif (roll(3)) break;\n\t}\n\n\treturn { loot, xp };\n}\n", "import LootTable from \"../../structures/LootTable\";\n\nconst DiedTable = new LootTable()\n\t.add(\"Adamant dagger\")\n\t.add(\"Adamant full helm\")\n\t.add(\"Adamant mace\", [2, 3])\n\t.add(\"Adamant pickaxe\")\n\t.add(\"Adamant platebody\")\n\t.add(\"Adamant platelegs\")\n\t.add(\"Adamant plateskirt\")\n\t.add(\"Adamant scimitar\")\n\t.add(\"Maple longbow\", [7, 13])\n\t.add(\"Maple shortbow\", [8, 11])\n\t.add(\"Mithril full helm\")\n\t.add(\"Mithril mace\", [2, 5])\n\t.add(\"Mithril platebody\")\n\t.add(\"Mithril platelegs\")\n\t.add(\"Mithril plateskirt\")\n\t.add(\"Air rune\", [200, 300])\n\t.add(\"Body rune\", [250, 350])\n\t.add(\"Earth rune\", [200, 300])\n\t.add(\"Fire rune\", [200, 300])\n\t.add(\"Mind rune\", [300, 400])\n\t.add(\"Water rune\", [200, 300])\n\t.add(\"Cake\", [10, 20])\n\t.add(\"Cod\", [75, 125])\n\t.add(\"Trout\", [50, 100])\n\t.add(\"Eye of newt\", [300, 500])\n\t.add(\"Silver bar\", [15, 30])\n\t.add(\"Uncut sapphire\", [1, 3]);\n\nconst StandardInnerTable = new LootTable()\n\t// Gear\n\t.add(\"Rune full helm\", [2, 4])\n\t.add(\"Rune chainbody\", [1, 2])\n\t.add(\"Rune platebody\", [1, 2])\n\t.add(\"Rune platelegs\", [1, 2])\n\t.add(\"Rune plateskirt\", [1, 2])\n\t.add(\"Rune halberd\", [1, 2])\n\t.add(\"Rune pickaxe\", [1, 2])\n\t.add(\"Dragon halberd\")\n\n\t// Runes\n\t.add(\"Cosmic rune\", [160, 240])\n\t.add(\"Nature rune\", [100, 140])\n\t.add(\"Law rune\", [80, 140])\n\t.add(\"Chaos rune\", [180, 300])\n\t.add(\"Death rune\", [100, 160])\n\t.add(\"Blood rune\", [80, 140])\n\n\t// Arrows\n\t.add(\"Mithril arrow\", [800, 1200])\n\t.add(\"Adamant arrow\", [400, 600])\n\t.add(\"Rune arrow\", [200, 300])\n\t.add(\"Dragon arrow\", [30, 80])\n\n\t// Other\n\t.add(\"Battlestaff\", [4, 8])\n\t.add(\"Coins\", [20_000, 80_000]);\n\nconst StandardTable = new LootTable()\n\t.every(\"Crystal shard\", [3, 7])\n\t.every(StandardInnerTable, 2)\n\t.tertiary(25, \"Clue scroll (elite)\")\n\t.tertiary(120, \"Crystal weapon seed\")\n\t.tertiary(120, \"Crystal armour seed\")\n\t.tertiary(2000, \"Enhanced crystal weapon seed\")\n\t.tertiary(2000, \"Youngllef\");\n\nconst CorruptedInnerTable = new LootTable()\n\t// Gear\n\t.add(\"Rune full helm\", [3, 5])\n\t.add(\"Rune chainbody\", [2, 3])\n\t.add(\"Rune platebody\", 2)\n\t.add(\"Rune platelegs\", [2, 3])\n\t.add(\"Rune plateskirt\", [2, 3])\n\t.add(\"Rune halberd\", [2, 3])\n\t.add(\"Rune pickaxe\", [2, 3])\n\t.add(\"Dragon halberd\", [1, 2])\n\n\t// Runes\n\t.add(\"Cosmic rune\", [175, 250])\n\t.add(\"Nature rune\", [120, 150])\n\t.add(\"Law rune\", [100, 150])\n\t.add(\"Chaos rune\", [200, 350])\n\t.add(\"Death rune\", [120, 175])\n\t.add(\"Blood rune\", [100, 150])\n\n\t// Arrows\n\t.add(\"Mithril arrow\", [1000, 1500])\n\t.add(\"Adamant arrow\", [500, 725])\n\t.add(\"Rune arrow\", [250, 450])\n\t.add(\"Dragon arrow\", [50, 100])\n\n\t// Gems\n\t.add(\"Uncut sapphire\", [25, 65])\n\t.add(\"Uncut emerald\", [15, 60])\n\t.add(\"Uncut ruby\", [10, 40])\n\t.add(\"Uncut diamond\", [5, 15])\n\n\t// Other\n\t.add(\"Battlestaff\", [8, 12])\n\t.add(\"Coins\", [75_000, 150_000]);\n\nconst CorruptedTable = new LootTable()\n\t// Gauntlet cape is given manually in OSB\n\t.every(\"Crystal shard\", [5, 9])\n\t.every(CorruptedInnerTable, 3)\n\t.tertiary(20, \"Clue scroll (elite)\")\n\t.tertiary(50, \"Crystal weapon seed\")\n\t.tertiary(50, \"Crystal armour seed\")\n\t.tertiary(400, \"Enhanced crystal weapon seed\")\n\t.tertiary(800, \"Youngllef\");\n\ninterface NormalGauntletOptions {\n\tdied: boolean;\n\ttype: \"normal\" | \"corrupted\";\n}\n\nexport function Gauntlet({ died, type }: NormalGauntletOptions) {\n\tconst loot = died ? DiedTable.roll() : type === \"normal\" ? StandardTable.roll() : CorruptedTable.roll();\n\treturn loot;\n}\n", "import { calcPercentOfNum, calcWhatPercent, percentChance, randInt, roll } from \"e\";\n\nimport type { LootBank } from \"../../meta/types\";\nimport Bank from \"../../structures/Bank\";\nimport LootTable from \"../../structures/LootTable\";\nimport SimpleTable from \"../../structures/SimpleTable\";\nimport { resolveNameBank } from \"../../util/bank\";\n\nexport interface TeamMember {\n\tid: string;\n\tdamageDone: number;\n}\n\nexport interface NightmareOptions {\n\t/**\n\t * The members of the team killing the nightmare.\n\t */\n\tteam: TeamMember[];\n\tisPhosani: boolean;\n}\n\nconst data: Record<string, [number[], number]> = {\n\t// [name, [quantity_range, weighting]]\n\n\t// Runes and ammunition\n\t\"Cosmic rune\": [[15, 218], 4],\n\t\"Nature rune\": [[6, 165], 4],\n\t\"Death rune\": [[24, 176], 4],\n\t\"Blood rune\": [[13, 129], 4],\n\t\"Soul rune\": [[12, 126], 4],\n\t\"Adamant arrow\": [[32, 533], 3],\n\t\"Rune arrow\": [[12, 539], 3],\n\tCannonball: [[72, 192], 2],\n\n\t// Resources\n\t\"Yew logs\": [[14, 121], 4],\n\t\"Magic logs\": [[3, 55], 4],\n\t\"Gold ore\": [[14, 174], 4],\n\tCoal: [[16, 253], 4],\n\t\"Mithril ore\": [[15, 168], 4],\n\t\"Adamantite ore\": [[8, 50], 4],\n\t\"Grimy cadantine\": [[1, 14], 4],\n\t\"Grimy torstol\": [[1, 16], 4],\n\t\"Uncut emerald\": [[1, 41], 3],\n\t\"Uncut ruby\": [[2, 35], 3],\n\t\"Snapdragon seed\": [[1, 6], 1],\n\n\t// Consumables\n\tShark: [[1, 15], 6],\n\tBass: [[1, 18], 6],\n\t\"Prayer potion(3)\": [[1, 10], 5],\n\t\"Saradomin brew(3)\": [[1, 10], 5],\n\t\"Zamorak brew(3)\": [[1, 10], 5],\n\t\"Sanfew serum(3)\": [[1, 11], 5],\n\n\tCoins: [[2717, 43_854], 2],\n};\nconst nonUniqueItemRanges = resolveNameBank(data);\n\nconst NonUniqueTable = new SimpleTable<number>();\nfor (const [id, data] of Object.entries(nonUniqueItemRanges)) {\n\tNonUniqueTable.add(Number.parseInt(id), data[1]);\n}\n\n// Phosani\nconst phosaniData: Record<string, [number[], number]> = {\n\t// [name, [quantity_range, weighting]]\n\n\t// Runes and ammunition\n\t\"Cosmic rune\": [[247, 420], 4],\n\t\"Nature rune\": [[165, 305], 4],\n\t\"Death rune\": [[165, 305], 4],\n\t\"Blood rune\": [[343, 765], 4],\n\t\"Soul rune\": [[110, 228], 4],\n\tCannonball: [[137, 382], 4],\n\t\"Rune arrow\": [[412, 957], 3],\n\n\t// Resources\n\t\"Mithril ore\": [[165, 305], 5],\n\tCoal: [[220, 458], 4],\n\t\"Gold ore\": [[165, 305], 4],\n\t\"Adamantite ore\": [[40, 95], 4],\n\t\"Magic logs\": [[40, 95], 4],\n\t\"Grimy cadantine\": [[13, 26], 4],\n\t\"Grimy torstol\": [[13, 26], 4],\n\t\"Snapdragon seed\": [[5, 10], 3],\n\t\"Uncut emerald\": [[33, 75], 3],\n\t\"Uncut ruby\": [[27, 60], 3],\n\t\"Runite ore\": [[11, 26], 2],\n\n\t// Consumables\n\tBass: [[16, 29], 6],\n\tShark: [[13, 26], 6],\n\t\"Prayer potion(3)\": [[8, 15], 5],\n\t\"Sanfew serum(3)\": [[6, 12], 5],\n\t\"Saradomin brew(3)\": [[8, 15], 5],\n\t\"Zamorak brew(3)\": [[8, 15], 5],\n\n\tCoins: [[41_417, 72_013], 2],\n};\nconst phosaniNonUniqueItemRanges = resolveNameBank(phosaniData);\n\nconst PhosaniNonUniqueTable = new SimpleTable<number>();\nfor (const [id, data] of Object.entries(phosaniNonUniqueItemRanges)) {\n\tPhosaniNonUniqueTable.add(Number.parseInt(id), data[1]);\n}\n\nconst GearTable = new SimpleTable<string>()\n\t.add(\"Inquisitor's mace\")\n\t.add(\"Inquisitor's great helm\", 2)\n\t.add(\"Inquisitor's hauberk\", 2)\n\t.add(\"Inquisitor's plateskirt\", 2)\n\t.add(\"Nightmare staff\", 3);\n\nconst OrbTable = new SimpleTable<string>().add(\"Eldritch orb\").add(\"Volatile orb\").add(\"Harmonised orb\");\n\nconst mvpTertiary = new LootTable()\n\t.tertiary(190, \"Clue scroll (elite)\")\n\t.tertiary(1900, \"Jar of dreams\")\n\t.tertiary(3800, \"Little nightmare\");\n\nconst nonMvpTertiary = new LootTable()\n\t.tertiary(200, \"Clue scroll (elite)\")\n\t.tertiary(4000, \"Little nightmare\")\n\t.tertiary(2000, \"Jar of dreams\");\n\nconst phosaniTertiary = new LootTable()\n\t.tertiary(35, \"Clue scroll (elite)\")\n\t.tertiary(100, \"Slepey tablet\")\n\t.tertiary(200, \"Parasitic egg\")\n\t.tertiary(1400, \"Little nightmare\")\n\t.tertiary(4000, \"Jar of dreams\");\n\nclass NightmareClass {\n\thp = 2400;\n\n\tallItems: number[] = [\n\t\t...NonUniqueTable.table.map(i => i.item),\n\t\t...GearTable.table.map(i => Number(i.item)),\n\t\t...OrbTable.table.map(i => Number(i.item)),\n\t\t...mvpTertiary.allItems,\n\t\t...nonMvpTertiary.allItems,\n\t];\n\n\tpublic rollNonUniqueLoot(percentage: number, isMvp: boolean, isPhosani: boolean): [number, number] {\n\t\tconst [table, ranges] = isPhosani\n\t\t\t? [PhosaniNonUniqueTable, phosaniNonUniqueItemRanges]\n\t\t\t: [NonUniqueTable, nonUniqueItemRanges];\n\t\tconst item = table.roll();\n\n\t\tconst [range] = ranges[item];\n\n\t\tif (isPhosani) {\n\t\t\treturn [item, randInt(range[0], range[1])];\n\t\t}\n\n\t\t// If the quantity range of the item is 50-100, we\n\t\t// give you 50 qty to start, then increase it.\n\t\tlet quantity = range[0];\n\t\tquantity += calcPercentOfNum(percentage, range[1]) - range[0];\n\n\t\tif (isMvp) quantity *= 1.1;\n\n\t\tquantity = Math.floor(Math.max(quantity, range[0]));\n\n\t\treturn [item, quantity];\n\t}\n\n\tpublic kill(options: Readonly<NightmareOptions>): LootBank {\n\t\tconst mvp = options.team.sort((a, b) => b.damageDone - a.damageDone)[0];\n\n\t\tconst parsedTeam = options.team.map(teamMember => ({\n\t\t\t...teamMember,\n\t\t\tpercentDamage: Math.floor(calcWhatPercent(teamMember.damageDone, this.hp)),\n\t\t\tscaledPercentDamage: Math.floor(calcWhatPercent(teamMember.damageDone, this.hp / options.team.length)),\n\t\t\tmvp: mvp === teamMember,\n\t\t}));\n\n\t\tconst lootResult: LootBank = {};\n\n\t\tfor (const teamMember of parsedTeam) {\n\t\t\tlootResult[teamMember.id] = new Bank();\n\t\t}\n\n\t\tif (options.isPhosani) {\n\t\t\tif (roll(143)) {\n\t\t\t\tlootResult[options.team[0].id].add(GearTable.roll());\n\t\t\t}\n\n\t\t\tif (roll(533)) {\n\t\t\t\tlootResult[options.team[0].id].add(OrbTable.roll());\n\t\t\t}\n\t\t} else {\n\t\t\t// Construct a weighted table, where the weighting is the percent of the total HP that the team member has damaged,\n\t\t\t// for example, dealing 50% off of the nightmares health will give a weighting of 50, so they're 5x more likely\n\t\t\t// to get the unique than the person who dealt 10%. However, in most realistic scenarios, the team members will have\n\t\t\t// done very similar amounts of damage, varying by only a few percent.\n\t\t\tconst WeightedUniqueTable = new SimpleTable<string>();\n\t\t\tfor (const teamMember of parsedTeam) {\n\t\t\t\tWeightedUniqueTable.add(teamMember.id, teamMember.percentDamage);\n\t\t\t}\n\n\t\t\tfunction giveWeightedDrop(item: string): void {\n\t\t\t\tconst recipient = WeightedUniqueTable.roll();\n\t\t\t\tlootResult[recipient].add(item);\n\t\t\t}\n\n\t\t\tif (roll(84)) {\n\t\t\t\tgiveWeightedDrop(GearTable.roll());\n\t\t\t}\n\n\t\t\tif (roll(320)) {\n\t\t\t\tgiveWeightedDrop(OrbTable.roll());\n\t\t\t}\n\n\t\t\tconst secondRollChance = Math.min(75, parsedTeam.length - 5);\n\t\t\tif (secondRollChance > 0 && percentChance(secondRollChance)) {\n\t\t\t\tif (roll(320)) {\n\t\t\t\t\tgiveWeightedDrop(OrbTable.roll());\n\t\t\t\t}\n\t\t\t\tif (roll(84)) {\n\t\t\t\t\tgiveWeightedDrop(GearTable.roll());\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t// Hand out non-uniques\n\t\tfor (const teamMember of parsedTeam) {\n\t\t\tif (lootResult[teamMember.id].length === 0) {\n\t\t\t\tlootResult[teamMember.id].add(\n\t\t\t\t\t...this.rollNonUniqueLoot(teamMember.scaledPercentDamage, teamMember.mvp, options.isPhosani),\n\t\t\t\t);\n\t\t\t}\n\t\t\tlootResult[teamMember.id].add(teamMember.mvp ? \"Big bones\" : \"Bones\");\n\t\t\tlootResult[teamMember.id].add(\n\t\t\t\toptions.isPhosani\n\t\t\t\t\t? phosaniTertiary.roll()\n\t\t\t\t\t: teamMember.mvp\n\t\t\t\t\t\t? mvpTertiary.roll()\n\t\t\t\t\t\t: nonMvpTertiary.roll(),\n\t\t\t);\n\t\t}\n\n\t\treturn lootResult;\n\t}\n}\n\nconst Nightmare = new NightmareClass();\n\nexport default Nightmare;\n", "import Bank from \"../../structures/Bank\";\nimport LootTable from \"../../structures/LootTable\";\n\nconst replaceItems = [\"Fish barrel\", \"Tackle box\", \"Big harpoonfish\", \"Tiny tempor\"];\n\nconst PoolCasketTable = new LootTable()\n\t.add(\"Rune med helm\", 1, 9)\n\t.add(\"Rune full helm\", 1, 9)\n\t.add(\"Rune chainbody\", 1, 9)\n\t.add(\"Rune platebody\", [2, 3], 1)\n\t.add(\"Rune platelegs\", [2, 3], 1)\n\t.add(\"Rune plateskirt\", [2, 3], 1)\n\t.add(\"Rune sq shield\", [3, 5], 1)\n\t.add(\"Rune kiteshield\", [3, 5], 1)\n\t.add(\"Sapphire ring\", [10, 14], 9)\n\t.add(\"Emerald ring\", [7, 11], 9)\n\t.add(\"Ruby ring\", [6, 8], 9)\n\t.add(\"Diamond ring\", [3, 4], 9)\n\t.add(\"Sapphire necklace\", [10, 14], 9)\n\t.add(\"Emerald necklace\", [7, 11], 9)\n\t.add(\"Ruby necklace\", [6, 8], 9)\n\t.add(\"Diamond necklace\", [3, 4], 9)\n\t.add(\"Sapphire bracelet\", [10, 14], 9)\n\t.add(\"Emerald bracelet\", [7, 11], 9)\n\t.add(\"Ruby bracelet\", [6, 8], 9)\n\t.add(\"Diamond bracelet\", [3, 4], 9)\n\t.add(\"Sapphire ring\", [20, 28], 1)\n\t.add(\"Emerald ring\", [14, 22], 1)\n\t.add(\"Ruby ring\", [12, 16], 1)\n\t.add(\"Diamond ring\", [6, 8], 1)\n\t.add(\"Sapphire necklace\", [20, 28], 1)\n\t.add(\"Emerald necklace\", [14, 22], 1)\n\t.add(\"Ruby necklace\", [12, 16], 1)\n\t.add(\"Diamond necklace\", [6, 8], 1)\n\t.add(\"Sapphire bracelet\", [20, 28], 1)\n\t.add(\"Emerald bracelet\", [14, 22], 1)\n\t.add(\"Ruby bracelet\", [12, 16], 1)\n\t.add(\"Diamond bracelet\", [3, 8], 1)\n\t.add(\"Silver bar\", [50, 100], 9)\n\t.add(\"Gold bar\", [50, 100], 9)\n\t.add(\"Uncut opal\", [25, 50], 9)\n\t.add(\"Uncut jade\", [25, 50], 9)\n\t.add(\"Uncut red topaz\", [10, 15], 9)\n\t.add(\"Uncut sapphire\", [20, 30], 1)\n\t.add(\"Uncut emerald\", [15, 25], 1)\n\t.add(\"Uncut ruby\", [10, 20], 1)\n\t.add(\"Uncut diamond\", [8, 13], 1)\n\t.add(\"Uncut dragonstone\", [2, 3], 1)\n\t.add(\"Coins\", [4000, 6000], 9)\n\t.add(\"Loop half of key\", 9, 1)\n\t.add(\"Tooth half of key\", 9, 1)\n\t.add(\"Coins\", [25_000, 50_000], 1)\n\t.add(\"Clue scroll (easy)\", 1, 12)\n\t.add(\"Clue scroll (medium)\", 1, 7)\n\t.add(\"Clue scroll (hard)\", 1, 5);\n\nconst fishTables = [\n\t[\n\t\t81,\n\t\t(table: LootTable) =>\n\t\t\ttable\n\t\t\t\t.add(\"Raw bass\", [30, 40], 1125)\n\t\t\t\t.add(\"Raw swordfish\", [20, 30], 1013)\n\t\t\t\t.add(\"Raw shark\", [10, 20], 900)\n\t\t\t\t.add(\"Raw sea turtle\", [7, 12], 787)\n\t\t\t\t.add(\"Raw manta ray\", [5, 10], 675),\n\t],\n\t[\n\t\t79,\n\t\t(table: LootTable) =>\n\t\t\ttable\n\t\t\t\t.add(\"Raw lobster\", [30, 40], 1125)\n\t\t\t\t.add(\"Raw bass\", [20, 30], 1013)\n\t\t\t\t.add(\"Raw swordfish\", [10, 20], 900)\n\t\t\t\t.add(\"Raw shark\", [7, 12], 787)\n\t\t\t\t.add(\"Raw sea turtle\", [5, 10], 675),\n\t],\n\t[\n\t\t76,\n\t\t(table: LootTable) =>\n\t\t\ttable\n\t\t\t\t.add(\"Raw tuna\", [30, 40], 1125)\n\t\t\t\t.add(\"Raw lobster\", [20, 30], 1013)\n\t\t\t\t.add(\"Raw bass\", [10, 20], 900)\n\t\t\t\t.add(\"Raw swordfish\", [7, 12], 787)\n\t\t\t\t.add(\"Raw shark\", [5, 10], 675),\n\t],\n\t[\n\t\t50,\n\t\t(table: LootTable) =>\n\t\t\ttable\n\t\t\t\t.add(\"Raw salmon\", [30, 40], 1125)\n\t\t\t\t.add(\"Raw tuna\", [20, 30], 1013)\n\t\t\t\t.add(\"Raw lobster\", [10, 20], 900)\n\t\t\t\t.add(\"Raw bass\", [7, 12], 787)\n\t\t\t\t.add(\"Raw swordfish\", [5, 10], 675),\n\t],\n\t[\n\t\t45,\n\t\t(table: LootTable) =>\n\t\t\ttable\n\t\t\t\t.add(\"Raw pike\", [30, 40], 1125)\n\t\t\t\t.add(\"Raw salmon\", [20, 30], 1013)\n\t\t\t\t.add(\"Raw tuna\", [10, 20], 900)\n\t\t\t\t.add(\"Raw lobster\", [7, 12], 787)\n\t\t\t\t.add(\"Raw bass\", [5, 10], 675),\n\t],\n\t[\n\t\t40,\n\t\t(table: LootTable) =>\n\t\t\ttable\n\t\t\t\t.add(\"Raw mackerel\", [30, 40], 1125)\n\t\t\t\t.add(\"Raw pike\", [20, 30], 1013)\n\t\t\t\t.add(\"Raw salmon\", [10, 20], 900)\n\t\t\t\t.add(\"Raw tuna\", [7, 12], 787)\n\t\t\t\t.add(\"Raw lobster\", [5, 10], 675),\n\t],\n\t[\n\t\t35,\n\t\t(table: LootTable) =>\n\t\t\ttable\n\t\t\t\t.add(\"Raw herring\", [30, 40], 1125)\n\t\t\t\t.add(\"Raw mackerel\", [20, 30], 1013)\n\t\t\t\t.add(\"Raw pike\", [10, 20], 900)\n\t\t\t\t.add(\"Raw salmon\", [7, 12], 787)\n\t\t\t\t.add(\"Raw tuna\", [5, 10], 675),\n\t],\n] as const;\n\nexport function Tempoross({\n\tquantity,\n\tfishingLevel,\n\tuserBank,\n}: {\n\tquantity: number;\n\tfishingLevel: number;\n\tuserBank: Bank;\n}) {\n\tconst loot = new Bank();\n\tconst lootTable = new LootTable()\n\t\t.add(\"Spirit flakes\", [32, 64], 2000)\n\t\t.add(PoolCasketTable, 1, 400)\n\t\t.add(\"Plank\", [20, 30], 350)\n\t\t.add(\"Oak plank\", [15, 25], 250)\n\t\t.add(\"Seaweed\", [20, 60], 200)\n\t\t.add(\"Steel nails\", [300, 500], 100)\n\t\t.add(\"Feather\", [800, 1600], 100)\n\t\t.add(\"Fishing bait\", [800, 1600], 100)\n\t\t.add(\"Soaked page\", [5, 9], 149)\n\t\t.add(\"Fish barrel\", 1, 20)\n\t\t.add(\"Tackle box\", 1, 20)\n\t\t.add(\"Big harpoonfish\", 1, 5)\n\t\t.add(\"Tome of water (empty)\", 1, 5)\n\t\t.add(\"Tiny tempor\", 1, 1)\n\t\t.add(\"Dragon harpoon\", 1, 1);\n\n\tfor (const [level, fn] of fishTables) {\n\t\tif (fishingLevel >= level) {\n\t\t\tfn(lootTable);\n\t\t\tbreak;\n\t\t}\n\t}\n\n\tfor (let index = 0; index < quantity; index++) {\n\t\tconst newItem = lootTable.roll();\n\t\tif (replaceItems.includes(newItem.items()[0][0].name) && userBank.has(newItem)) {\n\t\t\tloot.add(\"Soaked page\", 25);\n\t\t} else {\n\t\t\tloot.add(newItem);\n\t\t}\n\t}\n\n\treturn loot;\n}\n", "import { calcPercentOfNum } from \"e\";\n\nimport type { LootBank } from \"../../meta/types\";\nimport Bank from \"../../structures/Bank\";\nimport LootTable from \"../../structures/LootTable\";\nimport SimpleTable from \"../../structures/SimpleTable\";\nimport { resolveNameBank } from \"../../util/bank\";\n\nexport interface TeamMember {\n\tid: string;\n\t/**\n\t * How well they performed as a percentage. 100% would indicate they did quite well, but not necessarily MVP or a solo kill.\n\t */\n\tperformancePercentage: number;\n\tisMVP: boolean;\n}\n\nexport interface ZalcanoOptions {\n\t/**\n\t * The members of the team killing the Zalcano.\n\t */\n\tteam: TeamMember[];\n}\n\nconst data: Record<string, [number[], number]> = {\n\t// [name, [quantity_range, weighting]]\n\n\t// Runes and ammunition\n\t\"Blood rune\": [[95, 480], 1],\n\t\"Cosmic rune\": [[304, 926], 1],\n\t\"Death rune\": [[201, 830], 1],\n\t\"Law rune\": [[177, 770], 1],\n\t\"Soul rune\": [[57, 388], 1],\n\t\"Nature rune\": [[1, 842], 1],\n\n\t// Materials\n\t\"Silver ore\": [[102, 800], 3],\n\t\"Gold ore\": [[129, 721], 3],\n\t\"Steel bar\": [[78, 534], 3],\n\t\"Mithril bar\": [[56, 459], 3],\n\t\"Mithril ore\": [[56, 387], 2],\n\t\"Adamantite ore\": [[63, 289], 2],\n\t\"Runite ore\": [[3, 26], 2],\n\t\"Adamantite bar\": [[17, 103], 2],\n\t\"Runite bar\": [[3, 24], 2],\n\t\"Uncut diamond\": [[2, 19], 2],\n\t\"Uncut dragonstone\": [[1, 11], 2],\n\t\"Onyx bolt tips\": [[4, 38], 2],\n\tCoal: [[169, 815], 1],\n\t\"Pure essence\": [[784, 4422], 1],\n};\nconst nonUniqueItemRanges = resolveNameBank(data);\n\nconst NonUniqueTable = new SimpleTable<number>();\nfor (const [id, data] of Object.entries(nonUniqueItemRanges)) {\n\tNonUniqueTable.add(Number.parseInt(id), data[1]);\n}\n\nconst toolSeedTable = new LootTable().tertiary(40, \"Uncut onyx\").every(\"Crystal tool seed\");\n\nconst tertiaryTable = new LootTable()\n\t.tertiary(2250, \"Smolcano\")\n\t.tertiary(200, toolSeedTable)\n\t.tertiary(1125, \"Zalcano shard\");\n\nclass ZalcanoClass {\n\tallItems: number[] = [...tertiaryTable.allItems, ...NonUniqueTable.table.map(i => i.item)];\n\n\tpublic rollNonUniqueLoot(perfPercent: number, isMVP: boolean): [number, number] {\n\t\tconst item = NonUniqueTable.roll();\n\n\t\tconst [range] = nonUniqueItemRanges[item];\n\t\t// If the quantity range of the item is 50-100, we\n\t\t// give you 50 qty to start, then increase it.\n\t\tlet quantity = range[0];\n\t\tquantity += calcPercentOfNum(perfPercent, range[1]) - range[0];\n\n\t\tif (isMVP) quantity *= 1.1;\n\n\t\tquantity = Math.floor(Math.max(quantity, range[0]));\n\n\t\treturn [item, quantity];\n\t}\n\n\tpublic kill({ team }: Readonly<ZalcanoOptions>): LootBank {\n\t\tconst lootResult: LootBank = {};\n\n\t\tfor (const teamMember of team) {\n\t\t\tconst loot = new Bank();\n\t\t\tloot.add(...this.rollNonUniqueLoot(teamMember.performancePercentage, teamMember.isMVP));\n\t\t\tif (teamMember.isMVP) {\n\t\t\t\tloot.add(\"Infernal ashes\");\n\t\t\t\tloot.add(\"Crystal shard\", 3);\n\t\t\t} else {\n\t\t\t\tloot.add(\"Crystal shard\", 2);\n\t\t\t}\n\t\t\tloot.add(tertiaryTable.roll());\n\t\t\tlootResult[teamMember.id] = loot;\n\t\t}\n\n\t\treturn lootResult;\n\t}\n}\n\nconst Zalcano = new ZalcanoClass();\n\nexport default Zalcano;\n", "import LootTable from \"../../structures/LootTable\";\n\nexport const Mimic3rdAgeTable = new LootTable()\n\t.add(\"3rd age range coif\")\n\t.add(\"3rd age range top\")\n\t.add(\"3rd age range legs\")\n\t.add(\"3rd age vambraces\")\n\t.add(\"3rd age robe top\")\n\t.add(\"3rd age robe\")\n\t.add(\"3rd age mage hat\")\n\t.add(\"3rd age amulet\")\n\t.add(\"3rd age platelegs\")\n\t.add(\"3rd age platebody\")\n\t.add(\"3rd age full helmet\")\n\t.add(\"3rd age plateskirt\")\n\t.add(\"3rd age kiteshield\")\n\t.add(\"3rd age longsword\")\n\t.add(\"3rd age cloak\")\n\t.add(\"3rd age wand\")\n\t.add(\"3rd age bow\")\n\t.add(\"3rd age druidic staff\")\n\t.add(\"3rd age druidic cloak\")\n\t.add(\"3rd age druidic robe top\")\n\t.add(\"3rd age druidic robe bottoms\")\n\t.add(\"3rd age pickaxe\")\n\t.add(\"3rd age axe\");\n\nexport const EliteMimicTable = new LootTable()\n\t.every(\"Mahogany plank\")\n\t.oneIn(44, \"Ring of 3rd age\")\n\t.oneIn(250, Mimic3rdAgeTable)\n\t.add(\"Death rune\", 480)\n\t.add(\"Death rune\", 600)\n\t.add(\"Blood rune\", 400)\n\t.add(\"Blood rune\", 500)\n\t.add(\"Grimy ranarr weed\", 25, 2)\n\t.add(\"Raw manta ray\", 15, 2)\n\t.add(\"Wine of zamorak\", 25, 2);\n\nexport const MasterMimicTable = new LootTable()\n\t.every(\"Mahogany plank\")\n\t.oneIn(40, \"Ring of 3rd age\")\n\t.oneIn(228, Mimic3rdAgeTable)\n\t.add(\"Death rune\", 480)\n\t.add(\"Death rune\", 600)\n\t.add(\"Blood rune\", 400)\n\t.add(\"Blood rune\", 500)\n\t.add(\"Grimy ranarr weed\", 25, 2)\n\t.add(\"Raw manta ray\", 15, 2)\n\t.add(\"Wine of zamorak\", 25, 2);\n", "import { percentChance, roll, sumArr } from \"e\";\n\nimport type { LootBank } from \"../../meta/types\";\nimport Bank from \"../../structures/Bank\";\nimport LootTable from \"../../structures/LootTable\";\nimport SimpleTable from \"../../structures/SimpleTable\";\nimport { JSONClone } from \"../../util\";\n\nexport interface TeamMember {\n\tid: string;\n\t/**\n\t * The rooms they died in.\n\t */\n\tdeaths: number[];\n}\n\nexport interface TheatreOfBloodOptions {\n\t/**\n\t * Whether or not this raid is in Challenge Mode or not.\n\t */\n\thardMode: boolean;\n\t/**\n\t * The members of the raid team, 1-5 people.\n\t */\n\tteam: TeamMember[];\n}\n\ninterface ParsedMember extends TeamMember {\n\tnumDeaths: number;\n\tpoints: number;\n}\nexport interface TOBRoom {\n\tname: string;\n\tdifficultyRating: number;\n\ttimeWeighting: number;\n}\n\nexport const TOBRooms: TOBRoom[] = [\n\t{\n\t\tname: \"Maiden\",\n\t\tdifficultyRating: 1,\n\t\ttimeWeighting: 11,\n\t},\n\t{\n\t\tname: \"Bloat\",\n\t\tdifficultyRating: 4,\n\t\ttimeWeighting: 11,\n\t},\n\t{\n\t\tname: \"Nylocas\",\n\t\tdifficultyRating: 3,\n\t\ttimeWeighting: 22,\n\t},\n\t{\n\t\tname: \"Sotetseg\",\n\t\tdifficultyRating: 2,\n\t\ttimeWeighting: 11,\n\t},\n\t{\n\t\tname: \"Xarpus\",\n\t\tdifficultyRating: 2,\n\t\ttimeWeighting: 17,\n\t},\n\t{\n\t\tname: \"Verzik\",\n\t\tdifficultyRating: 6,\n\t\ttimeWeighting: 28,\n\t},\n];\n\nexport const ToBUniqueTable = new LootTable()\n\t.add(\"Scythe of vitur (uncharged)\")\n\t.add(\"Ghrazi rapier\", 1, 2)\n\t.add(\"Sanguinesti staff (uncharged)\", 1, 2)\n\t.add(\"Justiciar faceguard\", 1, 2)\n\t.add(\"Justiciar chestguard\", 1, 2)\n\t.add(\"Justiciar legguards\", 1, 2)\n\t.add(\"Avernic defender hilt\", 1, 8);\n\nconst HardModeUniqueTable = new LootTable()\n\t.add(\"Scythe of vitur (uncharged)\")\n\t.add(\"Ghrazi rapier\", 1, 2)\n\t.add(\"Sanguinesti staff (uncharged)\", 1, 2)\n\t.add(\"Justiciar faceguard\", 1, 2)\n\t.add(\"Justiciar chestguard\", 1, 2)\n\t.add(\"Justiciar legguards\", 1, 2)\n\t.add(\"Avernic defender hilt\", 1, 7);\n\nconst NonUniqueTable = new LootTable()\n\t.tertiary(25, \"Clue scroll (elite)\")\n\t.add(\"Vial of blood\", [50, 60], 2)\n\t.add(\"Death rune\", [500, 600])\n\t.add(\"Blood rune\", [500, 600])\n\t.add(\"Swamp tar\", [500, 600])\n\t.add(\"Coal\", [500, 600])\n\t.add(\"Gold ore\", [300, 360])\n\t.add(\"Molten glass\", [200, 240])\n\t.add(\"Adamantite ore\", [130, 156])\n\t.add(\"Runite ore\", [60, 72])\n\t.add(\"Wine of zamorak\", [50, 60])\n\t.add(\"Potato cactus\", [50, 60])\n\t.add(\"Grimy cadantine\", [50, 60])\n\t.add(\"Grimy avantoe\", [40, 48])\n\t.add(\"Grimy irit leaf\", [34, 40])\n\t.add(\"Grimy ranarr weed\", [30, 36])\n\t.add(\"Grimy snapdragon\", [27, 32])\n\t.add(\"Grimy lantadyme\", [26, 31])\n\t.add(\"Grimy dwarf weed\", [24, 28])\n\t.add(\"Grimy torstol\", [20, 24])\n\n\t.add(\"Battlestaff\", [15, 18])\n\t.add(\"Mahogany seed\", [8, 12])\n\t.add(\"Rune battleaxe\", 4)\n\t.add(\"Rune platebody\", 4)\n\t.add(\"Rune chainbody\", 4)\n\n\t.add(\"Palm tree seed\", 3)\n\t.add(\"Yew seed\", 3)\n\t.add(\"Magic seed\", 3);\n\nconst HardModeExtraTable = new LootTable()\n\t.tertiary(275, \"Sanguine dust\")\n\t.tertiary(150, \"Sanguine ornament kit\")\n\t.tertiary(100, \"Holy ornament kit\");\n\nexport class TheatreOfBloodClass {\n\tnonUniqueLoot(member: ParsedMember, isHardMode: boolean, deaths: number[]): Bank {\n\t\tif (deaths.length === TOBRooms.length) {\n\t\t\treturn new Bank().add(\"Cabbage\");\n\t\t}\n\t\tconst loot = new Bank();\n\t\tfor (let i = 0; i < 3; i++) {\n\t\t\tloot.add(NonUniqueTable.roll());\n\t\t}\n\n\t\tif (isHardMode) {\n\t\t\t// Add 15% extra regular loot for hard mode:\n\t\t\tfor (const [item] of loot.items()) {\n\t\t\t\tloot.set(item.id, Math.ceil(loot.amount(item.id) * 1.15));\n\t\t\t}\n\t\t\t// Add HM Tertiary drops: dust / kits\n\t\t\tloot.add(HardModeExtraTable.roll());\n\t\t}\n\t\tlet petChance = isHardMode ? 500 : 650;\n\t\tif (member.numDeaths > 0) {\n\t\t\tpetChance *= member.numDeaths;\n\t\t}\n\t\tif (roll(petChance)) {\n\t\t\tloot.add(\"Lil' zik\");\n\t\t}\n\n\t\treturn loot;\n\t}\n\n\tpublic uniqueDecide(team: ParsedMember[]): ParsedMember {\n\t\tconst table = new SimpleTable<ParsedMember>();\n\t\tfor (const member of team) {\n\t\t\ttable.add(member, member.points);\n\t\t}\n\n\t\treturn table.roll();\n\t}\n\n\tpublic complete(_options: TheatreOfBloodOptions) {\n\t\tconst options = JSONClone(_options);\n\t\tif (options.team.length < 2 || options.team.length > 4) {\n\t\t\tthrow new Error(\"Only team sizes of 2-4 are supported in ToB\");\n\t\t}\n\n\t\tconst maxPointsPerPerson = 22;\n\t\tconst penaltyForDeath = 4;\n\t\tconst maxPointsTeamCanGet = options.team.length * maxPointsPerPerson;\n\n\t\tconst parsedTeam: ParsedMember[] = _options.team.map(t => ({\n\t\t\tid: t.id,\n\t\t\tdeaths: t.deaths,\n\t\t\tnumDeaths: t.deaths.length,\n\t\t\tpoints: maxPointsPerPerson - t.deaths.length * penaltyForDeath,\n\t\t}));\n\n\t\tconst teamPoints = sumArr(parsedTeam.map(val => val.points));\n\n\t\tconst totalDeaths = sumArr(parsedTeam.map(i => i.numDeaths));\n\n\t\tconst percentBaseChanceOfUnique = (options.hardMode ? 13 : 11) * (teamPoints / maxPointsTeamCanGet);\n\n\t\tconst purpleReceived = percentChance(percentBaseChanceOfUnique);\n\t\tconst purpleRecipient = purpleReceived ? this.uniqueDecide(parsedTeam) : null;\n\n\t\tconst lootResult: LootBank = {};\n\n\t\tfor (const member of parsedTeam) {\n\t\t\tif (member === purpleRecipient) {\n\t\t\t\tlootResult[member.id] = new Bank().add(\n\t\t\t\t\toptions.hardMode ? HardModeUniqueTable.roll() : ToBUniqueTable.roll(),\n\t\t\t\t);\n\t\t\t} else {\n\t\t\t\tlootResult[member.id] = this.nonUniqueLoot(member, options.hardMode, member.deaths);\n\t\t\t}\n\t\t}\n\n\t\treturn {\n\t\t\tloot: lootResult,\n\t\t\tpercentChanceOfUnique: percentBaseChanceOfUnique,\n\t\t\ttotalDeaths,\n\t\t\tteamPoints,\n\t\t};\n\t}\n}\n\nexport const TheatreOfBlood = new TheatreOfBloodClass();\n", "export * from \"./bank\";\nexport { default as itemID } from \"./itemID\";\nexport * from \"./util\";\n", "import { roll } from \"e\";\n\nimport { MonsterSlayerMaster } from \"../meta/monsterData\";\nimport type { CustomKillLogic, MonsterKillOptions, MonsterOptions } from \"../meta/types\";\nimport {\n\tgetAncientShardChanceFromHP,\n\tgetBrimKeyChanceFromCBLevel,\n\tgetLarranKeyChanceFromCBLevel,\n\tgetSlayersEnchantmentChanceFromHP,\n\tgetTotemChanceFromHP,\n} from \"../util/util\";\nimport Bank from \"./Bank\";\nimport type LootTable from \"./LootTable\";\nimport Monster from \"./Monster\";\n\ninterface SimpleMonsterOptions extends MonsterOptions {\n\ttable?: LootTable;\n\tonTaskTable?: LootTable;\n\twildyCaveTable?: LootTable;\n\tpickpocketTable?: LootTable;\n\tcustomKillLogic?: CustomKillLogic;\n}\n\nexport default class SimpleMonster extends Monster {\n\tpublic table?: LootTable;\n\tpublic onTaskTable?: LootTable;\n\tpublic wildyCaveTable?: LootTable;\n\tpublic pickpocketTable?: LootTable;\n\tpublic customKillLogic?: CustomKillLogic;\n\n\tconstructor(options: SimpleMonsterOptions) {\n\t\tlet allItems: number[] = [];\n\t\tif (options.table) {\n\t\t\tallItems = allItems.concat(options.table.allItems);\n\t\t}\n\t\tif (options.pickpocketTable) {\n\t\t\tallItems = allItems.concat(options.pickpocketTable.allItems);\n\t\t}\n\t\tsuper({ ...options, allItems });\n\t\tthis.table = options.table;\n\t\tthis.pickpocketTable = options.pickpocketTable;\n\t\tthis.onTaskTable = options.onTaskTable;\n\t\tthis.wildyCaveTable = options.wildyCaveTable;\n\t\tthis.customKillLogic = options.customKillLogic;\n\t}\n\n\tpublic kill(quantity = 1, options: MonsterKillOptions = {}): Bank {\n\t\tconst loot = new Bank();\n\t\tconst canGetBrimKey = options.onSlayerTask && options.slayerMaster === MonsterSlayerMaster.Konar;\n\t\tconst wildySlayer = options.onSlayerTask && options.slayerMaster === MonsterSlayerMaster.Krystilia;\n\t\tconst slayerMonster: boolean = Boolean(options.onSlayerTask && this.data.slayerLevelRequired > 1);\n\t\tconst lootTableOptions = {\n\t\t\t...options.lootTableOptions,\n\t\t\ttargetBank: loot,\n\t\t};\n\n\t\tif (!canGetBrimKey && !wildySlayer && !options.inCatacombs && !options.onSlayerTask) {\n\t\t\tthis.table?.roll(quantity, lootTableOptions);\n\t\t\tif (this.customKillLogic) {\n\t\t\t\tfor (let i = 0; i < quantity; i++) {\n\t\t\t\t\tthis.customKillLogic(options, loot);\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn loot;\n\t\t}\n\n\t\tfor (let i = 0; i < quantity; i++) {\n\t\t\tif (canGetBrimKey) {\n\t\t\t\tif (roll(getBrimKeyChanceFromCBLevel(this.data.combatLevel))) {\n\t\t\t\t\tloot.add(\"Brimstone key\");\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (wildySlayer && this.data.hitpoints) {\n\t\t\t\tif (roll(getSlayersEnchantmentChanceFromHP(this.data.hitpoints))) {\n\t\t\t\t\tloot.add(\"Slayer's enchantment\");\n\t\t\t\t}\n\t\t\t\tif (roll(getLarranKeyChanceFromCBLevel(this.data.combatLevel, slayerMonster))) {\n\t\t\t\t\tloot.add(\"Larran's key\");\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (options.inCatacombs && this.data.hitpoints && !wildySlayer) {\n\t\t\t\tif (roll(getAncientShardChanceFromHP(this.data.hitpoints))) {\n\t\t\t\t\tloot.add(\"Ancient shard\");\n\t\t\t\t}\n\t\t\t\tif (roll(getTotemChanceFromHP(this.data.hitpoints))) {\n\t\t\t\t\t// Always drop Dark totem base and bot will transmog accordingly.\n\t\t\t\t\tloot.add(\"Dark totem base\");\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (options.onSlayerTask) {\n\t\t\t\tif (wildySlayer && this.wildyCaveTable) {\n\t\t\t\t\t// Roll the monster's wildy slayer cave table\n\t\t\t\t\tthis.wildyCaveTable.roll(1, lootTableOptions);\n\t\t\t\t} else if (this.onTaskTable) {\n\t\t\t\t\t// Roll the monster's \"on-task\" table.\n\t\t\t\t\tthis.onTaskTable.roll(1, lootTableOptions);\n\t\t\t\t} else {\n\t\t\t\t\t// Monster doesn't have a unique on-slayer table\n\t\t\t\t\tthis.table?.roll(1, lootTableOptions);\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\t// Not on slayer task\n\t\t\t\tthis.table?.roll(1, lootTableOptions);\n\t\t\t}\n\t\t\tif (this.customKillLogic) {\n\t\t\t\tthis.customKillLogic(options, loot);\n\t\t\t}\n\t\t}\n\t\treturn loot;\n\t}\n}\n", "import rawMonsterData from \"../data/monsters_data.json\" assert { type: \"json\" };\nimport type { MonsterData } from \"../meta/monsterData\";\nimport type { MonsterKillOptions, MonsterOptions } from \"../meta/types\";\nimport type Bank from \"./Bank\";\n\nconst monsterData = rawMonsterData as { [key: string]: MonsterData };\n\nexport default abstract class Monster {\n\tpublic id: number;\n\tpublic name: string;\n\tpublic aliases: string[];\n\tpublic data: MonsterData;\n\tpublic allItems: number[];\n\tpublic abstract kill(quantity: number, options: MonsterKillOptions): Bank;\n\n\tconstructor(options: MonsterOptions) {\n\t\tthis.id = options.id;\n\t\tthis.name = options.name;\n\t\tthis.aliases = options.aliases ?? [];\n\t\tthis.data = monsterData[this.id];\n\t\tthis.allItems = options.allItems ?? [];\n\t\tconst pluralName = `${this.name.toLowerCase()}s`;\n\t\tif (!this.aliases.includes(pluralName)) {\n\t\t\tthis.aliases.push(pluralName);\n\t\t}\n\t}\n}\n", "import LootTable from \"../../structures/LootTable\";\nimport SimpleMonster from \"../../structures/SimpleMonster\";\n\nconst Newtroost = new SimpleMonster({\n\tid: 3605,\n\tname: \"Newtroost\",\n\ttable: new LootTable()\n\t\t.every(\"Bones\")\n\t\t.every(\"Eye of newt\", [4, 10])\n\t\t.add(new LootTable({ limit: 20 }).add(\"Rune satchel\", 1, 3).add(\"Tea flask\", 1)),\n\taliases: [\"newtroost\"],\n});\n\nconst Unicow = new SimpleMonster({\n\tid: 3601,\n\tname: \"Unicow\",\n\ttable: new LootTable()\n\t\t.every(\"Bones\")\n\t\t.every(\"Unicorn horn\", [2, 4])\n\t\t.add(new LootTable({ limit: 20 }).add(\"Green satchel\", 1, 3).add(\"Tea flask\", 1)),\n\taliases: [\"unicow\"],\n});\n\nconst Spidine = new SimpleMonster({\n\tid: 3602,\n\tname: \"Spidine\",\n\ttable: new LootTable()\n\t\t.every(\"Bones\")\n\t\t.every(\"Red spiders' eggs\", [3, 6])\n\t\t.add(new LootTable({ limit: 20 }).add(\"Red satchel\", 1, 3).add(\"Tea flask\", 1)),\n\taliases: [\"spidine\"],\n});\n\nconst Swordchick = new SimpleMonster({\n\tid: 3603,\n\tname: \"Swordchick\",\n\ttable: new LootTable()\n\t\t.every(\"Bones\")\n\t\t.every(\"Feather\", [10, 40])\n\t\t.add(new LootTable({ limit: 20 }).add(\"Black satchel\", 1, 3).add(\"Tea flask\", 1)),\n\taliases: [\"swordchick\"],\n});\n\nconst Jubster = new SimpleMonster({\n\tid: 3604,\n\tname: \"Jubster\",\n\ttable: new LootTable()\n\t\t.every(\"Bones\")\n\t\t.every(\"Raw jubbly\", [3, 7])\n\t\t.add(new LootTable({ limit: 20 }).add(\"Gold satchel\", 1, 3).add(\"Tea flask\", 1)),\n\taliases: [\"jubster\"],\n});\n\nconst Frogeel = new SimpleMonster({\n\tid: 3600,\n\tname: \"Frogeel\",\n\ttable: new LootTable()\n\t\t.every(\"Bones\")\n\t\t.every(\"Raw cave eel\", [5, 10])\n\t\t.add(new LootTable({ limit: 20 }).add(\"Plain satchel\", 1, 3).add(\"Tea flask\")),\n\taliases: [\"frogeel\"],\n});\n\nexport const CreatureCreation = { Frogeel, Newtroost, Spidine, Swordchick, Unicow, Jubster };\n", "import LootTable from \"../../structures/LootTable\";\n\nconst MegaRareTable = new LootTable({ limit: 128 })\n\t.add(\"Rune spear\", 1, 8)\n\t.add(\"Shield left half\", 1, 4)\n\t.add(\"Dragon spear\", 1, 3);\n\nexport const GemTable = new LootTable({ limit: 128 })\n\t.add(\"Uncut sapphire\", 1, 32)\n\t.add(\"Uncut emerald\", 1, 16)\n\t.add(\"Uncut ruby\", 1, 8)\n\t.add(new LootTable().add(\"Chaos talisman\").add(\"Nature talisman\"), 1, 3)\n\t.add(\"Uncut diamond\", 1, 2)\n\t.add(\"Rune javelin\", 5, 1)\n\t.add(\"Loop half of key\")\n\t.add(\"Tooth half of key\")\n\t.add(MegaRareTable);\n\nexport const RareDropTable = new LootTable()\n\t/* Runes and ammunition */\n\t.add(\"Nature rune\", 67, 3)\n\t.add(\"Adamant javelin\", 20, 2)\n\t.add(\"Death rune\", 45, 2)\n\t.add(\"Law rune\", 45, 2)\n\t.add(\"Rune arrow\", 42, 2)\n\t.add(\"Steel arrow\", 150, 2)\n\n\t/* Weapons and armour */\n\t.add(\"Rune 2h sword\", 1, 3)\n\t.add(\"Rune battleaxe\", 1, 3)\n\t.add(\"Rune sq shield\", 1, 2)\n\t.add(\"Dragon med helm\", 1, 1)\n\t.add(\"Rune kiteshield\", 1, 1)\n\n\t/* Other */\n\t.add(\"Coins\", 3000, 21)\n\t.add(\"Loop half of key\", 1, 20)\n\t.add(\"Tooth half of key\", 1, 20)\n\t.add(\"Runite bar\", 1, 5)\n\t.add(\"Dragonstone\", 1, 2)\n\t.add(\"Silver ore\", 100, 2)\n\n\t/* Subtables */\n\t.add(GemTable, 1, 20)\n\t.add(MegaRareTable, 1, 15);\n\nexport default RareDropTable;\n", "import LootTable from \"../../structures/LootTable\";\n\nconst TreeHerbSeedTable = new LootTable()\n\t.add(\"Ranarr seed\", 1, 15)\n\t.add(\"Snapdragon seed\", 1, 14)\n\t.add(\"Torstol seed\", 1, 11)\n\t.add(\"Watermelon seed\", 15, 10)\n\t.add(\"Willow seed\", 1, 10)\n\t.add(\"Mahogany seed\", 1, 9)\n\t.add(\"Maple seed\", 1, 9)\n\t.add(\"Teak seed\", 1, 9)\n\t.add(\"Yew seed\", 1, 9)\n\t.add(\"Papaya tree seed\", 1, 7)\n\t.add(\"Magic seed\", 1, 6)\n\t.add(\"Palm tree seed\", 1, 5)\n\t.add(\"Spirit seed\", 1, 4)\n\t.add(\"Dragonfruit tree seed\", 1, 3)\n\t.add(\"Celastrus seed\", 1, 2)\n\t.add(\"Redwood tree seed\", 1, 2);\n\nexport default TreeHerbSeedTable;\n", "import LootTable from \"../../../structures/LootTable\";\nimport SimpleMonster from \"../../../structures/SimpleMonster\";\nimport RareDropTable from \"../../subtables/RareDropTable\";\nimport TreeHerbSeedTable from \"../../subtables/TreeHerbSeedTable\";\n\nconst AraxxorUniqueTable = new LootTable()\n\t.add(\"Araxyte fang\")\n\t.add(\"Noxious blade\")\n\t.add(\"Noxious point\")\n\t.add(\"Noxious pommel\");\n\nconst SupplyDrop = new LootTable()\n\t.add(new LootTable().add(\"Araxyte venom sack\").add(\"Super combat potion(1)\"))\n\t.add(new LootTable().add(\"Prayer potion(3)\", [1, 2]).add(\"Prayer potion(4)\"))\n\t.add(new LootTable().add(\"Wild pie\", [2, 3]).add(\"Shark\", [2, 3]));\n\nconst AraxxorTable = new LootTable()\n\t.tertiary(50, \"Clue scroll (elite)\")\n\t.tertiary(200, \"Coagulated venom\")\n\t.tertiary(150, AraxxorUniqueTable)\n\t.tertiary(250, \"Araxyte head\")\n\t.tertiary(1500, \"Jar of venom\")\n\t.tertiary(3000, \"Nid\")\n\t.oneIn(8, SupplyDrop)\n\n\t.add(\"Rune kiteshield\", 2, 8)\n\t.add(\"Rune platelegs\", 2, 8)\n\t.add(\"Dragon mace\", 2, 6)\n\t.add(\"Rune 2h sword\", 5, 1)\n\t.add(\"Dragon platelegs\", 2, 1)\n\n\t.add(\"Death rune\", 250, 5)\n\t.add(\"Nature rune\", 80, 2)\n\t.add(\"Mud rune\", 100, 1)\n\t.add(\"Blood rune\", 180, 1)\n\n\t.add(\"Yew seed\", 1, 4)\n\t.add(\"Toadflax seed\", 4, 3)\n\t.add(\"Ranarr seed\", 3, 1)\n\t.add(\"Snapdragon seed\", 3, 1)\n\t.add(\"Magic seed\", 2, 1)\n\t.add(TreeHerbSeedTable, 1, 1)\n\n\t.add(\"Coal\", 120, 4)\n\t.add(\"Adamantite ore\", 85, 4)\n\t.add(\"Raw shark\", 21, 4)\n\t.add(\"Yew logs\", 70, 3)\n\t.add(\"Runite ore\", 12, 2)\n\t.add(\"Raw shark\", 100, 1)\n\t.add(\"Raw monkfish\", 120, 1)\n\t.add(\"Pure essence\", 1200, 1)\n\n\t.add(\"Spider cave teleport\", 3, 8)\n\t.add(\"Earth orb\", 45, 6)\n\t.add(\"Araxyte venom sack\", 6, 5)\n\t.add(\"Mort myre fungus\", 24, 4)\n\t.add(\"Antidote++(3)\", 6, 4)\n\t.add(\"Wine of zamorak\", 8, 3)\n\t.add(\"Red spiders' eggs\", 40, 2)\n\t.add(\"Araxyte venom sack\", 12, 2)\n\t.add(\"Bark\", 15, 1)\n\t.add(RareDropTable);\n\nexport const Araxxor = new SimpleMonster({\n\tid: 13668,\n\tname: \"Araxxor\",\n\ttable: AraxxorTable,\n\taliases: [\"araxxor\"],\n});\n", "import { randInt, roll, uniqueArr } from \"e\";\n\nimport type { MonsterKillOptions } from \"../../../meta/types\";\nimport Bank from \"../../../structures/Bank\";\nimport LootTable from \"../../../structures/LootTable\";\nimport Monster from \"../../../structures/Monster\";\nimport itemID from \"../../../util/itemID\";\nimport { VirtusTable } from \"../../subtables/VirtusTable\";\n\nconst TradeableUniqueTable = new LootTable({ limit: 8 })\n\t.add(VirtusTable, 1, 1)\n\t.add(\"Chromium ingot\", 1, 3)\n\t.add(\"Eye of the duke\", 1, 1)\n\t.add(\"Magus vestige\", 1, 1);\n\nconst ClueTable = new LootTable()\n\t.add(\"Clue scroll (easy)\")\n\t.add(\"Clue scroll (medium)\")\n\t.add(\"Clue scroll (hard)\")\n\t.add(\"Clue scroll (elite)\");\n\nconst SupplyTable = new LootTable()\n\t.every(\"Pineapple pizza\", [3, 4])\n\t.every(\"Prayer potion(3)\")\n\t.every(\"Super combat potion(2)\");\n\nconst ResourceTable = new LootTable()\n\t.add(\"Bronze chainbody\", [11, 17], 1)\n\t.add(\"Mithril chainbody\", [5, 7], 1)\n\t.add(\"Adamant chainbody\", [6, 10], 1)\n\t.add(\"Dragon platelegs\", [5, 7], 1)\n\n\t.add(\"Pure essence\", [200, 300], 1)\n\t.add(\"Iron ore\", [63, 95], 1)\n\t.add(\"Coal\", [216, 325], 8)\n\t.add(\"Mithril ore\", [33, 50], 1)\n\t.add(\"Adamantite ore\", [75, 112], 8)\n\t.add(\"Runite ore\", [30, 45], 2)\n\n\t.add(\"Sapphire\", [28, 42], 1)\n\t.add(\"Emerald\", [28, 42], 1)\n\t.add(\"Ruby\", [28, 42], 1)\n\t.add(\"Uncut ruby\", [41, 62], 5)\n\t.add(\"Uncut diamond\", [41, 62], 5)\n\n\t.add(\"Bronze bar\", [41, 62], 1)\n\t.add(\"Dragon arrowtips\", [166, 255], 1)\n\t.add(\"Rune javelin heads\", [60, 90], 8)\n\t.add(\"Dragon javelin heads\", [60, 90], 8)\n\t.add(\"Raw sea turtle\", [200, 300], 1)\n\n\t.add(\"Air rune\", [200, 300], 1)\n\t.add(\"Mist rune\", [100, 150], 8)\n\t.add(\"Chaos rune\", [100, 150], 9)\n\t.add(\"Soul rune\", [666, 1000], 2);\n\nclass DukeSucellusSingleton extends Monster {\n\tpublic allItems: number[] = uniqueArr([\n\t\t...ClueTable.allItems,\n\t\t...SupplyTable.allItems,\n\t\t...ResourceTable.allItems,\n\t\t...TradeableUniqueTable.allItems,\n\t\titemID(\"Awakener's orb\"),\n\t\titemID(\"Ice quartz\"),\n\t\titemID(\"Baron\"),\n\t]);\n\n\tpublic kill(quantity = 1, options: MonsterKillOptions = {}): Bank {\n\t\tconst loot = new Bank();\n\n\t\tfor (let i = 0; i < quantity; i++) {\n\t\t\tconst tradeableUniqueCap = options.isAwakened ? 3 : 1;\n\t\t\tif (randInt(1, 90) <= tradeableUniqueCap) {\n\t\t\t\tloot.add(TradeableUniqueTable.roll());\n\t\t\t} else if (roll(48)) {\n\t\t\t\tloot.add(\"Awakener's orb\");\n\t\t\t} else if (roll(200)) {\n\t\t\t\tloot.add(\"Ice quartz\");\n\t\t\t} else if (roll(5)) {\n\t\t\t\tloot.add(SupplyTable.roll());\n\t\t\t} else {\n\t\t\t\tloot.add(ResourceTable.roll());\n\t\t\t}\n\n\t\t\tif (roll(40)) {\n\t\t\t\tloot.add(ClueTable.roll());\n\t\t\t}\n\t\t\tif (roll(2500)) {\n\t\t\t\tloot.add(\"Baron\");\n\t\t\t}\n\t\t}\n\t\treturn loot;\n\t}\n}\n\nexport const DukeSucellus = new DukeSucellusSingleton({\n\tid: 12_191,\n\tname: \"Duke Sucellus\",\n\taliases: [\"duke sucellus\"],\n});\n", "import LootTable from \"../../structures/LootTable\";\n\nexport const VirtusTable = new LootTable().add(\"Virtus mask\").add(\"Virtus robe top\").add(\"Virtus robe bottom\");\n", "import type { MonsterKillOptions } from \"../../../meta/types\";\nimport type Bank from \"../../../structures/Bank\";\nimport Monster from \"../../../structures/Monster\";\nimport { DukeSucellus } from \"./DukeSucellus\";\n\nclass AwakenedDukeSucellusSingleton extends Monster {\n\tpublic kill(quantity = 1, options: MonsterKillOptions = {}): Bank {\n\t\treturn DukeSucellus.kill(quantity, { ...options, isAwakened: true });\n\t}\n}\n\nexport const AwakenedDukeSucellus = new AwakenedDukeSucellusSingleton({\n\tid: 12_192,\n\tname: \"Duke Sucellus (Awakened)\",\n\taliases: [\"duke sucellus (awakened)\"],\n});\n", "import { randInt, roll, uniqueArr } from \"e\";\n\nimport type { MonsterKillOptions } from \"../../../meta/types\";\nimport Bank from \"../../../structures/Bank\";\nimport LootTable from \"../../../structures/LootTable\";\nimport Monster from \"../../../structures/Monster\";\nimport itemID from \"../../../util/itemID\";\nimport { VirtusTable } from \"../../subtables/VirtusTable\";\n\nconst TradeableUniqueTable = new LootTable({ limit: 8 })\n\t.add(VirtusTable, 1, 1)\n\t.add(\"Chromium ingot\", 1, 3)\n\t.add(\"Venator vestige\", 1, 1)\n\t.add(\"Leviathan's lure\", 1, 1);\n\nconst ClueTable = new LootTable()\n\t.add(\"Clue scroll (easy)\")\n\t.add(\"Clue scroll (medium)\")\n\t.add(\"Clue scroll (hard)\")\n\t.add(\"Clue scroll (elite)\");\n\nconst SupplyTable = new LootTable()\n\t.every(\"Prayer potion(3)\", 1)\n\t.every(\"Ranging potion(2)\", 1)\n\t.every(\"Sea turtle\", [3, 4]);\n\nconst ResourceTable = new LootTable()\n\t.add(\"Coal\", [195, 292], 8)\n\t.add(\"Gold ore\", [67, 101], 8)\n\t.add(\"Dragon javelin heads\", [54, 81], 8)\n\t.add(\"Anglerfish\", [4, 6], 8)\n\t.add(\"Uncut ruby\", [37, 56], 5)\n\t.add(\"Uncut diamond\", [37, 56], 5)\n\t.add(\"Runite ore\", [27, 40], 2)\n\t.add(\"Dragon bolts (unf)\", [150, 225], 2)\n\t.add(\"Pure essence\", [180, 270], 1)\n\t.add(\"Iron ore\", [57, 85], 1)\n\t.add(\"Silver ore\", [57, 85], 1)\n\t.add(\"Adamantite ore\", [57, 85], 1)\n\t.add(\"Sapphire\", [25, 38], 1)\n\t.add(\"Emerald\", [25, 38], 1)\n\t.add(\"Ruby\", [25, 38], 1)\n\t.add(\"Onyx bolt tips\", [90, 135], 1)\n\t.add(\"Raw manta ray\", [180, 270], 1)\n\n\t.add(\"Rune arrow\", [54, 81], 8)\n\t.add(\"Smoke rune\", [300, 450], 8)\n\t.add(\"Soul rune\", [600, 900], 2)\n\t.add(\"Bronze arrow\", [63, 94], 1)\n\t.add(\"Mithril arrow\", [63, 94], 1)\n\t.add(\"Adamant arrow\", [63, 94], 1)\n\t.add(\"Body rune\", [180, 270], 1)\n\t.add(\"Earth rune\", [180, 270], 1);\n\nclass TheLeviathanSingleton extends Monster {\n\tpublic allItems: number[] = uniqueArr([\n\t\t...ClueTable.allItems,\n\t\t...SupplyTable.allItems,\n\t\t...ResourceTable.allItems,\n\t\t...TradeableUniqueTable.allItems,\n\t\titemID(\"Awakener's orb\"),\n\t\titemID(\"Smoke quartz\"),\n\t\titemID(\"Lil'viathan\"),\n\t]);\n\n\tpublic kill(quantity = 1, options: MonsterKillOptions = {}): Bank {\n\t\tconst loot = new Bank();\n\n\t\tfor (let i = 0; i < quantity; i++) {\n\t\t\tconst tradeableUniqueCap = options.isAwakened ? 3 : 1;\n\t\t\tif (randInt(1, 96) <= tradeableUniqueCap) {\n\t\t\t\tloot.add(TradeableUniqueTable.roll());\n\t\t\t} else if (roll(53)) {\n\t\t\t\tloot.add(\"Awakener's orb\");\n\t\t\t} else if (roll(200)) {\n\t\t\t\tloot.add(\"Smoke quartz\");\n\t\t\t} else if (roll(5)) {\n\t\t\t\tloot.add(SupplyTable.roll());\n\t\t\t} else {\n\t\t\t\tloot.add(ResourceTable.roll());\n\t\t\t}\n\n\t\t\tif (roll(40)) {\n\t\t\t\tloot.add(ClueTable.roll());\n\t\t\t}\n\t\t\tif (roll(2500)) {\n\t\t\t\tloot.add(\"Lil'viathan\");\n\t\t\t}\n\t\t}\n\t\treturn loot;\n\t}\n}\n\nexport const TheLeviathan = new TheLeviathanSingleton({\n\tid: 12_214,\n\tname: \"The Leviathan\",\n\taliases: [\"the leviathan\"],\n});\n", "import type { MonsterKillOptions } from \"../../../meta/types\";\nimport type Bank from \"../../../structures/Bank\";\nimport Monster from \"../../../structures/Monster\";\nimport { TheLeviathan } from \"./TheLeviathan\";\n\nclass AwakenedTheLeviathanSingleton extends Monster {\n\tpublic kill(quantity = 1, options: MonsterKillOptions = {}): Bank {\n\t\treturn TheLeviathan.kill(quantity, { ...options, isAwakened: true });\n\t}\n}\n\nexport const AwakenedTheLeviathan = new AwakenedTheLeviathanSingleton({\n\tid: 12_215,\n\tname: \"The Leviathan (Awakened)\",\n\taliases: [\"the leviathan (awakened)\"],\n});\n", "import { randInt, roll, uniqueArr } from \"e\";\n\nimport type { MonsterKillOptions } from \"../../../meta/types\";\nimport Bank from \"../../../structures/Bank\";\nimport LootTable from \"../../../structures/LootTable\";\nimport Monster from \"../../../structures/Monster\";\nimport { itemID } from \"../../../util\";\nimport { VirtusTable } from \"../../subtables/VirtusTable\";\n\nconst TradeableUniqueTable = new LootTable({ limit: 8 })\n\t.add(VirtusTable, 1, 1)\n\t.add(\"Chromium ingot\", 1, 3)\n\t.add(\"Siren's staff\", 1, 1)\n\t.add(\"Bellator vestige\", 1, 1);\n\nconst ClueTable = new LootTable()\n\t.add(\"Clue scroll (easy)\")\n\t.add(\"Clue scroll (medium)\")\n\t.add(\"Clue scroll (hard)\")\n\t.add(\"Clue scroll (elite)\");\n\nconst SupplyTable = new LootTable()\n\t.every(\"Manta ray\", [3, 4])\n\t.every(\"Prayer potion(3)\", [1, 1])\n\t.every(\"Ancient brew(2)\", 1);\n\nconst ResourceTable = new LootTable()\n\t.add(\"Battlestaff\", [70, 105], 2)\n\t.add(\"Bronze longsword\", [16, 24], 1)\n\t.add(\"Mithril longsword\", [7, 10], 1)\n\t.add(\"Adamant longsword\", [9, 14], 1)\n\t.add(\"Dragon plateskirt\", [7, 10], 1)\n\n\t.add(\"Coal\", [303, 455], 8)\n\t.add(\"Adamantite ore\", [105, 157], 8)\n\t.add(\"Dragon javelin heads\", [84, 126], 8)\n\t.add(\"Runite bolts (unf)\", [84, 126], 8)\n\t.add(\"Uncut ruby\", [58, 87], 5)\n\t.add(\"Uncut diamond\", [58, 87], 5)\n\t.add(\"Runite ore\", [42, 63], 2)\n\t.add(\"Pure essence\", [280, 420], 1)\n\t.add(\"Iron ore\", [88, 133], 1)\n\t.add(\"Gold ore\", [88, 133], 1)\n\t.add(\"Mithril ore\", [88, 133], 1)\n\t.add(\"Sapphire\", [39, 59], 1)\n\t.add(\"Emerald\", [39, 59], 1)\n\t.add(\"Ruby\", [39, 59], 1)\n\t.add(\"Raw monkfish\", [700, 1050], 1)\n\n\t.add(\"Steam rune\", [466, 700], 8)\n\t.add(\"Death rune\", [466, 700], 8)\n\t.add(\"Soul rune\", [933, 1400], 2)\n\t.add(\"Water rune\", [280, 420], 1)\n\t.add(\"Chaos rune\", [140, 210], 1);\n\nclass TheWhispererSingleton extends Monster {\n\tpublic allItems: number[] = uniqueArr([\n\t\t...ClueTable.allItems,\n\t\t...SupplyTable.allItems,\n\t\t...ResourceTable.allItems,\n\t\t...TradeableUniqueTable.allItems,\n\t\titemID(\"Awakener's orb\"),\n\t\titemID(\"Shadow quartz\"),\n\t\titemID(\"Wisp\"),\n\t]);\n\n\tpublic kill(quantity = 1, options: MonsterKillOptions = {}): Bank {\n\t\tconst loot = new Bank();\n\n\t\tfor (let i = 0; i < quantity; i++) {\n\t\t\tconst tradeableUniqueCap = options.isAwakened ? 3 : 1;\n\t\t\tif (randInt(1, 64) <= tradeableUniqueCap) {\n\t\t\t\tloot.add(TradeableUniqueTable.roll());\n\t\t\t} else if (roll(34)) {\n\t\t\t\tloot.add(\"Awakener's orb\");\n\t\t\t} else if (roll(200)) {\n\t\t\t\tloot.add(\"Shadow quartz\");\n\t\t\t} else if (roll(5)) {\n\t\t\t\tloot.add(SupplyTable.roll());\n\t\t\t} else {\n\t\t\t\tloot.add(ResourceTable.roll());\n\t\t\t}\n\n\t\t\tif (roll(40)) {\n\t\t\t\tloot.add(ClueTable.roll());\n\t\t\t}\n\t\t\tif (roll(2000)) {\n\t\t\t\tloot.add(\"Wisp\");\n\t\t\t}\n\t\t}\n\t\treturn loot;\n\t}\n}\n\nexport const TheWhisperer = new TheWhispererSingleton({\n\tid: 12_204,\n\tname: \"The Whisperer\",\n\taliases: [\"the whisperer\", \"whisperer\"],\n});\n", "import type { MonsterKillOptions } from \"../../../meta/types\";\nimport type Bank from \"../../../structures/Bank\";\nimport Monster from \"../../../structures/Monster\";\nimport { TheWhisperer } from \"./TheWhisperer\";\n\nclass AwakenedTheWhispererSingleton extends Monster {\n\tpublic kill(quantity = 1, options: MonsterKillOptions = {}): Bank {\n\t\treturn TheWhisperer.kill(quantity, { ...options, isAwakened: true });\n\t}\n}\n\nexport const AwakenedTheWhisperer = new AwakenedTheWhispererSingleton({\n\tid: 12_205,\n\tname: \"The Whisperer (Awakened)\",\n\taliases: [\"awakened whisperer\", \"the whisperer (awakened)\"],\n});\n", "import { randInt, roll, uniqueArr } from \"e\";\n\nimport type { MonsterKillOptions } from \"../../../meta/types\";\nimport Bank from \"../../../structures/Bank\";\nimport LootTable from \"../../../structures/LootTable\";\nimport Monster from \"../../../structures/Monster\";\nimport itemID from \"../../../util/itemID\";\nimport { VirtusTable } from \"../../subtables/VirtusTable\";\n\nconst TradeableUniqueTable = new LootTable({ limit: 8 })\n\t.add(VirtusTable, 1, 1)\n\t.add(\"Chromium ingot\", 1, 3)\n\t.add(\"Executioner's axe head\", 1, 1)\n\t.add(\"Ultor vestige\", 1, 1);\n\nconst ClueTable = new LootTable()\n\t.add(\"Clue scroll (easy)\")\n\t.add(\"Clue scroll (medium)\")\n\t.add(\"Clue scroll (hard)\")\n\t.add(\"Clue scroll (elite)\");\n\nconst SupplyTable = new LootTable()\n\t.every(\"Tuna potato\", [3, 4])\n\t.every(\"Prayer potion(3)\")\n\t.every(\"Super combat potion(2)\");\n\nconst ResourceTable = new LootTable()\n\t.add(\"Coal\", [130, 195], 8)\n\t.add(\"Adamantite ore\", [45, 67], 8)\n\t.add(\"Rune javelin heads\", [36, 54], 8)\n\t.add(\"Dragon javelin heads\", [36, 54], 8)\n\t.add(\"Uncut ruby\", [25, 37], 5)\n\t.add(\"Uncut diamond\", [25, 37], 5)\n\t.add(\"Runite ore\", [18, 27], 2)\n\t.add(\"Dragon dart tip\", [100, 150], 2)\n\t.add(\"Pure essence\", [120, 180], 1)\n\t.add(\"Iron ore\", [38, 57], 1)\n\t.add(\"Silver ore\", [38, 57], 1)\n\t.add(\"Mithril ore\", [38, 57], 1)\n\t.add(\"Sapphire\", [17, 25], 1)\n\t.add(\"Emerald\", [17, 25], 1)\n\t.add(\"Ruby\", [17, 25], 1)\n\t.add(\"Raw shark\", [200, 300], 1)\n\n\t.add(\"Onyx bolts (e)\", [60, 90], 1)\n\t.add(\"Bronze javelin\", [42, 63], 1)\n\t.add(\"Mithril javelin\", [42, 63], 1)\n\t.add(\"Adamant javelin\", [42, 63], 1)\n\t.add(\"Mind rune\", [120, 180], 1)\n\t.add(\"Fire rune\", [120, 180], 1)\n\t.add(\"Lava rune\", [200, 300], 8)\n\t.add(\"Blood rune\", [200, 300], 8)\n\t.add(\"Soul rune\", [400, 600], 2);\n\nclass VardorvisSingleton extends Monster {\n\tpublic allItems: number[] = uniqueArr([\n\t\t...ClueTable.allItems,\n\t\t...SupplyTable.allItems,\n\t\t...ResourceTable.allItems,\n\t\t...TradeableUniqueTable.allItems,\n\t\titemID(\"Awakener's orb\"),\n\t\titemID(\"Blood quartz\"),\n\t\titemID(\"Butch\"),\n\t]);\n\n\tpublic kill(quantity = 1, options: MonsterKillOptions = {}): Bank {\n\t\tconst loot = new Bank();\n\n\t\tfor (let i = 0; i < quantity; i++) {\n\t\t\tconst tradeableUniqueCap = options.isAwakened ? 3 : 1;\n\t\t\tif (randInt(1, 136) <= tradeableUniqueCap) {\n\t\t\t\tloot.add(TradeableUniqueTable.roll());\n\t\t\t} else if (roll(48)) {\n\t\t\t\tloot.add(\"Awakener's orb\");\n\t\t\t} else if (roll(200)) {\n\t\t\t\tloot.add(\"Blood quartz\");\n\t\t\t} else if (roll(5)) {\n\t\t\t\tloot.add(SupplyTable.roll());\n\t\t\t} else {\n\t\t\t\tloot.add(ResourceTable.roll());\n\t\t\t}\n\n\t\t\tif (roll(40)) {\n\t\t\t\tloot.add(ClueTable.roll());\n\t\t\t}\n\t\t\tif (roll(3000)) {\n\t\t\t\tloot.add(\"Butch\");\n\t\t\t}\n\t\t}\n\t\treturn loot;\n\t}\n}\n\nexport const Vardorvis = new VardorvisSingleton({\n\tid: 12_223,\n\tname: \"Vardorvis\",\n\taliases: [\"vardorvis\"],\n});\n", "import type { MonsterKillOptions } from \"../../../meta/types\";\nimport type Bank from \"../../../structures/Bank\";\nimport Monster from \"../../../structures/Monster\";\nimport { Vardorvis } from \"./Vardorvis\";\n\nclass AwakenedVardorvisSingleton extends Monster {\n\tpublic kill(quantity = 1, options: MonsterKillOptions = {}): Bank {\n\t\treturn Vardorvis.kill(quantity, { ...options, isAwakened: true });\n\t}\n}\n\nexport const AwakenedVardorvis = new AwakenedVardorvisSingleton({\n\tid: 12_224,\n\tname: \"Vardorvis (Awakened)\",\n\taliases: [\"vardorvis (awakened)\"],\n});\n", "import LootTable from \"../../structures/LootTable\";\n\nexport const CommonSeedDropTable = new LootTable()\n\t.add(\"Limpwurt seed\", 1, 137)\n\t.add(\"Strawberry seed\", 1, 131)\n\t.add(\"Marrentill seed\", 1, 125)\n\t.add(\"Jangerberry seed\", 1, 92)\n\t.add(\"Tarromin seed\", 1, 85)\n\t.add(\"Wildblood seed\", 1, 83)\n\t.add(\"Watermelon seed\", 1, 63)\n\t.add(\"Harralander seed\", 1, 56)\n\t.add(\"Snape grass seed\", 1, 40)\n\t.add(\"Ranarr seed\", 1, 39)\n\t.add(\"Whiteberry seed\", 1, 34)\n\t.add(\"Mushroom spore\", 1, 29)\n\t.add(\"Toadflax seed\", 1, 27)\n\t.add(\"Belladonna seed\", 1, 18)\n\t.add(\"Irit seed\", 1, 18)\n\t.add(\"Poison ivy seed\", 1, 13)\n\t.add(\"Avantoe seed\", 1, 12)\n\t.add(\"Cactus seed\", 1, 12)\n\t.add(\"Kwuarm seed\", 1, 9)\n\t.add(\"Potato cactus seed\", 1, 8)\n\t.add(\"Snapdragon seed\", 1, 5)\n\t.add(\"Cadantine seed\", 1, 4)\n\t.add(\"Lantadyme seed\", 1, 3)\n\t.add(\"Dwarf weed seed\", 1, 2)\n\t.add(\"Torstol seed\", 1, 1);\n\nexport default CommonSeedDropTable;\n", "import LootTable from \"../../structures/LootTable\";\n\nexport const HerbDropTable = new LootTable()\n\t.add(\"Grimy guam leaf\", 1, 32)\n\t.add(\"Grimy marrentill\", 1, 24)\n\t.add(\"Grimy tarromin\", 1, 18)\n\t.add(\"Grimy harralander\", 1, 14)\n\t.add(\"Grimy ranarr weed\", 1, 11)\n\t.add(\"Grimy irit leaf\", 1, 8)\n\t.add(\"Grimy avantoe\", 1, 6)\n\t.add(\"Grimy kwuarm\", 1, 5)\n\t.add(\"Grimy cadantine\", 1, 4)\n\t.add(\"Grimy lantadyme\", 1, 3)\n\t.add(\"Grimy dwarf weed\", 1, 3);\n\nexport default HerbDropTable;\n", "import LootTable from \"../../structures/LootTable\";\n\nconst RareSeedTable = new LootTable()\n\t.add(\"Toadflax seed\", 1, 47)\n\t.add(\"Irit seed\", 1, 32)\n\t.add(\"Belladonna seed\", 1, 31)\n\t.add(\"Avantoe seed\", 1, 22)\n\t.add(\"Poison ivy seed\", 1, 22)\n\t.add(\"Cactus seed\", 1, 21)\n\t.add(\"Kwuarm seed\", 1, 15)\n\t.add(\"Potato cactus seed\", 1, 15)\n\t.add(\"Snapdragon seed\", 1, 10)\n\t.add(\"Cadantine seed\", 1, 7)\n\t.add(\"Lantadyme seed\", 1, 5)\n\t.add(\"Snape grass seed\", 3, 4)\n\t.add(\"Dwarf weed seed\", 1, 3)\n\t.add(\"Torstol seed\", 1, 2);\n\nexport default RareSeedTable;\n", "import LootTable from \"../../structures/LootTable\";\n\nconst WyvernHerbTable = new LootTable()\n\t.add(\"Grimy kwuarm\", 2, 260)\n\t.add(\"Grimy cadantine\", 2, 208)\n\t.add(\"Grimy dwarf weed\", 2, 208)\n\t.add(\"Grimy ranarr weed\", 1, 185)\n\t.add(\"Grimy torstol\", 1, 185)\n\t.add(\"Grimy lantadyme\", 2, 155);\n\nexport default WyvernHerbTable;\n", "import LootTable from \"../../structures/LootTable\";\nimport CommonSeedDropTable from \"./CommonSeedDropTable\";\nimport HerbDropTable from \"./HerbDropTable\";\nimport RareSeedTable from \"./RareSeedTable\";\nimport TreeHerbSeedTable from \"./TreeHerbSeedTable\";\nimport WyvernHerbTable from \"./WyvernHerbTable\";\n\nexport { HerbDropTable, CommonSeedDropTable, RareSeedTable, WyvernHerbTable, TreeHerbSeedTable };\nexport * from \"./RareDropTable\";\n\nexport const UncommonSeedDropTable = new LootTable()\n\t.add(\"Limpwurt seed\", 1, 137)\n\t.add(\"Strawberry seed\", 1, 131)\n\t.add(\"Marrentill seed\", 1, 125)\n\t.add(\"Jangerberry seed\", 1, 92)\n\t.add(\"Tarromin seed\", 1, 85)\n\t.add(\"Wildblood seed\", 1, 83)\n\t.add(\"Watermelon seed\", 1, 63)\n\t.add(\"Harralander seed\", 1, 56)\n\t.add(\"Snape grass seed\", 1, 40)\n\t.add(\"Ranarr seed\", 1, 39)\n\t.add(\"Whiteberry seed\", 1, 34)\n\t.add(\"Mushroom spore\", 1, 29)\n\t.add(\"Toadflax seed\", 1, 27)\n\t.add(\"Belladonna seed\", 1, 18)\n\t.add(\"Irit seed\", 1, 18)\n\t.add(\"Poison ivy seed\", 1, 13)\n\t.add(\"Avantoe seed\", 1, 12)\n\t.add(\"Cactus seed\", 1, 12)\n\t.add(\"Kwuarm seed\", 1, 9)\n\t.add(\"Potato cactus seed\", 1, 8)\n\t.add(\"Snapdragon seed\", 1, 5)\n\t.add(\"Cadantine seed\", 1, 4)\n\t.add(\"Lantadyme seed\", 1, 3)\n\t.add(\"Dwarf weed seed\", 1, 2)\n\t.add(\"Torstol seed\", 1, 1);\n", "import LootTable from \"../../../structures/LootTable\";\nimport SimpleMonster from \"../../../structures/SimpleMonster\";\nimport { itemTupleToTable } from \"../../../util\";\nimport { UncommonSeedDropTable } from \"../../subtables\";\nimport HerbDropTable from \"../../subtables/HerbDropTable\";\n\nconst ChaosTable = new LootTable().add(\"Chaos rune\", 100, 1).add(\"Chaos rune\", 200, 1);\n\nconst BryophytaTable = new LootTable()\n\t.every(\"Big bones\")\n\t.every(\"Clue scroll (beginner)\")\n\n\t/* Weapons and armour */\n\t.add(\"Rune longsword\", 1, 6)\n\t.add(\"Rune med helm\", 2, 6)\n\t.add(\"Rune chainbody\", 1, 6)\n\t.add(\"Rune plateskirt\", 1, 6)\n\t.add(\"Rune platelegs\", 1, 6)\n\t.add(\"Rune sq shield\", 1, 6)\n\t.add(\"Rune sword\", 2, 5)\n\t.add(\"Adamant platebody\", 5, 3)\n\t.add(\"Battlestaff\", 3, 3)\n\t.add(\"Adamant kiteshield\", 3, 1)\n\n\t/* Runes and ammunition */\n\t.add(\"Nature rune\", 100, 8)\n\t.add(\"Cosmic rune\", 100, 6)\n\t.add(\"Law rune\", 100, 6)\n\t.add(ChaosTable, 1, 6)\n\t.add(\"Death rune\", 100, 5)\n\t.add(\"Blood rune\", 100, 1)\n\t.add(\"Adamant arrow\", 100, 1)\n\n\t/* Herbs */\n\t.add(HerbDropTable, 1, 5)\n\n\t/* Seeds */\n\t.add(UncommonSeedDropTable, 1, 6)\n\n\t/* Materials */\n\t.add(\"Runite bar\", 2, 6)\n\t.add(\n\t\titemTupleToTable([\n\t\t\t[\"Uncut ruby\", 5],\n\t\t\t[\"Uncut diamond\", 5],\n\t\t]),\n\t\t1,\n\t\t4,\n\t)\n\t.add(\"Steel bar\", 25, 3)\n\n\t/* Other */\n\t.add(\"Coins\", 10_000, 5)\n\t.add(\"Coins\", 8000, 2)\n\t.add(\"Bryophyta's essence\", 1, 1)\n\n\t/* Tertiary */\n\t.tertiary(16, \"Mossy key\", 1, { freeze: true })\n\t.tertiary(400, \"Long bone\")\n\t.tertiary(5000, \"Giant champion scroll\")\n\t.tertiary(5013, \"Curved bone\");\n\nexport default new SimpleMonster({\n\tid: 8195,\n\tname: \"Bryophyta\",\n\ttable: BryophytaTable,\n\taliases: [\"bryophyta\"],\n});\n", "import LootTable from \"../../structures/LootTable\";\n\nconst GWMegaRareTable = new LootTable()\n\t.add(\"Coins\", [19_500, 20_000], 113)\n\t.add(\"Rune spear\", 1, 8)\n\t.add(\"Shield left half\", 1, 4)\n\t.add(\"Dragon spear\", 1, 3);\n\nexport const ShardTable = new LootTable().add(\"Godsword shard 1\").add(\"Godsword shard 2\").add(\"Godsword shard 3\");\n\nexport const GWGemTable = new LootTable()\n\t.add(\"Coins\", [19_500, 20_000], 63)\n\t.add(\"Uncut sapphire\", 1, 32)\n\t.add(\"Uncut emerald\", 1, 16)\n\t.add(\"Uncut ruby\", 1, 8)\n\t.add(\"Chaos talisman\", 1, 3)\n\t.add(\"Uncut diamond\", 1, 2)\n\t.add(\"Rune javelin\", 5, 1)\n\t.add(\"Loop half of key\")\n\t.add(\"Tooth half of key\")\n\t.add(GWMegaRareTable);\n\nconst GWRareDropTable = new LootTable()\n\t/* Runes and ammunition */\n\t.add(\"Nature rune\", [62, 67], 3)\n\t.add(\"Adamant javelin\", [15, 20], 2)\n\t.add(\"Death rune\", [40, 45], 2)\n\t.add(\"Law rune\", [40, 45], 2)\n\t.add(\"Rune arrow\", [38, 43], 2)\n\t.add(\"Steel arrow\", [145, 150], 2)\n\n\t/* Weapons and armour */\n\t.add(\"Rune 2h sword\", 1, 3)\n\t.add(\"Rune battleaxe\", 1, 3)\n\t.add(\"Rune sq shield\", 1, 2)\n\t.add(\"Dragon med helm\", 1, 1)\n\t.add(\"Rune kiteshield\", 1, 1)\n\t.add(\"Rune sword\", 1, 5)\n\n\t/* Other */\n\t.add(\"Coins\", [19_500, 20_000], 20)\n\t.add(\"Loop half of key\", 1, 21)\n\t.add(\"Tooth half of key\", 1, 20)\n\t.add(\"Dragonstone\", 1, 2)\n\t.add(\"Silver ore\", 100, 2)\n\n\t/* Subtables */\n\t.add(GWGemTable, 1, 20)\n\t.add(GWMegaRareTable, 1, 15);\n\nexport default GWRareDropTable;\n", "import LootTable from \"../../../structures/LootTable\";\nimport SimpleMonster from \"../../../structures/SimpleMonster\";\nimport { itemTupleToTable } from \"../../../util\";\nimport GWRareDropTable, { GWGemTable, ShardTable } from \"../../subtables/GWRareDropTable\";\n\nconst MinionUniqueTable = new LootTable().add(\"Coins\", [1400, 1500], 124).add(\"Saradomin sword\", 1, 3);\n\nconst MinionShardTable = new LootTable().add(\"Coins\", [1300, 1400], 9).add(ShardTable, 1, 3);\n\nconst MinionTable = new LootTable()\n\t.every(\"Bones\")\n\t.add(MinionUniqueTable, 1, 1)\n\t.add(MinionShardTable, 1, 1)\n\t.add(\"Steel arrow\", [95, 100], 8)\n\t.add(\"Steel dart\", [95, 100], 8)\n\t.add(\"Law rune\", [5, 10], 8)\n\t.add(\"Monkfish\", 3, 8)\n\t.add(\"Summer pie\", 1, 8)\n\t.add(\"Coins\", [1300, 1400], 62)\n\t.add(\"Grimy ranarr weed\", 1, 8)\n\t.add(\"Unicorn horn\", 6, 8)\n\t.add(\"Snape grass\", 5, 7)\n\t.tertiary(128, \"Clue scroll (hard)\");\n\nconst UniqueTable = new LootTable()\n\t.add(\"Saradomin sword\", 1, 4)\n\t.add(\"Saradomin's light\", 1, 2)\n\t.add(\"Armadyl crossbow\")\n\t.add(\"Saradomin hilt\")\n\t.add(ShardTable, 1, 2)\n\t.add(\"Coins\", [19_500, 20_000], 2);\n\nconst CommanderZilyanaTable = new LootTable()\n\t.every(\"Bones\")\n\t.every(MinionTable, 3)\n\t.add(UniqueTable, 1, 3)\n\t.tertiary(250, \"Clue scroll (elite)\")\n\t.tertiary(5000, \"Pet zilyana\")\n\n\t/* Weapons and armour */\n\t.add(\"Adamant platebody\", 1, 8)\n\t.add(\"Rune dart\", [35, 40], 8)\n\t.add(\"Rune kiteshield\", 1, 8)\n\t.add(\"Rune plateskirt\", 1, 8)\n\n\t/* Potions */\n\t.add(\"Prayer potion(4)\", 3, 8)\n\t.add(\n\t\titemTupleToTable([\n\t\t\t[\"Super defence(3)\", 3],\n\t\t\t[\"Magic potion(3)\", 3],\n\t\t]),\n\t\t1,\n\t\t8,\n\t)\n\t.add(\n\t\titemTupleToTable([\n\t\t\t[\"Saradomin brew(3)\", 3],\n\t\t\t[\"Super restore(4)\", 3],\n\t\t]),\n\t\t1,\n\t\t6,\n\t)\n\n\t/* Other */\n\t.add(\"Coins\", [19_500, 20_000], 27)\n\t.add(\"Diamond\", 6, 8)\n\t.add(\"Law rune\", [95, 100], 8)\n\t.add(\"Grimy ranarr weed\", 5, 8)\n\t.add(\"Ranarr seed\", 2, 8)\n\t.add(\"Magic seed\", 1, 1)\n\n\t.add(GWRareDropTable, 1, 8)\n\t.add(GWGemTable, 1, 2);\n\nexport default new SimpleMonster({\n\tid: 2205,\n\tname: \"Commander Zilyana\",\n\ttable: CommanderZilyanaTable,\n\taliases: [\"sara\", \"zily\", \"saradomin\", \"zilyana\", \"commander zilyana\"],\n});\n", "import LootTable from \"../../structures/LootTable\";\n\nconst TalismanTable = new LootTable()\n\t.add(\"Air talisman\", 1, 10)\n\t.add(\"Body talisman\", 1, 10)\n\t.add(\"Earth talisman\", 1, 10)\n\t.add(\"Fire talisman\", 1, 10)\n\t.add(\"Mind talisman\", 1, 10)\n\t.add(\"Water talisman\", 1, 10)\n\t.add(\"Cosmic talisman\", 1, 4)\n\t.add(\"Chaos talisman\", 1, 3)\n\t.add(\"Nature talisman\", 1, 3);\n\nexport default TalismanTable;\n", "import LootTable from \"../../../structures/LootTable\";\nimport SimpleMonster from \"../../../structures/SimpleMonster\";\nimport RareDropTable, { GemTable } from \"../../subtables/RareDropTable\";\nimport RareSeedTable from \"../../subtables/RareSeedTable\";\nimport TalismanTable from \"../../subtables/TalismanTable\";\n\nconst DagannothPrimeTable = new LootTable()\n\t.every(\"Dagannoth bones\")\n\t.every(\"Dagannoth hide\")\n\t.tertiary(20, \"Ensouled dagannoth head\")\n\t.tertiary(42, \"Clue scroll (hard)\")\n\t.tertiary(750, \"Clue scroll (elite)\")\n\t.tertiary(5000, \"Pet dagannoth prime\")\n\n\t/* Weapons and armour */\n\t.add(\"Earth battlestaff\", 1, 10)\n\t.add(\"Water battlestaff\", 1, 5)\n\t.add(\"Air battlestaff\", 1, 4)\n\t.add(\"Battlestaff\", [1, 10], 1)\n\t.add(\"Fremennik blade\")\n\t.add(\"Fremennik shield\")\n\t.add(\"Fremennik helm\")\n\t.add(\"Mud battlestaff\")\n\t.add(\"Dragon axe\")\n\t.add(\"Farseer helm\")\n\t.add(\"Skeletal top\")\n\t.add(\"Skeletal bottoms\")\n\t.add(\"Seers ring\")\n\n\t/* Runes */\n\t.add(\"Air rune\", [100, 200], 6)\n\t.add(\"Earth rune\", [50, 100], 5)\n\t.add(\"Blood rune\", [25, 75], 2)\n\t.add(\"Law rune\", [10, 75], 2)\n\t.add(\"Nature rune\", [25, 50], 2)\n\t.add(\"Mud rune\", [25, 75], 2)\n\t.add(\"Death rune\", [25, 85], 2)\n\n\t/* Talismans */\n\t.add(\"Earth talisman\", [25, 75], 10)\n\t.add(\"Air talisman\", [25, 75], 7)\n\t.add(\"Water talisman\", [1, 76], 7)\n\t.add(TalismanTable)\n\n\t/* Other */\n\t.add(\"Shark\", 5, 10)\n\t.add(\"Oyster pearls\", 1, 5)\n\t.add(\"Pure essence\", 150, 5)\n\t.add(\"Grimy ranarr weed\", 1, 5)\n\t.add(\"Coins\", [500, 1109], 3)\n\t.add(RareDropTable, 1, 8)\n\t.add(GemTable, 1, 10)\n\t.add(RareSeedTable, 1, 7);\n\nexport default new SimpleMonster({\n\tid: 2266,\n\tname: \"Dagannoth Prime\",\n\ttable: DagannothPrimeTable,\n\taliases: [\"prime\", \"dagannoth prime\"],\n});\n", "import LootTable from \"../../../structures/LootTable\";\nimport SimpleMonster from \"../../../structures/SimpleMonster\";\nimport RareDropTable, { GemTable } from \"../../subtables/RareDropTable\";\nimport TalismanTable from \"../../subtables/TalismanTable\";\n\nconst DagannothRexTable = new LootTable()\n\t.every(\"Dagannoth bones\")\n\t.every(\"Dagannoth hide\")\n\t.tertiary(20, \"Ensouled dagannoth head\")\n\t.tertiary(42, \"Clue scroll (hard)\")\n\t.tertiary(750, \"Clue scroll (elite)\")\n\t.tertiary(5000, \"Pet dagannoth rex\")\n\n\t/* Weapons and armour */\n\t.add(\"Steel kiteshield\", 1, 17)\n\t.add(\"Mithril warhammer\", 1, 11)\n\t.add(\"Adamant axe\", 1, 7)\n\t.add(\"Steel platebody\", 1, 4)\n\t.add(\"Mithril pickaxe\", 1, 3)\n\t.add(\"Adamant platebody\", 1, 2)\n\t.add(\"Fremennik blade\", 1, 2)\n\t.add(\"Rune axe\")\n\t.add(\"Fremennik shield\")\n\t.add(\"Fremennik helm\")\n\t.add(\"Mithril 2h sword\")\n\t.add(\"Dragon axe\")\n\t.add(\"Ring of life\")\n\t.add(\"Rock-shell plate\")\n\t.add(\"Rock-shell legs\")\n\t.add(\"Berserker ring\")\n\t.add(\"Warrior ring\")\n\n\t/* Potions */\n\t.add(\"Antifire potion(2)\")\n\t.add(\"Prayer potion(2)\")\n\t.add(\"Restore potion(2)\")\n\t.add(\"Super attack(2)\")\n\t.add(\"Super strength(2)\")\n\t.add(\"Super defence(2)\")\n\t.add(\"Zamorak brew(2)\")\n\n\t/* Ores and bars */\n\t.add(\"Mithril ore\", 25, 10)\n\t.add(\"Adamantite bar\", 1, 3)\n\t.add(\"Coal\", 100, 2)\n\t.add(\"Iron ore\", 150, 1)\n\t.add(\"Steel bar\", [15, 30], 1)\n\n\t/* Other */\n\t.add(\"Coins\", [500, 1109], 10)\n\t.add(\"Grimy ranarr weed\", 1, 7)\n\t.add(\"Bass\", 5, 7)\n\t.add(\"Swordfish\", 5, 4)\n\t.add(\"Shark\", 5, 1)\n\t.add(RareDropTable, 1, 8)\n\t.add(GemTable, 1, 10)\n\t.add(TalismanTable);\n\nexport default new SimpleMonster({\n\tid: 2267,\n\tname: \"Dagannoth Rex\",\n\ttable: DagannothRexTable,\n\taliases: [\"rex\", \"dagannoth rex\"],\n});\n", "import LootTable from \"../../../structures/LootTable\";\nimport SimpleMonster from \"../../../structures/SimpleMonster\";\nimport RareDropTable, { GemTable } from \"../../subtables/RareDropTable\";\nimport RareSeedTable from \"../../subtables/RareSeedTable\";\nimport TalismanTable from \"../../subtables/TalismanTable\";\n\nconst DagannothSupremeTable = new LootTable()\n\t.every(\"Dagannoth bones\")\n\t.every(\"Dagannoth hide\")\n\t.tertiary(20, \"Ensouled dagannoth head\")\n\t.tertiary(42, \"Clue scroll (hard)\")\n\t.tertiary(750, \"Clue scroll (elite)\")\n\t.tertiary(5000, \"Pet dagannoth supreme\")\n\n\t/* Weapons and armour */\n\t.add(\"Mithril knife\", [25, 50], 10)\n\t.add(\"Red d'hide vambraces\", 1, 7)\n\t.add(\"Rune thrownaxe\", [5, 10], 5)\n\t.add(\"Adamant dart\", [10, 25], 5)\n\t.add(\"Iron knife\", [200, 500], 5)\n\t.add(\"Steel knife\", [50, 150], 5)\n\t.add(\"Fremennik blade\")\n\t.add(\"Fremennik shield\")\n\t.add(\"Fremennik helm\")\n\t.add(\"Seercull\")\n\t.add(\"Dragon axe\")\n\t.add(\"Archer helm\")\n\t.add(\"Spined body\")\n\t.add(\"Spined chaps\")\n\t.add(\"Archers ring\")\n\n\t/* ammunition */\n\t.add(\"Steel arrow\", [50, 250], 5)\n\t.add(\"Runite bolts\", [2, 12], 5)\n\t.add(\"Iron arrow\", [200, 700], 4)\n\n\t/* Other */\n\t.add(\"Coins\", [500, 1109], 10)\n\t.add(\"Oyster pearls\", 1, 6)\n\t.add(\"Opal bolt tips\", [10, 30], 5)\n\t.add(\"Shark\", 5, 5)\n\t.add(\"Yew logs\", [50, 150], 5)\n\t.add(\"Grimy ranarr weed\", 1, 5)\n\t.add(\"Maple logs\", [15, 65], 3)\n\t.add(\"Runite limbs\", 1, 2)\n\t.add(\"Feather\", [250, 500], 1)\n\t.add(RareDropTable, 1, 8)\n\t.add(GemTable, 1, 10)\n\t.add(RareSeedTable, 1, 7)\n\t.add(TalismanTable);\n\nexport default new SimpleMonster({\n\tid: 2265,\n\tname: \"Dagannoth Supreme\",\n\ttable: DagannothSupremeTable,\n\taliases: [\"supreme\", \"dagannoth supreme\"],\n});\n", "import LootTable from \"../../../structures/LootTable\";\nimport SimpleMonster from \"../../../structures/SimpleMonster\";\nimport RareDropTable from \"../../subtables/RareDropTable\";\nimport TreeHerbSeedTable from \"../../subtables/TreeHerbSeedTable\";\nimport { GemTable } from \"./../../subtables/RareDropTable\";\n\nconst DerangedArchaeologistTable = new LootTable()\n\t.every(\"Bones\")\n\n\t/* Weapons and armour */\n\t.add(\"Black d'hide body\", 1, 6)\n\t.add(\"Rune sword\", 1, 4)\n\t.add(\"Rune 2h sword\", 1, 3)\n\n\t/* Runes and ammunition */\n\t.add(\"Water rune\", 100, 6)\n\t.add(\"Mud rune\", 40, 6)\n\t.add(\"Rune knife\", 25, 6)\n\t.add(\"Cannonball\", 80, 4)\n\t.add(\"Dragon arrow\", 60, 1)\n\n\t/* Seeds */\n\t.add(TreeHerbSeedTable, 1, 1)\n\n\t/* Materials */\n\t.add(\"Grimy dwarf weed\", 4, 8)\n\t.add(\"White berries\", 10, 7)\n\t.add(\"Black dragonhide\", 8, 6)\n\t.add(\"Gold ore\", 10, 6)\n\t.add(\"Onyx bolt tips\", 6, 6)\n\t.add(\"Runite limbs\", 1, 5)\n\t.add(\"Uncut diamond\", 5, 5)\n\n\t/* Consumables */\n\t.add(\"Prayer potion(3)\", 1, 8)\n\t.add(\"Potato with cheese\", 3, 8)\n\t.add(\"Shark\", 2, 8)\n\t.add(\"Anchovy pizza\", 2, 4)\n\n\t/* Other */\n\t.add(\"Crystal key\", 1, 7)\n\t.add(\"Long bone\", 1, 2)\n\n\t/* Subtables */\n\t.add(RareDropTable, 1, 6)\n\t.add(GemTable, 1, 6)\n\n\t/* Tertiary */\n\t.tertiary(2, \"Numulite\", [5, 32])\n\t.tertiary(15, \"Unidentified large fossil\")\n\t.tertiary(29, \"Unidentified small fossil\")\n\t.tertiary(58, \"Unidentified medium fossil\")\n\t.tertiary(200, \"Clue scroll (elite)\")\n\t.tertiary(292, \"Unidentified rare fossil\");\n\nexport default new SimpleMonster({\n\tid: 7806,\n\tname: \"Deranged Archaeologist\",\n\ttable: DerangedArchaeologistTable,\n\taliases: [\"deranged arch\", \"deranged archaeologist\"],\n});\n", "import LootTable from \"../../../structures/LootTable\";\nimport SimpleMonster from \"../../../structures/SimpleMonster\";\nimport GWRareDropTable, { GWGemTable, ShardTable } from \"../../subtables/GWRareDropTable\";\n\nconst GeneralGraardorArmorTable = new LootTable().add(\"Bandos chestplate\").add(\"Bandos tassets\").add(\"Bandos boots\");\n\nconst MinionUniqueTable = new LootTable().add(\"Coins\", [1400, 1500], 124).add(GeneralGraardorArmorTable, 1, 3);\n\nconst MinionShardTable = new LootTable().add(\"Coins\", [1400, 1500], 9).add(ShardTable, 1, 3);\n\nconst MinionTable = new LootTable()\n\t.every(\"Bones\")\n\t.add(MinionUniqueTable, 1, 1)\n\t.add(MinionShardTable, 1, 1)\n\t.add(\"Steel dart\", [95, 100], 8)\n\t.add(\"Nature rune\", [15, 20], 8)\n\t.add(\"Cosmic rune\", [25, 30], 8)\n\t.add(\"Shark\", 2, 8)\n\t.add(\"Chilli potato\", 3, 8)\n\t.add(\"Steel arrow\", [95, 100], 7)\n\t.add(\"Coins\", [1400, 1500], 66)\n\t.add(\"Limpwurt root\", 5, 8)\n\t.add(\"Combat potion(3)\", 1, 2)\n\t.add(\"Super strength(3)\", 1, 2)\n\t.tertiary(128, \"Clue scroll (hard)\")\n\t.tertiary(5000, \"Goblin champion scroll\");\n\nconst StrongsackMinionTable = new LootTable({ limit: 6 }).every(MinionTable).add(\"Kebab\", 1, 1);\nconst SteelwillMinionTable = new LootTable({ limit: 6 }).every(MinionTable).add(\"Beer\", 1, 1);\nconst GrimspikeMinionTable = new LootTable({ limit: 6 }).every(MinionTable).add(\"Right eye patch\", 1, 1);\n\nconst UniqueTable = new LootTable()\n\t.add(GeneralGraardorArmorTable, 1, 4)\n\t.add(ShardTable, 1, 2)\n\t.add(\"Bandos hilt\")\n\t.add(\"Coins\", [20_100, 20_600], 5);\n\nconst GeneralGraardorTable = new LootTable()\n\t.every(\"Big bones\")\n\t.every(StrongsackMinionTable)\n\t.every(SteelwillMinionTable)\n\t.every(GrimspikeMinionTable)\n\t.add(UniqueTable, 1, 3)\n\t.tertiary(250, \"Clue scroll (elite)\")\n\t.tertiary(400, \"Long bone\")\n\t.tertiary(5000, \"Pet general graardor\")\n\t.tertiary(5013, \"Curved bone\")\n\n\t/* Weapons and armour */\n\t.add(\"Rune longsword\", 1, 8)\n\t.add(\"Rune 2h sword\", 1, 8)\n\t.add(\"Rune platebody\", 1, 8)\n\t.add(\"Rune pickaxe\", 1, 6)\n\n\t/* Other */\n\t.add(\"Coins\", [19_500, 20_000], 28)\n\t.add(\"Grimy snapdragon\", 3, 8)\n\t.add(\"Snapdragon seed\", 1, 8)\n\t.add(\"Super restore(4)\", 3, 8)\n\t.add(\"Adamantite ore\", [15, 20], 8)\n\t.add(\"Coal\", [115, 120], 8)\n\t.add(\"Magic logs\", [15, 20], 8)\n\t.add(\"Nature rune\", [65, 70], 8)\n\n\t.add(GWRareDropTable, 1, 8)\n\t.add(GWGemTable, 1, 2);\n\nexport default new SimpleMonster({\n\tid: 2215,\n\tname: \"General Graardor\",\n\ttable: GeneralGraardorTable,\n\taliases: [\"graardor\", \"bandos\", \"general graardor\"],\n});\n", "import LootTable from \"../../../structures/LootTable\";\nimport SimpleMonster from \"../../../structures/SimpleMonster\";\nimport RareDropTable, { GemTable } from \"../../subtables/RareDropTable\";\n\nconst GiantMoleTable = new LootTable()\n\t.every(\"Big bones\")\n\t.every(\"Mole claw\", 1)\n\t.every(\"Mole skin\", [1, 3])\n\t.tertiary(400, \"Long bone\")\n\t.tertiary(500, \"Clue scroll (elite)\")\n\t.tertiary(3000, \"Baby mole\")\n\t.tertiary(5013, \"Curved bone\")\n\n\t/* Weapons and armour */\n\t.add(\"Adamant longsword\", 1, 10)\n\t.add(\"Mithril platebody\", 1, 9)\n\t.add(\"Amulet of strength\", 1, 7)\n\t.add(\"Mithril axe\", 1, 2)\n\t.add(\"Mithril battleaxe\")\n\t.add(\"Rune med helm\")\n\n\t/* Runes and ammunition */\n\t.add(\"Air rune\", 105, 20)\n\t.add(\"Blood rune\", 15, 19)\n\t.add(\"Fire rune\", 105, 11)\n\t.add(\"Death rune\", 7, 3)\n\t.add(\"Law rune\", 15, 5)\n\t.add(\"Iron arrow\", 690, 10)\n\n\t/* Other */\n\t.add(\"Yew logs\", 100, 10)\n\t.add(\"Shark\", 4, 4)\n\t.add(\"Mithril bar\", 1, 3)\n\t.add(\"Iron ore\", 100, 2)\n\t.add(\"Oyster pearls\")\n\n\t/* Subtables */\n\t.add(RareDropTable, 1, 4)\n\t.add(GemTable, 1, 5);\n\nexport default new SimpleMonster({\n\tid: 5779,\n\tname: \"Giant Mole\",\n\ttable: GiantMoleTable,\n\taliases: [\"mole\", \"giant mole\"],\n});\n", "import LootTable from \"../../../structures/LootTable\";\nimport SimpleMonster from \"../../../structures/SimpleMonster\";\nimport RareDropTable from \"../../subtables/RareDropTable\";\n\nconst KqConsumablesTable = new LootTable()\n\t.add(\"Monkfish\", 3, 1)\n\t.add(\"Shark\", 2, 1)\n\t.add(\"Dark crab\", 2, 1)\n\t.add(\"Saradomin brew(4)\", 1, 1)\n\t.add(\"Prayer potion(4)\", 2, 1)\n\t.add(\"Super restore(4)\", 1, 1)\n\t.add(\"Super combat potion(2)\", 1, 1)\n\t.add(\"Ranging potion(3)\", 1, 1)\n\t.add(\"Superantipoison(2)\", 1, 1);\n\nconst KalphiteQueenTable = new LootTable({ limit: 256 })\n\n\t/* Consumables */\n\t.every(KqConsumablesTable)\n\n\t/* Weapons and armor */\n\t.add(\"Battlestaff\", 10, 10)\n\t.add(\"Rune chainbody\", 1, 9)\n\t.add(\"Red d'hide body\", 1, 8)\n\t.add(\"Rune knife(p++)\", 25, 8)\n\t.add(\"Lava battlestaff\", 1, 4)\n\t.add(\"Dragon chainbody\", 1, 2)\n\t.add(\"Dragon 2h sword\", 1, 1)\n\n\t/* Runes and ammunition */\n\t.add(\"Death rune\", 150, 12)\n\t.add(\"Blood rune\", 100, 12)\n\t.add(\"Mithril arrow\", 500, 10)\n\t.add(\"Rune arrow\", 250, 6)\n\n\t/* Herbs */\n\t.add(\"Grimy toadflax\", 25, 4)\n\t.add(\"Grimy ranarr weed\", 25, 4)\n\t.add(\"Grimy snapdragon\", 25, 4)\n\t.add(\"Grimy torstol\", 25, 4)\n\n\t/* Seeds */\n\t.add(\"Torstol seed\", 2, 8)\n\t.add(\"Watermelon seed\", 25, 6)\n\t.add(\"Papaya tree seed\", 2, 6)\n\t.add(\"Palm tree seed\", 2, 6)\n\t.add(\"Magic seed\", 2, 6)\n\n\t/* Resources */\n\t.add(\"Runite bar\", 3, 10)\n\t.add(\"Bucket of sand\", 100, 8)\n\t.add(\"Gold ore\", 250, 8)\n\t.add(\"Magic logs\", 60, 8)\n\t.add(\"Uncut emerald\", 25, 6)\n\t.add(\"Uncut ruby\", 25, 6)\n\t.add(\"Uncut diamond\", 25, 6)\n\n\t/* Other */\n\t.add(\"Wine of zamorak\", 60, 20)\n\t.add(\"Potato cactus\", 100, 16)\n\t.add(\"Coins\", [15_000, 20_000], 10)\n\t.add(\"Grapes\", 100, 10)\n\t.add(\"Weapon poison(++)\", 5, 10)\n\t.add(\"Cactus spine\", 10, 6)\n\n\t/* RDT */\n\t.add(RareDropTable, 1, 2)\n\n\t/* Tertiary */\n\t.tertiary(20, \"Ensouled kalphite head\")\n\t.tertiary(100, \"Clue scroll (elite)\")\n\t.tertiary(128, \"Kq head\")\n\t.tertiary(400, \"Dragon pickaxe\")\n\t.tertiary(2000, \"Jar of sand\")\n\t.tertiary(3000, \"Kalphite princess\");\n\nexport default new SimpleMonster({\n\tid: 963,\n\tname: \"Kalphite Queen\",\n\ttable: KalphiteQueenTable,\n\taliases: [\"kalphite queen\", \"kq\"],\n});\n", "import LootTable from \"../../../structures/LootTable\";\nimport SimpleMonster from \"../../../structures/SimpleMonster\";\nimport { itemTupleToTable } from \"../../../util\";\nimport GWRareDropTable, { GWGemTable, ShardTable } from \"../../subtables/GWRareDropTable\";\n\nconst KreearraArmorTable = new LootTable().add(\"Armadyl helmet\").add(\"Armadyl chestplate\").add(\"Armadyl chainskirt\");\n\nconst MinionUniqueTable = new LootTable().add(\"Coins\", [1000, 1100], 124).add(KreearraArmorTable, 1, 3);\n\nconst MinionShardTable = new LootTable().add(\"Coins\", [1000, 1100], 9).add(ShardTable, 1, 3);\n\nconst MinionTable = new LootTable()\n\t.every(\"Bones\")\n\t.every(\"Feather\", [1, 11])\n\t.add(MinionUniqueTable, 1, 1)\n\t.add(MinionShardTable, 1, 1)\n\t.add(\"Steel dart\", [91, 101], 8)\n\t.add(\"Smoke rune\", [10, 15], 8)\n\t.add(\"Manta ray\", 2, 8)\n\t.add(\"Mushroom potato\", 3, 8)\n\t.add(\"Steel arrow\", [91, 101], 7)\n\t.add(\"Coins\", [1000, 1100], 70)\n\t.add(\"Crushed nest\", 2, 8)\n\t.add(\"Grimy kwuarm\", 1, 8)\n\t.tertiary(128, \"Clue scroll (hard)\");\n\nconst UniqueTable = new LootTable()\n\t.add(KreearraArmorTable, 1, 4)\n\t.add(ShardTable, 1, 2)\n\t.add(\"Armadyl hilt\")\n\t.add(\"Coins\", [20_500, 21_000], 5);\n\nconst KreearraTable = new LootTable()\n\t.every(\"Big bones\")\n\t.every(MinionTable, 3)\n\t.every(\"Feather\", [1, 16])\n\t.add(UniqueTable, 1, 3)\n\t.tertiary(250, \"Clue scroll (elite)\")\n\t.tertiary(400, \"Long bone\")\n\t.tertiary(5000, \"Pet kree'arra\")\n\t.tertiary(5013, \"Curved bone\")\n\n\t/* Weapons and armour */\n\t.add(\"Black d'hide body\", 1, 8)\n\t.add(\"Rune crossbow\", 1, 8)\n\n\t/* Runes and ammunition */\n\t.add(\"Mind rune\", [586, 601], 8)\n\t.add(\"Rune arrow\", [100, 105], 8)\n\t.add(\"Runite bolts\", [20, 25], 8)\n\t.add(\"Dragonstone bolts (e)\", [5, 10], 8)\n\n\t/* Other */\n\t.add(\"Coins\", [19_500, 20_000], 40)\n\t.add(\n\t\titemTupleToTable([\n\t\t\t[\"Ranging potion(3)\", 3],\n\t\t\t[\"Super defence(3)\", 3],\n\t\t]),\n\t\t1,\n\t\t8,\n\t)\n\t.add(\"Grimy dwarf weed\", [8, 13], 8)\n\t.add(\"Dwarf weed seed\", 3, 8)\n\t.add(\"Crystal key\", 1, 1)\n\t.add(\"Yew seed\", 1, 1)\n\n\t.add(GWRareDropTable, 1, 8)\n\t.add(GWGemTable, 1, 2);\n\nexport default new SimpleMonster({\n\tid: 3162,\n\tname: \"Kree'arra\",\n\ttable: KreearraTable,\n\taliases: [\"arma\", \"armadyl\", \"kree\", \"kree'arra\", \"bird person\"],\n});\n", "import LootTable from \"../../../structures/LootTable\";\nimport SimpleMonster from \"../../../structures/SimpleMonster\";\nimport { itemTupleToTable } from \"../../../util\";\nimport GWRareDropTable, { GWGemTable, ShardTable } from \"../../subtables/GWRareDropTable\";\n\nconst MinionUniqueTable = new LootTable().add(\"Coins\", [1300, 1400], 124).add(\"Zamorakian spear\", 1, 3);\n\nconst MinionShardTable = new LootTable().add(\"Coins\", [1300, 1400], 9).add(ShardTable, 1, 3);\n\nconst MinionTable = new LootTable()\n\t.every(\"Malicious ashes\")\n\t.add(MinionUniqueTable, 1, 1)\n\t.add(MinionShardTable, 1, 1)\n\t.add(\"Steel dart\", [95, 100], 8)\n\t.add(\"Death rune\", [5, 10], 8)\n\t.add(\"Blood rune\", [5, 10], 8)\n\t.add(\"Steel arrow\", [95, 100], 7)\n\t.add(\"Coins\", [1300, 1400], 66)\n\t.add(\"Shark\", 3, 8)\n\t.add(\"Tuna potato\", 2, 8)\n\t.add(\"Wine of zamorak\", [5, 10], 8)\n\t.add(\"Super attack(3)\", 1, 2)\n\t.add(\"Super strength(3)\", 1, 2)\n\t.tertiary(128, \"Clue scroll (hard)\");\n\nconst ZaklnGritchMinionTable = new LootTable({ limit: 5000 })\n\t.every(MinionTable)\n\t.add(\"Lesser demon champion scroll\", 1, 1);\n\nconst UniqueTable = new LootTable()\n\t.add(\"Steam battlestaff\", 1, 4)\n\t.add(\"Zamorakian spear\", 1, 4)\n\t.add(\"Staff of the dead\")\n\t.add(\"Zamorak hilt\")\n\t.add(ShardTable, 1, 2);\n\nconst KrilTsutsarothTable = new LootTable()\n\t.every(\"Infernal ashes\")\n\t.every(MinionTable, 2)\n\t.every(ZaklnGritchMinionTable)\n\t.add(UniqueTable, 1, 3)\n\t.tertiary(250, \"Clue scroll (elite)\")\n\t.tertiary(5000, \"Pet k'ril tsutsaroth\")\n\n\t/* Weapons and armour */\n\t.add(\"Adamant arrow(p++)\", [295, 300], 8)\n\t.add(\"Rune scimitar\", 1, 8)\n\t.add(\"Adamant platebody\", 1, 8)\n\t.add(\"Rune platelegs\", 1, 7)\n\t.add(\"Dragon dagger(p++)\", 1, 2)\n\n\t/* Potions */\n\t.add(\n\t\titemTupleToTable([\n\t\t\t[\"Super attack(3)\", 3],\n\t\t\t[\"Super strength(3)\", 3],\n\t\t]),\n\t\t1,\n\t\t8,\n\t)\n\t.add(\n\t\titemTupleToTable([\n\t\t\t[\"Super restore(3)\", 3],\n\t\t\t[\"Zamorak brew(3)\", 3],\n\t\t]),\n\t\t1,\n\t\t8,\n\t)\n\n\t/* Other */\n\t.add(\"Coins\", [19_500, 20_000], 33)\n\t.add(\"Grimy lantadyme\", 10, 8)\n\t.add(\"Lantadyme seed\", 3, 8)\n\t.add(\"Death rune\", [120, 125], 8)\n\t.add(\"Blood rune\", [80, 85], 8)\n\n\t.add(GWRareDropTable, 1, 8)\n\t.add(GWGemTable, 1, 2);\n\nexport default new SimpleMonster({\n\tid: 3129,\n\tname: \"K'ril Tsutsaroth\",\n\ttable: KrilTsutsarothTable,\n\taliases: [\"kril\", \"zammy\", \"zamorak\", \"k'ril tsutsaroth\"],\n});\n", "import LootTable from \"../../../structures/LootTable\";\nimport SimpleMonster from \"../../../structures/SimpleMonster\";\nimport { itemTupleToTable } from \"../../../util\";\n\nconst OborTable = new LootTable({ limit: 118 })\n\t.every(\"Big bones\")\n\t.every(\"Clue scroll (beginner)\")\n\t.every(\"Ensouled giant head\")\n\t.tertiary(16, \"Giant key\")\n\t.tertiary(400, \"Long bone\")\n\t.tertiary(5000, \"Giant champion scroll\")\n\t.tertiary(5013, \"Curved bone\")\n\n\t/* Weapons and armour */\n\t.add(\"Rune med helm\", 1, 6)\n\t.add(\"Rune full helm\", 1, 5)\n\t.add(\"Rune longsword\", 1, 5)\n\t.add(\"Rune battleaxe\", 1, 4)\n\t.add(\"Rune kiteshield\", 1, 3)\n\t.add(\"Rune chainbody\", 1, 3)\n\t.add(\"Rune platelegs\", 1, 3)\n\t.add(\"Rune plateskirt\", 1, 3)\n\t.add(\"Rune 2h sword\", 1, 3)\n\t.add(\"Hill giant club\", 1, 1)\n\n\t/* Runes */\n\t.add(\"Law rune\", [50, 99], 12)\n\t.add(\"Cosmic rune\", [60, 119], 12)\n\t.add(\"Chaos rune\", [100, 199], 10)\n\t.add(\"Death rune\", [40, 79], 10)\n\t.add(\"Nature rune\", [40, 79], 7)\n\n\t/* Other */\n\t.add(\"Coins\", [10_000, 20_000], 10)\n\t.add(\"Limpwurt root\", 20, 8)\n\t.add(\"Big bones\", 50, 8)\n\t.add(\n\t\titemTupleToTable([\n\t\t\t[\"Uncut diamond\", 5],\n\t\t\t[\"Uncut ruby\", 5],\n\t\t]),\n\t\t1,\n\t\t5,\n\t);\n\nexport default new SimpleMonster({\n\tid: 7416,\n\tname: \"Obor\",\n\ttable: OborTable,\n\taliases: [\"obor\"],\n});\n", "import LootTable from \"../../../structures/LootTable\";\nimport SimpleMonster from \"../../../structures/SimpleMonster\";\nimport RareDropTable from \"../../subtables/RareDropTable\";\nimport TreeHerbSeedTable from \"../../subtables/TreeHerbSeedTable\";\n\nconst UniquePhantomMuspahTable = new LootTable()\n\t.add(\"Ancient essence\", [540, 599], 60)\n\t.add(\"Ancient essence\", [885, 995], 23)\n\t.add(\"Ancient essence\", [1970, 2060], 10)\n\t.add(\"Frozen cache\", 1, 4)\n\t.add(\"Ancient icon\", 1, 2)\n\t.add(\"Venator shard\", 1, 1);\n\nconst FoodAndPotions = new LootTable()\n\t.every(new LootTable().add(\"Shark\", [4, 6]).add(\"Summer pie\", [4, 6]))\n\t.every(new LootTable().add(\"Ancient brew(3)\", [1, 2]).add(\"Super restore(3)\", [2, 3]))\n\t.every(new LootTable().add(\"Ranging potion(3)\", [1, 2]).add(\"Prayer potion(3)\", [2, 3]));\n\nconst MoreHerbs = new LootTable()\n\t.add(\"Grimy kwuarm\", 6, 5)\n\t.add(\"Grimy cadantine\", 6, 4)\n\t.add(\"Grimy dwarf weed\", 6, 4)\n\t.add(\"Grimy lantadyme\", 6, 3);\n\nconst NormalPhantomMuspahTable = new LootTable()\n\t/* Weapons and armour */\n\t.add(\"Rune kiteshield\", 3, 10)\n\t.add(\"Dragon plateskirt\", 1, 5)\n\t.add(\"Rune platelegs\", 3, 5)\n\t.add(\"Black d'hide body\", 1, 5)\n\t.add(\"Dragon platelegs\", 2, 4)\n\t.add(\"Rune sword\", 1, 1)\n\n\t/* Runes and ammunition */\n\t.add(\"Law rune\", 146, 10)\n\t.add(\"Soul rune\", 466, 10)\n\t.add(\"Death rune\", 428, 10)\n\t.add(\"Smoke rune\", 314, 10)\n\t.add(\"Chaos rune\", 480, 5)\n\t.add(\"Fire rune\", 1964, 5)\n\t.add(\"Cannonball\", 666, 5)\n\n\t/* Herbs */\n\t.add(\"Grimy toadflax\", 55, 3)\n\t.add(MoreHerbs, 1, 5)\n\n\t/* Seeds */\n\t.add(\"Yew seed\", 2, 5)\n\t.add(\"Torstol seed\", 4, 5)\n\t.add(\"Palm tree seed\", 2, 5)\n\t.add(\"Ranarr seed\", 3, 5)\n\t.add(\"Snapdragon seed\", 5, 4)\n\t.add(\"Ranarr seed\", 8, 3)\n\t.add(\"Spirit seed\", 1, 2)\n\t.add(TreeHerbSeedTable, 3, 5, { multiply: true })\n\n\t/* Resources */\n\t.add(\"Adamantite ore\", 22, 10)\n\t.add(\"Gold ore\", 180, 10)\n\t.add(\"Teak plank\", 22, 10)\n\t.add(\"Molten glass\", 89, 10)\n\t.add(\"Pure essence\", 2314, 5)\n\t.add(\"Coal\", 163, 5)\n\t.add(\"Runite ore\", 18, 3)\n\t.add(\"Silver ore\", 101, 2)\n\n\t/* Other */\n\t.add(\"Manta ray\", 28, 10)\n\t.add(\"Water orb\", 21, 10)\n\t.add(\"Dragon bolts (unf)\", 89, 10)\n\t.add(\"Limpwurt root\", 21, 3)\n\n\t/* Rare drop table */\n\t.add(RareDropTable, 1, 5);\n\nconst TotalPhantomMuspahTable = new LootTable()\n\t// If venator shard drops, delete other drops on that kill\n\t.every(UniquePhantomMuspahTable, 1)\n\t.every(new LootTable().add(NormalPhantomMuspahTable, 1, 7).add(FoodAndPotions, 1, 2), 1)\n\t.every(NormalPhantomMuspahTable)\n\t// Charged ice once if under 3 min, skipped here\n\t.tertiary(40, \"Clue scroll (hard)\")\n\t.tertiary(50, \"Clue scroll (elite)\")\n\t.tertiary(2500, \"Muphin\");\n\nexport default new SimpleMonster({\n\tid: 12_077,\n\tname: \"Phantom Muspah\",\n\ttable: TotalPhantomMuspahTable,\n\taliases: [\"phantom muspah\", \"muspah\", \"money slug\"],\n});\n", "import LootTable from \"../../../structures/LootTable\";\nimport SimpleMonster from \"../../../structures/SimpleMonster\";\nimport { GemTable } from \"../../subtables/RareDropTable\";\nimport RareSeedTable from \"../../subtables/RareSeedTable\";\n\nconst TatteredPageTable = new LootTable()\n\t.add(\"Tattered moon page\")\n\t.add(\"Tattered sun page\")\n\t.add(\"Tattered temple page\");\n\nconst HerbTable = new LootTable()\n\t.add(\"Grimy kwuarm\", [10, 15], 31)\n\t.add(\"Grimy cadantine\", [10, 15], 27)\n\t.add(\"Grimy dwarf weed\", [10, 15], 25)\n\t.add(\"Grimy avantoe\", [5, 10], 22)\n\t.add(\"Grimy lantadyme\", [10, 15], 17)\n\t.add(\"Grimy ranarr weed\", [5, 10], 16)\n\t.add(\"Grimy snapdragon\", [5, 10], 15)\n\t.add(\"Grimy torstol\", [5, 10], 12);\n\nconst SarachnisTable = new LootTable()\n\t/* Pre-roll */\n\t.oneIn(192, \"Dragon med helm\")\n\t.oneIn(384, \"Sarachnis cudgel\")\n\n\t/* Armour and weaponry */\n\t.add(\"Battlestaff\", [8, 10], 2)\n\t.add(\"Rune platebody\", 1, 2)\n\t.add(\"Rune med helm\", 1, 2)\n\t.add(\"Rune 2h sword\", 1, 2)\n\n\t/* Runes and ammunition */\n\t.add(\"Blood rune\", [80, 100], 5)\n\t.add(\"Chaos rune\", [175, 200], 5)\n\t.add(\"Cosmic rune\", [125, 150], 5)\n\t.add(\"Death rune\", [80, 100], 5)\n\t.add(\"Soul rune\", [80, 100], 5)\n\t.add(\"Mithril arrow\", [450, 600], 2)\n\t.add(\"Mithril bolts\", [175, 225], 2)\n\n\t/* Seeds and Herbs */\n\t.add(HerbTable, 1, 10)\n\t.add(RareSeedTable, 3, 2)\n\t.add(\"Maple seed\", 2, 1)\n\t.add(\"Papaya tree seed\", 2, 1)\n\t.add(\"Yew seed\", 1, 1)\n\n\t/* Materials */\n\t.add(\"Mithril ore\", [60, 90], 6)\n\t.add(\"Red dragonhide\", [15, 25], 5)\n\t.add(\"Uncut sapphire\", [20, 30], 4)\n\t.add(\"Adamantite ore\", [30, 40], 3)\n\t.add(\"Uncut emerald\", [20, 30], 3)\n\t.add(\"Onyx bolt tips\", [8, 10], 2)\n\t.add(\"Uncut ruby\", [20, 30], 2)\n\t.add(\"Runite ore\", [4, 6], 1)\n\t.add(\"Uncut diamond\", [20, 30], 1)\n\n\t/* Other */\n\t.add(\"Coins\", [17_000, 25_000], 6)\n\t.add(\"Dragon bones\", [10, 15], 5)\n\t.add(\"Egg potato\", [5, 8], 5)\n\t.add(\"Weapon poison(++)\", [4, 6], 2)\n\t.add(\"Crystal key\", 1, 1)\n\t.add(\"Spider carcass\", 10, 1)\n\n\t/* Gem drop table */\n\t.add(GemTable, 1, 1)\n\n\t/* Tertiary */\n\t.tertiary(5, TatteredPageTable)\n\t.tertiary(15, \"Grubby key\")\n\t.tertiary(20, \"Giant egg sac(full)\")\n\t.tertiary(40, \"Clue scroll (hard)\")\n\t.tertiary(60, \"Clue scroll (elite)\")\n\t.tertiary(2000, \"Jar of eyes\")\n\t.tertiary(3000, \"Sraracha\");\n\nexport default new SimpleMonster({\n\tid: 8713,\n\tname: \"Sarachnis\",\n\ttable: SarachnisTable,\n\taliases: [\"sarachnis\", \"sarac\", \"sarach\", \"saracnis\"],\n});\n", "import LootTable from \"../../../structures/LootTable\";\nimport SimpleMonster from \"../../../structures/SimpleMonster\";\n\nconst ScurriusTable = new LootTable({ limit: 100 })\n\t.every(\"Big bones\")\n\t.every(\"Raw rat meat\")\n\t.add(\"Adamant platebody\", 1, 6)\n\t.add(\"Rune med helm\", 1, 6)\n\t.add(\"Rune full helm\", 1, 6)\n\t.add(\"Rune sq shield\", 1, 6)\n\t.add(\"Rune chainbody\", 1, 6)\n\t.add(\"Rune battleaxe\", 1, 6)\n\t.add(\"Adamant arrow\", [20, 50], 6)\n\t.add(\"Rune arrow\", [20, 50], 6)\n\t.add(\"Chaos rune\", [70, 125], 6)\n\t.add(\"Death rune\", [40, 90], 3)\n\t.add(\"Law rune\", [10, 30], 3)\n\t.add(\"Trout\", [1, 3], 6)\n\t.add(\"Tuna\", [1, 3], 6)\n\t.add(\"Lobster\", [1, 3], 6)\n\t.add(\"Prayer potion(4)\", 1, 6)\n\t.add(\"Shark\", 1, 3)\n\t.add(\"Ranging potion(1)\", 1, 3)\n\t.add(\"Super strength(1)\", 1, 3)\n\t.add(\"Cheese\", 1, 1)\n\t.add(\"Coins\", [1000, 9000], 6)\n\t.tertiary(25, \"Clue scroll (medium)\")\n\t.tertiary(33, \"Scurrius' spine\")\n\t.tertiary(400, \"Long bone\")\n\t.tertiary(3000, \"Scurry\")\n\t.tertiary(5012, \"Curved bone\");\n\nexport default new SimpleMonster({\n\tid: 7222,\n\tname: \"Scurrius\",\n\ttable: ScurriusTable,\n\taliases: [\"scurrius\"],\n});\n", "import LootTable from \"../../../structures/LootTable\";\nimport SimpleMonster from \"../../../structures/SimpleMonster\";\n\nconst AncientShardTable = new LootTable({ limit: 100 })\n\t.add(\"Ancient shard\", 1, 75)\n\t.add(\"Ancient shard\", 2, 15)\n\t.add(\"Ancient shard\", 3, 5)\n\t.add(\"Ancient shard\", 4, 4)\n\t.add(\"Ancient shard\", 5, 1);\n\nconst SkotizoTable = new LootTable()\n\t.every(\"Infernal ashes\")\n\t.every(\"Clue scroll (hard)\")\n\t.every(AncientShardTable)\n\n\t/* Armour */\n\t.add(\"Rune platebody\", 3, 1)\n\t.add(\"Rune platelegs\", 3, 1)\n\t.add(\"Rune plateskirt\", 3, 1)\n\n\t/* Runes */\n\t.add(\"Death rune\", 500, 1)\n\t.add(\"Soul rune\", 450, 1)\n\t.add(\"Blood rune\", 450, 1)\n\n\t/* Herbs */\n\t.add(\"Grimy snapdragon\", 20, 1)\n\t.add(\"Grimy torstol\", 20, 1)\n\n\t/* Materials */\n\t.add(\"Battlestaff\", 25, 1)\n\t.add(\"Onyx bolt tips\", 40, 1)\n\t.add(\"Adamantite ore\", 75, 1)\n\t.add(\"Runite bar\", 20, 1)\n\t.add(\"Raw anglerfish\", 60, 1)\n\t.add(\"Mahogany plank\", 150, 1)\n\t.oneIn(100, \"Uncut dragonstone\", 10)\n\t.oneIn(1000, \"Uncut onyx\")\n\n\t/* Other */\n\t.oneIn(100, \"Shield left half\")\n\n\t/* Tertiary */\n\t.tertiary(5, \"Clue scroll (elite)\")\n\t.tertiary(9, \"Ensouled demon head\")\n\t.tertiary(25, \"Dark claw\")\n\t.tertiary(65, \"Skotos\")\n\t.tertiary(128, \"Dark totem base\")\n\t.tertiary(128, \"Dark totem base\")\n\t.tertiary(128, \"Dark totem base\")\n\t.tertiary(128, \"Dark totem\")\n\t.tertiary(200, \"Jar of darkness\");\n\nexport default new SimpleMonster({\n\tid: 7286,\n\tname: \"Skotizo\",\n\ttable: SkotizoTable,\n\taliases: [\"skotizo\"],\n});\n", "import LootTable from \"../../../structures/LootTable\";\nimport SimpleMonster from \"../../../structures/SimpleMonster\";\nimport RareDropTable from \"../../subtables/RareDropTable\";\nimport TreeHerbSeedTable from \"../../subtables/TreeHerbSeedTable\";\n\nconst VorkathBoltTipTable = new LootTable()\n\t.add(\"Diamond bolt tips\", [25, 30], 10)\n\t.add(\"Emerald bolt tips\", [25, 30], 8)\n\t.add(\"Ruby bolt tips\", [25, 30], 8)\n\t.add(\"Dragonstone bolt tips\", [25, 30], 6)\n\t.add(\"Onyx bolt tips\", [25, 30], 3)\n\t.add(\"Sapphire bolt tips\", [25, 30], 2);\n\nconst VorkathTable = new LootTable()\n\t.every(\"Superior dragon bones\")\n\t.every(\"Blue dragonhide\")\n\n\t/* Weapons and armour */\n\t.add(\"Rune longsword\", [2, 3], 5)\n\t.add(\"Rune kiteshield\", [2, 3], 5)\n\t.add(\"Battlestaff\", [5, 15], 4)\n\t.add(\"Dragon battleaxe\", 1, 2)\n\t.add(\"Dragon longsword\", 1, 2)\n\t.add(\"Dragon platelegs\", 1, 2)\n\t.add(\"Dragon plateskirt\", 1, 2)\n\n\t/* Runes */\n\t.add(\"Chaos rune\", [650, 1000], 6)\n\t.add(\"Death rune\", [300, 500], 6)\n\t.add(\"Wrath rune\", [30, 60], 3)\n\n\t/* Dragonhide */\n\t.add(\"Blue dragonhide\", [25, 30], 8)\n\t.add(\"Green dragonhide\", [25, 30], 7)\n\t.add(\"Red dragonhide\", [20, 25], 7)\n\t.add(\"Black dragonhide\", [15, 25], 7)\n\n\t/* Fletching materials */\n\t.add(\"Dragon bolts (unf)\", [50, 100], 8)\n\t.add(\"Dragon dart tip\", [10, 50], 6)\n\t.add(\"Dragonstone bolt tips\", [11, 25], 5)\n\t.add(\"Onyx bolt tips\", [5, 10], 4)\n\t.add(\"Rune dart tip\", [75, 100], 3)\n\t.add(\"Dragon arrowtips\", [25, 50], 3)\n\t.add(VorkathBoltTipTable, 1, 5)\n\n\t/* Other */\n\t.add(RareDropTable, 1, 5)\n\t.add(TreeHerbSeedTable, 1, 3)\n\t.add(\"Snapdragon seed\")\n\t.add(\"Torstol seed\")\n\t.add(\"Adamantite ore\", [10, 30], 7)\n\t.add(\"Coins\", [20_000, 81_000], 5)\n\t.add(\"Grapes\", [250, 300], 5)\n\t.add(\"Magic logs\", 50, 5)\n\t.add(\"Manta ray\", [35, 55], 4)\n\t.add(\"Dragon bones\", [15, 20], 4)\n\t.add(\"Diamond\", [10, 20], 4)\n\t.add(\"Dragonstone\", [2, 3], 3)\n\t.add(\"Wrath talisman\", 1, 3);\n\nconst TotalVorkathTable = new LootTable()\n\t.every(VorkathTable, 2)\n\t.tertiary(10, \"Scaly blue dragonhide\")\n\t.tertiary(50, 21_907) // Vorkath's head, exists twice, this is the head with 50k worth\n\t.tertiary(65, \"Clue scroll (elite)\")\n\t.tertiary(1000, \"Dragonbone necklace\")\n\t.tertiary(3000, \"Jar of decay\")\n\t.tertiary(3000, \"Vorki\")\n\t.tertiary(5000, \"Draconic visage\")\n\t.tertiary(5000, \"Skeletal visage\");\n\nexport default new SimpleMonster({\n\tid: 8061,\n\tname: \"Vorkath\",\n\ttable: TotalVorkathTable,\n\taliases: [\"vorkath\", \"vorki\", \"vork\"],\n});\n", "import LootTable from \"../../../structures/LootTable\";\nimport SimpleMonster from \"../../../structures/SimpleMonster\";\nimport RareDropTable from \"../../subtables/RareDropTable\";\n\nconst ZulrahUniqueTable = new LootTable()\n\t.add(\"Tanzanite fang\")\n\t.add(\"Magic fang\")\n\t.add(\"Serpentine visage\")\n\t.add(\"Uncut onyx\");\n\nconst ZulrahFlaxMutagenTable = new LootTable()\n\t.add(\"Tanzanite mutagen\", 1, 10)\n\t.add(\"Magma mutagen\", 1, 10)\n\t.add(\"Flax\", 1000, 5244);\n\nconst ZulrahTable = new LootTable()\n\t.add(RareDropTable, 1, 9)\n\t.oneIn(256, ZulrahUniqueTable)\n\n\t/* Weapons and armour */\n\t.add(\"Battlestaff\", 10, 10)\n\t.add(\"Dragon med helm\", 1, 2)\n\t.add(\"Dragon halberd\", 1, 2)\n\n\t/* Runes */\n\t.add(\"Death rune\", 300, 12)\n\t.add(\"Law rune\", 200, 12)\n\t.add(\"Chaos rune\", 500, 12)\n\n\t/* Herbs */\n\t.add(\"Snapdragon\", 10, 2)\n\t.add(\"Dwarf weed\", 30, 2)\n\t.add(\"Toadflax\", 25, 2)\n\t.add(\"Torstol\", 10, 2)\n\n\t/* Seeds */\n\t.add(\"Palm tree seed\", 1, 6)\n\t.add(\"Papaya tree seed\", 3, 6)\n\t.add(\"Calquat tree seed\", 2, 6)\n\t.add(\"Magic seed\", 1, 4)\n\t.add(\"Toadflax seed\", 2, 2)\n\t.add(\"Snapdragon seed\", 1, 2)\n\t.add(\"Dwarf weed seed\", 2, 2)\n\t.add(\"Torstol seed\", 1, 2)\n\t.add(\"Spirit seed\")\n\n\t/* Resources */\n\t.add(\"Snakeskin\", 35, 11)\n\t.add(\"Runite ore\", 2, 11)\n\t.add(\"Pure essence\", 1500, 10)\n\t.add(ZulrahFlaxMutagenTable, 1, 10)\n\t.add(\"Yew logs\", 35, 10)\n\t.add(\"Adamantite bar\", 20, 8)\n\t.add(\"Coal\", 200, 8)\n\t.add(\"Dragon bones\", 12, 8)\n\t.add(\"Mahogany logs\", 50, 8)\n\n\t/* Other */\n\t.add(\"Zul-andra teleport\", 4, 15)\n\t.add(\"Manta ray\", 35, 12)\n\t.add(\"Antidote++(4)\", 10, 9)\n\t.add(\"Dragonstone bolt tips\", 12, 8)\n\t.add(\"Grapes\", 250, 6)\n\t.add(\"Coconut\", 20, 6)\n\t.add(\"Swamp tar\", 1000, 5)\n\t.add(\"Zulrah's scales\", 500, 5);\n\nconst TotalZulrahTable = new LootTable()\n\t.every(ZulrahTable, 2)\n\t.every(\"Zulrah's scales\", [100, 299])\n\t.tertiary(75, \"Clue scroll (elite)\")\n\t.tertiary(3000, \"Jar of swamp\")\n\t.tertiary(4000, \"Pet snakeling\");\n\nexport default new SimpleMonster({\n\tid: 2042,\n\tname: \"Zulrah\",\n\ttable: TotalZulrahTable,\n\taliases: [\"zulrah\", \"snek\", \"zul\"],\n});\n", "import LootTable from \"../../../../structures/LootTable\";\nimport SimpleMonster from \"../../../../structures/SimpleMonster\";\nimport RareDropTable from \"../../../subtables/RareDropTable\";\nimport TalismanTable from \"../../../subtables/TalismanTable\";\nimport TreeHerbSeedTable from \"../../../subtables/TreeHerbSeedTable\";\n\nconst HerbSubTable = new LootTable()\n\t.add(\"Grimy kwuarm\", 25, 10)\n\t.add(\"Grimy dwarf weed\", 25, 9)\n\t.add(\"Grimy cadantine\", 25, 9)\n\t.add(\"Grimy lantadyme\", 25, 7);\n\nconst AbyssalSireTable = new LootTable()\n\t.every(\"Abyssal ashes\")\n\n\t/* Weapons and armour */\n\t.add(\"Battlestaff\", 10, 6)\n\t.add(\"Rune full helm\", 3, 4)\n\t.add(\"Mystic lava staff\", 2, 4)\n\t.add(\"Rune sword\", 3, 4)\n\t.add(\"Rune platebody\", 2, 4)\n\t.add(\"Rune kiteshield\", 2, 3)\n\t.add(\"Mystic air staff\", 2, 2)\n\t.add(\"Air battlestaff\", 6, 2)\n\n\t/* Runes and ammunition */\n\t.add(\"Blood rune\", [190, 210], 5)\n\t.add(\"Blood rune\", [330, 370], 5)\n\t.add(\"Law rune\", 250, 5)\n\t.add(\"Soul rune\", [225, 275], 5)\n\t.add(\"Cosmic rune\", 350, 4)\n\t.add(\"Cannonball\", 300, 4)\n\n\t/* Herbs */\n\t.add(HerbSubTable, 1, 5)\n\n\t/* Seeds */\n\t.add(TreeHerbSeedTable, 2, 5, { multiply: true })\n\n\t/* Materials */\n\t.add(\"Coal\", [380, 420], 6)\n\t.add(\"Earth orb\", [47, 53], 5)\n\t.add(\"Pure essence\", 600, 5)\n\t.add(\"Magic logs\", [50, 70], 5)\n\t.add(\"Uncut diamond\", 15, 5)\n\t.add(\"Runite ore\", 6, 4)\n\t.add(\"Onyx bolt tips\", 10, 3)\n\t.add(\"Runite bar\", 5, 2)\n\n\t/* Talismans */\n\t.add(TalismanTable, 1, 3)\n\n\t/* Other */\n\t.add(\"Coins\", [48_000, 52_000], 11)\n\t.add(\"Chilli potato\", 10, 7)\n\t.add(\"Super restore(4)\", 4, 5)\n\t.add(\"Binding necklace\", 25, 4)\n\t.add(\"Saradomin brew(3)\", 6, 2)\n\t.add(\"Jug of water\", [250, 350], 2)\n\t.oneIn(100, \"Unsired\")\n\n\t/* Rare drop table */\n\t.add(RareDropTable, 2, 3, { multiply: true })\n\n\t/* Tertiary */\n\t.tertiary(180, \"Clue scroll (elite)\");\n\nexport default new SimpleMonster({\n\tid: 5886,\n\tname: \"Abyssal Sire\",\n\ttable: AbyssalSireTable,\n\taliases: [\"abbysal sire\", \"abby sire\", \"abyssal sire\", \"sire\", \"abyssal demon boss\"],\n});\n", "import LootTable from \"../../../../structures/LootTable\";\nimport SimpleMonster from \"../../../../structures/SimpleMonster\";\nimport { itemTupleToTable } from \"../../../../util\";\nimport RareDropTable from \"../../../subtables/RareDropTable\";\nimport TreeHerbSeedTable from \"../../../subtables/TreeHerbSeedTable\";\n\nconst AlchemicalHydraBrimstoneRingTable = new LootTable().add(\"Hydra's eye\").add(\"Hydra's fang\").add(\"Hydra's heart\");\n\nconst RuneArmourTable = new LootTable().every(\"Rune platebody\").add(\"Rune platelegs\").add(\"Rune plateskirt\");\n\nconst NotedHerbsTable = new LootTable()\n\t.add(\"Grimy avantoe\", [10, 15], 4)\n\t.add(\"Grimy kwuarm\", [25, 30], 4)\n\t.add(\"Grimy ranarr weed\", [10, 15], 3)\n\t.add(\"Grimy snapdragon\", [25, 30], 3)\n\t.add(\"Grimy cadantine\", [25, 30], 3)\n\t.add(\"Grimy dwarf weed\", [25, 30], 3)\n\t.add(\"Grimy lantadyme\", [25, 30], 2)\n\t.add(\"Grimy torstol\", [10, 15], 2);\n\nconst NormalTable = new LootTable()\n\t.every(\"Hydra bones\")\n\n\t/* Weapons and armour */\n\t.add(\n\t\titemTupleToTable([\n\t\t\t[\"Mystic fire staff\", 1],\n\t\t\t[\"Mystic water staff\", 1],\n\t\t]),\n\t\t1,\n\t\t8,\n\t)\n\t.add(RuneArmourTable, 1, 6)\n\t.add(\"Battlestaff\", [8, 12], 5)\n\t.add(\"Black d'hide body\", 1, 5)\n\t.add(\"Dragon longsword\", 1, 3)\n\t.add(\"Dragon med helm\", 1, 3)\n\t.add(\"Dragon battleaxe\", 1, 2)\n\t.add(\n\t\titemTupleToTable([\n\t\t\t[\"Mystic robe top (light)\", 1],\n\t\t\t[\"Mystic robe bottom (light)\", 1],\n\t\t]),\n\t\t1,\n\t\t1,\n\t)\n\n\t/* Runes and ammunition */\n\t.add(\"Chaos rune\", [150, 300], 6)\n\t.add(\"Death rune\", [150, 300], 6)\n\t.add(\"Blood rune\", [150, 300], 6)\n\t.add(\"Astral rune\", [150, 300], 6)\n\t.add(\"Dragonstone bolts (e)\", [100, 120], 2)\n\t.add(\"Onyx bolts (e)\", [35, 50], 1)\n\n\t/* Herbs */\n\t.add(NotedHerbsTable, 1, 10)\n\n\t/* Seeds */\n\t.add(TreeHerbSeedTable, 1, 2)\n\n\t/* Other */\n\t.add(\"Coins\", [40_000, 60_000], 10)\n\t.add(\"Shark\", [2, 4], 7)\n\t.add(\n\t\titemTupleToTable([\n\t\t\t[\"Ranging potion(3)\", 1],\n\t\t\t[\"Super restore(3)\", 2],\n\t\t]),\n\t\t1,\n\t\t7,\n\t)\n\t.add(\"Dragon bones\", 30, 6)\n\t.add(\"Crystal key\", 1, 1)\n\t.oneIn(202, \"Coins\", [5550, 25_550])\n\n\t/* Rare drop table */\n\t.add(RareDropTable, 1, 1);\n\nconst NormalUniqueTable = new LootTable()\n\t.every(NormalTable)\n\t.oneIn(2000, \"Dragon thrownaxe\", [500, 1000])\n\t.oneIn(2000, \"Dragon knife\", [500, 1000])\n\t.oneIn(1000, \"Hydra's claw\")\n\t.oneIn(512, \"Hydra tail\")\n\t.oneIn(512, \"Hydra leather\")\n\t.oneIn(180, AlchemicalHydraBrimstoneRingTable);\n\nconst AlchemicalHydraTable = new LootTable()\n\t.every(NormalUniqueTable)\n\t.every(NormalTable)\n\n\t/* Tertiary */\n\t.tertiary(100, \"Clue scroll (hard)\")\n\t.tertiary(256, \"Alchemical hydra heads\")\n\t.tertiary(256, \"Clue scroll (elite)\")\n\t.tertiary(2000, \"Jar of chemicals\")\n\t.tertiary(3000, \"Ikkle hydra\");\n\nexport default new SimpleMonster({\n\tid: 8615,\n\tname: \"Alchemical Hydra\",\n\ttable: AlchemicalHydraTable,\n\taliases: [\"alchemical hydra\", \"hydra boss\"],\n});\n", "import LootTable from \"../../../../structures/LootTable\";\nimport SimpleMonster from \"../../../../structures/SimpleMonster\";\nimport RareDropTable from \"../../../subtables/RareDropTable\";\n\nconst CerberusUniqueTable = new LootTable()\n\t.add(\"Primordial crystal\")\n\t.add(\"Pegasian crystal\")\n\t.add(\"Eternal crystal\")\n\t.add(\"Smouldering stone\");\n\nconst CerberusTable = new LootTable()\n\t.every(\"Infernal ashes\")\n\t.add(CerberusUniqueTable)\n\t.tertiary(15, \"Ensouled hellhound head\")\n\t.tertiary(100, \"Clue scroll (elite)\")\n\t.tertiary(2000, \"Jar of souls\")\n\t.tertiary(3000, \"Hellpuppy\")\n\n\t/* Weapons and armour */\n\t.add(\"Rune platebody\", 1, 5)\n\t.add(\"Rune chainbody\", 1, 4)\n\t.add(\"Rune 2h sword\", 1, 4)\n\t.add(\"Black d'hide body\", 1, 3)\n\t.add(\"Rune axe\", 1, 3)\n\t.add(\"Rune pickaxe\", 1, 3)\n\t.add(\"Battlestaff\", 6, 3)\n\t.add(\"Rune full helm\", 1, 3)\n\t.add(\"Lava battlestaff\", 1, 2)\n\t.add(\"Rune halberd\", 1, 2)\n\n\t/* Runes and ammunition */\n\t.add(\"Fire rune\", 300, 6)\n\t.add(\"Soul rune\", 100, 6)\n\t.add(\"Pure essence\", 300, 5)\n\t.add(\"Blood rune\", 60, 4)\n\t.add(\"Cannonball\", 50, 4)\n\t.add(\"Runite bolts (unf)\", 40, 4)\n\t.add(\"Death rune\", 100, 3)\n\n\t/* Other */\n\t.add(\"Coal\", 120, 6)\n\t.add(\"Super restore(4)\", 2, 6)\n\t.add(\"Summer pie\", 3, 6)\n\t.add(\"Coins\", [10_000, 20_000], 5)\n\t.add(\"Dragon bones\", 20, 5)\n\t.add(\"Unholy symbol\", 1, 5)\n\t.add(\"Wine of zamorak\", 15, 5)\n\t.add(\"Ashes\", 50, 4)\n\t.add(\"Fire orb\", 20, 4)\n\t.add(\"Grimy torstol\", 6, 4)\n\t.add(\"Runite ore\", 5, 3)\n\t.add(\"Uncut diamond\", 5, 3)\n\t.add(\"Key master teleport\", 3, 2)\n\t.add(\"Torstol seed\", 3, 2)\n\n\t.add(RareDropTable, 1, 3);\n\nexport default new SimpleMonster({\n\tid: 5862,\n\tname: \"Cerberus\",\n\ttable: CerberusTable,\n\taliases: [\"cerb\", \"cerberus\", \"hellhound boss\"],\n});\n", "import LootTable from \"../../../../structures/LootTable\";\nimport SimpleMonster from \"../../../../structures/SimpleMonster\";\nimport { itemTupleToTable } from \"../../../../util\";\n\nconst NormalUniqueTable = new LootTable()\n\t/* Unique */\n\t.oneIn(250, \"Granite maul\")\n\t.oneIn(500, \"Granite gloves\")\n\t.oneIn(500, \"Granite ring\")\n\t.oneIn(750, \"Granite hammer\")\n\t.oneIn(1000, \"Black tourmaline core\")\n\n\t/* Weapons and armour */\n\t.add(\"Rune pickaxe\", 1, 6)\n\t.add(\"Rune full helm\", 1, 5)\n\t.add(\"Rune platelegs\", 1, 5)\n\t.add(\"Rune 2h sword\", 1, 4)\n\t.add(\"Rune battleaxe\", 1, 3)\n\t.add(\"Dragon longsword\", 1, 1)\n\t.add(\"Adamant boots\", 1, 1)\n\t.add(\"Dragon med helm\", 1, 1)\n\n\t/* Food and potions */\n\t.add(\"Mushroom potato\", [4, 6], 10)\n\t.add(\"Saradomin brew(4)\", 2, 8)\n\t.add(\n\t\titemTupleToTable([\n\t\t\t[\"Magic potion(2)\", 1],\n\t\t\t[\"Ranging potion(2)\", 1],\n\t\t\t[\"Super combat potion(2)\", 1],\n\t\t]),\n\t\t1,\n\t\t6,\n\t)\n\t.add(\"Prayer potion(4)\", [1, 2], 4)\n\n\t/* Resources */\n\t.add(\"Gold ore\", [40, 75], 7)\n\t.add(\"Adamantite bar\", [25, 40], 6)\n\t.add(\"Coal\", [180, 250], 6)\n\t.add(\"Gold bar\", [37, 50], 6)\n\t.add(\"Mithril bar\", [35, 45], 6)\n\t.add(\"Runite ore\", [3, 6], 4)\n\t.add(\"Runite bar\", [3, 5], 3)\n\n\t/* Other */\n\t.add(\"Coins\", [10_000, 20_000], 10)\n\t.add(\"Chaos rune\", [100, 150], 8)\n\t.add(\"Coins\", 25_000, 5)\n\t.add(\"Crystal key\", 1, 5)\n\t.add(\"Chaos rune\", [60, 100], 5)\n\t.add(\"Dragon dart tip\", [15, 25], 4)\n\t.add(\"Diamond bolt tips\", [100, 150], 3)\n\t.add(\"Dragonstone bolt tips\", [20, 40], 2)\n\t.add(\"Onyx bolt tips\", [5, 10], 2)\n\t.add(\"Dragon arrowtips\", [50, 150], 1);\n\nconst GrotesqueGuardiansTable = new LootTable()\n\t.every(\"Granite dust\", [50, 100])\n\t.every(NormalUniqueTable, 2)\n\n\t/* Tertiary */\n\t.tertiary(230, \"Clue scroll (elite)\")\n\t.tertiary(3000, \"Noon\")\n\t.tertiary(5000, \"Jar of stone\");\n\nexport default new SimpleMonster({\n\tid: 7851,\n\tname: \"Grotesque Guardians\",\n\ttable: GrotesqueGuardiansTable,\n\taliases: [\"grotesque guardians\", \"ggs\", \"dawn\", \"dusk\", \"gargoyle boss\", \"rocky bois\"],\n});\n", "import LootTable from \"../../../../structures/LootTable\";\nimport SimpleMonster from \"../../../../structures/SimpleMonster\";\nimport { GemTable } from \"../../../subtables/RareDropTable\";\n\nconst KrakenTable = new LootTable()\n\t/* Weapons and armour */\n\t.add(\"Mystic water staff\", 1, 3)\n\t.add(\"Rune warhammer\", 1, 2)\n\t.add(\"Rune longsword\", 1, 2)\n\t.add(\"Mystic robe top\", 1, 1)\n\t.add(\"Mystic robe bottom\", 1, 1)\n\t.oneIn(512, \"Trident of the seas (full)\")\n\n\t/* Runes */\n\t.add(\"Water rune\", 400, 10)\n\t.add(\"Chaos rune\", 250, 10)\n\t.add(\"Death rune\", 150, 10)\n\t.add(\"Blood rune\", 60, 10)\n\t.add(\"Soul rune\", 50, 7)\n\t.add(\"Mist rune\", 100, 4)\n\n\t/* Seeds */\n\t.add(\"Watermelon seed\", 24, 3)\n\t.add(\"Torstol seed\", 2, 1)\n\t.add(\"Magic seed\", 1, 1)\n\n\t/* Materials */\n\t.add(\"Battlestaff\", 10, 4)\n\t.add(\"Seaweed\", 125, 3)\n\t.add(\"Oak plank\", 60, 3)\n\t.add(\"Unpowered orb\", 50, 2)\n\t.add(\"Raw shark\", 50, 2)\n\t.add(\"Raw monkfish\", 100, 2)\n\t.add(\"Grimy snapdragon\", 6, 2)\n\t.add(\"Diamond\", 8, 1)\n\t.add(\"Runite bar\", 2, 1)\n\n\t/* Other */\n\t.add(\"Coins\", [10_000, 19_999], 15)\n\t.add(\"Shark\", 5, 7)\n\t.add(\"Pirate boots\", 1, 4)\n\t.add(\"Sanfew serum(4)\", 2, 4)\n\t.add(\"Edible seaweed\", 5, 3)\n\t.add(\"Antidote++(4)\", 2, 2)\n\t.add(\"Rusty sword\", 2, 1)\n\t.add(\"Harpoon\", 1, 1)\n\t.add(\"Bucket\", 1, 1)\n\t.add(\"Crystal key\", 1, 1)\n\t.add(\"Dragonstone ring\", 1, 1)\n\t.oneIn(400, \"Kraken tentacle\")\n\n\t/* Gem drop table */\n\t.add(GemTable, 1, 2)\n\n\t/* Tertiary */\n\t.tertiary(500, \"Clue scroll (elite)\")\n\t.tertiary(1000, \"Jar of dirt\")\n\t.tertiary(3000, \"Pet kraken\");\n\nexport default new SimpleMonster({\n\tid: 494,\n\tname: \"Kraken\",\n\ttable: KrakenTable,\n\taliases: [\"kraken\", \"cave kraken boss\"],\n});\n", "import LootTable from \"../../../../structures/LootTable\";\nimport SimpleMonster from \"../../../../structures/SimpleMonster\";\nimport { GemTable } from \"../../../subtables/RareDropTable\";\n\nconst ThermonuclearSmokeDevilTable = new LootTable()\n\t.every(\"Ashes\")\n\n\t/* Weapons and armor */\n\t.add(\"Rune dagger\", 1, 5)\n\t.add(\"Rune chainbody\", 1, 4)\n\t.add(\"Red d'hide body\", 1, 3)\n\t.add(\"Rune battleaxe\", 1, 3)\n\t.add(\"Mystic air staff\", 1, 3)\n\t.add(\"Mystic fire staff\", 1, 3)\n\t.add(\"Rune scimitar\", 1, 2)\n\t.add(\"Rune knife(p++)\", 50, 1)\n\t.add(\"Dragon scimitar\", 1, 1)\n\t.add(\"Ancient staff\", 1, 1)\n\t.oneIn(350, \"Occult necklace\")\n\t.oneIn(512, \"Smoke battlestaff\")\n\t.oneIn(2000, \"Dragon chainbody\")\n\n\t/* Runes and ammunition */\n\t.add(\"Smoke rune\", 100, 10)\n\t.add(\"Air rune\", 300, 8)\n\t.add(\"Soul rune\", 60, 8)\n\t.add(\"Rune arrow\", 100, 2)\n\n\t/* Consumables */\n\t.add(\"Ugthanki kebab\", 3, 4)\n\t.add(\"Tuna potato\", 3, 3)\n\t.add(\"Sanfew serum(4)\", 2, 3)\n\t.add(\"Prayer potion(4)\", 2, 1)\n\n\t/* Resources */\n\t.add(\"Pure essence\", 300, 5)\n\t.add(\"Molten glass\", 100, 2)\n\t.add(\"Mithril bar\", 20, 2)\n\t.add(\"Coal\", 150, 2)\n\t.add(\"Magic logs\", 20, 2)\n\t.add(\"Gold ore\", 200, 2)\n\t.add(\"Diamond\", 10, 1)\n\n\t/* Other */\n\t.add(\"Coins\", [10_000, 20_000], 15)\n\t.add(\"Tinderbox\", 1, 10)\n\t.add(\"Fire talisman\", 1, 4)\n\t.add(\"Bullseye lantern\", 1, 3)\n\t.add(\"Desert goat horn\", 50, 2)\n\t.add(\"Grimy toadflax\", 15, 2)\n\t.add(\"Onyx bolt tips\", 12, 2)\n\t.add(\"Snapdragon seed\", 2, 2)\n\t.add(\"Grapes\", 100, 1)\n\t.add(\"Magic seed\", 1, 1)\n\t.add(\"Dragonstone ring\", 1, 1)\n\t.add(\"Crystal key\", 1, 1)\n\n\t/* Gem drop table */\n\t.add(GemTable, 1, 3)\n\n\t/* Tertiary */\n\t.tertiary(96, \"Clue scroll (hard)\")\n\t.tertiary(500, \"Clue scroll (elite)\")\n\t.tertiary(2000, \"Jar of smoke\")\n\t.tertiary(3000, \"Pet smoke devil\");\n\nexport default new SimpleMonster({\n\tid: 499,\n\tname: \"Thermonuclear smoke devil\",\n\ttable: ThermonuclearSmokeDevilTable,\n\taliases: [\"thermonuclear smoke devil\", \"thermy\", \"smoke devil boss\"],\n});\n", "import AbyssalSire from \"./AbyssalSire\";\nimport AlchemicalHydra from \"./AlchemicalHydra\";\nimport Cerberus from \"./Cerberus\";\nimport GrotesqueGuardians from \"./GrotesqueGuardians\";\nimport Kraken from \"./Kraken\";\nimport ThermonuclearSmokeDevil from \"./ThermonuclearSmokeDevil\";\n\nexport const allSlayerBosses = {\n\tAbyssalSire,\n\tCerberus,\n\tAlchemicalHydra,\n\tGrotesqueGuardians,\n\tThermonuclearSmokeDevil,\n\tKraken,\n};\n", "import LootTable from \"../../../../structures/LootTable\";\nimport SimpleMonster from \"../../../../structures/SimpleMonster\";\n\nconst ArtioUniqueTable = new LootTable()\n\t.oneIn(358, \"Dragon 2h sword\")\n\t.oneIn(358, \"Dragon pickaxe\")\n\t.oneIn(618, \"Claws of callisto\")\n\t.oneIn(716, \"Tyrannical ring\")\n\t.oneIn(912, \"Voidwaker hilt\");\n\nconst ArtioSecondarySupplyTable = new LootTable({ limit: 18 })\n\t.add(\"Blighted anglerfish\", [5, 6], 1)\n\t.add(\"Blighted karambwan\", [5, 6], 1)\n\t.add(\"Blighted super restore(3)\", [3, 4], 1)\n\t.add(\"Blighted super restore(4)\", [3, 4], 1)\n\t.add(\"Ranging potion(2)\", [2, 3], 1)\n\t.add(\"Super combat potion(2)\", [2, 3], 1);\n\nconst ArtioTable = new LootTable()\n\t.every(\"Big bones\")\n\n\t/* Unique table */\n\t.every(ArtioUniqueTable)\n\n\t/* Food and potions */\n\t.add(\"Dark crab\", 9, 5)\n\t.add(\"Super restore(4)\", 3, 5)\n\n\t/* Weapons and armour */\n\t.add(\"Rune pickaxe\", 1, 12)\n\t.add(\"Rune 2h sword\", 1, 3)\n\n\t/* Runes and ammunition */\n\t.add(\"Chaos rune\", 300, 7)\n\t.add(\"Death rune\", 220, 7)\n\t.add(\"Blood rune\", 140, 7)\n\t.add(\"Soul rune\", 200, 5)\n\t.add(\"Cannonball\", 190, 4)\n\n\t/* Materials */\n\t.add(\"Mahogany logs\", 200, 6)\n\t.add(\"Limpwurt root\", 20, 5)\n\t.add(\"Magic logs\", 60, 5)\n\t.add(\"Uncut ruby\", 22, 4)\n\t.add(\"Uncut diamond\", 9, 3)\n\t.add(\"Dragon bones\", 25, 3)\n\t.add(\"Red dragonhide\", 55, 3)\n\t.add(\"Uncut dragonstone\", 1, 2)\n\t.add(\"Coconut\", 30, 2)\n\t.add(\"Grimy toadflax\", 60, 1)\n\n\t/* Seeds */\n\t.add(\"Ranarr seed\", 3, 5)\n\t.add(\"Snapdragon seed\", 2, 5)\n\t.add(\"Yew seed\", 1, 1)\n\t.add(\"Magic seed\", 1, 1)\n\t.add(\"Palm tree seed\", 1, 1)\n\n\t/* Other */\n\t.add(\"Coins\", 12_000, 21)\n\t.add(\"Supercompost\", 60, 4)\n\t.add(\"Dark fishing bait\", 300, 1)\n\n\t/* Tertiary */\n\t.tertiary(100, \"Clue scroll (elite)\")\n\t.tertiary(400, \"Long bone\")\n\t.tertiary(2800, \"Callisto cub\")\n\t.tertiary(5013, \"Curved bone\");\n\nconst ArtioTotalTable = new LootTable().every(ArtioSecondarySupplyTable).every(ArtioTable);\n\nexport default new SimpleMonster({\n\tid: 11_992,\n\tname: \"Artio\",\n\ttable: ArtioTotalTable,\n\taliases: [\"artio\"],\n});\n", "import LootTable from \"../../../../structures/LootTable\";\nimport SimpleMonster from \"../../../../structures/SimpleMonster\";\n\nconst CallistoUniqueTable = new LootTable()\n\t.oneIn(196, \"Claws of callisto\")\n\t.oneIn(256, \"Dragon 2h sword\")\n\t.oneIn(256, \"Dragon pickaxe\")\n\t.oneIn(360, \"Voidwaker hilt\")\n\t.oneIn(512, \"Tyrannical ring\");\n\nconst CallistoSecondarySupplyTable = new LootTable({ limit: 18 })\n\t.add(\"Blighted anglerfish\", [5, 6], 1)\n\t.add(\"Blighted karambwan\", [5, 6], 1)\n\t.add(\"Blighted super restore(3)\", [3, 4], 1)\n\t.add(\"Blighted super restore(4)\", [3, 4], 1)\n\t.add(\"Ranging potion(2)\", [2, 3], 1)\n\t.add(\"Super combat potion(2)\", [2, 3], 1);\n\nconst CallistoTable = new LootTable()\n\t.every(\"Big bones\")\n\n\t/* Unique table */\n\t.every(CallistoUniqueTable)\n\n\t/* Weapons and armour */\n\t.add(\"Rune pickaxe\", 5, 8)\n\t.add(\"Rune 2h sword\", 3, 3)\n\t.add(\"Mystic earth staff\", 4, 2)\n\t.add(\"Mystic robe top\", 4, 2)\n\t.add(\"Mystic robe bottom\", 4, 2)\n\t.add(\"Rune kiteshield\", 4, 2)\n\t.add(\"Rune platebody\", 4, 2)\n\n\t/* Runes and ammunition */\n\t.add(\"Blood rune\", 500, 7)\n\t.add(\"Death rune\", 700, 7)\n\t.add(\"Chaos rune\", 900, 7)\n\t.add(\"Soul rune\", 600, 5)\n\t.add(\"Cannonball\", 600, 4)\n\n\t/* Materials */\n\t.add(\"Mahogany logs\", 600, 6)\n\t.add(\"Limpwurt root\", 100, 5)\n\t.add(\"Magic logs\", 225, 5)\n\t.add(\"Uncut ruby\", 75, 4)\n\t.add(\"Uncut diamond\", 35, 3)\n\t.add(\"Red dragonhide\", 170, 3)\n\t.add(\"Uncut dragonstone\", 5, 2)\n\t.add(\"Coconut\", 135, 2)\n\t.add(\"Grimy toadflax\", 150, 1)\n\t.add(\"Grimy dwarf weed\", 45, 1)\n\t.add(\"Grimy ranarr weed\", 45, 1)\n\t.add(\"Grimy snapdragon\", 45, 1)\n\n\t/* Seeds */\n\t.add(\"Ranarr seed\", 11, 5)\n\t.add(\"Snapdragon seed\", 8, 5)\n\n\t/* Other */\n\t.add(\"Coins\", 50_000, 10)\n\t.add(\"Dark crab\", 50, 5)\n\t.add(\"Super restore(4)\", 10, 5)\n\t.add(\"Supercompost\", 225, 4)\n\t.add(\"Dragon bones\", 75, 3)\n\t.add(\"Wilderness crabs teleport\", 4, 3)\n\t.add(\"Blighted anglerfish\", 100, 1)\n\n\t/* Tertiary */\n\t.tertiary(100, \"Clue scroll (elite)\")\n\t.tertiary(400, \"Long bone\")\n\t.tertiary(1500, \"Callisto cub\")\n\t.tertiary(5013, \"Curved bone\");\n\nconst CallistoTotalTable = new LootTable().every(CallistoSecondarySupplyTable).every(CallistoTable);\n\nexport default new SimpleMonster({\n\tid: 6503,\n\tname: \"Callisto\",\n\ttable: CallistoTotalTable,\n\taliases: [\"callisto\"],\n});\n", "import LootTable from \"../../../../structures/LootTable\";\nimport SimpleMonster from \"../../../../structures/SimpleMonster\";\n\nconst SkeletonHellhoundTable = new LootTable().every(\"Bones\").oneIn(5000, \"Skeleton champion scroll\");\n\nconst CalvarionUniqueTable = new LootTable()\n\t.oneIn(358, \"Dragon 2h sword\")\n\t.oneIn(358, \"Dragon pickaxe\")\n\t.oneIn(618, \"Skull of vet'ion\")\n\t.oneIn(716, \"Ring of the gods\")\n\t.oneIn(912, \"Voidwaker blade\");\n\nconst CalvarionSecondarySupplyTable = new LootTable({ limit: 18 })\n\t.add(\"Blighted anglerfish\", [5, 6], 1)\n\t.add(\"Blighted karambwan\", [5, 6], 1)\n\t.add(\"Blighted super restore(3)\", [3, 4], 1)\n\t.add(\"Blighted super restore(4)\", [3, 4], 1)\n\t.add(\"Ranging potion(2)\", [2, 3], 1)\n\t.add(\"Super combat potion(2)\", [2, 3], 1);\n\nconst CalvarionTable = new LootTable()\n\t.every(\"Big bones\")\n\t.every(SkeletonHellhoundTable, 4)\n\n\t/* Unique table */\n\t.every(CalvarionUniqueTable)\n\n\t/* Food and potions */\n\t.add(\"Dark crab\", 8, 5)\n\t.add(\"Super restore(4)\", 3, 5)\n\n\t/* Weapons and armour */\n\t.add(\"Rune pickaxe\", 1, 12)\n\t.add(\"Ancient staff\", 1, 3)\n\t.add(\"Rune 2h sword\", 1, 3)\n\n\t/* Runes and ammunition */\n\t.add(\"Chaos rune\", 220, 7)\n\t.add(\"Death rune\", 120, 7)\n\t.add(\"Blood rune\", 180, 7)\n\t.add(\"Cannonball\", 180, 4)\n\n\t/* Materials */\n\t.add(\"Gold ore\", 200, 6)\n\t.add(\"Limpwurt root\", 19, 5)\n\t.add(\"Magic logs\", 60, 5)\n\t.add(\"Oak plank\", 220, 5)\n\t.add(\"Wine of zamorak\", 35, 5)\n\t.add(\"Uncut ruby\", 22, 4)\n\t.add(\"Uncut diamond\", 9, 3)\n\t.add(\"Dragon bones\", 60, 3)\n\t.add(\"Uncut dragonstone\", 1, 2)\n\t.add(\"Mort myre fungus\", 120, 2)\n\t.add(\"Grimy ranarr weed\", 60, 1)\n\n\t/* Other */\n\t.add(\"Coins\", 12_000, 21)\n\t.add(\"Sanfew serum(4)\", 6, 5)\n\t.add(\"Supercompost\", 60, 4)\n\t.add(\"Yew seed\", 1, 1)\n\t.add(\"Magic seed\", 1, 1)\n\t.add(\"Palm tree seed\", 1, 1)\n\t.add(\"Dark fishing bait\", 280, 1)\n\n\t/* Tertiary */\n\t.tertiary(100, \"Clue scroll (elite)\")\n\t.tertiary(400, \"Long bone\")\n\t.tertiary(2800, \"Vet'ion jr.\")\n\t.tertiary(5000, \"Skeleton champion scroll\")\n\t.tertiary(5013, \"Curved bone\");\n\nconst CalvarionTotalTable = new LootTable().every(CalvarionSecondarySupplyTable).every(CalvarionTable);\n\nexport default new SimpleMonster({\n\tid: 11_993,\n\tname: \"Calvar'ion\",\n\ttable: CalvarionTotalTable,\n\taliases: [\"calvarion\", \"calvar'ion\", \"calvar\"],\n});\n", "import LootTable from \"../../../../structures/LootTable\";\nimport SimpleMonster from \"../../../../structures/SimpleMonster\";\nimport RareDropTable from \"../../../subtables/RareDropTable\";\n\nconst ChaosElementalMinorTable = new LootTable()\n\t.add(\"Blighted anglerfish\", 2, 1)\n\t.add(\"Blighted karambwan\", 3, 1)\n\t.add(\"Blighted super restore(4)\", 1, 1)\n\t.add(\"Dragon bones\", 1, 1)\n\t.add(\"Super combat potion(1)\", 1, 1);\n\nconst ChaosElementalTable = new LootTable()\n\t.every(ChaosElementalMinorTable, 1)\n\t.tertiary(200, \"Clue scroll (elite)\")\n\t.tertiary(300, \"Pet chaos elemental\")\n\t.oneIn(256, \"Dragon pickaxe\")\n\n\t/* Weapons and armour */\n\t.add(\"Rune dart\", 100, 5)\n\t.add(\"Rune platelegs\", 1, 4)\n\t.add(\"Rune plateskirt\", 1, 4)\n\t.add(\"Rune 2h sword\", 1, 3)\n\t.add(\"Rune battleaxe\", 1, 3)\n\t.add(\"Rune full helm\", 1, 3)\n\t.add(\"Rune kiteshield\", 1, 3)\n\t.add(\"Mystic air staff\", 1, 3)\n\t.add(\"Mystic water staff\", 1, 3)\n\t.add(\"Mystic earth staff\", 1, 3)\n\t.add(\"Mystic fire staff\", 1, 3)\n\t.add(\"Dragon dagger\", 1, 2)\n\t.add(\"Dragon 2h sword\", 1, 2)\n\t.add(\"Dragon platelegs\", 1, 2)\n\t.add(\"Dragon plateskirt\", 1, 2)\n\n\t/* Runes and ammunition */\n\t.add(\"Chaos rune\", [300, 500], 8)\n\t.add(\"Blood rune\", [100, 250], 8)\n\t.add(\"Rune arrow\", 150, 5)\n\n\t/* Herbs */\n\t.add(\"Grimy ranarr weed\", [5, 8], 4)\n\t.add(\"Grimy snapdragon\", [5, 8], 4)\n\t.add(\"Grimy avantoe\", [5, 8], 3)\n\t.add(\"Grimy kwuarm\", [5, 8], 3)\n\n\t/* Resources */\n\t.add(\"Coal\", [75, 150], 5)\n\t.add(\"Mahogany plank\", [8, 16], 5)\n\t.add(\"Runite bar\", [3, 5], 4)\n\t.add(\"Adamantite bar\", [8, 12], 4)\n\n\t/* Other */\n\t.add(\"Coins\", [20_005, 29_995], 7)\n\t.add(\"Blighted ancient ice sack\", [20, 40], 5)\n\t.add(\"Blighted karambwan\", [15, 25], 4)\n\t.add(\"Blighted anglerfish\", [10, 15], 4)\n\t.add(\"Wilderness crabs teleport\", 2, 2)\n\n\t/* Subtables */\n\t.add(RareDropTable, 1, 8);\n\nexport default new SimpleMonster({\n\tid: 2054,\n\tname: \"Chaos Elemental\",\n\ttable: ChaosElementalTable,\n\taliases: [\"chaos ele\", \"chaos elemental\", \"chaos el\"],\n});\n", "import LootTable from \"../../../../structures/LootTable\";\nimport SimpleMonster from \"../../../../structures/SimpleMonster\";\nimport { itemTupleToTable } from \"../../../../util\";\nimport RareDropTable, { GemTable } from \"../../../subtables/RareDropTable\";\n\nconst ChaosFanaticUniqueTable = new LootTable().add(\"Odium shard 1\").add(\"Malediction shard 1\");\n\nconst ChaosFanaticTable = new LootTable()\n\t.every(\"Bones\")\n\t.tertiary(128, \"Clue scroll (hard)\")\n\t.tertiary(1000, \"Pet chaos elemental\")\n\t.add(ChaosFanaticUniqueTable, 1, 1)\n\n\t/* Weapons and armour */\n\t.add(\"Battlestaff\", 5, 5)\n\t.add(\"Splitbark body\", 1, 5)\n\t.add(\"Splitbark legs\", 1, 5)\n\t.add(\n\t\titemTupleToTable([\n\t\t\t[\"Zamorak monk top\", 1],\n\t\t\t[\"Zamorak monk bottom\", 1],\n\t\t]),\n\t\t1,\n\t\t4,\n\t)\n\t.add(\"Ancient staff\", 1, 1)\n\n\t/* Runes */\n\t.add(\"Fire rune\", 250, 4)\n\t.add(\"Smoke rune\", 30, 4)\n\t.add(\"Chaos rune\", 175, 4)\n\t.add(\"Blood rune\", 50, 4)\n\n\t/* Consumables */\n\t.add(\"Monkfish\", 3, 8)\n\t.add(\"Shark\", 1, 8)\n\t.add(\"Prayer potion(4)\", 1, 8)\n\t.add(\"Anchovy pizza\", 8, 4)\n\n\t/* Other */\n\t.add(\"Coins\", [499, 3998], 18)\n\t.add(\"Grimy lantadyme\", 4, 8)\n\t.add(\"Ring of life\", 1, 7)\n\t.add(\"Chaos talisman\", 1, 6)\n\t.add(\"Wine of zamorak\", 10, 6)\n\t.add(\n\t\titemTupleToTable([\n\t\t\t[\"Uncut emerald\", 6],\n\t\t\t[\"Uncut sapphire\", 4],\n\t\t]),\n\t\t1,\n\t\t5,\n\t)\n\t.add(\"Sinister key\", 1, 4)\n\t.add(\"Pure essence\", 250, 2)\n\n\t/* Subtables */\n\t.add(RareDropTable, 1, 4)\n\t.add(GemTable, 1, 4);\n\nexport default new SimpleMonster({\n\tid: 6619,\n\tname: \"Chaos Fanatic\",\n\ttable: ChaosFanaticTable,\n\taliases: [\"chaos fanatic\", \"fanatic\"],\n});\n", "import LootTable from \"../../../../structures/LootTable\";\nimport SimpleMonster from \"../../../../structures/SimpleMonster\";\nimport { itemTupleToTable } from \"../../../../util\";\nimport RareDropTable, { GemTable } from \"../../../subtables/RareDropTable\";\n\nconst CrazyArchaeologistUniqueTable = new LootTable().add(\"Odium shard 2\").add(\"Malediction shard 2\");\n\nconst CrazyArchaeologistTable = new LootTable()\n\t.every(\"Bones\")\n\t.tertiary(128, \"Clue scroll (hard)\")\n\t.add(CrazyArchaeologistUniqueTable, 1, 1)\n\n\t/* Weapons and armour */\n\t.add(\"Amulet of power\", 1, 7)\n\t.add(\"Rune crossbow\", 2, 5)\n\t.add(\"Red d'hide body\", 1, 4)\n\t.add(\"Rune knife\", 10, 4)\n\n\t/* Runes and ammunition */\n\n\t.add(\"Mud rune\", 30, 4)\n\t.add(\"Cannonball\", 150, 4)\n\t.add(\"Dragon arrow\", 75, 1)\n\n\t/* Consumables */\n\t.add(\"Shark\", 1, 8)\n\t.add(\"Potato with cheese\", 3, 8)\n\t.add(\"Prayer potion(4)\", 1, 8)\n\t.add(\"Anchovy pizza\", 8, 4)\n\n\t/* Other */\n\t.add(\"Coins\", [499, 3998], 18)\n\t.add(\"Grimy dwarf weed\", 4, 8)\n\t.add(\"White berries\", 10, 6)\n\t.add(\"Silver ore\", 40, 6)\n\t.add(\n\t\titemTupleToTable([\n\t\t\t[\"Uncut emerald\", 6],\n\t\t\t[\"Uncut sapphire\", 4],\n\t\t]),\n\t\t1,\n\t\t5,\n\t)\n\t.add(\"Red dragonhide\", 10, 5)\n\t.add(\"Rusty sword\", 1, 4)\n\t.add(\"Muddy key\", 1, 4)\n\t.add(\"Onyx bolt tips\", 12, 4)\n\t.add(\"Long bone\", 1, 2)\n\t.add(\"Fedora\", 1, 1)\n\n\t/* Subtables */\n\t.add(RareDropTable, 1, 4)\n\t.add(GemTable, 1, 4);\n\nexport default new SimpleMonster({\n\tid: 6618,\n\tname: \"Crazy Archaeologist\",\n\ttable: CrazyArchaeologistTable,\n\taliases: [\"crazy arch\", \"crazy archaeologist\"],\n});\n", "import LootTable from \"../../../../structures/LootTable\";\nimport SimpleMonster from \"../../../../structures/SimpleMonster\";\nimport RareDropTable, { GemTable } from \"../../../subtables/RareDropTable\";\n\nconst KingBlackDragonTable = new LootTable()\n\t.every(\"Dragon bones\")\n\t.every(\"Black dragonhide\", 2)\n\t.tertiary(450, \"Clue scroll (elite)\")\n\t.tertiary(129, \"Kbd heads\")\n\t.tertiary(3000, \"Prince black dragon\")\n\t.tertiary(5000, \"Draconic visage\")\n\t.oneIn(1000, \"Dragon pickaxe\")\n\n\t/* Weapons and armour */\n\t.add(\"Rune longsword\", 1, 10)\n\t.add(\"Adamant platebody\", 1, 9)\n\t.add(\"Adamant kiteshield\", 1, 3)\n\t.add(\"Dragon med helm\", 1, 1)\n\n\t/* Runes and ammunition */\n\t.add(\"Air rune\", 300, 10)\n\t.add(\"Iron arrow\", 690, 10)\n\t.add(\"Runite bolts\", [10, 20], 10)\n\t.add(\"Fire rune\", 300, 5)\n\t.add(\"Law rune\", 30, 5)\n\t.add(\"Blood rune\", 30, 5)\n\n\t/* Resources */\n\t.add(\"Yew logs\", 150, 10)\n\t.add(\"Adamantite bar\", 3, 5)\n\t.add(\"Runite bar\", 1, 3)\n\t.add(\"Gold ore\", 100, 2)\n\n\t/* Other */\n\t.add(\"Amulet of power\", 1, 7)\n\t.add(\"Dragon arrowtips\", [5, 14], 5)\n\t.add(\"Dragon dart tip\", [5, 14], 5)\n\t.add(\"Dragon javelin heads\", 15, 5)\n\t.add(\"Runite limbs\", 1, 4)\n\t.add(\"Shark\", 4, 4)\n\n\t.add(RareDropTable, 1, 8)\n\t.add(GemTable, 1, 2);\n\nexport default new SimpleMonster({\n\tid: 6502,\n\tname: \"King Black Dragon\",\n\ttable: KingBlackDragonTable,\n\taliases: [\"kbd\", \"king black dragon\"],\n});\n", "import LootTable from \"../../../../structures/LootTable\";\nimport SimpleMonster from \"../../../../structures/SimpleMonster\";\n\nconst ScorpiaUniqueTable = new LootTable().add(\"Odium shard 3\").add(\"Malediction shard 3\");\n\nconst ScorpiaTable = new LootTable()\n\t.tertiary(18, \"Ensouled scorpion head\")\n\t.tertiary(100, \"Clue scroll (hard)\")\n\t.tertiary(2016, \"Scorpia's offspring\")\n\t.add(ScorpiaUniqueTable, 1, 1)\n\n\t/* Weapons and armour */\n\t.add(\"Battlestaff\", [5, 8], 6)\n\t.add(\"Rune 2h sword\", 1, 5)\n\t.add(\"Rune pickaxe\", 1, 5)\n\t.add(\"Rune kiteshield\", 1, 5)\n\t.add(\"Rune chainbody\", 1, 4)\n\t.add(\"Rune platelegs\", 1, 4)\n\t.add(\"Rune scimitar\", 1, 4)\n\t.add(\"Rune warhammer\", 1, 4)\n\t.add(\"Mystic earth staff\", 1, 4)\n\t.add(\"Mystic robe top\", 1, 1)\n\t.add(\"Mystic robe bottom\", 1, 1)\n\t.add(\"Dragon scimitar\", 1, 1)\n\t.add(\"Dragon 2h sword\", 1, 1)\n\n\t/* Runes */\n\t.add(\"Death rune\", [100, 150], 8)\n\t.add(\"Blood rune\", [100, 150], 8)\n\t.add(\"Chaos rune\", [150, 200], 8)\n\n\t/* Herbs */\n\t.add(\"Grimy kwuarm\", [10, 15], 5)\n\t.add(\"Grimy dwarf weed\", [10, 15], 5)\n\t.add(\"Grimy torstol\", [10, 15], 5)\n\t.add(\"Grimy snapdragon\", [4, 7], 5)\n\n\t/* Materials */\n\t.add(\"Uncut ruby\", [15, 20], 6)\n\t.add(\"Uncut diamond\", [10, 15], 4)\n\t.add(\"Runite ore\", 3, 4)\n\t.add(\"Dragon javelin heads\", [30, 50], 4)\n\t.add(\"Onyx bolt tips\", [6, 10], 2)\n\n\t/* Other */\n\t.add(\"Coins\", [25_002, 34_962], 7)\n\t.add(\"Blighted anglerfish\", [15, 25], 5)\n\t.add(\"Blighted super restore(4)\", 5, 5)\n\t.add(\"Wilderness crabs teleport\", 2, 2);\n\nexport default new SimpleMonster({\n\tid: 6615,\n\tname: \"Scorpia\",\n\ttable: ScorpiaTable,\n\taliases: [\"scorpia\"],\n});\n", "import LootTable from \"../../../../structures/LootTable\";\nimport SimpleMonster from \"../../../../structures/SimpleMonster\";\n\nconst SpindelUniqueTable = new LootTable()\n\t.oneIn(358, \"Dragon 2h sword\")\n\t.oneIn(358, \"Dragon pickaxe\")\n\t.oneIn(618, \"Fangs of venenatis\")\n\t.oneIn(716, \"Treasonous ring\")\n\t.oneIn(912, \"Voidwaker gem\");\n\nconst SpindelSecondarySupplyTable = new LootTable({ limit: 18 })\n\t.add(\"Blighted anglerfish\", [5, 6], 1)\n\t.add(\"Blighted karambwan\", [5, 6], 1)\n\t.add(\"Blighted super restore(3)\", [3, 4], 1)\n\t.add(\"Blighted super restore(4)\", [3, 4], 1)\n\t.add(\"Ranging potion(2)\", [2, 3], 1)\n\t.add(\"Super combat potion(2)\", [2, 3], 1);\n\nconst SpindelTable = new LootTable()\n\t/* Unique table */\n\t.every(SpindelUniqueTable)\n\n\t/* Food and potions */\n\t.add(\"Dark crab\", 8, 5)\n\t.add(\"Super restore(4)\", 3, 5)\n\n\t/* Weapons and armour */\n\t.add(\"Rune pickaxe\", 1, 12)\n\t.add(\"Rune knife\", 30, 5)\n\t.add(\"Rune 2h sword\", 1, 3)\n\n\t/* Runes and ammunition */\n\t.add(\"Chaos rune\", 180, 7)\n\t.add(\"Blood rune\", 150, 7)\n\t.add(\"Death rune\", 220, 7)\n\t.add(\"Diamond bolts (e)\", 60, 5)\n\t.add(\"Cannonball\", 200, 4)\n\n\t/* Materials */\n\t.add(\"Uncut diamond\", 9, 8)\n\t.add(\"Gold ore\", 180, 6)\n\t.add(\"Magic logs\", 60, 5)\n\t.add(\"Limpwurt root\", 18, 5)\n\t.add(\"Onyx bolt tips\", 35, 5)\n\t.add(\"Red spiders' eggs\", 250, 3)\n\t.add(\"Uncut dragonstone\", 1, 2)\n\t.add(\"Uncut ruby\", 18, 1)\n\t.add(\"Grimy snapdragon\", 60, 1)\n\t.add(\"Unicorn horn\", 60, 1)\n\n\t/* Other */\n\t.add(\"Coins\", 14_000, 21)\n\t.add(\"Supercompost\", 60, 4)\n\t.add(\"Antidote++(4)\", 6, 3)\n\t.add(\"Dark fishing bait\", 200, 1)\n\t.add(\"Magic seed\", 1, 1)\n\t.add(\"Palm tree seed\", 1, 1)\n\n\t/* Tertiary */\n\t.tertiary(100, \"Clue scroll (elite)\")\n\t.tertiary(2800, \"Venenatis spiderling\");\n\nconst SpindelTotalTable = new LootTable().every(SpindelSecondarySupplyTable).every(SpindelTable);\n\nexport default new SimpleMonster({\n\tid: 11_998,\n\tname: \"Spindel\",\n\ttable: SpindelTotalTable,\n\taliases: [\"spin\", \"spinny\", \"spindel\"],\n});\n", "import LootTable from \"../../../../structures/LootTable\";\nimport SimpleMonster from \"../../../../structures/SimpleMonster\";\n\nconst VenenatisUniqueTable = new LootTable()\n\t.oneIn(196, \"Fangs of venenatis\")\n\t.oneIn(256, \"Dragon 2h sword\")\n\t.oneIn(256, \"Dragon pickaxe\")\n\t.oneIn(360, \"Voidwaker gem\")\n\t.oneIn(512, \"Treasonous ring\");\n\nconst VenenatisSecondarySupplyTable = new LootTable({ limit: 18 })\n\t.add(\"Blighted anglerfish\", [5, 6], 1)\n\t.add(\"Blighted karambwan\", [5, 6], 1)\n\t.add(\"Blighted super restore(3)\", [3, 4], 1)\n\t.add(\"Blighted super restore(4)\", [3, 4], 1)\n\t.add(\"Ranging potion(2)\", [2, 3], 1)\n\t.add(\"Super combat potion(2)\", [2, 3], 1);\n\nconst VenenatisTable = new LootTable()\n\t/* Unique table */\n\t.every(VenenatisUniqueTable)\n\n\t/* Weapons and armour */\n\t.add(\"Rune pickaxe\", 5, 8)\n\t.add(\"Rune knife\", 150, 5)\n\t.add(\"Rune dart\", 150, 3)\n\t.add(\"Mystic air staff\", 4, 2)\n\t.add(\"Rune platelegs\", 4, 2)\n\t.add(\"Rune sq shield\", 4, 2)\n\t.add(\"Dragon dagger\", 6, 2)\n\n\t/* Runes and ammunition */\n\t.add(\"Chaos rune\", 500, 7)\n\t.add(\"Death rune\", 700, 7)\n\t.add(\"Blood rune\", 900, 7)\n\t.add(\"Diamond bolts (e)\", 300, 5)\n\t.add(\"Cannonball\", 600, 4)\n\n\t/* Materials */\n\t.add(\"Uncut diamond\", 35, 8)\n\t.add(\"Gold ore\", 675, 6)\n\t.add(\"Onyx bolt tips\", 150, 5)\n\t.add(\"Magic logs\", 225, 5)\n\t.add(\"Limpwurt root\", 100, 5)\n\t.add(\"Red spiders' eggs\", 500, 3)\n\t.add(\"Uncut dragonstone\", 5, 2)\n\t.add(\"Uncut ruby\", 75, 1)\n\t.add(\"Unicorn horn\", 225, 1)\n\t.add(\"Grimy ranarr weed\", 45, 1)\n\t.add(\"Grimy snapdragon\", 150, 1)\n\t.add(\"Grimy toadflax\", 45, 1)\n\n\t/* Other */\n\t.add(\"Coins\", 50_000, 10)\n\t.add(\"Super restore(4)\", 10, 5)\n\t.add(\"Dark crab\", 50, 5)\n\t.add(\"Supercompost\", 225, 4)\n\t.add(\"Antidote++(4)\", 20, 3)\n\t.add(\"Wilderness crabs teleport\", 4, 3)\n\t.add(\"Blighted anglerfish\", 100, 1)\n\n\t/* Tertiary */\n\t.tertiary(100, \"Clue scroll (elite)\")\n\t.tertiary(400, \"Long bone\")\n\t.tertiary(1500, \"Venenatis spiderling\")\n\t.tertiary(5013, \"Curved bone\");\n\nconst VenenatisTotalTable = new LootTable().every(VenenatisSecondarySupplyTable).every(VenenatisTable);\n\nexport default new SimpleMonster({\n\tid: 6610,\n\tname: \"Venenatis\",\n\ttable: VenenatisTotalTable,\n\taliases: [\"ven\", \"venny\", \"venenatis\", \"vene\"],\n});\n", "import LootTable from \"../../../../structures/LootTable\";\nimport SimpleMonster from \"../../../../structures/SimpleMonster\";\n\nconst SkeletonHellhoundTable = new LootTable().every(\"Bones\").oneIn(5000, \"Skeleton champion scroll\");\n\nconst VetionUniqueTable = new LootTable()\n\t.oneIn(196, \"Skull of vet'ion\")\n\t.oneIn(256, \"Dragon 2h sword\")\n\t.oneIn(256, \"Dragon pickaxe\")\n\t.oneIn(360, \"Voidwaker blade\")\n\t.oneIn(512, \"Ring of the gods\");\n\nconst VetionSecondarySupplyTable = new LootTable({ limit: 18 })\n\t.add(\"Blighted anglerfish\", [5, 6], 1)\n\t.add(\"Blighted karambwan\", [5, 6], 1)\n\t.add(\"Blighted super restore(3)\", [3, 4], 1)\n\t.add(\"Blighted super restore(4)\", [3, 4], 1)\n\t.add(\"Ranging potion(2)\", [2, 3], 1)\n\t.add(\"Super combat potion(2)\", [2, 3], 1);\n\nconst VetionTable = new LootTable()\n\t.every(\"Big bones\")\n\t.every(SkeletonHellhoundTable, 4)\n\n\t/* Unique table */\n\t.every(VetionUniqueTable)\n\n\t/* Weapons and armour */\n\t.add(\"Rune pickaxe\", 5, 8)\n\t.add(\"Rune dart\", 150, 3)\n\t.add(\"Rune knife\", 150, 3)\n\t.add(\"Mystic fire staff\", 4, 2)\n\t.add(\"Mystic water staff\", 4, 2)\n\t.add(\"Mystic robe top\", 4, 2)\n\t.add(\"Mystic robe bottom\", 4, 2)\n\t.add(\"Rune full helm\", 4, 2)\n\n\t/* Runes and ammunition */\n\t.add(\"Chaos rune\", 900, 7)\n\t.add(\"Death rune\", 700, 7)\n\t.add(\"Blood rune\", 500, 7)\n\t.add(\"Cannonball\", 550, 4)\n\n\t/* Materials */\n\t.add(\"Gold ore\", 675, 6)\n\t.add(\"Limpwurt root\", 60, 5)\n\t.add(\"Wine of zamorak\", 100, 5)\n\t.add(\"Magic logs\", 225, 5)\n\t.add(\"Oak plank\", 400, 5)\n\t.add(\"Uncut ruby\", 75, 4)\n\t.add(\"Uncut diamond\", 35, 3)\n\t.add(\"Dragon bones\", 150, 3)\n\t.add(\"Uncut dragonstone\", 5, 2)\n\t.add(\"Mort myre fungus\", 450, 2)\n\t.add(\"Grimy ranarr weed\", 100, 1)\n\t.add(\"Grimy dwarf weed\", 45, 1)\n\t.add(\"Grimy snapdragon\", 45, 1)\n\t.add(\"Grimy toadflax\", 45, 1)\n\n\t/* Other */\n\t.add(\"Coins\", 50_000, 10)\n\t.add(\"Super restore(4)\", 10, 5)\n\t.add(\"Sanfew serum(4)\", 20, 5)\n\t.add(\"Dark crab\", 50, 5)\n\t.add(\"Supercompost\", 225, 4)\n\t.add(\"Wilderness crabs teleport\", 4, 3)\n\t.add(\"Blighted anglerfish\", 100, 1)\n\n\t/* Tertiary */\n\t.tertiary(100, \"Clue scroll (elite)\")\n\t.tertiary(400, \"Long bone\")\n\t.tertiary(1500, \"Vet'ion jr.\")\n\t.tertiary(5000, \"Skeleton champion scroll\")\n\t.tertiary(5013, \"Curved bone\");\n\nconst VetionTotalTable = new LootTable().every(VetionSecondarySupplyTable).every(VetionTable);\n\nexport default new SimpleMonster({\n\tid: 6611,\n\tname: \"Vet'ion\",\n\ttable: VetionTotalTable,\n\taliases: [\"vetion\", \"vet'ion\", \"vet\"],\n});\n", "import Artio from \"./Artio\";\nimport Callisto from \"./Callisto\";\nimport Calvarion from \"./Calvarion\";\nimport ChaosElemental from \"./ChaosElemental\";\nimport ChaosFanatic from \"./ChaosFanatic\";\nimport CrazyArchaeologist from \"./CrazyArchaeologist\";\nimport KingBlackDragon from \"./KingBlackDragon\";\nimport Scorpia from \"./Scorpia\";\nimport Spindel from \"./Spindel\";\nimport Venenatis from \"./Venenatis\";\nimport Vetion from \"./Vetion\";\n\nexport const allWildyBosses = {\n\tCallisto,\n\tChaosElemental,\n\tCrazyArchaeologist,\n\tKingBlackDragon,\n\tScorpia,\n\tVenenatis,\n\tVetion,\n\tChaosFanatic,\n\tArtio,\n\tSpindel,\n\tCalvarion,\n};\n", "import LootTable from \"../../../../structures/LootTable\";\nimport SimpleMonster from \"../../../../structures/SimpleMonster\";\nimport { GemTable } from \"../../../subtables/RareDropTable\";\n\nconst SigilTable = new LootTable().add(\"Spectral sigil\", 1, 3).add(\"Arcane sigil\", 1, 3).add(\"Elysian sigil\", 1, 1);\n\nexport const CorporealBeastTable = new LootTable()\n\n\t.add(\"Spirit shield\", 1, 8)\n\t.add(\"Holy elixir\", 1, 3)\n\t.oneIn(585, SigilTable)\n\n\t/* Uncuts */\n\t.add(GemTable, 10, 12)\n\n\t/* Weapons and armour */\n\t.add(\"Mystic robe top\", 1, 18)\n\t.add(\"Mystic robe bottom\", 1, 18)\n\t.add(\"Mystic air staff\", 1, 12)\n\t.add(\"Mystic water staff\", 1, 12)\n\t.add(\"Mystic earth staff\", 1, 12)\n\t.add(\"Mystic fire staff\", 1, 12)\n\n\t/* Runes */\n\t.add(\"Soul rune\", 250, 32)\n\t.add(\"Runite bolts\", 250, 24)\n\t.add(\"Death rune\", 300, 22)\n\t.add(\"Onyx bolts (e)\", 175, 20)\n\t.add(\"Cannonball\", 2000, 17)\n\t.add(\"Adamant arrow\", 750, 17)\n\t.add(\"Law rune\", 250, 17)\n\t.add(\"Cosmic rune\", 500, 17)\n\n\t/* Resources */\n\t.add(\"Raw shark\", 70, 21)\n\t.add(\"Pure essence\", 2500, 21)\n\t.add(\"Adamantite bar\", 35, 18)\n\t.add(\"Green dragonhide\", 100, 18)\n\t.add(\"Adamantite ore\", 125, 17)\n\t.add(\"Runite ore\", 20, 12)\n\t.add(\"Teak plank\", 100, 12)\n\t.add(\"Mahogany logs\", 150, 12)\n\t.add(\"Magic logs\", 75, 12)\n\n\t/* Other */\n\t.add(\"Tuna potato\", 30, 20)\n\t.add(\"White berries\", 120, 17)\n\t.add(\"Desert goat horn\", 120, 17)\n\t.add(\"Watermelon seed\", 24, 15)\n\t.add(\"Coins\", [20_000, 50_000], 12)\n\t.add(\"Antidote++(4)\", 40, 10)\n\t.add(\"Ranarr seed\", 10, 5)\n\n\t/* Tertiary */\n\t.tertiary(200, \"Clue scroll (elite)\")\n\t.tertiary(1000, \"Jar of spirits\")\n\t.tertiary(5000, \"Pet dark core\");\n\nexport default new SimpleMonster({\n\tid: 319,\n\tname: \"Corporeal Beast\",\n\ttable: CorporealBeastTable,\n\taliases: [\"corporeal beast\", \"corp\"],\n});\n", "import { Araxxor } from \"./Araxxor\";\nimport { AwakenedDukeSucellus } from \"./AwakenedDukeSucellus\";\nimport { AwakenedTheLeviathan } from \"./AwakenedTheLeviathan\";\nimport { AwakenedTheWhisperer } from \"./AwakenedTheWhisperer\";\nimport { AwakenedVardorvis } from \"./AwakenedVardorvis\";\nimport Bryophyta from \"./Bryophyta\";\nimport CommanderZilyana from \"./CommanderZilyana\";\nimport DagannothPrime from \"./DagannothPrime\";\nimport DagannothRex from \"./DagannothRex\";\nimport DagannothSupreme from \"./DagannothSupreme\";\nimport DerangedArchaeologist from \"./DerangedArchaeologist\";\nimport { DukeSucellus } from \"./DukeSucellus\";\nimport GeneralGraardor from \"./GeneralGraardor\";\nimport GiantMole from \"./GiantMole\";\nimport KalphiteQueen from \"./KalphiteQueen\";\nimport Kreearra from \"./Kreearra\";\nimport KrilTsutsaroth from \"./KrilTsutsaroth\";\nimport Obor from \"./Obor\";\nimport PhantomMuspah from \"./PhantomMuspah\";\nimport Sarachnis from \"./Sarachnis\";\nimport Scurrius from \"./Scurrius\";\nimport Skotizo from \"./Skotizo\";\nimport { TheLeviathan } from \"./TheLeviathan\";\nimport { TheWhisperer } from \"./TheWhisperer\";\nimport { Vardorvis } from \"./Vardorvis\";\nimport Vorkath from \"./Vorkath\";\nimport Zulrah from \"./Zulrah\";\nimport { allSlayerBosses } from \"./slayer\";\nimport { allWildyBosses } from \"./wildy\";\nimport CorporealBeast from \"./wildy/CorporealBeast\";\n\nexport const allBosses = {\n\tAraxxor,\n\tCorporealBeast,\n\tDagannothPrime,\n\tDagannothRex,\n\tDagannothSupreme,\n\tGiantMole,\n\tKalphiteQueen,\n\tObor,\n\tSarachnis,\n\tVorkath,\n\tZulrah,\n\tCommanderZilyana,\n\tGeneralGraardor,\n\tKreearra,\n\tKrilTsutsaroth,\n\tBryophyta,\n\tSkotizo,\n\tDerangedArchaeologist,\n\tPhantomMuspah,\n\tDukeSucellus,\n\tVardorvis,\n\tTheLeviathan,\n\tTheWhisperer,\n\tAwakenedDukeSucellus,\n\tAwakenedTheLeviathan,\n\tAwakenedTheWhisperer,\n\tAwakenedVardorvis,\n\tScurrius,\n\t...allWildyBosses,\n\t...allSlayerBosses,\n};\n", "import LootTable from \"../../../../structures/LootTable\";\nimport SimpleMonster from \"../../../../structures/SimpleMonster\";\nimport HerbDropTable from \"../../../subtables/HerbDropTable\";\nimport { GemTable } from \"../../../subtables/RareDropTable\";\nimport RareSeedTable from \"../../../subtables/RareSeedTable\";\n\nconst AberrantSpectreHerbTable = new LootTable()\n\t.add(HerbDropTable, 1, 11)\n\t.add(HerbDropTable, 2, 11)\n\t.add(HerbDropTable, 3, 4);\n\nexport const AberrantSpectrePreTable = new LootTable({ limit: 128 })\n\t/* Weapons and armour */\n\t.add(\"Steel axe\", 1, 3)\n\t.add(\"Mithril kiteshield\", 1, 1)\n\t.add(\"Lava battlestaff\", 1, 1)\n\t.add(\"Adamant platelegs\", 1, 1)\n\t.add(\"Rune full helm\", 1, 1)\n\t.oneIn(512, \"Mystic robe bottom (dark)\")\n\n\t/* Herbs */\n\t.add(AberrantSpectreHerbTable, 1, 78)\n\n\t/* Seeds */\n\t.add(RareSeedTable, 1, 19)\n\n\t/* Coins */\n\t.add(\"Coins\", 460, 1)\n\n\t/* Rdt */\n\t.add(GemTable, 1, 5);\n\nconst AberrantSpectreTable = new LootTable()\n\t.every(AberrantSpectrePreTable)\n\n\t/* Tertiary */\n\t.tertiary(128, \"Clue scroll (hard)\");\n\nexport default new SimpleMonster({\n\tid: 2,\n\tname: \"Aberrant Spectre\",\n\ttable: AberrantSpectreTable,\n\taliases: [\"aberrant\", \"aberrant spectre\", \"abby specs\"],\n});\n", "import LootTable from \"../../../../structures/LootTable\";\nimport SimpleMonster from \"../../../../structures/SimpleMonster\";\nimport HerbDropTable from \"../../../subtables/HerbDropTable\";\nimport RareDropTable, { GemTable } from \"../../../subtables/RareDropTable\";\n\nconst WildySlayerCaveTable = new LootTable()\n\t.add(\"Blighted entangle sack\", [1, 10], 14500)\n\t.add(\"Blighted anglerfish\", [1, 2], 10800)\n\t.add(\"Blighted manta ray\", [1, 2], 7190)\n\t.add(\"Blighted karambwan\", [1, 2], 7190)\n\t.add(\"Blighted teleport spell sack\", [1, 10], 7190)\n\t.add(\"Blighted ancient ice sack\", [1, 10], 7190)\n\t.add(\"Blighted vengeance sack\", [1, 10], 7190)\n\t.add(\"Blighted super restore(4)\", 1, 3600)\n\t.add(\"Revenant cave teleport\", 1, 3600)\n\t.add(\"Dareeyak teleport\", 1, 720)\n\t.add(\"Wilderness crabs teleport\", 1, 720)\n\t.add(\"Carrallanger teleport\", 1, 720)\n\t.add(\"Paddewwa teleport\", 1, 720)\n\t.add(\"Annakarl teleport\", 1, 720)\n\t.add(\"Lassar teleport\", 1, 720)\n\t.add(\"Kharyrll teleport\", 1, 720)\n\t.add(\"Senntisten teleport\", 1, 720)\n\t.add(\"Ghorrock teleport\", 1, 720)\n\t.add(\"Target teleport\", 1, 720)\n\t.add(\"Magic shortbow scroll\", 1, 288)\n\t.add(\"Ring of wealth scroll\", 1, 288)\n\t.add(\"Trouver parchment\", 2, 72)\n\t.add(\"Looting bag note\", 1, 72);\n\nexport const AbyssalDemonPreTable = new LootTable()\n\t/* Weapons and armour */\n\t.add(\"Black sword\", 1, 4)\n\t.add(\"Steel battleaxe\", 1, 3)\n\t.add(\"Black axe\", 1, 2)\n\t.add(\"Mithril kiteshield\", 1, 1)\n\t.add(\"Rune chainbody\", 1, 1)\n\t.add(\"Rune med helm\", 1, 1)\n\t.oneIn(512, \"Abyssal whip\")\n\t.oneIn(32_768, \"Abyssal dagger\")\n\n\t/* Runes */\n\t.add(\"Air rune\", 50, 8)\n\t.add(\"Chaos rune\", 10, 6)\n\t.add(\"Blood rune\", 7, 4)\n\t.add(\"Law rune\", 3, 1)\n\n\t/* Seeds */\n\t.add(HerbDropTable, 1, 19)\n\n\t/* Materials */\n\t.add(\"Pure essence\", 60, 5)\n\t.add(\"Adamantite bar\", 1, 2)\n\n\t/* Coins */\n\t.add(\"Coins\", 132, 35)\n\t.add(\"Coins\", 220, 9)\n\t.add(\"Coins\", 30, 7)\n\t.add(\"Coins\", 44, 6)\n\t.add(\"Coins\", 460, 1)\n\n\t/* Other */\n\t.add(\"Lobster\", 1, 2)\n\t.add(\"Cosmic talisman\", 1, 1)\n\t.add(\"Chaos talisman\", 1, 1)\n\t.add(\"Defence potion(3)\", 1, 1)\n\n\t.add(RareDropTable, 1, 2)\n\t.add(GemTable, 1, 5);\n\nconst AbyssalDemonTable = new LootTable()\n\t.every(\"Abyssal ashes\")\n\t.every(AbyssalDemonPreTable)\n\n\t/* Tertiary */\n\t.tertiary(25, \"Ensouled abyssal head\")\n\t.tertiary(128, \"Clue scroll (hard)\")\n\t.tertiary(1200, \"Clue scroll (elite)\")\n\t.tertiary(6000, \"Abyssal head\");\n\nconst AbyssalDemonWildyCaveTable = new LootTable()\n\t.every(AbyssalDemonTable)\n\t.add(WildySlayerCaveTable, 1, 80)\n\t.add(new LootTable(), 1, 20);\n\nexport default new SimpleMonster({\n\tid: 415,\n\tname: \"Abyssal Demon\",\n\ttable: AbyssalDemonTable,\n\twildyCaveTable: AbyssalDemonWildyCaveTable,\n\taliases: [\"abbys\", \"abby demon\", \"abby demons\", \"abyssal demons\", \"abyssal demon\"],\n});\n", "import LootTable from \"../../structures/LootTable\";\n\nconst UsefulHerbTable = new LootTable()\n\t.add(\"Grimy avantoe\", 1, 5)\n\t.add(\"Grimy snapdragon\", 1, 4)\n\t.add(\"Grimy ranarr weed\", 1, 4)\n\t.add(\"Grimy torstol\", 1, 3);\n\nexport default UsefulHerbTable;\n", "import LootTable from \"../../../../structures/LootTable\";\nimport SimpleMonster from \"../../../../structures/SimpleMonster\";\nimport RareDropTable from \"../../../subtables/RareDropTable\";\nimport UsefulHerbTable from \"../../../subtables/UsefulHerbTable\";\n\nconst AdamantDragonTable = new LootTable()\n\t.every(\"Dragon bones\")\n\t.every(\"Adamantite bar\", 2)\n\n\t/* Weapons and armour */\n\t.add(\"Adamant platebody\", 1, 9)\n\t.add(\"Rune mace\", 1, 7)\n\t.add(\"Rune scimitar\", 1, 7)\n\t.add(\"Dragon med helm\", 1, 1)\n\t.add(\"Dragon platelegs\", 1, 1)\n\t.add(\"Dragon plateskirt\", 1, 1)\n\n\t/* Runes and ammunition */\n\t.add(\"Adamant arrow\", [30, 40], 8)\n\t.add(\"Wrath rune\", [10, 30], 8)\n\t.add(\"Chaos rune\", [60, 120], 7)\n\t.add(\"Death rune\", [30, 60], 7)\n\n\t/* Herbs */\n\t.add(UsefulHerbTable, 1, 8)\n\n\t/* Materials */\n\t.add(\"Adamant bolts(unf)\", [20, 40], 11)\n\t.add(\"Adamant javelin heads\", [40, 50], 8)\n\t.add(\"Diamond\", [1, 3], 7)\n\t.add(\"Dragon javelin heads\", [20, 30], 7)\n\t.add(\"Adamantite ore\", [8, 20], 6)\n\t.add(\"Adamantite bar\", [5, 35], 4)\n\t.add(\"Dragon bolts (unf)\", [15, 20], 1)\n\n\t/* Other */\n\t.add(\"Wrath talisman\", 1, 1)\n\n\t/* RDT */\n\t.add(RareDropTable, 1, 1)\n\n\t/* Tertiary */\n\t.tertiary(320, \"Clue scroll (elite)\")\n\t.tertiary(1000, \"Dragon limbs\")\n\t.tertiary(5000, \"Dragon metal slice\")\n\t.tertiary(9000, \"Draconic visage\");\n\nexport default new SimpleMonster({\n\tid: 8030,\n\tname: \"Adamant Dragon\",\n\ttable: AdamantDragonTable,\n\taliases: [\"adamant dragon\", \"addy dragon\"],\n});\n", "import LootTable from \"../../../../structures/LootTable\";\nimport SimpleMonster from \"../../../../structures/SimpleMonster\";\n\nexport default new SimpleMonster({\n\tid: 3292,\n\tname: \"Al-Kharid warrior\",\n\tpickpocketTable: new LootTable().add(\"Coins\", 18).tertiary(257_211, \"Rocky\"),\n\taliases: [\"al-kharid warrior\", \"alkharid warrior\"],\n});\n", "import LootTable from \"../../../../structures/LootTable\";\nimport SimpleMonster from \"../../../../structures/SimpleMonster\";\nimport RareDropTable from \"../../../subtables/RareDropTable\";\nimport TreeHerbSeedTable from \"../../../subtables/TreeHerbSeedTable\";\n\nconst AncientZygomiteTable = new LootTable()\n\t.every(\"Mort myre fungus\", [1, 2])\n\n\t/* Weapons */\n\t.add(\"Rune axe\", 1, 2)\n\n\t/* Runes  */\n\t.add(\"Earth rune\", 100, 10)\n\t.add(\"Law rune\", 15, 4)\n\t.add(\"Cosmic rune\", 15, 4)\n\t.add(\"Nature rune\", 15, 4)\n\n\t/* Herbs */\n\t.add(\"Grimy kwuarm\", [1, 2], 4)\n\t.add(\"Grimy torstol\", 1, 4)\n\t.add(\"Grimy cadantine\", [1, 2], 3)\n\t.add(\"Grimy dwarf weed\", [1, 2], 2)\n\t.add(\"Grimy lantadyme\", [1, 2], 2)\n\n\t/* Seeds */\n\t.add(\"Mushroom spore\", 1, 8)\n\t.add(TreeHerbSeedTable, 1, 3)\n\n\t/* Fossils */\n\t.add(\"Numulite\", [7, 19], 29)\n\t.add(\"Unidentified small fossil\", 1, 2)\n\t.oneIn(100, \"Unidentified medium fossil\")\n\t.oneIn(125, \"Unidentified large fossil\")\n\t.oneIn(500, \"Unidentified rare fossil\")\n\n\t/* Other */\n\t.add(\"Pyrophosphite\", 1, 13)\n\t.add(\"Calcite\", 1, 12)\n\t.add(\"Supercompost\", 2, 8)\n\t.add(\"Volcanic ash\", 2, 2)\n\t.add(\"Mort myre fungus\", 5, 2)\n\n\t/* Gem drop table */\n\t.add(RareDropTable, 1, 4)\n\n\t/* Tertiary */\n\t.tertiary(128, \"Clue scroll (medium)\");\n\nexport default new SimpleMonster({\n\tid: 7797,\n\tname: \"Ancient Zygomite\",\n\ttable: AncientZygomiteTable,\n\taliases: [\"ancient zygomite\"],\n});\n", "import LootTable from \"../../../../structures/LootTable\";\nimport SimpleMonster from \"../../../../structures/SimpleMonster\";\nimport CommonSeedDropTable from \"../../../subtables/CommonSeedDropTable\";\nimport HerbDropTable from \"../../../subtables/HerbDropTable\";\nimport { GemTable } from \"../../../subtables/RareDropTable\";\n\nconst WildySlayerCaveTable = new LootTable()\n\t.add(\"Blighted entangle sack\", [1, 10], 11900)\n\t.add(\"Blighted anglerfish\", [1, 2], 8930)\n\t.add(\"Blighted manta ray\", [1, 2], 8930)\n\t.add(\"Blighted karambwan\", [1, 2], 5950)\n\t.add(\"Blighted teleport spell sack\", [1, 10], 5950)\n\t.add(\"Blighted ancient ice sack\", [1, 10], 5950)\n\t.add(\"Blighted vengeance sack\", [1, 10], 5950)\n\t.add(\"Blighted super restore(4)\", 1, 2980)\n\t.add(\"Revenant cave teleport\", 1, 2980)\n\t.add(\"Dareeyak teleport\", 1, 595)\n\t.add(\"Wilderness crabs teleport\", 1, 595)\n\t.add(\"Carrallanger teleport\", 1, 595)\n\t.add(\"Paddewwa teleport\", 1, 595)\n\t.add(\"Annakarl teleport\", 1, 595)\n\t.add(\"Lassar teleport\", 1, 595)\n\t.add(\"Kharyrll teleport\", 1, 595)\n\t.add(\"Senntisten teleport\", 1, 595)\n\t.add(\"Ghorrock teleport\", 1, 595)\n\t.add(\"Target teleport\", 1, 595)\n\t.add(\"Magic shortbow scroll\", 1, 238)\n\t.add(\"Ring of wealth scroll\", 1, 238)\n\t.add(\"Trouver parchment\", 2, 59)\n\t.add(\"Looting bag note\", 1, 59);\n\nconst AnkouTable = new LootTable({ limit: 100 })\n\t.every(\"Bones\")\n\n\t.oneIn(33, \"Left skull half\")\n\n\t/* Weapons and armor */\n\t.add(\"Black knife\", 1, 1)\n\t.add(\"Black robe\", 1, 1)\n\n\t/* Runes and ammunition */\n\t.add(\"Death rune\", 10, 10)\n\t.add(\"Blood rune\", 11, 6)\n\t.add(\"Law rune\", 2, 6)\n\t.add(\"Adamant arrow\", [5, 14], 4)\n\t.add(\"Blood rune\", 5, 3)\n\n\t/* Herbs */\n\t.add(HerbDropTable, 1, 3)\n\n\t/* Seeds */\n\t.add(CommonSeedDropTable, 1, 1)\n\n\t/* Materials */\n\t.add(\"Pure essence\", 15, 5)\n\t.add(\"Mithril ore\", [3, 7], 2)\n\n\t/* Coins */\n\t.add(\"Coins\", 8, 33)\n\t.add(\"Coins\", [5, 204], 10)\n\n\t/* Other */\n\t.add(\"Bass\", 1, 2)\n\t.add(\"Weapon poison\", 1, 2)\n\t.add(\"Fried mushrooms\", 1, 1)\n\n\t/* RDT */\n\t.add(GemTable, 1, 2)\n\n\t/* Tertiary */\n\t.tertiary(512, \"Clue scroll (hard)\");\n\nconst AnkouWildyCaveTable = new LootTable()\n\t.every(AnkouTable)\n\t.add(WildySlayerCaveTable, 1, 66)\n\t.add(new LootTable(), 1, 34);\n\nexport default new SimpleMonster({\n\tid: 2514,\n\tname: \"Ankou\",\n\ttable: AnkouTable,\n\twildyCaveTable: AnkouWildyCaveTable,\n\taliases: [\"ankou\", \"ank\"],\n});\n", "import LootTable from \"../../../../structures/LootTable\";\nimport SimpleMonster from \"../../../../structures/SimpleMonster\";\nimport { HerbDropTable } from \"../../../subtables\";\nimport { UncommonSeedDropTable } from \"../../../subtables/index\";\n\nexport const AraxyteTable = new LootTable()\n\t.every(\"Araxyte venom sack\")\n\t.tertiary(4000, \"Aranea boots\")\n\t.tertiary(128, \"Clue scroll (hard)\")\n\t.tertiary(2000, \"Araxyte head\")\n\n\t.add(\"Coins\", [800, 1200], 10)\n\t.add(\"Araxyte venom sack\", 2, 5)\n\t.add(\"Adamant longsword\", 1, 5)\n\t.add(\"Adamant battleaxe\", 1, 5)\n\t.add(\"Rune dagger\", 1, 3)\n\t.add(\"Rune med helm\", 1, 2)\n\t.add(\"Rune platelegs\", 1, 2)\n\n\t.add(\"Air rune\", [120, 140], 10)\n\t.add(\"Water rune\", [120, 140], 10)\n\t.add(\"Earth rune\", [120, 140], 10)\n\t.add(\"Fire rune\", [120, 140], 10)\n\t.add(\"Cosmic rune\", [7, 12], 5)\n\t.add(\"Chaos rune\", [10, 15], 5)\n\t.add(\"Nature rune\", [15, 20], 5)\n\t.add(\"Death rune\", [20, 25], 5)\n\t.add(\"Law rune\", [12, 15], 5)\n\t.add(\"Blood rune\", [15, 18], 5)\n\t.add(\"Soul rune\", [9, 12], 5)\n\t.add(HerbDropTable, 1, 10)\n\t.add(UncommonSeedDropTable, 1, 10);\n\nexport const Araxyte = new SimpleMonster({\n\tid: 11175,\n\tname: \"Araxyte\",\n\ttable: AraxyteTable,\n\taliases: [\"araxyte\"],\n});\n", "import LootTable from \"../../../../structures/LootTable\";\nimport SimpleMonster from \"../../../../structures/SimpleMonster\";\nimport HerbDropTable from \"../../../subtables/HerbDropTable\";\nimport { GemTable } from \"../../../subtables/RareDropTable\";\n\nexport const ArmadylianGuardTable = new LootTable()\n\t.every(\"Bones\")\n\n\t/* Weapons and armour */\n\t.add(\"Rune thrownaxe\", 6, 3)\n\t.add(\"Rune spear\", 1, 1)\n\t.oneIn(1_000_000, \"Armadyl helmet\")\n\t.oneIn(1_000_000, \"Bandos boots\")\n\n\t/* Runes */\n\t.add(\"Nature rune\", 20, 5)\n\t.add(\"Blood rune\", 20, 5)\n\t.add(\"Cosmic rune\", 20, 5)\n\n\t/* Herbs */\n\t.add(HerbDropTable, 1, 10)\n\n\t/* Coins */\n\t.add(\"Coins\", 35, 37)\n\t.add(\"Coins\", 350, 12)\n\n\t/* Other */\n\t.add(\"Headless arrow\", 30, 10)\n\t.add(\"Coal\", 1, 7)\n\t.add(\"Hammer\", 1, 5)\n\t.add(\"Feather\", 30, 5)\n\t.add(\"Shark\", 1, 3)\n\t.add(\"Adamantite bar\", 5, 1)\n\n\t/* Gem drop table */\n\t.add(GemTable, 1, 9);\n\nexport default new SimpleMonster({\n\tid: 6587,\n\tname: \"Armadylian Guard\",\n\ttable: ArmadylianGuardTable,\n\taliases: [\"armadylian guard\", \"arma guard\"],\n});\n", "import LootTable from \"../../../../structures/LootTable\";\nimport SimpleMonster from \"../../../../structures/SimpleMonster\";\nimport HerbDropTable from \"../../../subtables/HerbDropTable\";\nimport { GemTable } from \"../../../subtables/RareDropTable\";\n\nexport const ArmouredZombieTable = new LootTable({ limit: 128 })\n\t.every(\"Bones\")\n\n\t/* Runes and ammunition */\n\t.add(\"Pure essence\", [20, 50], 12)\n\t.add(\"Adamant arrow\", 12, 8)\n\t.add(\"Blood rune\", [4, 10], 4)\n\t.add(\"Cosmic rune\", [10, 20], 3)\n\t.add(\"Nature rune\", [4, 10], 2)\n\t.add(\"Chaos rune\", [10, 20], 1)\n\t.add(\"Death rune\", [4, 10], 1)\n\n\t/* Herbs */\n\t.add(HerbDropTable, 1, 43)\n\n\t/* Other */\n\t.add(\"Coins\", [50, 400], 31)\n\t.add(\"Oak plank\", 5, 6)\n\t.add(\"Plank\", 10, 5)\n\t.add(\"Adamant mace\", 1, 3)\n\t.add(\"Coins\", [10, 20], 3)\n\t.add(\"Teak plank\", 2, 2)\n\t.add(\"Adamant kiteshield\", 1, 1)\n\t.add(\"Eye of newt\", [2, 6], 1)\n\t.add(\"Fishing bait\", 6, 1)\n\n\t/* Gem drop table */\n\t.add(GemTable, 1, 1)\n\n\t/* Tertiary */\n\t.tertiary(128, \"Clue scroll (hard)\")\n\t.tertiary(800, \"Broken zombie axe\")\n\t.tertiary(5000, \"Zombie champion scroll\");\n\nexport default new SimpleMonster({\n\tid: 12_720,\n\tname: \"Armoured Zombie\",\n\ttable: ArmouredZombieTable,\n\taliases: [\"armoured zombie\"],\n});\n", "import LootTable from \"../../../../structures/LootTable\";\nimport SimpleMonster from \"../../../../structures/SimpleMonster\";\n\nexport const AsynShadeTable = new LootTable().every(\"Asyn remains\");\n\nexport default new SimpleMonster({\n\tid: 1284,\n\tname: \"Asyn Shade\",\n\ttable: AsynShadeTable,\n\taliases: [\"asyn shade\"],\n});\n", "import LootTable from \"../../../../structures/LootTable\";\nimport SimpleMonster from \"../../../../structures/SimpleMonster\";\nimport HerbDropTable from \"../../../subtables/HerbDropTable\";\nimport { GemTable } from \"../../../subtables/RareDropTable\";\n\nconst AviansieTable = new LootTable({ limit: 128 })\n\t.every(\"Bones\")\n\t.every(\"Feather\", [1, 6])\n\n\t/* Runes */\n\t.add(\"Air rune\", 15, 18)\n\t.add(\"Water rune\", 30, 13)\n\t.add(\"Law rune\", 2, 4)\n\t.add(\"Nature rune\", 9, 4)\n\t.add(\"Chaos rune\", 3, 3)\n\t.add(\"Body rune\", 12, 2)\n\t.add(\"Blood rune\", 11, 2)\n\t.add(\"Mind rune\", 5, 1)\n\t.add(\"Chaos rune\", 16, 1)\n\n\t/* Herbs */\n\t.add(HerbDropTable, 1, 15)\n\n\t/* Materials */\n\t.add(\"Adamantite bar\", 4, 30)\n\t.add(\"Silver ore\", 1, 10)\n\t.add(\"Runite limbs\", 1, 1)\n\n\t/* Other */\n\t.add(\"Rune dagger(p+)\", 1, 11)\n\t.add(\"Antipoison(3)\", 5, 5)\n\t.add(\"Swordfish\", 5, 2)\n\n\t/* RDT */\n\t.add(GemTable, 1, 3)\n\n\t/* Tertiary */\n\t.tertiary(35, \"Ensouled aviansie head\")\n\t.tertiary(128, \"Clue scroll (hard)\");\n\nexport default new SimpleMonster({\n\tid: 3169,\n\tname: \"Aviansie\",\n\ttable: AviansieTable,\n\taliases: [\"aviansie\", \"avi\"],\n});\n", "import LootTable from \"../../../../structures/LootTable\";\nimport SimpleMonster from \"../../../../structures/SimpleMonster\";\n\nconst BabyBlackDragon = new LootTable().every(\"Babydragon bones\");\n\nexport default new SimpleMonster({\n\tid: 1871,\n\tname: \"Baby black Dragon\",\n\ttable: BabyBlackDragon,\n\taliases: [\"baby black dragon\", \"baby black drags\"],\n});\n", "import LootTable from \"../../../../structures/LootTable\";\nimport SimpleMonster from \"../../../../structures/SimpleMonster\";\n\nconst BabyBlueDragonTable = new LootTable()\n\t.every(\"Babydragon bones\")\n\n\t/* Tertiary */\n\t.tertiary(100, \"Scaly blue dragonhide\");\n\nexport default new SimpleMonster({\n\tid: 241,\n\tname: \"Baby blue Dragon\",\n\ttable: BabyBlueDragonTable,\n\taliases: [\"baby blue dragon\", \"baby blue drags\"],\n});\n", "import LootTable from \"../../../../structures/LootTable\";\nimport SimpleMonster from \"../../../../structures/SimpleMonster\";\n\nconst BabyGreenDragonTable = new LootTable().every(\"Babydragon bones\");\n\nexport default new SimpleMonster({\n\tid: 5194,\n\tname: \"Baby green Dragon\",\n\ttable: BabyGreenDragonTable,\n\taliases: [\"baby green dragon\", \"baby green drags\"],\n});\n", "import LootTable from \"../../../../structures/LootTable\";\nimport SimpleMonster from \"../../../../structures/SimpleMonster\";\n\nconst BabyRedDragonTable = new LootTable().every(\"Babydragon bones\");\n\nexport default new SimpleMonster({\n\tid: 137,\n\tname: \"Baby red Dragon\",\n\ttable: BabyRedDragonTable,\n\taliases: [\"baby red dragon\", \"baby red drags\"],\n});\n", "import LootTable from \"../../../../structures/LootTable\";\nimport SimpleMonster from \"../../../../structures/SimpleMonster\";\nimport { GemTable } from \"../../../subtables/RareDropTable\";\n\nconst BanditTable = new LootTable({ limit: 128 })\n\t.every(\"Bones\")\n\t.tertiary(128, \"Clue scroll (hard)\")\n\t.add(\"Adamant scimitar\", 1, 4)\n\t.add(\"Mithril sq shield\", 1, 2)\n\t.add(\"Mithril axe\", 1, 1)\n\n\t.add(\"Chaos rune\", 10, 3)\n\t.add(\"Water rune\", 11, 3)\n\t.add(\"Air rune\", 25, 2)\n\t.add(\"Death rune\", 4, 2)\n\t.add(\"Law rune\", 6, 2)\n\t.add(\"Mind rune\", 12, 1)\n\t.add(\"Blood rune\", 6, 1)\n\t.add(\"Nature rune\", 3, 1)\n\t.add(\n\t\tnew LootTable()\n\t\t\t.add(\"Grimy guam leaf\", 1, 8)\n\t\t\t.add(\"Grimy marrentill\", 1, 6)\n\t\t\t.add(\"Grimy tarromin\", 1, 5)\n\t\t\t.add(\"Grimy harralander\", 1, 3)\n\t\t\t.add(\"Grimy ranarr weed\", 1, 3)\n\t\t\t.add(\"Grimy irit leaf\", 1, 2)\n\t\t\t.add(\"Grimy avantoe\", 1, 2)\n\t\t\t.add(\"Grimy kwuarm\", 1, 1)\n\t\t\t.add(\"Grimy cadantine\")\n\t\t\t.add(\"Grimy lantadyme\")\n\t\t\t.add(\"Grimy dwarf weed\"),\n\t\t1,\n\t\t41,\n\t)\n\n\t.add(\"Coins\", 35, 26)\n\t.add(\"Coins\", 120, 13)\n\t.add(\"Coins\", 53, 10)\n\t.add(\"Coins\", 250, 2)\n\t.add(\"Coins\", 10, 1)\n\n\t.add(\"Coal\", 5, 6)\n\t.add(\"Dark fishing bait\", [10, 24], 2)\n\t.add(GemTable, 1, 3);\n\nexport default new SimpleMonster({\n\tid: 6605,\n\tname: \"Bandit\",\n\ttable: BanditTable,\n\taliases: [\"bandit\"],\n});\n", "import LootTable from \"../../../../structures/LootTable\";\nimport SimpleMonster from \"../../../../structures/SimpleMonster\";\nimport HerbDropTable from \"../../../subtables/HerbDropTable\";\nimport { GemTable } from \"../../../subtables/RareDropTable\";\n\nexport const BansheePreTable = new LootTable({ limit: 128 })\n\t.oneIn(512, \"Mystic gloves (dark)\", 1)\n\n\t/* Weapons and armour */\n\t.add(\"Iron mace\", 1, 2)\n\t.add(\"Iron dagger\", 1, 2)\n\t.add(\"Iron kiteshield\", 1, 1)\n\n\t/* Runes and ammunition */\n\t.add(\"Air rune\", 3, 3)\n\t.add(\"Cosmic rune\", 2, 3)\n\t.add(\"Chaos rune\", 3, 2)\n\t.add(\"Fire rune\", 7, 1)\n\t.add(\"Chaos rune\", 7, 1)\n\n\t/* Materials */\n\t.add(\"Pure essence\", 13, 22)\n\t.add(\"Iron ore\", 1, 1)\n\n\t/* Coins */\n\t.add(\"Coins\", 13, 10)\n\t.add(\"Coins\", 26, 8)\n\t.add(\"Coins\", 35, 8)\n\n\t/* Other */\n\t.add(\"Fishing bait\", 15, 22)\n\t.add(\"Fishing bait\", 7, 5)\n\t.add(\"Eye of newt\", 1, 1)\n\n\t/* Subtables */\n\t.add(HerbDropTable, 1, 34)\n\t.add(GemTable, 1, 2);\n\nconst BansheeTable = new LootTable().tertiary(128, \"Clue scroll (easy)\", 1).every(BansheePreTable);\n\nexport default new SimpleMonster({\n\tid: 414,\n\tname: \"Banshee\",\n\ttable: BansheeTable,\n\taliases: [\"banshee\"],\n});\n", "import LootTable from \"../../../../structures/LootTable\";\nimport SimpleMonster from \"../../../../structures/SimpleMonster\";\nimport HerbDropTable from \"../../../subtables/HerbDropTable\";\nimport { GemTable } from \"../../../subtables/RareDropTable\";\n\nexport const BasiliskPreTable = new LootTable()\n\t/* Weapons and armour */\n\t.add(\"Mithril axe\", 1, 3)\n\t.add(\"Steel battleaxe\", 1, 3)\n\t.add(\"Mithril spear\", 1, 2)\n\t.add(\"Adamant full helm\", 1, 1)\n\t.add(\"Mithril kiteshield\", 1, 1)\n\t.add(\"Rune dagger\", 1, 1)\n\t.oneIn(512, \"Mystic hat (light)\")\n\n\t/* Runes */\n\t.add(\"Water rune\", 75, 8)\n\t.add(\"Nature rune\", 15, 5)\n\t.add(\"Law rune\", 3, 3)\n\t.add(\"Nature rune\", 37, 1)\n\n\t/* Herbs */\n\t.add(HerbDropTable, 1, 35)\n\n\t/* Materials */\n\t.add(\"Adamantite ore\", 1, 3)\n\n\t/* Coins */\n\t.add(\"Coins\", 44, 29)\n\t.add(\"Coins\", 200, 17)\n\t.add(\"Coins\", 132, 5)\n\t.add(\"Coins\", 11, 5)\n\t.add(\"Coins\", 440, 1)\n\n\t/* RDT */\n\t.add(GemTable, 1, 5);\n\nconst BasiliskTable = new LootTable()\n\t.every(\"Bones\")\n\t.every(BasiliskPreTable)\n\n\t/* Tertiary */\n\t.tertiary(2000, \"Basilisk head\");\n\nexport default new SimpleMonster({\n\tid: 417,\n\tname: \"Basilisk\",\n\ttable: BasiliskTable,\n\taliases: [\"basilisk\", \"basi\"],\n});\n", "import LootTable from \"../../../../structures/LootTable\";\nimport SimpleMonster from \"../../../../structures/SimpleMonster\";\nimport { GemTable } from \"../../../subtables/RareDropTable\";\nimport UsefulHerbTable from \"../../../subtables/UsefulHerbTable\";\n\nexport const BasiliskKnightPreTable = new LootTable({ limit: 52 })\n\t/* Weapons and armour */\n\t.add(\"Rune axe\", 1, 2)\n\t.add(\"Adamant platelegs\", 1, 1)\n\t.add(\"Adamant kiteshield\", 1, 1)\n\t.add(\"Rune battleaxe\", 1, 1)\n\t.add(\"Rune dagger\", 1, 1)\n\t.add(\"Rune scimitar\", 1, 1)\n\t.add(\"Rune spear\", 1, 1)\n\t.add(\"Rune med helm\", 1, 1)\n\n\t/* Runes and ammunition */\n\t.add(\"Astral rune\", [15, 35], 6)\n\t.add(\"Nature rune\", [15, 30], 6)\n\t.add(\"Law rune\", [20, 30], 6)\n\t.add(\"Death rune\", [10, 25], 3)\n\t.add(\"Blood rune\", [8, 20], 3)\n\n\t/* Herbs */\n\t.add(UsefulHerbTable, 1, 3)\n\n\t/* Other */\n\t.add(\"Coins\", [500, 2498], 7)\n\t.add(\"Adamantite ore\", [1, 2], 1)\n\n\t/* RDT */\n\t.add(GemTable, 1, 8);\n\nconst BasiliskKnightTable = new LootTable()\n\t.every(\"Big bones\")\n\t.every(BasiliskKnightPreTable)\n\n\t/* Tertiary */\n\t.tertiary(192, \"Clue scroll (hard)\")\n\t.tertiary(256, \"Mystic hat (light)\")\n\t.tertiary(400, \"Long bone\")\n\t.tertiary(1000, \"Basilisk head\")\n\t.tertiary(5000, \"Basilisk jaw\")\n\t.tertiary(5013, \"Curved bone\");\n\nconst BasiliskKnightOnTaskTable = new LootTable()\n\t.every(\"Big bones\")\n\t.every(BasiliskKnightPreTable)\n\n\t/* Tertiary */\n\t.tertiary(192, \"Clue scroll (hard)\")\n\t.tertiary(256, \"Mystic hat (light)\")\n\t.tertiary(400, \"Long bone\")\n\t.tertiary(1000, \"Basilisk head\")\n\t.tertiary(1000, \"Basilisk jaw\")\n\t.tertiary(5013, \"Curved bone\");\n\nexport default new SimpleMonster({\n\tid: 9293,\n\tname: \"Basilisk Knight\",\n\ttable: BasiliskKnightTable,\n\tonTaskTable: BasiliskKnightOnTaskTable,\n\taliases: [\"basilisk knight\", \"bas knight\"],\n});\n", "import LootTable from \"../../../../structures/LootTable\";\nimport SimpleMonster from \"../../../../structures/SimpleMonster\";\n\nexport const BatTable = new LootTable().every(\"Bat bones\");\nexport default new SimpleMonster({\n\tid: 2827,\n\tname: \"Bat\",\n\ttable: BatTable,\n\taliases: [\"bat\"],\n});\n", "import LootTable from \"../../../../structures/LootTable\";\nimport SimpleMonster from \"../../../../structures/SimpleMonster\";\n\nexport const BearCubTable = new LootTable()\n\t.every(\"Bones\")\n\t.every(\"Bear fur\")\n\t.every(\"Raw bear meat\")\n\n\t/* Tertiary */\n\t.tertiary(25, \"Ensouled bear head\", 1)\n\t.tertiary(90, \"Clue scroll (beginner)\", 1);\n\nexport default new SimpleMonster({\n\tid: 3909,\n\tname: \"Bear cub\",\n\ttable: BearCubTable,\n\taliases: [\"bear cub\"],\n});\n", "import LootTable from \"../../../../structures/LootTable\";\nimport SimpleMonster from \"../../../../structures/SimpleMonster\";\n\nexport default new SimpleMonster({\n\tid: 736,\n\tname: \"Bearded Pollnivnian Bandit\",\n\ttable: new LootTable({ limit: 5 }).every(\"Bones\").add(\"Coins\", [10, 300]),\n\tpickpocketTable: new LootTable().add(\"Coins\", 40).tertiary(257_211, \"Rocky\"),\n\taliases: [\"bearded pollnivnian bandit\", \"pollnivnian bandit\", \"bearded bandit\"],\n});\n", "import LootTable from \"../../../../structures/LootTable\";\nimport SimpleMonster from \"../../../../structures/SimpleMonster\";\n\nexport const BigWolfTable = new LootTable().every(\"Wolf bones\");\n\nexport default new SimpleMonster({\n\tid: 115,\n\tname: \"Big Wolf\",\n\ttable: BigWolfTable,\n\taliases: [\"big wolf\"],\n});\n", "import LootTable from \"../../../../structures/LootTable\";\nimport SimpleMonster from \"../../../../structures/SimpleMonster\";\n\nexport const BirdTable = new LootTable();\n\nexport default new SimpleMonster({\n\tid: 5240,\n\tname: \"Bird\",\n\ttable: BirdTable,\n\taliases: [\"bird\"],\n});\n", "import LootTable from \"../../../../structures/LootTable\";\nimport SimpleMonster from \"../../../../structures/SimpleMonster\";\n\nexport const BlackBearTable = new LootTable()\n\t.every(\"Bones\")\n\t.every(\"Bear fur\")\n\t.every(\"Raw bear meat\")\n\n\t/* Tertiary */\n\t.tertiary(25, \"Ensouled bear head\", 1)\n\t.tertiary(90, \"Clue scroll (beginner)\", 1);\n\nexport default new SimpleMonster({\n\tid: 2839,\n\tname: \"Black bear\",\n\ttable: BlackBearTable,\n\taliases: [\"bear\", \"black bear\", \"bears\"],\n});\n", "import LootTable from \"../../../../structures/LootTable\";\nimport SimpleMonster from \"../../../../structures/SimpleMonster\";\nimport HerbDropTable from \"../../../subtables/HerbDropTable\";\nimport RareDropTable, { GemTable } from \"../../../subtables/RareDropTable\";\n\nconst WildySlayerCaveTable = new LootTable()\n\t.add(\"Blighted entangle sack\", [1, 10], 8200)\n\t.add(\"Blighted anglerfish\", [1, 2], 6150)\n\t.add(\"Blighted manta ray\", [1, 2], 6150)\n\t.add(\"Blighted karambwan\", [1, 2], 4100)\n\t.add(\"Blighted teleport spell sack\", [1, 10], 4100)\n\t.add(\"Blighted ancient ice sack\", [1, 10], 4100)\n\t.add(\"Blighted vengeance sack\", [1, 10], 4100)\n\t.add(\"Blighted super restore(4)\", 1, 2050)\n\t.add(\"Revenant cave teleport\", 1, 2050)\n\t.add(\"Dareeyak teleport\", 1, 410)\n\t.add(\"Wilderness crabs teleport\", 1, 410)\n\t.add(\"Carrallanger teleport\", 1, 410)\n\t.add(\"Paddewwa teleport\", 1, 410)\n\t.add(\"Annakarl teleport\", 1, 410)\n\t.add(\"Lassar teleport\", 1, 410)\n\t.add(\"Kharyrll teleport\", 1, 410)\n\t.add(\"Senntisten teleport\", 1, 410)\n\t.add(\"Ghorrock teleport\", 1, 410)\n\t.add(\"Target teleport\", 1, 410)\n\t.add(\"Magic shortbow scroll\", 1, 164)\n\t.add(\"Ring of wealth scroll\", 1, 164)\n\t.add(\"Trouver parchment\", 2, 41)\n\t.add(\"Looting bag note\", 1, 41);\n\nconst BlackDemonTable = new LootTable()\n\t.every(\"Malicious ashes\")\n\n\t/* Weapons and armour */\n\t.add(\"Black sword\", 1, 4)\n\t.add(\"Steel battleaxe\", 1, 3)\n\t.add(\"Black axe\", 1, 2)\n\t.add(\"Mithril kiteshield\", 1, 1)\n\t.add(\"Rune med helm\", 1, 1)\n\t.add(\"Rune chainbody\", 1, 1)\n\n\t/* Runes and ammunition */\n\t.add(\"Air rune\", 50, 8)\n\t.add(\"Chaos rune\", 10, 7)\n\t.add(\"Blood rune\", 7, 4)\n\t.add(\"Fire rune\", 37, 1)\n\t.add(\"Law rune\", 3, 1)\n\n\t/* Herbs */\n\t.add(HerbDropTable, 1, 23)\n\n\t/* Coins */\n\t.add(\"Coins\", 132, 40)\n\t.add(\"Coins\", 30, 7)\n\t.add(\"Coins\", 44, 6)\n\t.add(\"Coins\", 220, 6)\n\t.add(\"Coins\", 460, 1)\n\n\t/* Other */\n\t.add(\"Lobster\", 1, 3)\n\t.add(\"Adamantite bar\", 1, 2)\n\t.add(\"Defence potion(3)\", 1, 1)\n\n\t/* RDT */\n\t.add(RareDropTable, 1, 1)\n\t.add(GemTable, 1, 5)\n\n\t/* Tertiary */\n\t.tertiary(35, \"Ensouled demon head\")\n\t.tertiary(128, \"Clue scroll (hard)\");\n\nconst BlackDemonWildyCaveTable = new LootTable()\n\t.every(BlackDemonTable)\n\t.add(WildySlayerCaveTable, 1, 91)\n\t.add(new LootTable(), 1, 9);\n\nexport default new SimpleMonster({\n\tid: 240,\n\tname: \"Black Demon\",\n\ttable: BlackDemonTable,\n\twildyCaveTable: BlackDemonWildyCaveTable,\n\taliases: [\"black demon\"],\n});\n", "import LootTable from \"../../../../structures/LootTable\";\nimport SimpleMonster from \"../../../../structures/SimpleMonster\";\nimport RareDropTable, { GemTable } from \"../../../subtables/RareDropTable\";\n\nconst WildySlayerCaveTable = new LootTable()\n\t.add(\"Blighted entangle sack\", [1, 10], 8200)\n\t.add(\"Blighted anglerfish\", [1, 2], 6150)\n\t.add(\"Blighted manta ray\", [1, 2], 6150)\n\t.add(\"Blighted karambwan\", [1, 2], 4100)\n\t.add(\"Blighted teleport spell sack\", [1, 10], 4100)\n\t.add(\"Blighted ancient ice sack\", [1, 10], 4100)\n\t.add(\"Blighted vengeance sack\", [1, 10], 4100)\n\t.add(\"Blighted super restore(4)\", 1, 2050)\n\t.add(\"Revenant cave teleport\", 1, 2050)\n\t.add(\"Dareeyak teleport\", 1, 410)\n\t.add(\"Wilderness crabs teleport\", 1, 410)\n\t.add(\"Carrallanger teleport\", 1, 410)\n\t.add(\"Paddewwa teleport\", 1, 410)\n\t.add(\"Annakarl teleport\", 1, 410)\n\t.add(\"Lassar teleport\", 1, 410)\n\t.add(\"Kharyrll teleport\", 1, 410)\n\t.add(\"Senntisten teleport\", 1, 410)\n\t.add(\"Ghorrock teleport\", 1, 410)\n\t.add(\"Target teleport\", 1, 410)\n\t.add(\"Magic shortbow scroll\", 1, 164)\n\t.add(\"Ring of wealth scroll\", 1, 164)\n\t.add(\"Trouver parchment\", 2, 41)\n\t.add(\"Looting bag note\", 1, 41);\n\nconst BlackDragonTable = new LootTable()\n\t.every(\"Dragon bones\")\n\t.every(\"Black dragonhide\")\n\n\t/* Weapons and armour */\n\t.add(\"Mithril 2h sword\", 1, 4)\n\t.add(\"Mithril axe\", 1, 3)\n\t.add(\"Mithril battleaxe\", 1, 3)\n\t.add(\"Rune knife\", 2, 3)\n\t.add(\"Mithril kiteshield\", 1, 1)\n\t.add(\"Adamant platebody\", 1, 1)\n\t.add(\"Rune longsword\", 1, 1)\n\n\t/* Runes and ammunition */\n\t.add(\"Adamant javelin\", 30, 20)\n\t.add(\"Fire rune\", 50, 8)\n\t.add(\"Adamant dart(p)\", 16, 7)\n\t.add(\"Law rune\", 10, 5)\n\t.add(\"Blood rune\", 15, 3)\n\t.add(\"Air rune\", 75, 1)\n\n\t/* Coins */\n\t.add(\"Coins\", 196, 40)\n\t.add(\"Coins\", 330, 10)\n\t.add(\"Coins\", 690, 1)\n\n\t/* Other */\n\t.add(\"Dragon javelin heads\", 10, 6)\n\t.add(\"Adamantite bar\", 1, 3)\n\t.add(\"Chocolate cake\", 1, 3)\n\n\t/* RDT */\n\t.add(RareDropTable, 1, 2)\n\t.add(GemTable, 1, 3)\n\n\t/* Tertiary */\n\t.tertiary(35, \"Ensouled dragon head\")\n\t.tertiary(128, \"Clue scroll (hard)\")\n\t.tertiary(500, \"Clue scroll (elite)\")\n\t.tertiary(10_000, \"Draconic visage\");\n\nconst BlackDragonWildyCaveTable = new LootTable()\n\t.every(BlackDragonTable)\n\t.add(WildySlayerCaveTable, 1, 91)\n\t.add(new LootTable(), 1, 9);\n\nexport default new SimpleMonster({\n\tid: 252,\n\tname: \"Black Dragon\",\n\ttable: BlackDragonTable,\n\twildyCaveTable: BlackDragonWildyCaveTable,\n\taliases: [\"black dragon\", \"black drags\"],\n});\n", "import LootTable from \"../../../../structures/LootTable\";\nimport SimpleMonster from \"../../../../structures/SimpleMonster\";\nimport { GemTable } from \"../../../subtables/RareDropTable\";\n\nexport const BlackGuardTable = new LootTable()\n\t.every(\"Bones\")\n\t.tertiary(128, \"Clue scroll (medium)\")\n\t// TODO: Check over the drop rates in future.\n\t/* Weapons and Armour*/\n\t.add(\"Bronze med helm\", 1, 11)\n\t.add(\"Bronze battleaxe\", 1, 4)\n\t.add(\"Bronze bolts\", 6, 4)\n\t.add(\"Bronze warhammer\", 1, 4)\n\t.add(\"Bronze pickaxe\", 1, 4)\n\t.add(\"Iron battleaxe\", 1, 3)\n\t.add(\"Black warhammer\", 1, 2)\n\n\t/* Runes*/\n\t.add(\"Chaos rune\", 2, 4)\n\t.add(\"Nature rune\", 2, 4)\n\n\t/* Materials */\n\t.add(\"Coal\", 1, 2)\n\t.add(\"Copper ore\", 1, 3)\n\t.add(\"Bronze bar\", 1, 4)\n\t.add(\"Iron bar\", 1, 3)\n\n\t/* Other */\n\t.add(\"Coins\", [4, 42], 22)\n\t.add(\"Hammer\", 1, 8)\n\t.add(\"Keg of beer\", 1, 2)\n\t.add(\"Bucket of water\", 1, 4)\n\t.add(\"Ring mould\", 1, 4)\n\t/* Gem drop table */\n\t.add(GemTable);\n\nexport default new SimpleMonster({\n\tid: 6046,\n\tname: \"Black Guard\",\n\ttable: BlackGuardTable,\n\taliases: [\"black guard\"],\n});\n", "import LootTable from \"../../../../structures/LootTable\";\nimport SimpleMonster from \"../../../../structures/SimpleMonster\";\nimport HerbDropTable from \"../../../subtables/HerbDropTable\";\nimport { GemTable } from \"../../../subtables/RareDropTable\";\n\nexport const BlackKnightTable = new LootTable({ limit: 128 })\n\t.every(\"Bones\")\n\n\t/* Weapons and armour */\n\t.add(\"Iron sword\", 1, 4)\n\t.add(\"Iron full helm\", 1, 2)\n\t.add(\"Steel mace\", 1, 1)\n\n\t/* Runes */\n\t.add(\"Mithril arrow\", 3, 4)\n\t.add(\"Body rune\", 9, 3)\n\t.add(\"Chaos rune\", 6, 3)\n\t.add(\"Earth rune\", 10, 3)\n\t.add(\"Death rune\", 2, 2)\n\t.add(\"Law rune\", 3, 2)\n\t.add(\"Cosmic rune\", 7, 1)\n\t.add(\"Mind rune\", 2, 1)\n\n\t/* Herbs */\n\t.add(HerbDropTable, 1, 3)\n\n\t/* Materials */\n\t.add(\"Steel bar\", 1, 6)\n\t.add(\"Tin ore\", 1, 1)\n\t.add(\"Steel bar\", 1, 1)\n\n\t/* Coins */\n\t.add(\"Coins\", 35, 21)\n\t.add(\"Coins\", 6, 11)\n\t.add(\"Coins\", 58, 10)\n\t.add(\"Coins\", 12, 9)\n\t.add(\"Coins\", 80, 2)\n\t.add(\"Coins\", 1, 1)\n\t.add(\"Coins\", 13, 1)\n\n\t/* Other */\n\t.add(\"Bread\", 1, 1)\n\n\t/* Gem drop table */\n\t.add(GemTable, 1, 3);\n\nexport default new SimpleMonster({\n\tid: 516,\n\tname: \"Black Knight\",\n\ttable: BlackKnightTable,\n\taliases: [\"black knight\"],\n});\n", "import LootTable from \"../../../../structures/LootTable\";\nimport SimpleMonster from \"../../../../structures/SimpleMonster\";\nimport { GemTable } from \"../../../subtables/RareDropTable\";\n\nconst HerbTable = new LootTable()\n\t.add(\"Grimy avantoe\", 1, 5)\n\t.add(\"Grimy ranarr weed\", 1, 4)\n\t.add(\"Grimy snapdragon\", 1, 4)\n\t.add(\"Grimy torstol\", 1, 3);\n\nconst BloodReaverTable = new LootTable()\n\t.every(\"Malicious ashes\")\n\n\t/* Ancient ceremonial robes */\n\t.add(\"Ancient ceremonial mask\", 1, 1)\n\t.add(\"Ancient ceremonial top\", 1, 1)\n\t.add(\"Ancient ceremonial legs\", 1, 1)\n\t.add(\"Ancient ceremonial gloves\", 1, 1)\n\t.add(\"Ancient ceremonial boots\", 1, 1)\n\n\t/* Runes */\n\t.add(\"Astral rune\", 25, 75)\n\t.add(\"Air rune\", 250, 35)\n\t.add(\"Mud rune\", 15, 35)\n\t.add(\"Mind rune\", 20, 20)\n\t.add(\"Nature rune\", 15, 20)\n\t.add(\"Chaos rune\", 15, 15)\n\t.add(\"Air rune\", 150, 10)\n\t.add(\"Blood rune\", 15, 10)\n\n\t/* Herbs */\n\t.add(HerbTable, 1, 50)\n\n\t/* Coins */\n\t.add(\"Coins\", 500, 45)\n\t.add(\"Coins\", [1300, 1337], 30)\n\t.add(\"Coins\", 1, 10)\n\n\t/* Potions */\n\t.add(\"Magic potion(1)\", 1, 55)\n\t.add(\"Prayer potion(2)\", 1, 45)\n\t.add(\"Super defence(1)\", 1, 10)\n\n\t/* Other */\n\t.add(\"Adamantite bar\", [1, 4], 40)\n\t.add(\"Coal\", [1, 10], 40)\n\t.add(\"Pure essence\", 23, 40)\n\t.add(\"Potato cactus\", 1, 35)\n\t.add(\"Blood essence\", 1, 5)\n\t.add(\"Nihil shard\", [2, 7], 5)\n\n\t/* RDT */\n\t.add(GemTable, 1, 5)\n\n\t/* Tertiary */\n\t.tertiary(112, \"Clue scroll (hard)\");\n\nexport default new SimpleMonster({\n\tid: 11_293,\n\tname: \"Blood Reaver\",\n\ttable: BloodReaverTable,\n\taliases: [\"blood reaver\"],\n});\n", "import LootTable from \"../../../../structures/LootTable\";\nimport SimpleMonster from \"../../../../structures/SimpleMonster\";\nimport { itemTupleToTable } from \"../../../../util\";\nimport HerbDropTable from \"../../../subtables/HerbDropTable\";\nimport { GemTable } from \"../../../subtables/RareDropTable\";\n\nexport const BloodveldPreTable = new LootTable()\n\t/* Weapons and armour */\n\t.add(\"Steel axe\", 1, 4)\n\t.add(\"Steel full helm\", 1, 4)\n\t.add(\"Steel scimitar\", 1, 2)\n\t.add(\"Black boots\", 1, 1)\n\t.add(\"Mithril sq shield\", 1, 1)\n\t.add(\"Mithril chainbody\", 1, 1)\n\t.add(\"Rune med helm\", 1, 1)\n\n\t/* Runes and ammunition */\n\t.add(\"Fire rune\", 60, 8)\n\t.add(\"Blood rune\", 10, 5)\n\t.add(\"Blood rune\", 3, 3)\n\t.add(\"Blood rune\", 30, 1)\n\n\t/* Herbs */\n\t.add(HerbDropTable, 1, 1)\n\n\t/* Coins */\n\t.add(\"Coins\", 120, 30)\n\t.add(\"Coins\", 40, 29)\n\t.add(\"Coins\", 200, 10)\n\t.add(\"Coins\", 10, 7)\n\t.add(\"Coins\", 450, 1)\n\n\t/* Other */\n\t.add(\n\t\titemTupleToTable([\n\t\t\t[\"Big bones\", 1],\n\t\t\t[\"Bones\", 1],\n\t\t]),\n\t\t1,\n\t\t7,\n\t)\n\t.add(\n\t\titemTupleToTable([\n\t\t\t[\"Big bones\", 3],\n\t\t\t[\"Bones\", 1],\n\t\t]),\n\t\t1,\n\t\t3,\n\t)\n\t.add(\"Meat pizza\", 1, 3)\n\t.add(\"Gold ore\", 1, 2)\n\n\t/* RDT */\n\t.add(GemTable, 1, 4);\n\nconst BloodveldTable = new LootTable()\n\t.every(\"Vile ashes\")\n\t.every(BloodveldPreTable)\n\n\t/* Tertiary */\n\t.tertiary(256, \"Clue scroll (hard)\")\n\t.tertiary(35, \"Ensouled bloodveld head\");\n\nexport default new SimpleMonster({\n\tid: 484,\n\tname: \"Bloodveld\",\n\ttable: BloodveldTable,\n\taliases: [\"bloodveld\", \"veld\", \"velds\", \"thicc boi jr\"],\n});\n", "import LootTable from \"../../../../structures/LootTable\";\nimport SimpleMonster from \"../../../../structures/SimpleMonster\";\nimport HerbDropTable from \"../../../subtables/HerbDropTable\";\nimport { GemTable } from \"../../../subtables/RareDropTable\";\n\nconst BlueDragonTable = new LootTable()\n\t.every(\"Dragon bones\")\n\t.every(\"Blue dragonhide\")\n\n\t/* Weapons and armour */\n\t.add(\"Steel platelegs\", 1, 4)\n\t.add(\"Mithril axe\", 1, 3)\n\t.add(\"Steel battleaxe\", 1, 3)\n\t.add(\"Mithril spear\", 1, 2)\n\t.add(\"Adamant full helm\", 1, 1)\n\t.add(\"Mithril kiteshield\", 1, 1)\n\t.add(\"Rune dagger\", 1, 1)\n\n\t/* Runes*/\n\t.add(\"Water rune\", 75, 8)\n\t.add(\"Nature rune\", 15, 5)\n\t.add(\"Law rune\", 3, 3)\n\t.add(\"Fire rune\", 37, 1)\n\n\t/* Herbs */\n\t.add(HerbDropTable, 1, 15)\n\n\t/* Coins */\n\t.add(\"Coins\", 44, 29)\n\t.add(\"Coins\", 132, 25)\n\t.add(\"Coins\", 200, 10)\n\t.add(\"Coins\", 11, 5)\n\t.add(\"Coins\", 440, 1)\n\n\t/* Other */\n\t.add(\"Adamantite ore\", 1, 3)\n\t.add(\"Bass\", 1, 3)\n\n\t/* RDT */\n\t.add(GemTable, 1, 5)\n\n\t/* Tertiary */\n\t.tertiary(50, \"Ensouled dragon head\")\n\t.tertiary(50, \"Scaly blue dragonhide\")\n\t.tertiary(128, \"Clue scroll (hard)\");\n\nexport default new SimpleMonster({\n\tid: 265,\n\tname: \"Blue Dragon\",\n\ttable: BlueDragonTable,\n\taliases: [\"blue dragon\", \"blue drags\"],\n});\n", "import LootTable from \"../../../../structures/LootTable\";\nimport SimpleMonster from \"../../../../structures/SimpleMonster\";\n\nconst BrineRatTable = new LootTable({ limit: 128 })\n\t.every(\"Bones\")\n\t.every(\"Raw rat meat\")\n\n\t/* Weapons */\n\t.oneIn(512, \"Brine sabre\")\n\n\t/* Runes */\n\t.add(\"Death rune\", 7, 18)\n\t.add(\"Earth rune\", 10, 6)\n\t.add(\"Earth rune\", 36, 4)\n\t.add(\"Water rune\", 10, 3)\n\t.add(\"Air rune\", 18, 2)\n\t.add(\"Earth rune\", 18, 2)\n\t.add(\"Water rune\", 18, 2)\n\t.add(\"Blood rune\", 4, 2)\n\n\t/* Materials */\n\t.add(\"Raw lobster\", 10, 6)\n\t.add(\"Raw shark\", 3, 6)\n\t.add(\"Raw rat meat\", 18, 2)\n\t.add(\"Raw pike\", 18, 2)\n\t.add(\"Raw shark\", 8, 2)\n\t.add(\"Raw swordfish\", 9, 2)\n\t.add(\"Raw shark\", 1, 1)\n\n\t/* Coins */\n\t.add(\"Coins\", 1, 21)\n\t.add(\"Coins\", 2, 16)\n\t.add(\"Coins\", 4, 9)\n\t.add(\"Coins\", 29, 3)\n\n\t/* Other */\n\t.add(\"Water talisman\", 1, 3)\n\n\t/* Tertiary */\n\t.tertiary(128, \"Clue scroll (medium)\");\n\nexport default new SimpleMonster({\n\tid: 4501,\n\tname: \"Brine Rat\",\n\ttable: BrineRatTable,\n\taliases: [\"brine rat\", \"brine\"],\n});\n", "import LootTable from \"../../../../structures/LootTable\";\nimport SimpleMonster from \"../../../../structures/SimpleMonster\";\nimport RareDropTable, { GemTable } from \"../../../subtables/RareDropTable\";\n\nconst BronzeDragonTable = new LootTable()\n\t.every(\"Dragon bones\")\n\t.every(\"Bronze bar\", 5)\n\n\t/* Pre-roll */\n\t.oneIn(2048, \"Dragon plateskirt\")\n\t.oneIn(2048, \"Dragon platelegs\")\n\n\t/* Weapons and armour */\n\t.add(\"Adamant dart(p)\", 1, 7)\n\t.add(\"Mithril 2h sword\", 1, 4)\n\t.add(\"Mithril axe\", 1, 3)\n\t.add(\"Mithril battleaxe\", 1, 3)\n\t.add(\"Rune knife\", 1, 3)\n\t.add(\"Mithril kiteshield\", 1, 1)\n\t.add(\"Adamant platebody\", 1, 1)\n\t.add(\"Rune longsword\", 1, 1)\n\n\t/* Runes and ammunition */\n\t.add(\"Adamant javelin\", 20, 20)\n\t.add(\"Fire rune\", 50, 8)\n\t.add(\"Mithril bolts\", [2, 12], 6)\n\t.add(\"Law rune\", 10, 5)\n\t.add(\"Blood rune\", 15, 3)\n\t.add(\"Death rune\", 25, 1)\n\n\t/* Coins */\n\t.add(\"Coins\", 196, 40)\n\t.add(\"Coins\", 330, 10)\n\t.add(\"Coins\", 690, 1)\n\n\t/* Other */\n\t.add(\"Adamantite bar\", 1, 3)\n\t.add(\"Swordfish\", 2, 2)\n\t.add(\"Swordfish\", 1, 1)\n\n\t/* Rare and Gem drop table, slightly adjusted */\n\t.add(RareDropTable, 1, 1)\n\t.add(GemTable, 1, 4)\n\n\t/* Tertiary */\n\t.tertiary(128, \"Clue scroll (hard)\");\n\nexport default new SimpleMonster({\n\tid: 270,\n\tname: \"Bronze Dragon\",\n\ttable: BronzeDragonTable,\n\taliases: [\"bronze dragon\"],\n});\n", "import LootTable from \"../../../../structures/LootTable\";\nimport SimpleMonster from \"../../../../structures/SimpleMonster\";\nimport RareDropTable, { GemTable } from \"../../../subtables/RareDropTable\";\n\nconst UniqueTable = new LootTable()\n\t.add(\"Dragon platelegs\")\n\t.add(\"Dragon plateskirt\")\n\t.add(\"Dragon spear\")\n\t.add(\"Uncut dragonstone\");\n\nconst BrutalBlackDragonTable = new LootTable()\n\t.every(\"Dragon bones\")\n\t.every(\"Black dragonhide\", 2)\n\n\t/* Unique */\n\t.add(UniqueTable, 1, 1)\n\n\t/* Weapons and armour */\n\t.add(\"Rune hasta\", 1, 10)\n\t.add(\"Rune platelegs\", 1, 7)\n\t.add(\"Rune full helm\", 2, 6)\n\t.add(\"Rune dart\", 20, 5)\n\t.add(\"Rune longsword\", 1, 5)\n\t.add(\"Black d'hide body\", 1, 2)\n\t.add(\"Rune knife\", 25, 2)\n\t.add(\"Rune thrownaxe\", 30, 2)\n\t.add(\"Black d'hide vambraces\", 1, 1)\n\t.add(\"Rune platebody\", 1, 1)\n\t.add(\"Dragon med helm\", 1, 1)\n\t.add(\"Dragon longsword\", 1, 1)\n\t.add(\"Dragon dagger\", 1, 1)\n\n\t/* Runes and ammunition */\n\t.add(\"Rune javelin\", 50, 8)\n\t.add(\"Blood rune\", 50, 8)\n\t.add(\"Soul rune\", 50, 8)\n\t.add(\"Death rune\", 75, 7)\n\t.add(\"Law rune\", 75, 7)\n\t.add(\"Rune arrow\", 75, 7)\n\n\t/* Materials */\n\t.add(\"Lava scale\", 5, 4)\n\t.add(\"Dragon dart tip\", 40, 3)\n\t.add(\"Runite ore\", 3, 2)\n\t.add(\"Dragon arrowtips\", 40, 2)\n\t.add(\"Dragon javelin heads\", 40, 1)\n\n\t/* Coins */\n\t.add(\"Coins\", 370, 11)\n\t.add(\"Coins\", 2200, 2)\n\t.add(\"Coins\", [540, 929], 1)\n\n\t/* Other */\n\t.add(\"Anglerfish\", 2, 8)\n\n\t/* Rare and Gem drop table */\n\t.add(RareDropTable, 1, 2)\n\t.add(GemTable, 1, 3)\n\n\t/* Tertiary */\n\t.tertiary(20, \"Ensouled dragon head\")\n\t.tertiary(128, \"Clue scroll (hard)\")\n\t.tertiary(250, \"Clue scroll (elite)\")\n\t.tertiary(10_000, \"Draconic visage\");\n\nexport default new SimpleMonster({\n\tid: 7275,\n\tname: \"Brutal black Dragon\",\n\ttable: BrutalBlackDragonTable,\n\taliases: [\"brutal black dragon\", \"bbds\", \"bbd\", \"brutal blacks\", \"brutal black\"],\n});\n", "import LootTable from \"../../../../structures/LootTable\";\nimport SimpleMonster from \"../../../../structures/SimpleMonster\";\nimport RareDropTable, { GemTable } from \"../../../subtables/RareDropTable\";\n\nconst BrutalBlueDragonTable = new LootTable()\n\t.every(\"Dragon bones\")\n\t.every(\"Blue dragonhide\", 2)\n\n\t/* Weapons and armour */\n\t.add(\"Adamant hasta\", 1, 10)\n\t.add(\"Adamant platelegs\", 1, 7)\n\t.add(\"Mithril full helm\", 1, 5)\n\t.add(\"Rune longsword\", 1, 5)\n\t.add(\"Blue d'hide body\", 1, 2)\n\t.add(\"Blue d'hide vambraces\", 1, 1)\n\t.add(\"Dragon dagger\", 1, 1)\n\t.add(\"Dragon longsword\", 1, 1)\n\t.add(\"Dragon med helm\", 1, 1)\n\t.add(\"Rune full helm\", 1, 1)\n\t.add(\"Rune platebody\", 1, 1)\n\n\t/* Runes and ammunition */\n\t.add(\"Chaos rune\", 18, 8)\n\t.add(\"Death rune\", 11, 8)\n\t.add(\"Rune javelin\", 20, 8)\n\t.add(\"Air rune\", 50, 7)\n\t.add(\"Law rune\", 15, 7)\n\t.add(\"Rune arrow\", 15, 7)\n\t.add(\"Adamant dart\", 10, 5)\n\t.add(\"Rune knife\", 5, 2)\n\t.add(\"Rune thrownaxe\", 10, 2)\n\n\t/* Materials */\n\t.add(\"Blue dragon scale\", 5, 4)\n\t.add(\"Dragon dart tip\", 5, 3)\n\t.add(\"Dragon arrowtips\", 5, 2)\n\t.add(\"Runite ore\", 1, 2)\n\t.add(\"Dragon javelin heads\", 12, 1)\n\n\t/* Other */\n\t.add(\"Coins\", 370, 11)\n\t.add(\"Curry\", 2, 8)\n\t.add(\"Coins\", 621, 1)\n\n\t/* Other */\n\t.add(\"Adamantite ore\", 1, 3)\n\t.add(\"Bass\", 1, 3)\n\n\t/* Rare and Gem drop table, slightly adjusted */\n\t.add(RareDropTable, 1, 2)\n\t.add(GemTable, 1, 3)\n\n\t/* Tertiary */\n\t.tertiary(20, \"Ensouled dragon head\")\n\t.tertiary(33, \"Scaly blue dragonhide\")\n\t.tertiary(128, \"Clue scroll (hard)\")\n\t.tertiary(750, \"Clue scroll (elite)\")\n\t.tertiary(10_000, \"Draconic visage\");\n\nexport default new SimpleMonster({\n\tid: 7273,\n\tname: \"Brutal blue Dragon\",\n\ttable: BrutalBlueDragonTable,\n\taliases: [\"brutal blue dragon\", \"brutal blues\", \"brutal blue\"],\n});\n", "import LootTable from \"../../../../structures/LootTable\";\nimport SimpleMonster from \"../../../../structures/SimpleMonster\";\nimport HerbDropTable from \"../../../subtables/HerbDropTable\";\nimport RareDropTable, { GemTable } from \"../../../subtables/RareDropTable\";\n\nconst BrutalGreenDragonTable = new LootTable()\n\t.every(\"Dragon bones\")\n\t.every(\"Green dragonhide\", 2)\n\n\t/* Weapons and armour */\n\t.add(\"Adamant dart(p)\", 25, 5)\n\t.add(\"Adamant 2h sword\", 1, 4)\n\t.add(\"Mithril hasta\", 1, 3)\n\t.add(\"Adamant knife\", 8, 3)\n\t.add(\"Adamant med helm\", 1, 3)\n\t.add(\"Rune thrownaxe\", 8, 3)\n\t.add(\"Adamant spear\", 1, 2)\n\t.add(\"Adamant chainbody\", 1, 1)\n\t.add(\"Adamant kiteshield\", 1, 1)\n\t.add(\"Adamant platelegs\", 1, 1)\n\t.add(\"Rune full helm\", 1, 1)\n\t.add(\"Rune chainbody\", 1, 1)\n\n\t/* Runes and ammunition */\n\t.add(\"Blood rune\", 20, 29)\n\t.add(\"Lava rune\", 35, 8)\n\t.add(\"Steam rune\", 37, 6)\n\t.add(\"Nature rune\", 17, 5)\n\t.add(\"Law rune\", 15, 3)\n\t.add(\"Adamant arrow\", 8, 3)\n\n\t/* Herbs */\n\t.add(HerbDropTable, 1, 15)\n\n\t/* Materials */\n\t.add(\"Dragon javelin heads\", 12, 10)\n\t.add(\"Mithril ore\", 5, 3)\n\n\t/* Other */\n\t.add(\"Coins\", 242, 11)\n\t.add(\"Coins\", 621, 10)\n\n\t/* Other */\n\t.add(\"Curry\", [1, 2], 2)\n\n\t/* Rare and Gem drop table, slightly adjusted */\n\t.add(RareDropTable, 1, 3)\n\t.add(GemTable, 1, 2)\n\n\t/* Tertiary */\n\t.tertiary(28, \"Ensouled dragon head\")\n\t.tertiary(128, \"Clue scroll (hard)\");\n\nexport default new SimpleMonster({\n\tid: 2918,\n\tname: \"Brutal green Dragon\",\n\ttable: BrutalGreenDragonTable,\n\taliases: [\"brutal green dragon\", \"brutal greens\", \"brutal green\"],\n});\n", "import LootTable from \"../../../../structures/LootTable\";\nimport SimpleMonster from \"../../../../structures/SimpleMonster\";\nimport RareDropTable, { GemTable } from \"../../../subtables/RareDropTable\";\n\nconst BrutalRedDragonTable = new LootTable()\n\t.every(\"Dragon bones\")\n\t.every(\"Red dragonhide\", 2)\n\n\t/* Weapons and armour */\n\t.add(\"Rune hasta\", 1, 10)\n\t.add(\"Adamant platelegs\", 1, 7)\n\t.add(\"Adamant full helm\", 1, 5)\n\t.add(\"Rune longsword\", 1, 5)\n\t.add(\"Red d'hide body\", 1, 2)\n\t.add(\"Rune full helm\", 2, 2)\n\t.add(\"Red d'hide vambraces\", 1, 1)\n\t.add(\"Dragon dagger\", 1, 1)\n\t.add(\"Dragon longsword\", 1, 1)\n\t.add(\"Dragon med helm\", 1, 1)\n\t.add(\"Rune platebody\", 1, 1)\n\n\t/* Runes and ammunition */\n\t.add(\"Death rune\", 25, 8)\n\t.add(\"Rune javelin\", 30, 8)\n\t.add(\"Air rune\", 105, 7)\n\t.add(\"Blood rune\", 12, 7)\n\t.add(\"Law rune\", 25, 7)\n\t.add(\"Rune arrow\", 25, 7)\n\t.add(\"Adamant dart\", 20, 5)\n\t.add(\"Rune knife\", 10, 2)\n\t.add(\"Rune thrownaxe\", 15, 2)\n\n\t/* Materials */\n\t.add(\"White berries\", 5, 4)\n\t.add(\"Dragon dart tip\", 8, 3)\n\t.add(\"Dragon arrowtips\", 8, 2)\n\t.add(\"Runite ore\", 2, 2)\n\t.add(\"Dragon javelin heads\", 25, 1)\n\n\t/* Coins */\n\t.add(\"Coins\", 670, 11)\n\t.add(\"Coins\", 621, 1)\n\n\t/* Other */\n\t.add(\"Curry\", 3, 8)\n\n\t/* Rare and Gem drop table */\n\t.add(RareDropTable, 1, 2)\n\t.add(GemTable, 1, 3)\n\n\t/* Tertiary */\n\t.tertiary(20, \"Ensouled dragon head\")\n\t.tertiary(128, \"Clue scroll (hard)\")\n\t.tertiary(500, \"Clue scroll (elite)\")\n\t.tertiary(10_000, \"Draconic visage\");\n\nexport default new SimpleMonster({\n\tid: 7274,\n\tname: \"Brutal red Dragon\",\n\ttable: BrutalRedDragonTable,\n\taliases: [\"brutal red dragon\", \"brutal reds\", \"brutal red\"],\n});\n", "import LootTable from \"../../structures/LootTable\";\n\nconst FixedAllotmentSeedTable = new LootTable()\n\t.add(\"Potato seed\", 4, 96)\n\t.add(\"Onion seed\", 4, 72)\n\t.add(\"Cabbage seed\", 4, 48)\n\t.add(\"Tomato seed\", 3, 24)\n\t.add(\"Sweetcorn seed\", 3, 12)\n\t.add(\"Strawberry seed\", 2, 6)\n\t.add(\"Watermelon seed\", 2, 3)\n\t.add(\"Snape grass seed\", 2, 2);\n\nexport default FixedAllotmentSeedTable;\n", "import LootTable from \"../../../../structures/LootTable\";\nimport SimpleMonster from \"../../../../structures/SimpleMonster\";\nimport FixedAllotmentSeedTable from \"../../../subtables/FixedAllotmentSeedTable\";\nimport HerbDropTable from \"../../../subtables/HerbDropTable\";\nimport { GemTable } from \"../../../subtables/RareDropTable\";\n\nexport const CatableponTable = new LootTable()\n\t.every(\"Bones\")\n\n\t/* Armour */\n\t.add(\"Adamant med helm\", 1, 1)\n\n\t/* Runes and ammunition */\n\t.add(\"Fire rune\", 15, 7)\n\t.add(\"Water rune\", 7, 6)\n\t.add(\"Law rune\", 2, 4)\n\t.add(\"Mithril arrow\", [5, 14], 4)\n\t.add(\"Cosmic rune\", 2, 3)\n\t.add(\"Chaos rune\", 7, 1)\n\n\t/* Herbs */\n\t.add(HerbDropTable, 1, 3)\n\n\t/* Seeds */\n\t.add(FixedAllotmentSeedTable, 1, 1)\n\n\t/* Materials */\n\t.add(\"Eye of newt\", 1, 7)\n\t.add(\"Pure essence\", 15, 5)\n\t.add(\"Coal\", [3, 7], 2)\n\n\t/* Coins */\n\t.add(\"Coins\", 44, 12)\n\t.add(\"Coins\", [5, 104], 10)\n\t.add(\"Coins\", 15, 6)\n\n\t/* Other */\n\t.add(\"Unlit torch\", 1, 9)\n\t.add(\"Top of sceptre\", 1, 3)\n\t.add(\"Trout\", 1, 2)\n\n\t/* Gem drop table */\n\t.add(GemTable, 1, 2)\n\n\t/* Tertiary */\n\t.tertiary(101, \"Clue scroll (medium)\");\n\nexport default new SimpleMonster({\n\tid: 2475,\n\tname: \"Catablepon\",\n\ttable: CatableponTable,\n\taliases: [\"catablepon\"],\n});\n", "import LootTable from \"../../../../structures/LootTable\";\nimport SimpleMonster from \"../../../../structures/SimpleMonster\";\nimport HerbDropTable from \"../../../subtables/HerbDropTable\";\n\nexport const CaveBugTable = new LootTable({ limit: 128 })\n\t/* Runes and ammunition */\n\t.add(\"Water rune\", 8, 5)\n\t.add(\"Nature rune\", 1, 5)\n\t.add(\"Earth rune\", 6, 2)\n\t.add(\"Nature rune\", 2, 1)\n\n\t.add(HerbDropTable, 1, 24)\n\n\t/* Materials */\n\t.add(\"Unicorn horn dust\", 1, 2)\n\t.add(\"Eye of newt\", 1, 2)\n\t.add(\"Red spiders' eggs\", 1, 2)\n\t.add(\"Limpwurt root\", 1, 1)\n\t.add(\"Snape grass\", 1, 1)\n\n\t/* Other */\n\t.add(\"Coins\", 3, 8)\n\t.add(\"Coins\", 8, 3)\n\t.add(\"Candle\", 1, 5)\n\t.add(\"Tinderbox\", 1, 3)\n\t.add(\"Empty candle lantern\", 1, 1);\n\nexport default new SimpleMonster({\n\tid: 481,\n\tname: \"Cave Bug\",\n\ttable: CaveBugTable,\n\taliases: [\"cave bug\"],\n});\n", "import LootTable from \"../../structures/LootTable\";\n\nconst VariableAllotmentSeedTable = new LootTable()\n\t.add(\"Potato seed\", [1, 4], 64)\n\t.add(\"Onion seed\", [1, 3], 32)\n\t.add(\"Cabbage seed\", [1, 3], 16)\n\t.add(\"Tomato seed\", [1, 2], 8)\n\t.add(\"Sweetcorn seed\", [1, 2], 4)\n\t.add(\"Strawberry seed\", 1, 2)\n\t.add(\"Watermelon seed\", 1, 1)\n\t.add(\"Snape grass seed\", 1, 1);\n\nexport default VariableAllotmentSeedTable;\n", "import LootTable from \"../../../../structures/LootTable\";\nimport SimpleMonster from \"../../../../structures/SimpleMonster\";\nimport HerbDropTable from \"../../../subtables/HerbDropTable\";\nimport { GemTable } from \"../../../subtables/RareDropTable\";\nimport VariableAllotmentSeedTable from \"../../../subtables/VariableAllotmentSeedTable\";\n\nexport const CaveCrawlerTable = new LootTable({ limit: 128 })\n\t/* Armour */\n\t.add(\"Bronze boots\")\n\n\t/* Runes */\n\t.add(\"Nature rune\", [3, 4], 6)\n\t.add(\"Fire rune\", 12, 5)\n\t.add(\"Earth rune\", 9, 2)\n\n\t/* Subtables */\n\t.add(VariableAllotmentSeedTable, 1, 26)\n\t.add(HerbDropTable, 1, 22)\n\t.add(GemTable)\n\n\t/* Coins */\n\t.add(\"Coins\", 3, 5)\n\t.add(\"Coins\", 8, 3)\n\t.add(\"Coins\", 29, 3)\n\t.add(\"Coins\", 10, 1)\n\n\t/* Other */\n\t.add(\"Vial of water\", 1, 13)\n\t.add(\"White berries\", 1, 5)\n\t.add(\"Unicorn horn dust\", 1, 2)\n\t.add(\"Eye of newt\")\n\t.add(\"Red spiders' eggs\")\n\t.add(\"Limpwurt root\")\n\t.add(\"Snape grass\");\n\nexport default new SimpleMonster({\n\tid: 406,\n\tname: \"Cave Crawler\",\n\ttable: CaveCrawlerTable,\n\taliases: [\"cave crawler\"],\n});\n", "import LootTable from \"../../../../structures/LootTable\";\nimport SimpleMonster from \"../../../../structures/SimpleMonster\";\n\nconst CaveGoblinTable = new LootTable()\n\t.add(\"Bat shish\")\n\t.add(\"Coated frogs' legs\")\n\t.add(\"Fingers\")\n\t.add(\"Frogburger\")\n\t.add(\"Frogspawn gumbo\")\n\t.add(\"Green gloop soup\")\n\t.add(\"Coins\", [10, 50], 7)\n\t.add(\"Bullseye lantern\", 1)\n\t.add(\"Cave goblin wire\", 1)\n\t.add(\"Iron ore\", [1, 4])\n\t.add(\"Oil lantern\", 1)\n\t.add(\"Swamp tar\", 1)\n\t.add(\"Tinderbox\", 1)\n\t.add(\"Unlit torch\", 1)\n\t.tertiary(257_211, \"Rocky\");\n\nexport default new SimpleMonster({\n\tid: 6434,\n\tname: \"Cave goblin\",\n\tpickpocketTable: CaveGoblinTable,\n\taliases: [\"cave goblin\"],\n});\n", "import LootTable from \"../../../../structures/LootTable\";\nimport SimpleMonster from \"../../../../structures/SimpleMonster\";\n\nconst ClubOrSpearTable = new LootTable().add(\"Bone club\").add(\"Bone spear\");\n\nconst CaveGoblinGuardTable = new LootTable({ limit: 128 })\n\t.every(\"Bones\")\n\t.tertiary(5000, \"Goblin champion scroll\")\n\n\t/* Weapons and armour */\n\t.add(ClubOrSpearTable, 1, 20)\n\t.add(\"Iron chainbody\", 1, 20)\n\n\t/* Other */\n\t.add(\"Coins\", 12, 20)\n\t.add(\"Oil lantern\", 1, 20)\n\t.add(\"Tinderbox\", 1, 20);\n\nexport default new SimpleMonster({\n\tid: 5334,\n\tname: \"Cave goblin guard\",\n\ttable: CaveGoblinGuardTable,\n\taliases: [\"cave goblin guard\"],\n});\n", "import LootTable from \"../../../../structures/LootTable\";\nimport SimpleMonster from \"../../../../structures/SimpleMonster\";\nimport HerbDropTable from \"../../../subtables/HerbDropTable\";\nimport { GemTable } from \"../../../subtables/RareDropTable\";\nimport RareSeedTable from \"../../../subtables/RareSeedTable\";\nimport VariableAllotmentSeedTable from \"../../../subtables/VariableAllotmentSeedTable\";\n\nexport const CaveHorrorPreTable = new LootTable()\n\t/* Weapons and armor*/\n\t.add(\"Mithril axe\", 1, 3)\n\t.add(\"Rune dagger\", 1, 1)\n\t.add(\"Adamant full helm\", 1, 1)\n\t.add(\"Mithril kiteshield\", 1, 1)\n\t.oneIn(512, \"Black mask (10)\")\n\n\t/* Runes */\n\t.add(\"Nature rune\", 6, 6)\n\t.add(\"Nature rune\", 4, 5)\n\t.add(\"Nature rune\", 3, 1)\n\n\t/* Herbs */\n\t.add(HerbDropTable, 1, 13)\n\n\t/* Seeds */\n\t.add(RareSeedTable, 1, 18)\n\t.add(VariableAllotmentSeedTable, 1, 15)\n\n\t/* Coins */\n\t.add(\"Coins\", 44, 28)\n\t.add(\"Coins\", 132, 12)\n\t.add(\"Coins\", 440, 1)\n\n\t/* Other */\n\t.add(\"Limpwurt root\", 1, 7)\n\t.add(\"Teak logs\", 4, 7)\n\t.add(\"Mahogany logs\", 2, 3)\n\n\t/* Gems */\n\t.add(GemTable, 1, 5);\n\nconst CaveHorrorTable = new LootTable()\n\t.every(\"Big bones\")\n\t.every(CaveHorrorPreTable)\n\n\t/* Tertiary */\n\t.tertiary(30, \"Ensouled horror head\")\n\t.tertiary(128, \"Clue scroll (hard)\")\n\t.tertiary(400, \"Long bone\")\n\t.tertiary(5013, \"Curved bone\");\n\nexport default new SimpleMonster({\n\tid: 1047,\n\tname: \"Cave Horror\",\n\ttable: CaveHorrorTable,\n\taliases: [\"cave horror\", \"cave h\"],\n});\n", "import LootTable from \"../../../../structures/LootTable\";\nimport SimpleMonster from \"../../../../structures/SimpleMonster\";\nimport HerbDropTable from \"../../../subtables/HerbDropTable\";\nimport { GemTable } from \"../../../subtables/RareDropTable\";\nimport RareSeedTable from \"../../../subtables/RareSeedTable\";\n\nconst CaveKrakenTable = new LootTable({ limit: 400 })\n\n\t/* Weapons and armour */\n\t.add(\"Rune med helm\", 1, 13)\n\t.add(\"Staff of water\", 1, 8)\n\t.add(\"Adamant spear\", 1, 8)\n\t.add(\"Rune warhammer\", 1, 8)\n\t.add(\"Battlestaff\", 1, 8)\n\t.add(\"Water battlestaff\", 1, 8)\n\t.add(\"Mystic water staff\", 1, 4)\n\t.oneIn(200, \"Uncharged trident\")\n\n\t/* Runes and ammunition */\n\t.add(\"Death rune\", 30, 32)\n\t.add(\"Chaos rune\", 50, 32)\n\t.add(\"Water rune\", 15, 20)\n\t.add(\"Water rune\", 30, 20)\n\t.add(\"Water rune\", 75, 20)\n\t.add(\"Fire rune\", 30, 20)\n\t.add(\"Blood rune\", 5, 16)\n\t.add(\"Steam rune\", 7, 12)\n\n\t/* Herbs */\n\t.add(HerbDropTable, 1, 12)\n\n\t/* Seeds */\n\t.add(RareSeedTable, 1, 12)\n\n\t/* Other */\n\t.add(\"Coins\", [120, 300], 20)\n\t.add(\"Seaweed\", 30, 12)\n\t.add(\"Swordfish\", 2, 12)\n\t.add(\"Shark\", 1, 12)\n\t.add(\"Antidote++(4)\", 1, 12)\n\t.add(\"Old boot\", 1, 8)\n\t.add(\"Swamp tar\", 60, 8)\n\t.add(\"Raw lobster\", 3, 8)\n\t.add(\"Water orb\", 2, 8)\n\t.add(\"Oyster\", 1, 8)\n\t.add(\"Vial of water\", 50, 8)\n\t.add(\"Water talisman\", 1, 8)\n\t.add(\"Bucket\", 1, 2)\n\t.oneIn(1200, \"Kraken tentacle\")\n\n\t/* RDT */\n\t.add(GemTable, 1, 12)\n\n\t/* Tertiary */\n\t.tertiary(100, \"Clue scroll (hard)\")\n\t.tertiary(1200, \"Clue scroll (elite)\");\n\nexport default new SimpleMonster({\n\tid: 492,\n\tname: \"Cave Kraken\",\n\ttable: CaveKrakenTable,\n\taliases: [\"cave kraken\", \"cave k\"],\n});\n", "import LootTable from \"../../../../structures/LootTable\";\nimport SimpleMonster from \"../../../../structures/SimpleMonster\";\nimport { GemTable } from \"../../../subtables/RareDropTable\";\n\nexport const CaveSlimeTable = new LootTable()\n\t.every(\"Swamp tar\", [1, 6])\n\t.tertiary(128, \"Clue scroll (easy)\")\n\n\t.add(GemTable, 1, 4)\n\n\t/* Weapons and Armour */\n\t.add(\"Iron sword\", 1, 7)\n\t.add(\"Bronze axe\", 1, 3)\n\t.add(\"Iron kiteshield\", 1, 2)\n\t.add(\"Bronze full helm\")\n\t.add(\"Iron boots\")\n\n\t/* Runes */\n\t.add(\"Water rune\", 15, 5)\n\t.add(\"Earth rune\", 5, 3)\n\n\t/* Other */\n\t.add(\"Coins\", 10, 39)\n\t.add(\"Coins\", 4, 30)\n\t.add(\"Coins\", 22, 10)\n\t.add(\"Coins\", 1, 7)\n\t.add(\"Coins\", 46, 2)\n\t.add(\"Unlit torch\", 1, 1)\n\t.add(\"Gold bar\", 1, 2)\n\t.add(\"Oil lantern frame\", 1, 1);\n\nexport default new SimpleMonster({\n\tid: 480,\n\tname: \"Cave Slime\",\n\ttable: CaveSlimeTable,\n\taliases: [\"cave slime\"],\n});\n", "import LootTable from \"../../../../structures/LootTable\";\nimport SimpleMonster from \"../../../../structures/SimpleMonster\";\nimport HerbDropTable from \"../../../subtables/HerbDropTable\";\nimport { GemTable } from \"../../../subtables/RareDropTable\";\n\nexport const ChaosDruidTable = new LootTable({ limit: 128 })\n\t.every(\"Bones\")\n\n\t/* Runes and ammunition */\n\t.add(\"Law rune\", 2, 7)\n\t.add(\"Mithril bolts\", [2, 12], 4)\n\t.add(\"Air rune\", 36, 3)\n\t.add(\"Body rune\", 9, 2)\n\t.add(\"Earth rune\", 9, 2)\n\t.add(\"Mind rune\", 12, 2)\n\t.add(\"Nature rune\", 3, 1)\n\n\t/* Herbs */\n\t.add(HerbDropTable, 1, 35)\n\t.add(HerbDropTable, 2, 11)\n\n\t/* Coins */\n\t.add(\"Coins\", 3, 5)\n\t.add(\"Coins\", 8, 5)\n\t.add(\"Coins\", 29, 3)\n\t.add(\"Coins\", 35, 1)\n\n\t/* Other */\n\t.add(\"Vial of water\", 1, 10)\n\t.add(\"Bronze longsword\", 1, 1)\n\t.add(\"Snape grass\", 1, 1)\n\t.add(\"Unholy mould\", 1, 1)\n\n\t/* Gem drop table */\n\t.add(GemTable, 1, 1)\n\n\t/* Tertiary */\n\t.tertiary(35, \"Ensouled chaos druid head\");\n\nexport default new SimpleMonster({\n\tid: 520,\n\tname: \"Chaos druid\",\n\ttable: ChaosDruidTable,\n\taliases: [\"chaos druid\"],\n});\n", "import LootTable from \"../../../../structures/LootTable\";\nimport SimpleMonster from \"../../../../structures/SimpleMonster\";\nimport { GemTable } from \"../../../subtables/RareDropTable\";\n\nexport const ChaosDwarfTable = new LootTable({ limit: 128 })\n\t.every(\"Bones\")\n\n\t/* Weapons and Armour*/\n\t.add(\"Steel full helm\", 1, 2)\n\t.add(\"Mithril longsword\", 1, 1)\n\t.add(\"Mithril sq shield\", 1, 1)\n\n\t/* Runes */\n\t.add(\"Law rune\", 3, 4)\n\t.add(\"Air rune\", 24, 3)\n\t.add(\"Chaos rune\", 10, 3)\n\t.add(\"Mind rune\", 37, 3)\n\t.add(\"Nature rune\", 9, 3)\n\t.add(\"Cosmic rune\", 3, 2)\n\t.add(\"Death rune\", 3, 1)\n\t.add(\"Water rune\", 10, 1)\n\n\t/* Coins */\n\t.add(\"Coins\", 92, 40)\n\t.add(\"Coins\", 47, 18)\n\t.add(\"Coins\", 25, 11)\n\t.add(\"Coins\", 150, 10)\n\t.add(\"Coins\", 350, 2)\n\t.add(\"Coins\", 15, 2)\n\n\t/* Other */\n\t.add(\"Muddy key\", 1, 7)\n\t.add(\"Mithril bar\", 1, 6)\n\t.add(\"Coal\", 1, 1)\n\t.add(\"Cheese\", 1, 1)\n\t.add(\"Tomato\", 1, 1)\n\n\t/* Subtable */\n\t.add(GemTable, 1, 5);\n\nexport default new SimpleMonster({\n\tid: 291,\n\tname: \"Chaos dwarf\",\n\ttable: ChaosDwarfTable,\n\taliases: [\"chaos dwarf\"],\n});\n", "import LootTable from \"../../../../structures/LootTable\";\nimport SimpleMonster from \"../../../../structures/SimpleMonster\";\n\nexport const ChickenTable = new LootTable({ limit: 4 })\n\t.every(\"Bones\")\n\t.every(\"Raw chicken\")\n\t.add(\"Feather\", 5, 2)\n\t.add(\"Feather\", 15, 1)\n\t.tertiary(300, \"Clue scroll (beginner)\");\n\nexport default new SimpleMonster({\n\tid: 3316,\n\tname: \"Chicken\",\n\ttable: ChickenTable,\n\taliases: [\"chicken\"],\n});\n", "import LootTable from \"../../../../structures/LootTable\";\nimport SimpleMonster from \"../../../../structures/SimpleMonster\";\n\nexport const ChompyBirdTable = new LootTable().every(\"Bones\").every(\"Raw chompy\").oneIn(500, \"Chompy chick\");\n\nexport default new SimpleMonster({\n\tid: 1475,\n\tname: \"Chompy bird\",\n\ttable: ChompyBirdTable,\n\taliases: [\"chompy\", \"chompy bird\"],\n});\n", "import LootTable from \"../../../../structures/LootTable\";\nimport SimpleMonster from \"../../../../structures/SimpleMonster\";\nimport HerbDropTable from \"../../../subtables/HerbDropTable\";\nimport { GemTable } from \"../../../subtables/RareDropTable\";\n\nexport const CockatricePreTable = new LootTable({ limit: 128 })\n\t/* Weapons and armour */\n\t.add(\"Iron sword\", 1, 3)\n\t.add(\"Steel dagger\", 1, 3)\n\t.add(\"Iron boots\", 1, 1)\n\t.add(\"Iron javelin\", 1, 1)\n\t.add(\"Steel longsword\", 1, 1)\n\t.oneIn(512, \"Mystic boots (light)\")\n\n\t/* Runes */\n\t.add(\"Nature rune\", 2, 6)\n\t.add(\"Nature rune\", 4, 4)\n\t.add(\"Law rune\", 2, 3)\n\t.add(\"Nature rune\", 6, 2)\n\t.add(\"Water rune\", 2, 2)\n\t.add(\"Fire rune\", 7, 2)\n\n\t/* Herbs */\n\t.add(HerbDropTable, 1, 10)\n\n\t/* Coins */\n\t.add(\"Coins\", 15, 16)\n\t.add(\"Coins\", 5, 12)\n\t.add(\"Coins\", 28, 12)\n\t.add(\"Coins\", 62, 4)\n\t.add(\"Coins\", 42, 3)\n\t.add(\"Coins\", 1, 1)\n\n\t/* Other */\n\t.add(\"Limpwurt root\", 1, 1)\n\n\t/* Gem drop table */\n\t.add(GemTable, 1, 2);\n\nconst CockatriceTable = new LootTable()\n\t.every(\"Bones\")\n\t.every(CockatricePreTable)\n\n\t/* Tertiary */\n\t.oneIn(128, \"Clue scroll (medium)\")\n\t.oneIn(1000, \"Cockatrice head\");\n\nexport default new SimpleMonster({\n\tid: 420,\n\tname: \"Cockatrice\",\n\ttable: CockatriceTable,\n\taliases: [\"cockatrice\"],\n});\n", "import LootTable from \"../../../../structures/LootTable\";\nimport SimpleMonster from \"../../../../structures/SimpleMonster\";\n\nexport const CowTable = new LootTable()\n\t.every(\"Bones\")\n\t.every(\"Cowhide\")\n\t.every(\"Raw beef\")\n\t.tertiary(128, \"Clue scroll (beginner)\");\n\nexport default new SimpleMonster({\n\tid: 2790,\n\tname: \"Cow\",\n\ttable: CowTable,\n\taliases: [\"cow\"],\n});\n", "import LootTable from \"../../../../structures/LootTable\";\nimport SimpleMonster from \"../../../../structures/SimpleMonster\";\n\nexport const CowCalfTable = new LootTable()\n\t.every(\"Bones\")\n\t.every(\"Cowhide\")\n\t.every(\"Raw beef\")\n\t.tertiary(128, \"Clue scroll (beginner)\");\n\nexport default new SimpleMonster({\n\tid: 2792,\n\tname: \"Cow calf\",\n\ttable: CowCalfTable,\n\taliases: [\"cow calf\"],\n});\n", "import LootTable from \"../../../../structures/LootTable\";\nimport SimpleMonster from \"../../../../structures/SimpleMonster\";\n\nconst freshCrabTable = new LootTable().add(\"Fresh crab claw\", 1, 1).add(\"Fresh crab shell\", 1, 1);\n\nexport const CrabTable = new LootTable()\n\t.every(\"Crab meat\")\n\n\t.add(new LootTable(), 5, 1) // Nothing drop\n\t.add(freshCrabTable, 4, 1)\n\t.add(\"Oyster\", 1, 1);\n\nexport default new SimpleMonster({\n\tid: 4819,\n\tname: \"Crab\",\n\ttable: CrabTable,\n\taliases: [\"crab\"],\n});\n", "import LootTable from \"../../../../structures/LootTable\";\nimport SimpleMonster from \"../../../../structures/SimpleMonster\";\nimport { GemTable } from \"../../../subtables/RareDropTable\";\n\nexport const CrawlingHandPreTable = new LootTable()\n\t/* Gloves */\n\t.add(\"Leather gloves\", 1, 21)\n\t.add(\"Purple gloves\", 1, 2)\n\t.add(\"Yellow gloves\", 1, 2)\n\t.add(\"Red gloves\", 1, 2)\n\t.add(\"Teal gloves\", 1, 2)\n\n\t/* Jewellery */\n\t.add(\"Gold ring\", 1, 3)\n\t.add(\"Sapphire ring\", 1, 2)\n\t.add(\"Emerald ring\", 1, 2)\n\n\t/* Coins */\n\t.add(\"Coins\", 8, 23)\n\t.add(\"Coins\", 5, 21)\n\n\t/* Gem drop table */\n\t.add(GemTable, 2);\n\nconst CrawlingHandTable = new LootTable()\n\t.every(\"Bones\")\n\t// 7975 is the correct Crawling hand item\n\t.tertiary(500, 7975, 1)\n\t.every(CrawlingHandPreTable);\n\nexport default new SimpleMonster({\n\tid: 448,\n\tname: \"Crawling Hand\",\n\ttable: CrawlingHandTable,\n\taliases: [\"crawling hand\"],\n});\n", "import LootTable from \"../../../../structures/LootTable\";\nimport SimpleMonster from \"../../../../structures/SimpleMonster\";\n\nconst CrocodileTable = new LootTable()\n\t.every(\"Babydragon bones\")\n\t.tertiary(400, \"Long bone\")\n\t.tertiary(5013, \"Curved bone\");\n\nexport default new SimpleMonster({\n\tid: 4184,\n\tname: \"Crocodile\",\n\ttable: CrocodileTable,\n\taliases: [\"crocodile\"],\n});\n", "import LootTable from \"../../../../structures/LootTable\";\nimport SimpleMonster from \"../../../../structures/SimpleMonster\";\n\nexport const CryptRatTable = new LootTable().every(\"Bones\");\n\nexport default new SimpleMonster({\n\tid: 1679,\n\tname: \"Crypt rat\",\n\ttable: CryptRatTable,\n\taliases: [\"crypt rat\"],\n});\n", "import LootTable from \"../../../../structures/LootTable\";\nimport SimpleMonster from \"../../../../structures/SimpleMonster\";\nimport HerbDropTable from \"../../../subtables/HerbDropTable\";\nimport { GemTable } from \"../../../subtables/RareDropTable\";\nimport { UncommonSeedDropTable } from \"../../../subtables/index\";\n\nexport const CyclopseTable = new LootTable()\n\t.every(\"Big bones\")\n\n\t/* Weapons and armour */\n\t.add(\"Black knife\", [4, 13], 16)\n\t.add(\"Steel chainbody\", 1, 2)\n\t.add(\"Iron 2h sword\", 1, 2)\n\t.add(\"Iron chainbody\", 1, 2)\n\t.add(\"Steel dagger\", 1, 2)\n\t.add(\"Steel mace\", 1, 2)\n\t.add(\"Steel sword\", 1, 2)\n\t.add(\"Steel battleaxe\", 1, 2)\n\t.add(\"Steel 2h sword\", 1, 2)\n\t.add(\"Steel longsword\", 1, 2)\n\t.add(\"Steel med helm\", 1, 2)\n\t.add(\"Black 2h sword\", 1, 1)\n\t.add(\"Mithril dagger\", 1, 1)\n\t.add(\"Adamant mace\", 1, 1)\n\t.add(\"Black sword\", 1, 1)\n\t.add(\"Black longsword\", 1, 1)\n\t.add(\"Black dagger\", 1, 1)\n\t.add(\"Adamant 2h sword\", 1, 1)\n\n\t/* Herbs */\n\t.add(HerbDropTable, 1, 3)\n\n\t/* Seeds */\n\t.add(UncommonSeedDropTable, 1, 1)\n\n\t/* Coins */\n\t.add(\"Coins\", [3, 102], 31)\n\t.add(\"Coins\", [5, 204], 10)\n\n\t/* Gem drop table */\n\t.add(GemTable, 1, 2)\n\n\t/* Tertiary */\n\t.tertiary(400, \"Long bone\")\n\t.tertiary(512, \"Clue scroll (hard)\")\n\t.tertiary(5013, \"Curved bone\");\n\nexport default new SimpleMonster({\n\tid: 2097,\n\tname: \"Cyclops\",\n\ttable: CyclopseTable,\n\taliases: [\"cyclops\"],\n});\n", "import LootTable from \"../../../../structures/LootTable\";\nimport SimpleMonster from \"../../../../structures/SimpleMonster\";\nimport { GemTable } from \"../../../subtables/RareDropTable\";\nimport RareSeedTable from \"../../../subtables/RareSeedTable\";\n\nconst DagannothTable = new LootTable()\n\t.every(\"Bones\")\n\n\t/* Weapons*/\n\t.add(\"Iron spear\", 1, 6)\n\t.add(\"Bronze spear\", 1, 5)\n\t.add(\"Mithril spear\", 1, 1)\n\n\t/* Runes and ammunition */\n\t.add(\"Water rune\", 15, 4)\n\t.add(\"Steel arrow\", 15, 2)\n\t.add(\"Mithril javelin\", 3, 1)\n\n\t/* Seeds */\n\t.add(RareSeedTable, 1, 18)\n\n\t/* Fishing */\n\t.add(\"Lobster pot\", 1, 12)\n\t.add(\"Raw herring\", 3, 4)\n\t.add(\"Raw sardine\", 5, 4)\n\t.add(\"Harpoon\", 1, 3)\n\t.add(\"Feather\", 15, 2)\n\t.add(\"Fishing bait\", 50, 2)\n\t.add(\"Raw lobster\", 1, 2)\n\t.add(\"Raw tuna\", 1, 2)\n\t.add(\"Seaweed\", 10, 2)\n\t.add(\"Oyster pearls\", 1, 1)\n\t.add(\"Oyster pearl\", 2, 1)\n\n\t/* Coins */\n\t.add(\"Coins\", 56, 29)\n\t.add(\"Coins\", 25, 9)\n\t.add(\"Coins\", 44, 8)\n\t.add(\"Coins\", 41, 6)\n\n\t/* Other */\n\t.add(\"Opal bolt tips\", 12, 2)\n\t.add(\"Casket\", 1, 1)\n\n\t/* RDT */\n\t.add(GemTable, 1, 1)\n\n\t/* Tertiary */\n\t.tertiary(40, \"Ensouled dagannoth head\")\n\t.tertiary(128, \"Clue scroll (medium)\");\n\nexport default new SimpleMonster({\n\tid: 3185,\n\tname: \"Dagannoth\",\n\ttable: DagannothTable,\n\taliases: [\"dagannoth\"],\n});\n", "import LootTable from \"../../../../structures/LootTable\";\nimport SimpleMonster from \"../../../../structures/SimpleMonster\";\nimport { GemTable } from \"../../../subtables/RareDropTable\";\n\nconst DagannothSpawnTable = new LootTable()\n\t.every(\"Bones\")\n\n\t/* Runes */\n\t.add(\"Water rune\", 3, 10)\n\n\t/* Fish */\n\t.add(\"Raw tuna\", 1, 10)\n\t.add(\"Raw sardine\", 1, 10)\n\t.add(\"Raw herring\", 1, 5)\n\n\t/* Coins */\n\t.add(\"Coins\", 16, 10)\n\t.add(\"Coins\", 25, 10)\n\n\t/* Other */\n\t.add(\"Feather\", 2, 38)\n\t.add(\"Seaweed\", 1, 10)\n\t.add(\"Fishing bait\", 3, 10)\n\t.add(\"Water talisman\", 1, 10)\n\t.add(\"Oyster pearl\", 1, 4)\n\n\t/* Gem drop table */\n\t.add(GemTable, 1, 1)\n\n\t/* Tertiary */\n\t.tertiary(128, \"Clue scroll (easy)\");\n\nexport default new SimpleMonster({\n\tid: 3184,\n\tname: \"Dagannoth spawn\",\n\ttable: DagannothSpawnTable,\n\taliases: [\"dagannoth spawn\"],\n});\n", "import LootTable from \"../../../../structures/LootTable\";\nimport SimpleMonster from \"../../../../structures/SimpleMonster\";\n\nconst DagannothFledgeling = new LootTable().every(\"Bones\");\n\nexport default new SimpleMonster({\n\tid: 2264,\n\tname: \"Dagannoth fledgeling\",\n\ttable: DagannothFledgeling,\n\taliases: [\"dagannoth fledgeling\"],\n});\n", "import LootTable from \"../../../../structures/LootTable\";\nimport SimpleMonster from \"../../../../structures/SimpleMonster\";\nimport HerbDropTable from \"../../../subtables/HerbDropTable\";\nimport RareDropTable, { GemTable } from \"../../../subtables/RareDropTable\";\nimport RareSeedTable from \"../../../subtables/RareSeedTable\";\n\nconst DBHerbTable = new LootTable().add(HerbDropTable, 1, 4).add(HerbDropTable, 2, 1);\n\nexport const DarkBeastPreTable = new LootTable()\n\t/* Weapons and armour */\n\t.add(\"Black battleaxe\", 1, 3)\n\t.add(\"Adamant sq shield\", 1, 1)\n\t.add(\"Rune chainbody\", 1, 1)\n\t.add(\"Rune med helm\", 1, 1)\n\t.add(\"Rune full helm\", 1, 1)\n\t.add(\"Rune 2h sword\", 1, 1)\n\t.add(\"Rune battleaxe\", 1, 1)\n\t.oneIn(512, \"Dark bow\")\n\n\t/* Runes and ammunition */\n\t.add(\"Death rune\", 20, 8)\n\t.add(\"Chaos rune\", 30, 7)\n\t.add(\"Blood rune\", 15, 4)\n\n\t/* Herbs */\n\t.add(DBHerbTable, 1, 24)\n\n\t/* Seeds */\n\t.add(RareSeedTable, 1, 4)\n\n\t/* Coins */\n\t.add(\"Coins\", 152, 40)\n\t.add(\"Coins\", 64, 6)\n\t.add(\"Coins\", 95, 6)\n\t.add(\"Coins\", 220, 5)\n\n\t/* Other */\n\t.add(\"Shark\", 1, 3)\n\t.add(\"Adamantite bar\", 3, 2)\n\t.add(\"Adamantite ore\", 5, 1)\n\t.add(\"Death talisman\", 1, 1)\n\t.add(\"Runite ore\", 1, 1)\n\t.add(\"Shark\", 2, 1)\n\n\t/* RDT */\n\t.add(RareDropTable, 1, 3)\n\t.add(GemTable, 1, 3);\n\nconst DarkBeastTable = new LootTable()\n\t.every(\"Big bones\")\n\t.every(DarkBeastPreTable)\n\n\t/* Tertiary */\n\t.tertiary(24, \"Crystal shard\")\n\t.tertiary(128, \"Clue scroll (hard)\")\n\t.tertiary(400, \"Long bone\")\n\t.tertiary(1200, \"Clue scroll (elite)\")\n\t.tertiary(5013, \"Curved bone\");\n\nexport default new SimpleMonster({\n\tid: 4005,\n\tname: \"Dark Beast\",\n\ttable: DarkBeastTable,\n\taliases: [\"dark beast\", \"dark b\"],\n});\n", "import LootTable from \"../../../../structures/LootTable\";\nimport SimpleMonster from \"../../../../structures/SimpleMonster\";\nimport HerbDropTable from \"../../../subtables/HerbDropTable\";\n\nexport const DarkWarriorTable = new LootTable({ limit: 128 })\n\t.every(\"Bones\")\n\n\t/* Weapons and armour */\n\t.add(\"Bronze med helm\", 1, 3)\n\t.add(\"Iron mace\", 1, 1)\n\t.add(\"Black med helm\", 1, 1)\n\t.add(\"Black mace\", 1, 1)\n\n\t/* Runes and ammunition */\n\t.add(\"Bronze arrow\", 8, 4)\n\t.add(\"Mind rune\", 2, 3)\n\t.add(\"Water rune\", 3, 2)\n\t.add(\"Nature rune\", 3, 2)\n\t.add(\"Earth rune\", 2, 1)\n\t.add(\"Chaos rune\", 2, 1)\n\n\t/* Herbs */\n\t.add(HerbDropTable, 1, 3)\n\n\t/* Coins */\n\t.add(\"Coins\", 1, 31)\n\t.add(\"Coins\", 2, 20)\n\t.add(\"Coins\", 6, 20)\n\t.add(\"Coins\", 13, 7)\n\t.add(\"Coins\", 20, 6)\n\t.add(\"Coins\", 30, 2)\n\n\t/* Other */\n\t.add(\"Iron ore\", 1, 1)\n\t.add(\"Sardine\", 1, 1);\n\nexport default new SimpleMonster({\n\tid: 531,\n\tname: \"Dark warrior\",\n\ttable: DarkWarriorTable,\n\taliases: [\"dark warrior\"],\n});\n", "import LootTable from \"../../../../structures/LootTable\";\nimport SimpleMonster from \"../../../../structures/SimpleMonster\";\n\nexport const DeadlyRedSpiderTable = new LootTable({ limit: 128 }).add(\"Clue scroll (beginner)\");\n\nexport default new SimpleMonster({\n\tid: 3021,\n\tname: \"Deadly red spider\",\n\ttable: DeadlyRedSpiderTable,\n\taliases: [\"deadly red spider\"],\n});\n", "import LootTable from \"../../../../structures/LootTable\";\nimport SimpleMonster from \"../../../../structures/SimpleMonster\";\n\nexport const DeathWingTable = new LootTable().tertiary(128, \"Clue scroll (beginner)\");\n\nexport default new SimpleMonster({\n\tid: 509,\n\tname: \"Death wing\",\n\ttable: DeathWingTable,\n\taliases: [\"death wing\"],\n});\n", "import LootTable from \"../../structures/LootTable\";\n\nexport const NotedHerbTable = new LootTable()\n\t.add(\"Grimy kwuarm\", 1, 5)\n\t.add(\"Grimy cadantine\", 1, 4)\n\t.add(\"Grimy dwarf weed\", 1, 4)\n\t.add(\"Grimy lantadyme\", 1, 3);\n", "import LootTable from \"../../../../structures/LootTable\";\nimport SimpleMonster from \"../../../../structures/SimpleMonster\";\nimport { NotedHerbTable } from \"../../../subtables/NotedHerbTable\";\nimport RareDropTable from \"../../../subtables/RareDropTable\";\nimport TreeHerbSeedTable from \"../../../subtables/TreeHerbSeedTable\";\n\nconst UniqueTable = new LootTable()\n\t.add(\"Zenyte shard\", 1, 5)\n\t.add(\"Ballista limbs\", 1, 3)\n\t.add(\"Ballista spring\", 1, 3)\n\t.add(\"Light frame\", 1, 2)\n\t.add(\"Heavy frame\", 1, 1)\n\t.add(\"Monkey tail\", 1, 1);\n\nconst DemonicGorillaTable = new LootTable({ limit: 500 })\n\t.every(\"Malicious ashes\")\n\n\t.add(UniqueTable, 1, 5)\n\n\t/* Weapons and armor */\n\t.add(\"Rune platelegs\", 1, 35)\n\t.add(\"Rune plateskirt\", 1, 35)\n\t.add(\"Rune chainbody\", 1, 20)\n\t.add(\"Dragon scimitar\", 1, 10)\n\n\t/* Runes and ammunition */\n\t.add(\"Law rune\", [50, 75], 35)\n\t.add(\"Death rune\", [50, 75], 35)\n\t.add(\"Runite bolts\", [100, 150], 25)\n\n\t/* Herbs */\n\t.add(NotedHerbTable, [7, 13], 18)\n\n\t/* Seeds */\n\t.add(TreeHerbSeedTable, 2, 25, { multiply: true })\n\n\t/* Other */\n\t.add(\"Prayer potion(3)\", 2, 40)\n\t.add(\"Shark\", [2, 3], 35)\n\t.add(\"Coins\", [5000, 10_000], 25)\n\t.add(\"Saradomin brew(2)\", 1, 25)\n\t.add(\"Javelin shaft\", [750, 1250], 25)\n\t.add(\"Rune javelin heads\", [45, 55], 25)\n\t.add(\"Dragon javelin heads\", [27, 33], 25)\n\t.add(\"Adamantite bar\", 6, 20)\n\t.add(\"Diamond\", [4, 6], 17)\n\t.add(\"Runite bar\", 3, 15)\n\n\t/* RDT */\n\t.add(RareDropTable, 1, 5)\n\n\t/* Tertiary */\n\t.tertiary(100, \"Clue scroll (hard)\")\n\t.tertiary(500, \"Clue scroll (elite)\");\n\nexport default new SimpleMonster({\n\tid: 7144,\n\tname: \"Demonic Gorilla\",\n\ttable: DemonicGorillaTable,\n\taliases: [\"demonic gorilla\", \"demonic\", \"demonics\"],\n});\n", "import LootTable from \"../../../../structures/LootTable\";\nimport SimpleMonster from \"../../../../structures/SimpleMonster\";\n\nconst DesertBanditTable = new LootTable()\n\t.add(\"Coins\", 30, 70)\n\t.add(\"Antipoison(1)\", 1, 15)\n\t.add(\"Lockpick\", 1, 15)\n\t.tertiary(257_211, \"Rocky\");\n\nexport default new SimpleMonster({\n\tid: 690,\n\tname: \"Desert Bandit\",\n\tpickpocketTable: DesertBanditTable,\n\taliases: [\"desert bandit\"],\n});\n", "import LootTable from \"../../../../structures/LootTable\";\nimport SimpleMonster from \"../../../../structures/SimpleMonster\";\nimport FixedAllotmentSeedTable from \"../../../subtables/FixedAllotmentSeedTable\";\nimport HerbDropTable from \"../../../subtables/HerbDropTable\";\nimport { GemTable } from \"../../../subtables/RareDropTable\";\n\nconst HerbFireRuneTable = new LootTable().every(HerbDropTable).every(\"Fire rune\", 42);\nconst SeedWaterskinTable = new LootTable().every(FixedAllotmentSeedTable).every(\"Waterskin(0)\", 2);\n\nexport const DesertLizardTable = new LootTable()\n\t.every(\"Bones\")\n\t.oneIn(512, \"Mystic gloves (light)\")\n\n\t/* Runes */\n\t.add(\"Fire rune\", 5, 30)\n\t.add(\"Fire rune\", 42, 14)\n\t.add(\"Nature rune\", 5, 4)\n\n\t/* Herbs */\n\t.add(HerbFireRuneTable, 1, 10)\n\n\t/* Seeds */\n\t.add(SeedWaterskinTable, 1, 9)\n\n\t/* Ores and bars */\n\t.add(\"Iron ore\", 1, 22)\n\t.add(\"Coal\", 1, 13)\n\t.add(\"Tin ore\", 1, 4)\n\t.add(\"Copper ore\", 1, 3)\n\t.add(\"Silver ore\", 1, 3)\n\t.add(\"Silver bar\", 1, 2)\n\t.add(\"Mithril ore\")\n\n\t/* Other */\n\t.add(\"Kebab\", 1, 13)\n\t.add(\"Waterskin(0)\", 2, 13)\n\n\t/* Subtables */\n\t.add(GemTable, 1, 4)\n\t.add(GemTable, 2, 2);\n\nexport default new SimpleMonster({\n\tid: 459,\n\tname: \"Desert Lizard\",\n\ttable: DesertLizardTable,\n\taliases: [\"desert lizard\"],\n});\n", "import LootTable from \"../../../../structures/LootTable\";\nimport SimpleMonster from \"../../../../structures/SimpleMonster\";\n\nexport const DesertWolfTable = new LootTable().every(\"Wolf bones\");\n\nexport default new SimpleMonster({\n\tid: 4649,\n\tname: \"Desert Wolf\",\n\ttable: DesertWolfTable,\n\taliases: [\"desert wolf\"],\n});\n", "import LootTable from \"../../../../structures/LootTable\";\nimport SimpleMonster from \"../../../../structures/SimpleMonster\";\nimport HerbDropTable from \"../../../subtables/HerbDropTable\";\nimport { GemTable } from \"../../../subtables/RareDropTable\";\nimport RareSeedTable from \"../../../subtables/RareSeedTable\";\n\nconst DeviantSpectreHerbTable = new LootTable().add(HerbDropTable, 2, 29).add(HerbDropTable, 3, 17);\n\nexport const DeviantSpectrePreTable = new LootTable()\n\t/* Weapons and armour */\n\t.add(\"Battlestaff\", 1, 5)\n\t.add(\"Black platelegs\", 1, 5)\n\t.add(\"Mithril battleaxe\", 1, 5)\n\t.add(\"Rune full helm\", 1, 2)\n\t.add(\"Lava battlestaff\", 1, 1)\n\t.add(\"Rune chainbody\", 1, 1)\n\n\t/* Herbs */\n\t.add(DeviantSpectreHerbTable, 1, 46)\n\n\t/* Seeds */\n\t.add(\"Limpwurt seed\", [3, 11], 10)\n\t.add(RareSeedTable, 1, 16)\n\n\t/* Other */\n\t.add(\"Adamantite ore\", 1, 5)\n\n\t/* Gem drop table */\n\t.add(GemTable, 1, 32);\n\nconst DeviantSpectreTable = new LootTable()\n\t.every(DeviantSpectrePreTable)\n\n\t/* Tertiary */\n\t.tertiary(128, \"Clue scroll (hard)\")\n\t.tertiary(512, \"Mystic robe bottom (dark)\");\n\nexport default new SimpleMonster({\n\tid: 7279,\n\tname: \"Deviant Spectre\",\n\ttable: DeviantSpectreTable,\n\taliases: [\"deviant\", \"deviant spectre\"],\n});\n", "import LootTable from \"../../../../structures/LootTable\";\nimport SimpleMonster from \"../../../../structures/SimpleMonster\";\nimport HerbDropTable from \"../../../subtables/HerbDropTable\";\nimport { GemTable } from \"../../../subtables/RareDropTable\";\nimport RareSeedTable from \"../../../subtables/RareSeedTable\";\n\nconst DrakeNotedHerbTable = new LootTable()\n\t.add(\"Grimy avantoe\", [1, 3], 10)\n\t.add(\"Grimy kwuarm\", [1, 3], 10)\n\t.add(\"Grimy ranarr weed\", [1, 3], 8)\n\t.add(\"Grimy snapdragon\", [1, 3], 8)\n\t.add(\"Grimy cadantine\", [1, 3], 8)\n\t.add(\"Grimy dwarf weed\", [1, 3], 8)\n\t.add(\"Grimy lantadyme\", [1, 3], 6)\n\t.add(\"Grimy torstol\", [1, 3], 6);\n\nconst DrakeOnTaskUniqueTable = new LootTable()\n\t/* Pre-roll */\n\t.oneIn(2000, \"Dragon thrownaxe\", [100, 200])\n\t.oneIn(2000, \"Dragon knife\", [100, 200])\n\t.oneIn(512, \"Drake's tooth\")\n\t.oneIn(512, \"Drake's claw\");\n\nconst DrakeOffTaskUniqueTable = new LootTable()\n\t/* Pre-roll */\n\t.oneIn(10_000, \"Dragon thrownaxe\", [100, 200])\n\t.oneIn(10_000, \"Dragon knife\", [100, 200])\n\t.oneIn(2560, \"Drake's tooth\")\n\t.oneIn(2560, \"Drake's claw\");\n\nexport const DrakePreTable = new LootTable()\n\t/* Weapons and armour */\n\t.add(\"Rune full helm\", 1, 3)\n\t.add(\"Red d'hide body\", 1, 2)\n\t.add(\"Black d'hide vambraces\", 1, 1)\n\t.add(\"Mystic earth staff\", 1, 1)\n\t.add(\"Dragon mace\", 1, 1)\n\n\t/* Runes and ammunition */\n\t.add(\"Fire rune\", [100, 200], 10)\n\t.add(\"Nature rune\", [30, 60], 10)\n\t.add(\"Law rune\", [25, 50], 10)\n\t.add(\"Death rune\", [20, 40], 10)\n\t.add(\"Rune arrow\", [35, 65], 10)\n\n\t/* Herbs */\n\t.add(HerbDropTable, [1, 3], 5)\n\t.add(DrakeNotedHerbTable, 1, 6)\n\n\t/* Seeds */\n\t.add(RareSeedTable, 1, 1)\n\n\t/* Other */\n\t.add(\"Coins\", [1000, 2000], 4)\n\t.add(\"Coins\", [5000, 7000], 1)\n\t.add(\"Diamond\", [3, 6], 4)\n\t.add(\"Swordfish\", [1, 2], 4)\n\n\t/* Rdt */\n\t.add(GemTable, 1, 1);\n\nconst DrakeTable = new LootTable()\n\t.every(\"Drake bones\")\n\t.every(DrakePreTable)\n\t.every(DrakeOffTaskUniqueTable)\n\n\t/* Tertiary */\n\t.tertiary(128, \"Clue scroll (hard)\");\n\nconst DrakeOnTaskTable = new LootTable()\n\t.every(\"Drake bones\")\n\t.every(DrakePreTable)\n\t.every(DrakeOnTaskUniqueTable)\n\n\t/* Tertiary */\n\t.tertiary(128, \"Clue scroll (hard)\");\n\nexport default new SimpleMonster({\n\tid: 8612,\n\tname: \"Drake\",\n\ttable: DrakeTable,\n\tonTaskTable: DrakeOnTaskTable,\n\taliases: [\"drake\", \"fire hippos\"],\n});\n", "import LootTable from \"../../../../structures/LootTable\";\nimport SimpleMonster from \"../../../../structures/SimpleMonster\";\n\nexport const DuckTable = new LootTable().every(\"Bones\");\n\nexport default new SimpleMonster({\n\tid: 1838,\n\tname: \"Duck\",\n\ttable: DuckTable,\n\taliases: [\"duck\"],\n});\n", "import LootTable from \"../../../../structures/LootTable\";\nimport SimpleMonster from \"../../../../structures/SimpleMonster\";\n\nexport const DucklingTable = new LootTable();\n\nexport default new SimpleMonster({\n\tid: 2001,\n\tname: \"Duckling\",\n\ttable: DucklingTable,\n\taliases: [\"duckling\"],\n});\n", "import LootTable from \"../../../../structures/LootTable\";\nimport SimpleMonster from \"../../../../structures/SimpleMonster\";\n\nexport const DungeonRatTable = new LootTable()\n\t.every(\"Bones\")\n\t.every(\"Raw rat meat\")\n\t.tertiary(128, \"Clue scroll (beginner)\");\n\nexport default new SimpleMonster({\n\tid: 2865,\n\tname: \"Dungeon rat\",\n\ttable: DungeonRatTable,\n\taliases: [\"dungeon rat\"],\n});\n", "import LootTable from \"../../../../structures/LootTable\";\nimport SimpleMonster from \"../../../../structures/SimpleMonster\";\nimport HerbDropTable from \"../../../subtables/HerbDropTable\";\nimport { GemTable } from \"../../../subtables/RareDropTable\";\n\nconst WildySlayerCaveTable = new LootTable()\n\t.add(\"Blighted entangle sack\", [1, 10], 11500)\n\t.add(\"Blighted anglerfish\", [1, 2], 8620)\n\t.add(\"Blighted manta ray\", [1, 2], 8620)\n\t.add(\"Blighted karambwan\", [1, 2], 5780)\n\t.add(\"Blighted teleport spell sack\", [1, 10], 5780)\n\t.add(\"Blighted ancient ice sack\", [1, 10], 5780)\n\t.add(\"Blighted vengeance sack\", [1, 10], 5780)\n\t.add(\"Blighted super restore(4)\", 1, 2880)\n\t.add(\"Revenant cave teleport\", 1, 2880)\n\t.add(\"Dareeyak teleport\", 1, 577)\n\t.add(\"Wilderness crabs teleport\", 1, 577)\n\t.add(\"Carrallanger teleport\", 1, 577)\n\t.add(\"Paddewwa teleport\", 1, 577)\n\t.add(\"Annakarl teleport\", 1, 577)\n\t.add(\"Lassar teleport\", 1, 577)\n\t.add(\"Kharyrll teleport\", 1, 577)\n\t.add(\"Senntisten teleport\", 1, 577)\n\t.add(\"Ghorrock teleport\", 1, 577)\n\t.add(\"Target teleport\", 1, 577)\n\t.add(\"Magic shortbow scroll\", 1, 231)\n\t.add(\"Ring of wealth scroll\", 1, 231)\n\t.add(\"Trouver parchment\", 2, 58)\n\t.add(\"Looting bag note\", 1, 58);\n\nexport const DustDevilPreTable = new LootTable()\n\t/* Weapons and armour */\n\t.add(\"Adamant axe\", 1, 3)\n\t.add(\"Rune dagger\", 1, 2)\n\t.add(\"Red d'hide vambraces\", 1, 2)\n\t.add(\"Air battlestaff\", 1, 2)\n\t.add(\"Earth battlestaff\", 1, 2)\n\t.add(\"Black d'hide vambraces\", 1, 1)\n\t.add(\"Mystic air staff\", 1, 1)\n\t.add(\"Mystic earth staff\", 1, 1)\n\t.add(\"Dragon dagger\", 1, 1)\n\t.oneIn(4000, \"Dust battlestaff\")\n\t.oneIn(32_768, \"Dragon chainbody\")\n\n\t/* Runes and ammunition */\n\t.add(\"Dust rune\", 200, 10)\n\t.add(\"Earth rune\", 300, 10)\n\t.add(\"Fire rune\", 300, 10)\n\t.add(\"Chaos rune\", 80, 7)\n\t.add(\"Rune arrow\", 12, 5)\n\t.add(\"Soul rune\", 20, 4)\n\t.add(\"Fire rune\", 50, 1)\n\t.add(\"Soul rune\", 50, 1)\n\n\t/* Herbs */\n\t.add(HerbDropTable, 1, 8)\n\n\t/* Other */\n\t.add(\"Coins\", [2000, 4000], 32)\n\t.add(\"Mithril bar\", 10, 3)\n\t.add(\"Ugthanki kebab\", 4, 2)\n\t.add(\"Adamantite bar\", 4, 1)\n\n\t/* RDT */\n\t.add(GemTable, 1, 8);\n\nconst DustDevilTable = new LootTable().every(\"Bones\").every(DustDevilPreTable);\n\nconst DustDevilWildyCaveTable = new LootTable()\n\t.every(DustDevilTable)\n\t.add(WildySlayerCaveTable, 1, 64)\n\t.add(new LootTable(), 1, 36);\n\nexport default new SimpleMonster({\n\tid: 423,\n\tname: \"Dust Devil\",\n\ttable: DustDevilTable,\n\twildyCaveTable: DustDevilWildyCaveTable,\n\taliases: [\"dust devil\", \"dusty\", \"dusties\"],\n});\n", "import LootTable from \"../../../../structures/LootTable\";\nimport SimpleMonster from \"../../../../structures/SimpleMonster\";\nimport { GemTable } from \"../../../subtables/RareDropTable\";\n\nexport const DwarfTable = new LootTable({ limit: 128 })\n\t.every(\"Bones\")\n\t.tertiary(100, \"Clue scroll (beginner)\")\n\n\t/* Weapons and Armour*/\n\t.add(\"Bronze pickaxe\", 1, 13)\n\t.add(\"Bronze med helm\", 1, 4)\n\t.add(\"Bronze battleaxe\", 1, 2)\n\t.add(\"Iron battleaxe\")\n\n\t/* Runes and ammunition */\n\t.add(\"Bronze bolts\", [2, 12], 7)\n\t.add(\"Chaos rune\", 2, 4)\n\t.add(\"Nature rune\", 2, 4)\n\n\t/* Coins */\n\t.add(\"Coins\", 4, 20)\n\t.add(\"Coins\", 10, 15)\n\t.add(\"Coins\", 30, 2)\n\n\t/* Other */\n\t.add(\"Hammer\", 1, 10)\n\t.add(\"Bronze bar\", 1, 7)\n\t.add(\"Iron ore\", 1, 4)\n\t.add(\"Tin ore\", 1, 3)\n\t.add(\"Copper ore\", 1, 3)\n\t.add(\"Iron bar\", 1, 3)\n\t.add(\"Coal\", 1, 2)\n\n\t.add(GemTable);\n\nexport default new SimpleMonster({\n\tid: 290,\n\tname: \"Dwarf\",\n\ttable: DwarfTable,\n\taliases: [\"dwarf\"],\n});\n", "import LootTable from \"../../../../structures/LootTable\";\nimport SimpleMonster from \"../../../../structures/SimpleMonster\";\n\nexport const DwarfGangMemberTable = new LootTable().every(\"Bones\");\n\nexport default new SimpleMonster({\n\tid: 1354,\n\tname: \"Dwarf gang member\",\n\ttable: DwarfGangMemberTable,\n\taliases: [\"dwarf gang member\"],\n});\n", "import LootTable from \"../../../../structures/LootTable\";\nimport SimpleMonster from \"../../../../structures/SimpleMonster\";\nimport CommonSeedDropTable from \"../../../subtables/CommonSeedDropTable\";\nimport HerbDropTable from \"../../../subtables/HerbDropTable\";\nimport { GemTable } from \"../../../subtables/RareDropTable\";\n\nexport const EarthWarriorTable = new LootTable({ limit: 128 })\n\t.tertiary(5000, \"Earth warrior champion scroll\")\n\n\t// Weapons\n\t.add(\"Steel spear\", 1, 3)\n\t.add(\"Staff of earth\", 1, 2)\n\n\t// Runes/ammunition\n\t.add(\"Earth rune\", 12, 13)\n\t.add(\"Nature rune\", 3, 9)\n\t.add(\"Chaos rune\", 3, 7)\n\t.add(\"Law rune\", 2, 6)\n\t.add(\"Death rune\", 2, 4)\n\t.add(\"Earth rune\", 60, 3)\n\t.add(\"Blood rune\", 2, 1)\n\n\t.add(HerbDropTable, 1, 14)\n\t.add(CommonSeedDropTable, 1, 18)\n\t.add(GemTable, 1, 2)\n\t.add(\"Coins\", 12, 18);\n\nexport default new SimpleMonster({\n\tid: 2840,\n\tname: \"Earth Warrior\",\n\ttable: EarthWarriorTable,\n\taliases: [\"earth warrior\"],\n});\n", "import LootTable from \"../../../../structures/LootTable\";\nimport SimpleMonster from \"../../../../structures/SimpleMonster\";\nimport HerbDropTable from \"../../../subtables/HerbDropTable\";\nimport RareDropTable, { GemTable } from \"../../../subtables/RareDropTable\";\n\nconst ZamorakRobesTable = new LootTable()\n\t.add(\"Zamorak monk top\", 1, 4)\n\t.add(\"Zamorak monk top\", 1, 4)\n\t.add(\"Elder chaos hood\", 1, 1)\n\t.add(\"Elder chaos robe\", 1, 1)\n\t.add(\"Elder chaos top\", 1, 1);\n\nexport const ElderChaosDruidTable = new LootTable()\n\t.every(\"Bones\")\n\t.add(ZamorakRobesTable, 1, 1)\n\n\t/* Runes and ammunition */\n\t.add(\"Law rune\", 6, 7)\n\t.add(\"Mithril bolts\", [8, 28], 6)\n\t.add(\"Air rune\", 56, 5)\n\t.add(\"Body rune\", 19, 5)\n\t.add(\"Chaos rune\", 7, 5)\n\t.add(\"Earth rune\", 19, 5)\n\t.add(\"Mind rune\", 22, 5)\n\t.add(\"Nature rune\", 12, 1)\n\n\t/* Herbs */\n\t.add(HerbDropTable, 1, 15)\n\t.add(HerbDropTable, 2, 20)\n\t.add(HerbDropTable, 3, 15)\n\t.add(HerbDropTable, 4, 5)\n\n\t/* Coins */\n\t.add(\"Coins\", 80, 7)\n\t.add(\"Coins\", 250, 6)\n\n\t/* Other */\n\t.add(\"Vial of water\", 4, 10)\n\t.add(\"Steel longsword\", 1, 5)\n\t.add(\"Dark fishing bait\", [10, 24], 2)\n\t.add(\"Snape grass\", 4, 1)\n\t.add(\"Unholy mould\", 1, 1)\n\n\t/* Gem drop table */\n\t.add(RareDropTable, 1, 1)\n\t.add(GemTable, 1, 1)\n\n\t/* Tertiary */\n\t.tertiary(20, \"Ensouled chaos druid head\")\n\t.tertiary(128, \"Clue scroll (hard)\");\n\nexport default new SimpleMonster({\n\tid: 6607,\n\tname: \"Elder Chaos druid\",\n\ttable: ElderChaosDruidTable,\n\taliases: [\"elder chaos druid\"],\n});\n", "import LootTable from \"../../../../structures/LootTable\";\nimport SimpleMonster from \"../../../../structures/SimpleMonster\";\n\nconst ElfTable = new LootTable({ limit: 128 })\n\t.add(\"Coins\", [280, 350], 105)\n\t.add(\"Death rune\", [1, 2], 8)\n\t.add(\"Jug of wine\", 1, 6)\n\t.add(\"Nature rune\", [1, 3], 5)\n\t.add(\"Fire orb\", 1, 2)\n\t.add(\"Diamond\", 1, 1)\n\t.add(\"Gold ore\", 1, 1)\n\t.tertiary(99_175, \"Rocky\");\n\nexport default new SimpleMonster({\n\tid: 5299,\n\tname: \"Elf\",\n\tpickpocketTable: ElfTable,\n\taliases: [\"elf\"],\n});\n", "import LootTable from \"../../../../structures/LootTable\";\nimport SimpleMonster from \"../../../../structures/SimpleMonster\";\nimport HerbDropTable from \"../../../subtables/HerbDropTable\";\nimport { GemTable } from \"../../../subtables/RareDropTable\";\n\nconst ElfArcherTable = new LootTable()\n\t.every(\"Bones\")\n\n\t/* Weapons and armour */\n\t.add(\"Green d'hide body\", 1, 4)\n\t.add(\"Green d'hide chaps\", 1, 3)\n\t.add(\"Mithril spear\", 1, 2)\n\t.add(\"Mithril kiteshield\", 1, 1)\n\t.add(\"Adamant full helm\", 1, 1)\n\t.add(\"Rune dagger\", 1, 1)\n\n\t/* Runes and ammunition */\n\t.add(\"Water rune\", 70, 8)\n\t.add(\"Nature rune\", 12, 5)\n\t.add(\"Law rune\", 2, 3)\n\t.add(\"Fire rune\", 37, 2)\n\n\t/* Herbs */\n\t.add(HerbDropTable, 1, 15)\n\n\t/* Coins */\n\t.add(\"Coins\", 44, 29)\n\t.add(\"Coins\", 180, 10)\n\t.add(\"Coins\", 20, 5)\n\n\t/* Other */\n\t.add(\"Crystal teleport seed\", 1, 25)\n\t.add(\"Bass\", 1, 3)\n\t.add(\"Shark\", 1, 3)\n\t.add(\"Adamantite ore\", 1, 2)\n\n\t/* Gem drop table */\n\t.add(GemTable, 1, 5)\n\n\t/* Tertiary */\n\t.tertiary(50, \"Ensouled elf head\")\n\t.tertiary(128, \"Clue scroll (hard)\");\n\nexport default new SimpleMonster({\n\tid: 5295,\n\tname: \"Elf Archer\",\n\ttable: ElfArcherTable,\n\taliases: [\"elf archer\"],\n});\n", "import LootTable from \"../../../../structures/LootTable\";\nimport SimpleMonster from \"../../../../structures/SimpleMonster\";\nimport HerbDropTable from \"../../../subtables/HerbDropTable\";\nimport { GemTable } from \"../../../subtables/RareDropTable\";\n\nconst ElfWarriorTable = new LootTable()\n\t.every(\"Bones\")\n\n\t/* Weapons and armour */\n\t.add(\"Green d'hide body\", 1, 4)\n\t.add(\"Green d'hide chaps\", 1, 3)\n\t.add(\"Mithril spear\", 1, 2)\n\t.add(\"Mithril kiteshield\", 1, 1)\n\t.add(\"Adamant full helm\", 1, 1)\n\t.add(\"Rune dagger\", 1, 1)\n\n\t/* Runes and ammunition */\n\t.add(\"Water rune\", 70, 8)\n\t.add(\"Nature rune\", 12, 5)\n\t.add(\"Law rune\", 2, 3)\n\t.add(\"Fire rune\", 37, 2)\n\n\t/* Herbs */\n\t.add(HerbDropTable, 1, 15)\n\n\t/* Coins */\n\t.add(\"Coins\", 44, 29)\n\t.add(\"Coins\", 180, 10)\n\t.add(\"Coins\", 20, 5)\n\n\t/* Other */\n\t.add(\"Crystal teleport seed\", 1, 25)\n\t.add(\"Bass\", 1, 3)\n\t.add(\"Shark\", 1, 3)\n\t.add(\"Adamantite ore\", 1, 2)\n\n\t/* RDT */\n\t.add(GemTable, 1, 5)\n\n\t/* Tertiary */\n\t.tertiary(40, \"Ensouled elf head\")\n\t.tertiary(128, \"Clue scroll (hard)\");\n\nexport default new SimpleMonster({\n\tid: 5293,\n\tname: \"Elf Warrior\",\n\ttable: ElfWarriorTable,\n\taliases: [\"elf warrior\", \"elves\"],\n});\n", "import LootTable from \"../../../../structures/LootTable\";\nimport SimpleMonster from \"../../../../structures/SimpleMonster\";\n\nconst LogTable = new LootTable()\n\t.add(\"Logs\", 1, 10)\n\t.add(\"Oak logs\", 2, 8)\n\t.add(\"Willow logs\", 2, 6)\n\t.add(\"Maple logs\", 2, 4)\n\t.add(\"Yew logs\", 2, 2)\n\t.add(\"Magic logs\", 2, 1);\n\nexport const EntTable = new LootTable().tertiary(256, \"Bird nest\").add(LogTable, 1, 1).add(LogTable, 2, 1);\n\nexport default new SimpleMonster({\n\tid: 6594,\n\tname: \"Ent\",\n\ttable: EntTable,\n\taliases: [\"ent\"],\n});\n", "import LootTable from \"../../../../structures/LootTable\";\nimport SimpleMonster from \"../../../../structures/SimpleMonster\";\n\nconst FarmerTable = new LootTable().add(\"Coins\", 9, 98).add(\"Potato seed\", 1, 2).tertiary(257_211, \"Rocky\");\n\nexport default new SimpleMonster({\n\tid: 3114,\n\tname: \"Farmer\",\n\tpickpocketTable: FarmerTable,\n\taliases: [\"farmer\"],\n});\n", "import LootTable from \"../../../../structures/LootTable\";\nimport SimpleMonster from \"../../../../structures/SimpleMonster\";\n\nconst FemaleHamMemberTable = new LootTable()\n\t// Armour and weaponry\n\t.add(\"Bronze arrow\", [1, 13], 1 / 33.33)\n\t.add(\"Bronze axe\", 1, 1 / 33.33)\n\t.add(\"Bronze dagger\", 1, 1 / 33.33)\n\t.add(\"Bronze pickaxe\", 1, 1 / 33.33)\n\t.add(\"Iron axe\", 1, 1 / 33.33)\n\t.add(\"Iron dagger\", 1, 1 / 33.33)\n\t.add(\"Iron pickaxe\", 1, 1 / 33.33)\n\t.add(\"Leather body\", 1, 1 / 33.33)\n\t.add(\"Steel arrow\", [1, 13], 1 / 50)\n\t.add(\"Steel axe\", 1, 1 / 50)\n\t.add(\"Steel dagger\", 1, 1 / 50)\n\t.add(\"Steel pickaxe\", 1, 1 / 50)\n\t.add(\"Ham boots\", 1, 1 / 100)\n\t.add(\"Ham cloak\", 1, 1 / 100)\n\t.add(\"Ham gloves\", 1, 1 / 100)\n\t.add(\"Ham hood\", 1, 1 / 100)\n\t.add(\"Ham logo\", 1, 1 / 100)\n\t.add(\"Ham robe\", 1, 1 / 100)\n\t.add(\"Ham shirt\", 1, 1 / 100)\n\n\t// Other\n\t.add(\"Coins\", [1, 21], 1 / 6.667)\n\t.add(\"Buttons\", 1, 1 / 25)\n\t.add(\"Damaged armour\", 1, 1 / 25)\n\t.add(\"Rusty sword\", 1, 1 / 25)\n\t.add(\"Feather\", [1, 7], 1 / 33.33)\n\t.add(\"Logs\", 1, 1 / 33.33)\n\t.add(\"Thread\", [1, 10], 1 / 33.33)\n\t.add(\"Cowhide\", 1, 1 / 33.33)\n\t.add(\"Knife\", 1, 1 / 50)\n\t.add(\"Needle\", 1, 1 / 50)\n\t.add(\"Raw anchovies\", 1, 1 / 50)\n\t.add(\"Raw chicken\", 1, 1 / 50)\n\t.add(\"Tinderbox\", 1, 1 / 50)\n\t.add(\"Uncut opal\", 1, 1 / 50)\n\t.add(\"Clue scroll (easy)\", 1, 1 / 50)\n\t.add(\"Coal\", 1, 1 / 50)\n\t.add(\"Iron ore\", 1, 1 / 50)\n\t.add(\"Uncut jade\", 1, 1 / 50)\n\t.add(\"Grimy guam leaf\", 1, 1 / 91.67)\n\t.add(\"Grimy marrentill\", 1, 1 / 183.3)\n\t.add(\"Grimy tarromin\", 1, 1 / 275)\n\t.tertiary(257_211, \"Rocky\");\n\nexport default new SimpleMonster({\n\tid: 2541,\n\tname: \"Female H.A.M. Member\",\n\tpickpocketTable: FemaleHamMemberTable,\n\taliases: [\"ham member female\", \"ham female\", \"female h.a.m. member\"],\n});\n", "import LootTable from \"../../../../structures/LootTable\";\nimport SimpleMonster from \"../../../../structures/SimpleMonster\";\nimport HerbDropTable from \"../../../subtables/HerbDropTable\";\nimport { GemTable } from \"../../../subtables/RareDropTable\";\nimport { UncommonSeedDropTable } from \"../../../subtables/index\";\n\nexport const FeralVampyreTable = new LootTable({ limit: 128 })\n\t.every(\"Vampyre dust\")\n\n\t/* Runes */\n\t.add(\"Earth rune\", 4, 10)\n\t.add(\"Death rune\", 2, 10)\n\t.add(\"Chaos rune\", 3, 8)\n\t.add(\"Blood rune\", 1, 5)\n\t.add(\"Blood rune\", 2, 1)\n\n\t/* Herbs */\n\t.add(HerbDropTable, 1, 10)\n\n\t/* Seeds */\n\t.add(UncommonSeedDropTable, 1, 19)\n\n\t/* Other */\n\t.add(\"Coins\", 15, 40)\n\t.add(\"Black axe\", 1, 3)\n\t.add(\"Earth talisman\", 1, 2)\n\n\t/* Gem drop table */\n\t.add(GemTable, 1, 4)\n\n\t/* Tertiary */\n\t.tertiary(128, \"Clue scroll (medium)\");\n\nexport default new SimpleMonster({\n\tid: 3234,\n\tname: \"Feral Vampyre\",\n\ttable: FeralVampyreTable,\n\taliases: [\"feral vampyre\", \"vampyres\", \"vampyre\"],\n});\n", "import LootTable from \"../../../../structures/LootTable\";\nimport SimpleMonster from \"../../../../structures/SimpleMonster\";\n\nconst FeverSpiderTable = new LootTable({ limit: 120 }).add(\"Grimy kwuarm\", 10);\n\nexport default new SimpleMonster({\n\tid: 626,\n\tname: \"Fever spider\",\n\ttable: FeverSpiderTable,\n\taliases: [\"fever spider\"],\n});\n", "import LootTable from \"../../../../structures/LootTable\";\nimport SimpleMonster from \"../../../../structures/SimpleMonster\";\nimport HerbDropTable from \"../../../subtables/HerbDropTable\";\nimport RareDropTable, { GemTable } from \"../../../subtables/RareDropTable\";\n\nconst FireGiantTable = new LootTable()\n\t.every(\"Big bones\")\n\n\t/* Weapons and armour */\n\t.add(\"Steel axe\", 1, 3)\n\t.add(\"Mithril sq shield\", 1, 2)\n\t.add(\"Fire battlestaff\", 1, 1)\n\t.add(\"Rune scimitar\", 1, 1)\n\n\t/* Runes and ammunition */\n\t.add(\"Fire rune\", 150, 10)\n\t.add(\"Chaos rune\", 5, 7)\n\t.add(\"Rune arrow\", 12, 5)\n\t.add(\"Blood rune\", 5, 4)\n\t.add(\"Fire rune\", 37, 1)\n\t.add(\"Law rune\", 2, 1)\n\n\t/* Herbs */\n\t.add(HerbDropTable, 1, 19)\n\n\t/* Coins */\n\t.add(\"Coins\", 60, 40)\n\t.add(\"Coins\", 15, 7)\n\t.add(\"Coins\", 25, 6)\n\t.add(\"Coins\", 300, 2)\n\t.add(\"Coins\", 50, 1)\n\n\t/* Other */\n\t.add(\"Lobster\", 1, 3)\n\t.add(\"Steel bar\", 1, 2)\n\t.add(\"Strength potion(2)\", 1, 1)\n\n\t/* RDT */\n\t.add(RareDropTable, 1, 1)\n\t.add(GemTable, 1, 11)\n\n\t/* Tertiary */\n\t.tertiary(20, \"Ensouled giant head\")\n\t.tertiary(400, \"Long bone\")\n\t.tertiary(5000, \"Giant champion scroll\")\n\t.tertiary(5013, \"Curved bone\");\n\nexport default new SimpleMonster({\n\tid: 2075,\n\tname: \"Fire Giant\",\n\ttable: FireGiantTable,\n\taliases: [\"fire giant\", \"fire g\", \"fires\"],\n});\n", "import LootTable from \"../../../../structures/LootTable\";\nimport SimpleMonster from \"../../../../structures/SimpleMonster\";\n\nexport const FiyrShadeTable = new LootTable().every(\"Fiyr remains\");\n\nexport default new SimpleMonster({\n\tid: 1286,\n\tname: \"Fiyr Shade\",\n\ttable: FiyrShadeTable,\n\taliases: [\"fiyr shade\"],\n});\n", "import LootTable from \"../../../../structures/LootTable\";\nimport SimpleMonster from \"../../../../structures/SimpleMonster\";\nimport HerbDropTable from \"../../../subtables/HerbDropTable\";\nimport { GemTable } from \"../../../subtables/RareDropTable\";\n\nexport const FleshCrawlerTable = new LootTable()\n\t/* Runes */\n\t.add(\"Body rune\", [3, 12], 17)\n\t.add(\"Dust rune\", [3, 9], 4)\n\t.add(\"Fire rune\", 42, 2)\n\t.add(\"Nature rune\", 5, 2)\n\n\t/* Herbs */\n\t.add(HerbDropTable, 1, 17)\n\n\t/* Coins */\n\t.add(\"Coins\", [5, 84], 7)\n\n\t/* Other */\n\t.add(\"Iron ore\", 1, 5)\n\t.add(\"Iron ore\", [3, 10], 5)\n\t.add(\"Ashes\", 1, 4)\n\t.add(\"Bottom of sceptre\", 1, 3)\n\t.add(\"Silver bar\", 1, 1)\n\n\t/* Gem drop table */\n\t.add(GemTable, 1, 2);\n\nexport default new SimpleMonster({\n\tid: 2498,\n\tname: \"Flesh Crawler\",\n\ttable: FleshCrawlerTable,\n\taliases: [\"flesh crawler\"],\n});\n", "import LootTable from \"../../../../structures/LootTable\";\nimport SimpleMonster from \"../../../../structures/SimpleMonster\";\nimport RareDropTable from \"../../../subtables/RareDropTable\";\nimport TreeHerbSeedTable from \"../../../subtables/TreeHerbSeedTable\";\n\nconst AncientWyvernTreeSeedTable = new LootTable().add(\"Mahogany seed\", 1, 2).add(\"Magic seed\", 1, 1);\n\nconst AncientWyvernTable = new LootTable()\n\t.every(\"Wyvern bones\")\n\t.oneIn(600, \"Granite longsword\")\n\t.oneIn(600, \"Granite boots\")\n\n\t/* Weapons and armour */\n\t.add(\"Air battlestaff\", 2, 16)\n\t.add(\"Battlestaff\", 6, 8)\n\t.add(\"Mystic air staff\", 1, 6)\n\t.add(\"Rune pickaxe\", 1, 6)\n\t.add(\"Rune battleaxe\", 1, 4)\n\t.add(\"Rune full helm\", 1, 4)\n\n\t/* Runes and ammunition */\n\t.add(\"Nature rune\", [37, 43], 8)\n\t.add(\"Death rune\", [47, 53], 8)\n\t.add(\"Blood rune\", [27, 33], 8)\n\t.add(\"Adamant arrow\", [50, 76], 6)\n\t.add(\"Rune arrow\", [25, 50], 6)\n\t.add(\"Runite bolts\", [30, 60], 2)\n\n\t/* Herbs 27/128 */\n\t.add(\"Grimy torstol\", 1, 8)\n\t.add(\"Grimy ranarr weed\", 1, 8)\n\t.add(\"Grimy kwuarm\", 3, 5)\n\t.add(\"Grimy cadantine\", 3, 4)\n\t.add(\"Grimy dwarf weed\", 3, 4)\n\t.add(\"Grimy lantadyme\", 3, 3)\n\n\t/* Seeds */\n\t.add(TreeHerbSeedTable, 1, 4)\n\t.add(\"Seaweed spore\", [16, 24], 2)\n\t.add(\"Ranarr seed\", [2, 3], 1)\n\t.add(\"Yew seed\", 1, 2)\n\t.add(AncientWyvernTreeSeedTable, 1, 2)\n\n\t/* Materials 41/128 */\n\t.add(\"Adamantite bar\", 3, 12)\n\t.add(\"Volcanic ash\", [80, 120], 12)\n\t.add(\"Adamantite ore\", 20, 10)\n\t.add(\"Mahogany logs\", [25, 30], 10)\n\t.add(\"Onyx bolt tips\", [10, 15], 8)\n\t.add(\"Runite ore\", [2, 3], 6)\n\t.add(\"Diamond\", [3, 5], 6)\n\n\t/* Fossils */\n\t.tertiary(2, \"Numulite\", [5, 95])\n\t.tertiary(29, \"Unidentified small fossil\")\n\t.tertiary(58, \"Unidentified medium fossil\")\n\t.tertiary(73, \"Unidentified large fossil\")\n\t.tertiary(292, \"Unidentified rare fossil\")\n\n\t/* Other 20/128 */\n\t.add(\"Shark\", 5, 16)\n\t.add(\"Super restore(4)\", 2, 16)\n\t.add(\"Coins\", [2000, 6000], 14)\n\t.add(\"Super combat potion(2)\", 1, 10)\n\t.add(\"Runite crossbow (u)\", 1, 6)\n\t.add(\"Supercompost\", [7, 10], 6)\n\n\t/* RDT */\n\t.add(RareDropTable, 1, 4)\n\n\t/* Tertiary */\n\t.tertiary(350, \"Clue scroll (elite)\")\n\t.tertiary(10_000, \"Wyvern visage\");\n\nexport default new SimpleMonster({\n\tid: 7795,\n\tname: \"Ancient Wyvern\",\n\ttable: AncientWyvernTable,\n\taliases: [\"ancient wyvern\", \"ancient\"],\n});\n", "import LootTable from \"../../../../structures/LootTable\";\nimport SimpleMonster from \"../../../../structures/SimpleMonster\";\nimport TreeHerbSeedTable from \"../../../subtables/TreeHerbSeedTable\";\nimport WyvernHerbTable from \"../../../subtables/WyvernHerbTable\";\n\nconst LongTailedWyvernTable = new LootTable()\n\t.every(\"Wyvern bones\")\n\t.oneIn(512, \"Granite longsword\")\n\t.oneIn(2560, \"Granite boots\")\n\n\t/* Weapons and armour */\n\t.add(\"Air battlestaff\", 1, 4)\n\t.add(\"Battlestaff\", [3, 5], 3)\n\t.add(\"Adamant battleaxe\", 1, 2)\n\t.add(\"Adamant full helm\", 1, 2)\n\t.add(\"Rune pickaxe\", 1, 2)\n\t.add(\"Adamant platebody\", 1, 2)\n\n\t/* Runes and ammunition */\n\t.add(\"Adamant arrow\", [38, 42], 6)\n\t.add(\"Water rune\", 50, 4)\n\t.add(\"Chaos rune\", 15, 4)\n\t.add(\"Law rune\", 15, 4)\n\t.add(\"Death rune\", 15, 4)\n\t.add(\"Blood rune\", 15, 4)\n\t.add(\"Soul rune\", 10, 1)\n\t.add(\"Runite bolts\", [12, 30], 1)\n\n\t/* Herbs */\n\t.add(WyvernHerbTable, 1, 13)\n\n\t/* Seeds */\n\t.add(TreeHerbSeedTable, 1, 1)\n\t.add(\"Seaweed spore\", 12, 2)\n\t.add(\"Ranarr seed\", 1, 2)\n\n\t/* Resources */\n\t.add(\"Pure essence\", 150, 8)\n\t.add(\"Adamantite bar\", [2, 4], 6)\n\t.add(\"Teak logs\", 35, 6)\n\t.add(\"Snape grass\", [10, 15], 3)\n\t.add(\"Runite ore\", [1, 2], 3)\n\n\t/* Other */\n\t.add(\"Coins\", 3000, 11)\n\t.add(\"Lobster\", 2, 8)\n\t.add(\"Prayer potion(4)\", 1, 7)\n\t.add(\"Adamant crossbow (u)\", 1, 2)\n\t.add(\"Calcite\", 2, 2)\n\t.add(\"Pyrophosphite\", 2, 2)\n\t.add(\"Volcanic ash\", [20, 60], 2)\n\n\t/* Tertiary */\n\t.tertiary(2, \"Numulite\", [5, 95])\n\t.tertiary(35, \"Unidentified small fossil\")\n\t.tertiary(70, \"Unidentified medium fossil\")\n\t.tertiary(88, \"Unidentified large fossil\")\n\t.tertiary(118, \"Clue scroll (hard)\")\n\t.tertiary(350, \"Unidentified rare fossil\")\n\t.tertiary(12_000, \"Wyvern visage\");\n\nexport default new SimpleMonster({\n\tid: 7792,\n\tname: \"Long-tailed Wyvern\",\n\ttable: LongTailedWyvernTable,\n\taliases: [\"longtailed\", \"longtailed wyvern\", \"long-tailed wyvern\"],\n});\n", "import LootTable from \"../../../../structures/LootTable\";\nimport SimpleMonster from \"../../../../structures/SimpleMonster\";\nimport TreeHerbSeedTable from \"../../../subtables/TreeHerbSeedTable\";\nimport WyvernHerbTable from \"../../../subtables/WyvernHerbTable\";\n\nconst SpittingWyvernTable = new LootTable()\n\t.every(\"Wyvern bones\")\n\t.oneIn(512, \"Granite longsword\")\n\t.oneIn(2560, \"Granite boots\")\n\n\t/* Weapons and armour */\n\t.add(\"Air battlestaff\", 1, 4)\n\t.add(\"Battlestaff\", [3, 5], 3)\n\t.add(\"Adamant battleaxe\", 1, 2)\n\t.add(\"Adamant full helm\", 1, 2)\n\t.add(\"Rune pickaxe\", 1, 2)\n\t.add(\"Adamant platebody\", 1, 2)\n\n\t/* Runes and ammunition */\n\t.add(\"Adamant arrow\", [38, 42], 6)\n\t.add(\"Water rune\", 50, 4)\n\t.add(\"Chaos rune\", 15, 4)\n\t.add(\"Law rune\", 15, 4)\n\t.add(\"Death rune\", 15, 4)\n\t.add(\"Blood rune\", 15, 4)\n\t.add(\"Soul rune\", 10, 1)\n\t.add(\"Runite bolts\", [12, 30], 1)\n\n\t/* Herbs */\n\t.add(WyvernHerbTable, 1, 13)\n\n\t/* Seeds */\n\t.add(TreeHerbSeedTable, 1, 1)\n\t.add(\"Seaweed spore\", 12, 2)\n\t.add(\"Ranarr seed\", 1, 2)\n\n\t/* Resources */\n\t.add(\"Pure essence\", 150, 8)\n\t.add(\"Adamantite bar\", [2, 4], 6)\n\t.add(\"Teak logs\", 35, 6)\n\t.add(\"Snape grass\", [10, 15], 3)\n\t.add(\"Runite ore\", [1, 2], 3)\n\n\t/* Other */\n\t.add(\"Coins\", 3000, 11)\n\t.add(\"Lobster\", 2, 8)\n\t.add(\"Prayer potion(4)\", 1, 7)\n\t.add(\"Adamant crossbow (u)\", 1, 2)\n\t.add(\"Calcite\", 2, 2)\n\t.add(\"Pyrophosphite\", 2, 2)\n\t.add(\"Volcanic ash\", [20, 60], 2)\n\n\t/* Tertiary */\n\t.tertiary(2, \"Numulite\", [5, 95])\n\t.tertiary(35, \"Unidentified small fossil\")\n\t.tertiary(70, \"Unidentified medium fossil\")\n\t.tertiary(88, \"Unidentified large fossil\")\n\t.tertiary(118, \"Clue scroll (hard)\")\n\t.tertiary(350, \"Unidentified rare fossil\")\n\t.tertiary(12_000, \"Wyvern visage\");\n\nexport default new SimpleMonster({\n\tid: 7794,\n\tname: \"Spitting Wyvern\",\n\ttable: SpittingWyvernTable,\n\taliases: [\"spitting wyvern\", \"spitting\", \"fossil island wyverns\"],\n});\n", "import LootTable from \"../../../../structures/LootTable\";\nimport SimpleMonster from \"../../../../structures/SimpleMonster\";\nimport TreeHerbSeedTable from \"../../../subtables/TreeHerbSeedTable\";\nimport WyvernHerbTable from \"../../../subtables/WyvernHerbTable\";\n\nconst TalonedWyvernTable = new LootTable()\n\t.every(\"Wyvern bones\")\n\t.oneIn(512, \"Granite longsword\")\n\t.oneIn(2560, \"Granite boots\")\n\n\t/* Weapons and armour */\n\t.add(\"Air battlestaff\", 1, 4)\n\t.add(\"Battlestaff\", [3, 5], 3)\n\t.add(\"Adamant battleaxe\", 1, 2)\n\t.add(\"Adamant full helm\", 1, 2)\n\t.add(\"Rune pickaxe\", 1, 2)\n\t.add(\"Adamant platebody\", 1, 2)\n\n\t/* Runes and ammunition */\n\t.add(\"Adamant arrow\", [38, 42], 6)\n\t.add(\"Water rune\", 50, 4)\n\t.add(\"Chaos rune\", 15, 4)\n\t.add(\"Law rune\", 15, 4)\n\t.add(\"Death rune\", 15, 4)\n\t.add(\"Blood rune\", 15, 4)\n\t.add(\"Soul rune\", 10, 1)\n\t.add(\"Runite bolts\", [12, 30], 1)\n\n\t/* Herbs */\n\t.add(WyvernHerbTable, 1, 13)\n\n\t/* Seeds */\n\t.add(TreeHerbSeedTable, 1, 1)\n\t.add(\"Seaweed spore\", 12, 2)\n\t.add(\"Ranarr seed\", 1, 2)\n\n\t/* Resources */\n\t.add(\"Pure essence\", 150, 8)\n\t.add(\"Adamantite bar\", [2, 4], 6)\n\t.add(\"Teak logs\", 35, 6)\n\t.add(\"Snape grass\", [10, 15], 3)\n\t.add(\"Runite ore\", [1, 2], 3)\n\n\t/* Other */\n\t.add(\"Coins\", 3000, 11)\n\t.add(\"Lobster\", 2, 8)\n\t.add(\"Prayer potion(4)\", 1, 7)\n\t.add(\"Adamant crossbow (u)\", 1, 2)\n\t.add(\"Calcite\", 2, 2)\n\t.add(\"Pyrophosphite\", 2, 2)\n\t.add(\"Volcanic ash\", [20, 60], 2)\n\n\t/* Tertiary */\n\t.tertiary(2, \"Numulite\", [5, 95])\n\t.tertiary(35, \"Unidentified small fossil\")\n\t.tertiary(70, \"Unidentified medium fossil\")\n\t.tertiary(88, \"Unidentified large fossil\")\n\t.tertiary(118, \"Clue scroll (hard)\")\n\t.tertiary(350, \"Unidentified rare fossil\")\n\t.tertiary(12_000, \"Wyvern visage\");\n\nexport default new SimpleMonster({\n\tid: 7793,\n\tname: \"Taloned Wyvern\",\n\ttable: TalonedWyvernTable,\n\taliases: [\"taloned wyvern\", \"taloned\"],\n});\n", "import LootTable from \"../../../../structures/LootTable\";\nimport SimpleMonster from \"../../../../structures/SimpleMonster\";\n\nexport default new SimpleMonster({\n\tid: 3937,\n\tname: \"Fremennik citizen\",\n\tpickpocketTable: new LootTable().add(\"Coins\", 40).tertiary(257_211, \"Rocky\"),\n\taliases: [\"fremennik citizen\"],\n});\n", "import LootTable from \"../../../../structures/LootTable\";\nimport SimpleMonster from \"../../../../structures/SimpleMonster\";\nimport { GemTable } from \"../../../subtables/RareDropTable\";\n\nexport const GargoylePreTable = new LootTable()\n\t.oneIn(256, \"Granite maul\")\n\t.oneIn(512, \"Mystic robe top (dark)\")\n\n\t/* Weapons and armor */\n\t.add(\"Adamant platelegs\", 1, 4)\n\t.add(\"Rune full helm\", 1, 3)\n\t.add(\"Rune 2h sword\", 1, 2)\n\t.add(\"Adamant boots\", 1, 1)\n\t.add(\"Rune battleaxe\", 1, 1)\n\t.add(\"Rune platelegs\", 1, 1)\n\n\t/* Runes and ammunition */\n\t.add(\"Fire rune\", 75, 10)\n\t.add(\"Chaos rune\", 30, 8)\n\t.add(\"Fire rune\", 150, 6)\n\t.add(\"Death rune\", 15, 5)\n\n\t/* Materials */\n\t.add(\"Gold ore\", [10, 20], 10)\n\t.add(\"Pure essence\", 150, 6)\n\t.add(\"Steel bar\", 15, 6)\n\t.add(\"Gold bar\", [10, 15], 3)\n\t.add(\"Mithril bar\", 15, 2)\n\t.add(\"Runite ore\", 1, 2)\n\n\t/* Coins */\n\t.add(\"Coins\", [400, 800], 28)\n\t.add(\"Coins\", [500, 1000], 20)\n\t.add(\"Coins\", 10_000, 5)\n\n\t/* RDT */\n\t.add(GemTable, 1, 5);\n\nconst GargoyleTable = new LootTable()\n\t.every(GargoylePreTable)\n\n\t/* Tertiary */\n\t.tertiary(128, \"Clue scroll (hard)\");\n\nconst GargoyleOnTaskTable = new LootTable()\n\t.every(GargoyleTable)\n\n\t/* Brittle key can only drop on task */\n\t.tertiary(150, \"Brittle key\");\n\nexport default new SimpleMonster({\n\tid: 412,\n\tname: \"Gargoyle\",\n\ttable: GargoyleTable,\n\tonTaskTable: GargoyleOnTaskTable,\n\taliases: [\"gargoyle\", \"garg\", \"gargs\"],\n});\n", "import LootTable from \"../../../../structures/LootTable\";\nimport SimpleMonster from \"../../../../structures/SimpleMonster\";\n\nexport const GhostTable = new LootTable().tertiary(90, \"Clue scroll (beginner)\", 1);\n\nexport default new SimpleMonster({\n\tid: 85,\n\tname: \"Ghost\",\n\ttable: GhostTable,\n\taliases: [\"ghost\"],\n});\n", "import LootTable from \"../../../../structures/LootTable\";\nimport SimpleMonster from \"../../../../structures/SimpleMonster\";\n\nexport const GhoulTable = new LootTable().tertiary(5000, \"Ghoul champion scroll\").every(\"Bones\");\n\nexport default new SimpleMonster({\n\tid: 289,\n\tname: \"Ghoul\",\n\ttable: GhoulTable,\n\taliases: [\"ghoul\"],\n});\n", "import LootTable from \"../../../../structures/LootTable\";\nimport SimpleMonster from \"../../../../structures/SimpleMonster\";\n\nexport const GiantBatTable = new LootTable().every(\"Bat bones\");\n\nexport default new SimpleMonster({\n\tid: 2834,\n\tname: \"Giant Bat\",\n\ttable: GiantBatTable,\n\taliases: [\"giant bat\"],\n});\n", "import LootTable from \"../../../../structures/LootTable\";\nimport SimpleMonster from \"../../../../structures/SimpleMonster\";\n\nexport const GiantCryptSpiderTable = new LootTable();\n\nexport default new SimpleMonster({\n\tid: 1684,\n\tname: \"Giant crypt spider\",\n\ttable: GiantCryptSpiderTable,\n\taliases: [\"giant crypt spider\"],\n});\n", "import LootTable from \"../../../../structures/LootTable\";\nimport SimpleMonster from \"../../../../structures/SimpleMonster\";\n\nexport default new SimpleMonster({\n\tid: 477,\n\tname: \"Giant frog\",\n\ttable: new LootTable({ limit: 128 })\n\t\t.every(\"Big bones\")\n\t\t.tertiary(64, \"Clue scroll (beginner)\")\n\t\t.tertiary(400, \"Long bone\")\n\t\t.tertiary(5013, \"Curved bone\")\n\n\t\t.add(\"Mithril spear\", 1, 2)\n\t\t.add(\"Nature rune\", 1, 10)\n\t\t.add(\"Nature rune\", 3, 10)\n\t\t.add(\"Nature rune\", 9, 10)\n\t\t.add(\"Cosmic rune\", 5, 3)\n\t\t.add(\"Iron arrow\", 22, 2)\n\t\t.add(\"Blood rune\", 1, 1)\n\t\t.add(\"Steel arrow\", 45, 1)\n\t\t.add(\"Giant frog legs\", 1, 64)\n\t\t.add(\"Coins\", 30, 10)\n\t\t.add(\"Coins\", 2, 8)\n\t\t.add(\"Coins\", 37, 5)\n\t\t.add(\"Coal\", 1, 1)\n\t\t.add(\"Spinach roll\", 1, 1),\n\taliases: [\"giant frog\"],\n});\n", "import LootTable from \"../../../../structures/LootTable\";\nimport SimpleMonster from \"../../../../structures/SimpleMonster\";\n\nexport const GiantRatTable = new LootTable()\n\t.every(\"Bones\")\n\t.every(\"Raw rat meat\")\n\t.tertiary(128, \"Clue scroll (beginner)\");\n\nexport default new SimpleMonster({\n\tid: 2510,\n\tname: \"Giant rat\",\n\ttable: GiantRatTable,\n\taliases: [\"giant rat\"],\n});\n", "import LootTable from \"../../../../structures/LootTable\";\nimport SimpleMonster from \"../../../../structures/SimpleMonster\";\nimport HerbDropTable from \"../../../subtables/HerbDropTable\";\nimport { UncommonSeedDropTable } from \"../../../subtables/index\";\n\nconst GiantSeaSnakeTable = new LootTable()\n\t.every(\"Big bones\")\n\n\t/* Runes and ammunition */\n\t.add(\"Water rune\", 15, 2)\n\t.add(\"Mist rune\", 1, 2)\n\t.add(\"Broad arrows\", 4, 2)\n\n\t/* Herbs */\n\t.add(HerbDropTable, 1, 5)\n\n\t/* Seeds */\n\t.add(UncommonSeedDropTable, 1, 14)\n\n\t/* Coins */\n\t.add(\"Coins\", 44, 41)\n\t.add(\"Coins\", 32, 11)\n\t.add(\"Coins\", 24, 9)\n\t.add(\"Coins\", 23, 7)\n\n\t/* Other */\n\t.add(\"Adamant dart tip\", 2, 10)\n\t.add(\"Fishing bait\", 50, 4)\n\t.add(\"Pearl bolt tips\", 3, 4)\n\t.add(\"Raw bass\", 2, 4)\n\t.add(\"Water orb\", 1, 3)\n\t.add(\"Raw lobster\", 1, 2)\n\t.add(\"Seaweed\", 5, 2)\n\t.add(\"Edible seaweed\", 5, 2)\n\t.add(\"Casket\", 1, 2)\n\t.add(\"Oyster pearl\", 2, 1)\n\t.add(\"Oyster pearls\", 1, 1)\n\n\t/* Tertiary */\n\t.tertiary(128, \"Clue scroll (medium)\")\n\t.tertiary(400, \"Long bone\")\n\t.tertiary(5013, \"Curved bone\");\n\nexport default new SimpleMonster({\n\tid: 1101,\n\tname: \"Giant Sea Snake\",\n\ttable: GiantSeaSnakeTable,\n\taliases: [\"giant sea snake\"],\n});\n", "import LootTable from \"../../../../structures/LootTable\";\nimport SimpleMonster from \"../../../../structures/SimpleMonster\";\n\nexport const GiantSpiderTable = new LootTable().tertiary(128, \"Clue scroll (beginner)\");\n\nexport default new SimpleMonster({\n\tid: 2477,\n\tname: \"Giant spider\",\n\ttable: GiantSpiderTable,\n\taliases: [\"giant spider\"],\n});\n", "import LootTable from \"../../../../structures/LootTable\";\nimport SimpleMonster from \"../../../../structures/SimpleMonster\";\n\nconst GnomeTable = new LootTable({ limit: 128 })\n\t.add(\"King worm\", 1, 55)\n\t.add(\"Coins\", [1, 300], 30)\n\t.add(\"Swamp toad\", 1, 28)\n\t.add(\"Gold ore\", 1, 8)\n\t.add(\"Earth rune\", 1, 5)\n\t.add(\"Fire orb\", 1, 2)\n\t.tertiary(108_718, \"Rocky\");\n\nexport default new SimpleMonster({\n\tid: 5969,\n\tname: \"Gnome\",\n\tpickpocketTable: GnomeTable,\n\taliases: [\"gnome\"],\n});\n", "import LootTable from \"../../../../structures/LootTable\";\nimport SimpleMonster from \"../../../../structures/SimpleMonster\";\n\nconst GoatTable = new LootTable().every(\"Bones\").every(\"Desert goat horn\");\n\nexport default new SimpleMonster({\n\tid: 1792,\n\tname: \"Goat\",\n\ttable: GoatTable,\n\taliases: [\"goat\"],\n});\n", "import LootTable from \"../../../../structures/LootTable\";\nimport SimpleMonster from \"../../../../structures/SimpleMonster\";\n\nconst GoblinTable = new LootTable({ limit: 128 })\n\t.every(\"Bones\")\n\t.tertiary(35, \"Ensouled goblin head\")\n\t.tertiary(64, \"Clue scroll (beginner)\")\n\t.tertiary(128, \"Clue scroll (easy)\")\n\t.tertiary(5000, \"Goblin champion scroll\")\n\n\t/* Weapons and armour */\n\t.add(\"Bronze spear\", 1, 4)\n\t.add(\"Bronze sq shield\", 1, 3)\n\n\t/* Runes and ammunition */\n\t.add(\"Water rune\", 6, 6)\n\t.add(\"Body rune\", 7, 5)\n\t.add(\"Earth rune\", 4, 3)\n\t.add(\"Bronze bolts\", 8, 3)\n\n\t/* Coins */\n\t.add(\"Coins\", 5, 28)\n\t.add(\"Coins\", 9, 3)\n\t.add(\"Coins\", 15, 3)\n\t.add(\"Coins\", 20, 2)\n\t.add(\"Coins\", 1, 1)\n\n\t/* Other */\n\t.add(\"Hammer\", 1, 15)\n\t.add(\"Goblin mail\", 1, 5)\n\t.add(\"Chef's hat\", 1, 3)\n\t.add(\"Goblin book\", 1, 2)\n\t.add(\"Beer\", 1, 2)\n\t.add(\"Brass necklace\", 1, 1)\n\t.add(\"Air talisman\", 1, 1);\n\nexport default new SimpleMonster({\n\tid: 655,\n\tname: \"Goblin\",\n\ttable: GoblinTable,\n\taliases: [\"goblin\"],\n});\n", "import LootTable from \"../../../../structures/LootTable\";\nimport SimpleMonster from \"../../../../structures/SimpleMonster\";\nimport { GemTable } from \"../../../subtables/RareDropTable\";\n\nconst WildySlayerCaveTable = new LootTable()\n\t.add(\"Blighted entangle sack\", [1, 10], 12200)\n\t.add(\"Blighted anglerfish\", [1, 2], 9170)\n\t.add(\"Blighted manta ray\", [1, 2], 9170)\n\t.add(\"Blighted karambwan\", [1, 2], 6130)\n\t.add(\"Blighted teleport spell sack\", [1, 10], 6130)\n\t.add(\"Blighted ancient ice sack\", [1, 10], 6130)\n\t.add(\"Blighted vengeance sack\", [1, 10], 6130)\n\t.add(\"Blighted super restore(4)\", 1, 3070)\n\t.add(\"Revenant cave teleport\", 1, 3070)\n\t.add(\"Dareeyak teleport\", 1, 613)\n\t.add(\"Wilderness crabs teleport\", 1, 613)\n\t.add(\"Carrallanger teleport\", 1, 613)\n\t.add(\"Paddewwa teleport\", 1, 613)\n\t.add(\"Annakarl teleport\", 1, 613)\n\t.add(\"Lassar teleport\", 1, 613)\n\t.add(\"Kharyrll teleport\", 1, 613)\n\t.add(\"Senntisten teleport\", 1, 613)\n\t.add(\"Ghorrock teleport\", 1, 613)\n\t.add(\"Target teleport\", 1, 613)\n\t.add(\"Magic shortbow scroll\", 1, 245)\n\t.add(\"Ring of wealth scroll\", 1, 245)\n\t.add(\"Trouver parchment\", 2, 61)\n\t.add(\"Looting bag note\", 1, 61);\n\nconst GreaterDemonTable = new LootTable({ limit: 128 })\n\t.every(\"Vile ashes\")\n\n\t/* Weapons and armor */\n\t.add(\"Steel 2h sword\", 1, 4)\n\t.add(\"Steel axe\", 1, 3)\n\t.add(\"Steel battleaxe\", 1, 3)\n\t.add(\"Mithril kiteshield\", 1, 1)\n\t.add(\"Adamant platelegs\", 1, 1)\n\t.add(\"Rune full helm\", 1, 1)\n\n\t/* Runes and ammunition */\n\t.add(\"Fire rune\", 75, 8)\n\t.add(\"Chaos rune\", 15, 3)\n\t.add(\"Fire rune\", 37, 1)\n\t.add(\"Death rune\", 5, 3)\n\n\t/* Coins */\n\t.add(\"Coins\", 132, 40)\n\t.add(\"Coins\", 44, 29)\n\t.add(\"Coins\", 220, 10)\n\t.add(\"Coins\", 11, 7)\n\t.add(\"Coins\", 460, 1)\n\n\t/* Other */\n\t.add(\"Tuna\", 1, 3)\n\t.add(\"Gold bar\", 1, 2)\n\t.add(\"Thread\", 10, 1)\n\n\t/* RDT */\n\t.add(GemTable, 1, 5)\n\n\t/* Tertiary */\n\t.tertiary(40, \"Ensouled demon head\")\n\t.tertiary(128, \"Clue scroll (hard)\");\n\nconst GreaterDemonWildyCaveTable = new LootTable()\n\t.every(GreaterDemonTable)\n\t.add(WildySlayerCaveTable, 1, 68)\n\t.add(new LootTable(), 1, 32);\n\nexport default new SimpleMonster({\n\tid: 2025,\n\tname: \"Greater Demon\",\n\ttable: GreaterDemonTable,\n\twildyCaveTable: GreaterDemonWildyCaveTable,\n\taliases: [\"greater demon\", \"greater\", \"greaters\"],\n});\n", "import LootTable from \"../../../../structures/LootTable\";\nimport SimpleMonster from \"../../../../structures/SimpleMonster\";\nimport HerbDropTable from \"../../../subtables/HerbDropTable\";\nimport { GemTable } from \"../../../subtables/RareDropTable\";\nimport RareSeedTable from \"../../../subtables/RareSeedTable\";\n\nconst WildySlayerCaveTable = new LootTable()\n\t.add(\"Blighted entangle sack\", [1, 10], 16700)\n\t.add(\"Blighted anglerfish\", [1, 2], 12500)\n\t.add(\"Blighted manta ray\", [1, 2], 12500)\n\t.add(\"Blighted karambwan\", [1, 2], 8260)\n\t.add(\"Blighted teleport spell sack\", [1, 10], 8260)\n\t.add(\"Blighted ancient ice sack\", [1, 10], 8260)\n\t.add(\"Blighted vengeance sack\", [1, 10], 8260)\n\t.add(\"Blighted super restore(4)\", 1, 4150)\n\t.add(\"Revenant cave teleport\", 1, 4150)\n\t.add(\"Dareeyak teleport\", 1, 829)\n\t.add(\"Wilderness crabs teleport\", 1, 829)\n\t.add(\"Carrallanger teleport\", 1, 829)\n\t.add(\"Paddewwa teleport\", 1, 829)\n\t.add(\"Annakarl teleport\", 1, 829)\n\t.add(\"Lassar teleport\", 1, 829)\n\t.add(\"Kharyrll teleport\", 1, 829)\n\t.add(\"Senntisten teleport\", 1, 829)\n\t.add(\"Ghorrock teleport\", 1, 829)\n\t.add(\"Target teleport\", 1, 829)\n\t.add(\"Magic shortbow scroll\", 1, 332)\n\t.add(\"Ring of wealth scroll\", 1, 332)\n\t.add(\"Trouver parchment\", 2, 83)\n\t.add(\"Looting bag note\", 1, 83);\n\nconst GreaterNechryaelTable = new LootTable()\n\t.every(\"Malicious ashes\")\n\n\t/* Weapons and armor */\n\t.add(\"Adamant kiteshield\", 1, 7)\n\t.add(\"Rune axe\", 1, 7)\n\t.add(\"Rune sq shield\", 1, 7)\n\t.add(\"Adamant battleaxe\", 1, 5)\n\t.add(\"Rune med helm\", 1, 4)\n\t.add(\"Rune full helm\", 1, 3)\n\t.add(\"Mystic air staff\", 1, 2)\n\t.add(\"Rune boots\", 1, 1)\n\t.add(\"Rune chainbody\", 1, 1)\n\n\t/* Runes */\n\t.add(\"Death rune\", 23, 12)\n\t.add(\"Blood rune\", 20, 10)\n\t.add(\"Chaos rune\", 50, 10)\n\t.add(\"Air rune\", 150, 6)\n\t.add(\"Soul rune\", 25, 5)\n\n\t/* Herbs */\n\t.add(HerbDropTable, 1, 7)\n\n\t/* Seeds */\n\t.add(RareSeedTable, 2, 5)\n\n\t/* Other */\n\t.add(\"Lobster\", 1, 10)\n\t.add(\"Coins\", [2000, 2500], 8)\n\t.add(\"Gold bar\", 5, 7)\n\t.add(\"Tuna\", 2, 6)\n\t.add(\"Wine of zamorak\", 3, 2)\n\n\t/* Gem drop table */\n\t.add(GemTable, 1, 3)\n\n\t/* Tertiary */\n\t.tertiary(128, \"Clue scroll (hard)\");\n\nconst GreaterNechryaelWildyCaveTable = new LootTable()\n\t.every(GreaterNechryaelTable)\n\t.add(WildySlayerCaveTable, 1, 92)\n\t.add(new LootTable(), 1, 8);\n\nexport default new SimpleMonster({\n\tid: 7278,\n\tname: \"Greater Nechryael\",\n\ttable: GreaterNechryaelTable,\n\twildyCaveTable: GreaterNechryaelWildyCaveTable,\n\taliases: [\"greater nechryael\", \"greater nech\", \"greater nechs\", \"g nechs\"],\n});\n", "import LootTable from \"../../../../structures/LootTable\";\nimport SimpleMonster from \"../../../../structures/SimpleMonster\";\nimport HerbDropTable from \"../../../subtables/HerbDropTable\";\nimport { GemTable } from \"../../../subtables/RareDropTable\";\n\nconst WildySlayerCaveTable = new LootTable()\n\t.add(\"Blighted entangle sack\", [1, 10], 11100)\n\t.add(\"Blighted anglerfish\", [1, 2], 8400)\n\t.add(\"Blighted manta ray\", [1, 2], 8400)\n\t.add(\"Blighted karambwan\", [1, 2], 5590)\n\t.add(\"Blighted teleport spell sack\", [1, 10], 5590)\n\t.add(\"Blighted ancient ice sack\", [1, 10], 5590)\n\t.add(\"Blighted vengeance sack\", [1, 10], 5590)\n\t.add(\"Blighted super restore(4)\", 1, 2790)\n\t.add(\"Revenant cave teleport\", 1, 2790)\n\t.add(\"Dareeyak teleport\", 1, 559)\n\t.add(\"Wilderness crabs teleport\", 1, 559)\n\t.add(\"Carrallanger teleport\", 1, 559)\n\t.add(\"Paddewwa teleport\", 1, 559)\n\t.add(\"Annakarl teleport\", 1, 559)\n\t.add(\"Lassar teleport\", 1, 559)\n\t.add(\"Kharyrll teleport\", 1, 559)\n\t.add(\"Senntisten teleport\", 1, 559)\n\t.add(\"Ghorrock teleport\", 1, 559)\n\t.add(\"Target teleport\", 1, 559)\n\t.add(\"Magic shortbow scroll\", 1, 223)\n\t.add(\"Ring of wealth scroll\", 1, 223)\n\t.add(\"Trouver parchment\", 2, 56)\n\t.add(\"Looting bag note\", 1, 56);\n\nconst GreenDragonTable = new LootTable()\n\t.every(\"Dragon bones\")\n\t.every(\"Green dragonhide\")\n\n\t/* Weapons and armour */\n\t.add(\"Steel platelegs\", 1, 4)\n\t.add(\"Steel battleaxe\", 1, 3)\n\t.add(\"Mithril axe\", 1, 3)\n\t.add(\"Mithril spear\", 1, 2)\n\t.add(\"Mithril kiteshield\", 1, 1)\n\t.add(\"Adamant full helm\", 1, 1)\n\t.add(\"Rune dagger\", 1, 1)\n\n\t/* Runes*/\n\t.add(\"Water rune\", 75, 8)\n\t.add(\"Nature rune\", 15, 5)\n\t.add(\"Law rune\", 3, 3)\n\t.add(\"Fire rune\", 37, 1)\n\n\t/* Herbs */\n\t.add(HerbDropTable, 1, 15)\n\n\t/* Coins */\n\t.add(\"Coins\", 44, 29)\n\t.add(\"Coins\", 132, 25)\n\t.add(\"Coins\", 200, 10)\n\t.add(\"Coins\", 11, 5)\n\t.add(\"Coins\", 440, 1)\n\n\t/* Other */\n\t.add(\"Bass\", 1, 3)\n\t.add(\"Adamantite ore\", 1, 3)\n\n\t/* Gem drop table */\n\t.add(GemTable, 1, 5)\n\n\t/* Tertiary */\n\t.tertiary(35, \"Ensouled dragon head\")\n\t.tertiary(128, \"Clue scroll (hard)\");\n\nconst GreenDragonWildyCaveTable = new LootTable()\n\t.every(GreenDragonTable)\n\t.add(WildySlayerCaveTable, 1, 62)\n\t.add(new LootTable(), 1, 38);\n\nexport default new SimpleMonster({\n\tid: 260,\n\tname: \"Green dragon\",\n\ttable: GreenDragonTable,\n\twildyCaveTable: GreenDragonWildyCaveTable,\n\taliases: [\"green dragon\", \"green drags\"],\n});\n", "import LootTable from \"../../../../structures/LootTable\";\nimport SimpleMonster from \"../../../../structures/SimpleMonster\";\n\nexport const GrizzlyBearTable = new LootTable()\n\t.every(\"Bones\")\n\t.every(\"Bear fur\")\n\t.every(\"Raw bear meat\")\n\n\t/* Tertiary */\n\t.tertiary(25, \"Ensouled bear head\", 1)\n\t.tertiary(90, \"Clue scroll (beginner)\", 1);\n\nexport default new SimpleMonster({\n\tid: 3423,\n\tname: \"Grizzly bear\",\n\ttable: GrizzlyBearTable,\n\taliases: [\"grizzly\", \"grizzly bear\"],\n});\n", "import LootTable from \"../../../../structures/LootTable\";\nimport SimpleMonster from \"../../../../structures/SimpleMonster\";\n\nexport const GrizzlyBearCubTable = new LootTable()\n\t.every(\"Bones\")\n\t.every(\"Bear fur\")\n\t.every(\"Raw bear meat\")\n\n\t/* Tertiary */\n\t.tertiary(25, \"Ensouled bear head\", 1)\n\t.tertiary(90, \"Clue scroll (beginner)\", 1);\n\nexport default new SimpleMonster({\n\tid: 3425,\n\tname: \"Grizzly bear cub\",\n\ttable: GrizzlyBearCubTable,\n\taliases: [\"grizzly cub\", \"grizzly bear cub\"],\n});\n", "import LootTable from \"../../../../structures/LootTable\";\nimport SimpleMonster from \"../../../../structures/SimpleMonster\";\nimport FixedAllotmentSeedTable from \"../../../subtables/FixedAllotmentSeedTable\";\n\nconst GuardTable = new LootTable({ limit: 128 })\n\t.every(\"Bones\")\n\t.tertiary(106, \"Clue scroll (medium)\")\n\n\t/* Runes and ammunition */\n\t.add(\"Iron bolts\", [2, 12], 10)\n\t.add(\"Steel arrow\", 1, 4)\n\t.add(\"Bronze arrow\", 1, 3)\n\t.add(\"Air rune\", 6, 2)\n\t.add(\"Earth rune\", 3, 2)\n\t.add(\"Fire rune\", 2, 2)\n\t.add(\"Blood rune\", 1, 1)\n\t.add(\"Chaos rune\", 1, 1)\n\t.add(\"Nature rune\", 1, 1)\n\t.add(\"Steel arrow\", 5, 1)\n\n\t/* Coins */\n\t.add(\"Coins\", 1, 19)\n\t.add(\"Coins\", 7, 16)\n\t.add(\"Coins\", 12, 9)\n\t.add(\"Coins\", 4, 8)\n\t.add(\"Coins\", 25, 4)\n\t.add(\"Coins\", 17, 4)\n\t.add(\"Coins\", 30, 2)\n\n\t/* Other */\n\t.add(FixedAllotmentSeedTable, 1, 18)\n\t.add(\"Iron dagger\", 1, 6)\n\t.add(\"Body talisman\", 1, 4)\n\t.add(\"Grain\", 1, 1)\n\t.add(\"Iron ore\", 1, 1);\n\nexport default new SimpleMonster({\n\tid: 995,\n\tname: \"Guard\",\n\ttable: GuardTable,\n\tpickpocketTable: new LootTable().add(\"Coins\", 30).tertiary(257_211, \"Rocky\"),\n\taliases: [\"guard\"],\n});\n", "import LootTable from \"../../../../structures/LootTable\";\nimport SimpleMonster from \"../../../../structures/SimpleMonster\";\n\nexport const GuardBanditTable = new LootTable().every(\"Bones\");\n\nexport default new SimpleMonster({\n\tid: 1027,\n\tname: \"Guard Bandit\",\n\ttable: GuardBanditTable,\n\taliases: [\"guard bandit\"],\n});\n", "import LootTable from \"../../../../structures/LootTable\";\nimport SimpleMonster from \"../../../../structures/SimpleMonster\";\n\nexport const GuardDogTable = new LootTable().every(\"Bones\").tertiary(25, \"Ensouled dog head\", 1);\n\nexport default new SimpleMonster({\n\tid: 114,\n\tname: \"Guard dog\",\n\ttable: GuardDogTable,\n\taliases: [\"guard dog\", \"dog\", \"dogs\"],\n});\n", "import LootTable from \"../../../../structures/LootTable\";\nimport SimpleMonster from \"../../../../structures/SimpleMonster\";\nimport { GemTable } from \"../../../subtables/RareDropTable\";\n\nconst HarpieBugSwarmTable = new LootTable()\n\t/* Weapons and armour */\n\t.add(\"Steel axe\", 1, 4)\n\t.add(\"Steel full helm\", 1, 4)\n\t.add(\"Staff of fire\", 1, 3)\n\t.add(\"Mithril chainbody\", 1, 2)\n\t.add(\"Adamant med helm\", 1, 1)\n\t.add(\"Steel boots\", 1, 1)\n\n\t/* Runes */\n\t.add(\"Fire rune\", 30, 20)\n\t.add(\"Fire rune\", 60, 8)\n\t.add(\"Chaos rune\", 15, 5)\n\t.add(\"Death rune\", 3, 3)\n\n\t/* Coins */\n\t.add(\"Coins\", 40, 25)\n\t.add(\"Coins\", 160, 20)\n\t.add(\"Coins\", 230, 10)\n\t.add(\"Coins\", 30, 7)\n\t.add(\"Coins\", 490, 2)\n\n\t/* Other */\n\t.add(\"Gold ore\", 1, 8)\n\t.add(\"Jug of wine\", 1, 2)\n\n\t/* Gem drop table */\n\t.add(GemTable, 1, 3)\n\n\t/* Tertiary */\n\t.tertiary(128, \"Clue scroll (medium)\");\n\nexport default new SimpleMonster({\n\tid: 464,\n\tname: \"Harpie Bug Swarm\",\n\ttable: HarpieBugSwarmTable,\n\taliases: [\"harpie bug swarm\"],\n});\n", "import LootTable from \"../../../../structures/LootTable\";\nimport SimpleMonster from \"../../../../structures/SimpleMonster\";\n\nconst WildySlayerCaveTable = new LootTable()\n\t.add(\"Blighted entangle sack\", [1, 10], 7700)\n\t.add(\"Blighted anglerfish\", [1, 2], 5750)\n\t.add(\"Blighted manta ray\", [1, 2], 5750)\n\t.add(\"Blighted karambwan\", [1, 2], 3815)\n\t.add(\"Blighted teleport spell sack\", [1, 10], 3815)\n\t.add(\"Blighted ancient ice sack\", [1, 10], 3815)\n\t.add(\"Blighted vengeance sack\", [1, 10], 3815)\n\t.add(\"Blighted super restore(4)\", 1, 1915)\n\t.add(\"Revenant cave teleport\", 1, 1915)\n\t.add(\"Dareeyak teleport\", 1, 383)\n\t.add(\"Wilderness crabs teleport\", 1, 383)\n\t.add(\"Carrallanger teleport\", 1, 383)\n\t.add(\"Paddewwa teleport\", 1, 383)\n\t.add(\"Annakarl teleport\", 1, 383)\n\t.add(\"Lassar teleport\", 1, 383)\n\t.add(\"Kharyrll teleport\", 1, 383)\n\t.add(\"Senntisten teleport\", 1, 383)\n\t.add(\"Ghorrock teleport\", 1, 383)\n\t.add(\"Target teleport\", 1, 383)\n\t.add(\"Magic shortbow scroll\", 1, 153)\n\t.add(\"Ring of wealth scroll\", 1, 153)\n\t.add(\"Trouver parchment\", 2, 38)\n\t.add(\"Looting bag note\", 1, 38);\n\nconst HellhoundTable = new LootTable()\n\t.every(\"Vile ashes\")\n\t.oneIn(32_768, \"Smouldering stone\")\n\t.tertiary(40, \"Ensouled hellhound head\")\n\t.tertiary(64, \"Clue scroll (hard)\");\n\nconst HellhoundWildyCaveTable = new LootTable()\n\t.every(HellhoundTable)\n\t.add(WildySlayerCaveTable, 1, 85)\n\t.add(new LootTable(), 1, 15);\n\nexport default new SimpleMonster({\n\tid: 104,\n\tname: \"Hellhound\",\n\ttable: HellhoundTable,\n\twildyCaveTable: HellhoundWildyCaveTable,\n\taliases: [\"hellhound\", \"hellh\"],\n});\n", "import LootTable from \"../../../../structures/LootTable\";\nimport SimpleMonster from \"../../../../structures/SimpleMonster\";\n\nconst HeroTable = new LootTable({ limit: 128 })\n\t.add(\"Coins\", [200, 300], 105)\n\t.add(\"Death rune\", [1, 2], 8)\n\t.add(\"Jug of wine\", 1, 6)\n\t.add(\"Nature rune\", [1, 3], 5)\n\t.add(\"Fire orb\", 1, 2)\n\t.add(\"Diamond\", 1, 1)\n\t.add(\"Gold ore\", 1, 1)\n\t.tertiary(99_175, \"Rocky\");\n\nexport default new SimpleMonster({\n\tid: 3295,\n\tname: \"Hero\",\n\tpickpocketTable: HeroTable,\n\taliases: [\"hero\"],\n});\n", "import LootTable from \"../../../../structures/LootTable\";\nimport SimpleMonster from \"../../../../structures/SimpleMonster\";\nimport FixedAllotmentSeedTable from \"../../../subtables/FixedAllotmentSeedTable\";\nimport HerbDropTable from \"../../../subtables/HerbDropTable\";\nimport { GemTable } from \"../../../subtables/RareDropTable\";\n\nconst HillGiantTable = new LootTable({ limit: 128 })\n\t.every(\"Big bones\")\n\t.tertiary(25, \"Ensouled giant head\")\n\t.tertiary(50, \"Clue scroll (beginner)\")\n\t.tertiary(400, \"Long bone\")\n\t.tertiary(5000, \"Giant champion scroll\")\n\t.tertiary(5013, \"Curved bone\")\n\n\t/* Weapons and armour */\n\t.add(\"Iron full helm\", 1, 5)\n\t.add(\"Iron dagger\", 1, 4)\n\t.add(\"Iron kiteshield\", 1, 3)\n\t.add(\"Steel longsword\", 1, 2)\n\n\t/* Runes and ammunition */\n\t.add(\"Iron arrow\", 3, 6)\n\t.add(\"Fire rune\", 15, 3)\n\t.add(\"Water rune\", 7, 3)\n\t.add(\"Law rune\", 2, 3)\n\t.add(\"Steel arrow\", 10, 2)\n\t.add(\"Mind rune\", 3, 2)\n\t.add(\"Cosmic rune\", 2, 2)\n\t.add(\"Nature rune\", 6, 2)\n\t.add(\"Chaos rune\", 2, 1)\n\t.add(\"Death rune\", 2, 1)\n\n\t/* Coins */\n\t.add(\"Coins\", 38, 14)\n\t.add(\"Coins\", 52, 10)\n\t.add(\"Coins\", 15, 8)\n\t.add(\"Coins\", 8, 6)\n\t.add(\"Coins\", 88, 2)\n\n\t/* Other */\n\t.add(FixedAllotmentSeedTable, 1, 18)\n\t.add(HerbDropTable, 1, 7)\n\t.add(\"Limpwurt root\", 1, 11)\n\t.add(\"Beer\", 1, 6)\n\t.add(\"Body talisman\", 1, 2)\n\t.add(\"Giant key\", 1, 1)\n\n\t/* Gem drop table */\n\t.add(GemTable, 1, 3);\n\nexport default new SimpleMonster({\n\tid: 2098,\n\tname: \"Hill Giant\",\n\ttable: HillGiantTable,\n\taliases: [\"hill giant\"],\n});\n", "import LootTable from \"../../../../structures/LootTable\";\nimport SimpleMonster from \"../../../../structures/SimpleMonster\";\nimport CommonSeedDropTable from \"../../../subtables/CommonSeedDropTable\";\nimport { GemTable } from \"../../../subtables/RareDropTable\";\n\nconst HerbTable = new LootTable()\n\t.add(\"Grimy guam leaf\", 1, 10)\n\t.add(\"Grimy marrentill\", 1, 10)\n\t.add(\"Grimy tarromin\", 1, 5)\n\t.add(\"Grimy ranarr weed\", 1, 2)\n\t.add(\"Grimy irit leaf\", 1, 140)\n\t.add(\"Grimy avantoe\", 1, 2)\n\t.add(\"Grimy kwuarm\", 1, 1)\n\t.add(\"Grimy cadantine\", 1, 1)\n\t.add(\"Grimy lantadyme\", 1, 3)\n\t.add(\"Grimy dwarf weed\", 1, 3);\n\nexport const HobgoblinTable = new LootTable()\n\t.tertiary(5000, \"Hobgoblin champion scroll\")\n\t.tertiary(70, \"Clue scroll (beginner)\")\n\t.every(\"Bones\")\n\n\t// Weapons\n\t.add(\"Iron sword\", 1, 3)\n\t.add(\"Steel dagger\", 1, 3)\n\t.add(\"Steel longsword\", 1, 1)\n\n\t// Runes/ammunition\n\t.add(\"Law rune\", 2, 3)\n\t.add(\"Water rune\", 2, 2)\n\t.add(\"Fire rune\", 7, 2)\n\t.add(\"Body rune\", 6, 2)\n\t.add(\"Chaos rune\", 3, 2)\n\t.add(\"Nature rune\", 4, 2)\n\t.add(\"Cosmic rune\", 2, 1)\n\t.add(\"Iron javelin\", 5, 1)\n\n\t.add(HerbTable, 1, 7)\n\t.add(CommonSeedDropTable, 1, 12)\n\t.add(\"Coins\", 15, 34)\n\t.add(\"Coins\", 5, 12)\n\t.add(\"Coins\", 28, 4)\n\t.add(\"Coins\", 62, 4)\n\t.add(\"Coins\", 42, 3)\n\t.add(\"Coins\", 1, 3)\n\t.add(\"Coins\", 1, 1)\n\t.add(\"Limpwurt root\", 1, 21)\n\t.add(\"Goblin mail\", 1, 2)\n\t.add(GemTable, 1, 2);\n\nexport default new SimpleMonster({\n\tid: 3049,\n\tname: \"Hobgoblin\",\n\ttable: HobgoblinTable,\n\taliases: [\"hobgoblin\"],\n});\n", "import LootTable from \"../../../../structures/LootTable\";\nimport SimpleMonster from \"../../../../structures/SimpleMonster\";\nimport HerbDropTable from \"../../../subtables/HerbDropTable\";\nimport { NotedHerbTable } from \"../../../subtables/NotedHerbTable\";\nimport { GemTable } from \"../../../subtables/RareDropTable\";\nimport RareSeedTable from \"../../../subtables/RareSeedTable\";\n\nconst HydraBrimstoneRingTable = new LootTable().add(\"Hydra's eye\").add(\"Hydra's fang\").add(\"Hydra's heart\");\n\nconst HydraOffTaskUniqueTable = new LootTable()\n\t.oneIn(10_000, \"Dragon thrownaxe\", [200, 400])\n\t.oneIn(10_000, \"Dragon knife\", [200, 400])\n\t.oneIn(5000, \"Hydra tail\")\n\t.oneIn(1800, HydraBrimstoneRingTable);\n\nconst HydraOnTaskUniqueTable = new LootTable()\n\t.oneIn(2000, \"Dragon thrownaxe\", [200, 400])\n\t.oneIn(2000, \"Dragon knife\", [200, 400])\n\t.oneIn(1000, \"Hydra tail\")\n\t.oneIn(360, HydraBrimstoneRingTable);\n\nexport const HydraPreTable = new LootTable()\n\t/* Weapons and armour */\n\t.add(\"Fire battlestaff\", 1, 5)\n\t.add(\"Water battlestaff\", 1, 5)\n\t.add(\"Black d'hide chaps\", 1, 3)\n\t.add(\"Rune kiteshield\", 1, 3)\n\t.add(\"Battlestaff\", [2, 3], 2)\n\t.add(\"Rune platebody\", 1, 1)\n\t.add(\"Mystic robe bottom\", 1, 1)\n\t.add(\"Dragon longsword\", 1, 1)\n\n\t/* Runes */\n\t.add(\"Blood rune\", [15, 45], 9)\n\t.add(\"Chaos rune\", [20, 50], 9)\n\t.add(\"Death rune\", [30, 60], 9)\n\t.add(\"Fire rune\", [70, 90], 9)\n\t.add(\"Law rune\", [30, 60], 9)\n\t.add(\"Water rune\", [70, 90], 9)\n\n\t/* Herbs */\n\t.add(HerbDropTable, 1, 4)\n\t.add(NotedHerbTable, 1, 2)\n\n\t/* Seeds */\n\t.add(RareSeedTable, 1, 4)\n\n\t/* Bolt tips */\n\t.oneIn(256, \"Diamond bolt tips\", 20)\n\t.oneIn(285, \"Ruby bolt tips\", 20)\n\t.oneIn(284, \"Emerald bolt tips\", 20)\n\t.oneIn(366, \"Dragonstone bolt tips\", 20)\n\t.oneIn(853, \"Onyx bolt tips\", 20)\n\t.oneIn(1280, \"Sapphire bolt tips\", 20)\n\n\t/* Other */\n\t.add(\"Coins\", [500, 3500], 16)\n\t.add(\"Monkfish\", 1, 11)\n\t.add(\"Super restore(1)\", [1, 2], 6)\n\t.add(\"Super combat potion(1)\", 1, 4)\n\t.add(\"Dragon bones\", [3, 5], 3)\n\n\t/* Gem drop table */\n\t.add(GemTable, 1, 5);\n\nconst HydraTable = new LootTable()\n\t.every(\"Hydra bones\")\n\t.every(HydraPreTable)\n\n\t.every(HydraOffTaskUniqueTable)\n\n\t/* Tertiary */\n\t.tertiary(128, \"Clue scroll (hard)\")\n\t.tertiary(512, \"Clue scroll (elite)\");\n\nconst HydraOnTaskTable = new LootTable()\n\t.every(\"Hydra bones\")\n\t.every(HydraPreTable)\n\n\t.every(HydraOnTaskUniqueTable)\n\n\t/* Tertiary */\n\t.tertiary(128, \"Clue scroll (hard)\")\n\t.tertiary(512, \"Clue scroll (elite)\");\n\nexport default new SimpleMonster({\n\tid: 8609,\n\tname: \"Hydra\",\n\ttable: HydraTable,\n\tonTaskTable: HydraOnTaskTable,\n\taliases: [\"hydra\"],\n});\n", "import LootTable from \"../../../../structures/LootTable\";\nimport SimpleMonster from \"../../../../structures/SimpleMonster\";\nimport { GemTable } from \"../../../subtables/RareDropTable\";\nimport { UncommonSeedDropTable } from \"../../../subtables/index\";\n\nconst WildySlayerCaveTable = new LootTable()\n\t.add(\"Blighted entangle sack\", [1, 10], 13200)\n\t.add(\"Blighted anglerfish\", [1, 2], 9900)\n\t.add(\"Blighted manta ray\", [1, 2], 9900)\n\t.add(\"Blighted karambwan\", [1, 2], 6580)\n\t.add(\"Blighted teleport spell sack\", [1, 10], 6580)\n\t.add(\"Blighted ancient ice sack\", [1, 10], 6580)\n\t.add(\"Blighted vengeance sack\", [1, 10], 6580)\n\t.add(\"Blighted super restore(4)\", 1, 3290)\n\t.add(\"Revenant cave teleport\", 1, 3290)\n\t.add(\"Dareeyak teleport\", 1, 657)\n\t.add(\"Wilderness crabs teleport\", 1, 657)\n\t.add(\"Carrallanger teleport\", 1, 657)\n\t.add(\"Paddewwa teleport\", 1, 657)\n\t.add(\"Annakarl teleport\", 1, 657)\n\t.add(\"Lassar teleport\", 1, 657)\n\t.add(\"Kharyrll teleport\", 1, 657)\n\t.add(\"Senntisten teleport\", 1, 657)\n\t.add(\"Ghorrock teleport\", 1, 657)\n\t.add(\"Target teleport\", 1, 657)\n\t.add(\"Magic shortbow scroll\", 1, 263)\n\t.add(\"Ring of wealth scroll\", 1, 263)\n\t.add(\"Trouver parchment\", 2, 66)\n\t.add(\"Looting bag note\", 1, 66);\n\nconst IceGiantTable = new LootTable()\n\t.every(\"Big bones\")\n\n\t/* Weapons and armour */\n\t.add(\"Iron 2h sword\", 1, 5)\n\t.add(\"Black kiteshield\", 1, 4)\n\t.add(\"Steel axe\", 1, 4)\n\t.add(\"Steel sword\", 1, 4)\n\t.add(\"Iron platelegs\", 1, 1)\n\t.add(\"Mithril mace\", 1, 1)\n\t.add(\"Mithril sq shield\", 1, 1)\n\n\t/* Runes and ammunition */\n\t.add(\"Adamant arrow\", 5, 6)\n\t.add(\"Nature rune\", 6, 4)\n\t.add(\"Mind rune\", 24, 3)\n\t.add(\"Body rune\", 37, 3)\n\t.add(\"Law rune\", 3, 2)\n\t.add(\"Water rune\", 12, 1)\n\t.add(\"Cosmic rune\", 4, 1)\n\t.add(\"Death rune\", 3, 1)\n\t.add(\"Blood rune\", 2, 1)\n\n\t/* Seeds */\n\t.add(UncommonSeedDropTable, 1, 8)\n\n\t/* Coins */\n\t.add(\"Coins\", 117, 32)\n\t.add(\"Coins\", 53, 12)\n\t.add(\"Coins\", 196, 10)\n\t.add(\"Coins\", 8, 7)\n\t.add(\"Coins\", 22, 6)\n\t.add(\"Coins\", 400, 2)\n\n\t/* Other */\n\t.add(\"Jug of wine\", 1, 3)\n\t.add(\"Mithril ore\", 1, 1)\n\t.add(\"Banana\", 1, 1)\n\n\t/* Gem drop table */\n\t.add(GemTable, 1, 4)\n\n\t/* Tertiary */\n\t.tertiary(21, \"Ensouled giant head\")\n\t.tertiary(40, \"Clue scroll (beginner)\")\n\t.tertiary(400, \"Long bone\")\n\t.tertiary(5000, \"Giant champion scroll\")\n\t.tertiary(5013, \"Curved bone\");\n\nconst IceGiantWildyCaveTable = new LootTable()\n\t.every(IceGiantTable)\n\t.add(WildySlayerCaveTable, 1, 73)\n\t.add(new LootTable(), 1, 27);\n\nexport default new SimpleMonster({\n\tid: 2085,\n\tname: \"Ice giant\",\n\ttable: IceGiantTable,\n\twildyCaveTable: IceGiantWildyCaveTable,\n\taliases: [\"ice giant\"],\n});\n", "import LootTable from \"../../../../structures/LootTable\";\nimport SimpleMonster from \"../../../../structures/SimpleMonster\";\nimport HerbDropTable from \"../../../subtables/HerbDropTable\";\nimport { GemTable } from \"../../../subtables/RareDropTable\";\nimport { UncommonSeedDropTable } from \"../../../subtables/index\";\n\nconst IceTrollTable = new LootTable()\n\t.every(\"Big bones\")\n\n\t/* Weapons and armour */\n\t.add(\"Adamant full helm\", 1, 10)\n\t.add(\"Steel platebody\", 1, 10)\n\t.add(\"Mithril warhammer\", 1, 5)\n\t.add(\"Adamant axe\", 1, 5)\n\t.add(\"Rune kiteshield\", 1, 2)\n\t.add(\"Granite shield\", 1, 1)\n\t.add(\"Rune warhammer\", 1, 1)\n\n\t/* Runes */\n\t.add(\"Earth rune\", [8, 14], 10)\n\t.add(\"Earth rune\", [12, 36], 10)\n\t.add(\"Nature rune\", [4, 12], 5)\n\t.add(\"Law rune\", [4, 8], 5)\n\n\t/* Herbs */\n\t.add(HerbDropTable, 1, 2)\n\t.add(UncommonSeedDropTable, 1, 11)\n\n\t/* Other */\n\t.add(\"Coins\", 200, 20)\n\t.add(\"Raw shark\", [2, 8], 10)\n\t.add(\"Seaweed\", [3, 9], 10)\n\t.add(\"Ball of wool\", [18, 42], 10)\n\n\t/* Gem drop table */\n\t.add(GemTable, 1, 1)\n\n\t/* Tertiary */\n\t.tertiary(20, \"Ensouled troll head\")\n\t.tertiary(400, \"Long bone\")\n\t.tertiary(5013, \"Curved bone\");\n\nexport default new SimpleMonster({\n\tid: 648,\n\tname: \"Ice Troll\",\n\ttable: IceTrollTable,\n\taliases: [\"ice troll\"],\n});\n", "import LootTable from \"../../../../structures/LootTable\";\nimport SimpleMonster from \"../../../../structures/SimpleMonster\";\nimport HerbDropTable from \"../../../subtables/HerbDropTable\";\nimport { GemTable } from \"../../../subtables/RareDropTable\";\nimport { UncommonSeedDropTable } from \"../../../subtables/index\";\n\nexport const IceWarriorTable = new LootTable({ limit: 128 })\n\t/* Weapons */\n\t.add(\"Iron battleaxe\", 1, 3)\n\t.add(\"Mithril mace\", 1, 1)\n\n\t/* Runes and ammunition */\n\t.add(\"Nature rune\", 4, 10)\n\t.add(\"Chaos rune\", 3, 8)\n\t.add(\"Law rune\", 2, 7)\n\t.add(\"Cosmic rune\", 2, 5)\n\t.add(\"Mithril arrow\", 3, 5)\n\t.add(\"Adamant arrow\", 2, 2)\n\t.add(\"Death rune\", 2, 3)\n\t.add(\"Blood rune\", 2, 1)\n\n\t/* Herbs */\n\t.add(HerbDropTable, 1, 10)\n\n\t/* Seeds */\n\t.add(UncommonSeedDropTable, 1, 18)\n\n\t/* Coins */\n\t.add(\"Coins\", 15, 39)\n\n\t/* Gem drop table */\n\t.add(GemTable, 1, 3)\n\n\t/* Tertiary */\n\t.tertiary(128, \"Clue scroll (medium)\");\n\nexport default new SimpleMonster({\n\tid: 2841,\n\tname: \"Ice warrior\",\n\ttable: IceWarriorTable,\n\taliases: [\"ice warrior\"],\n});\n", "import LootTable from \"../../../../structures/LootTable\";\nimport SimpleMonster from \"../../../../structures/SimpleMonster\";\n\nexport const IceWolfTable = new LootTable().every(\"Wolf bones\");\n\nexport default new SimpleMonster({\n\tid: 645,\n\tname: \"Ice wolf\",\n\ttable: IceWolfTable,\n\taliases: [\"ice wolf\"],\n});\n", "import LootTable from \"../../../../structures/LootTable\";\nimport SimpleMonster from \"../../../../structures/SimpleMonster\";\nimport { GemTable } from \"../../../subtables/RareDropTable\";\n\nexport const IcefiendTable = new LootTable({ limit: 128 })\n\t.tertiary(128, \"Clue scroll (easy)\")\n\n\t/* Runes */\n\t.add(\"Water rune\", [1, 5], 4)\n\t.add(\"Air rune\", [1, 5], 1)\n\n\t/* Other */\n\t.add(\"Coins\", [1, 30], 4)\n\t.add(\"Coins\", [1, 20], 4)\n\n\t/* Subtable */\n\t.add(GemTable, 1, 3);\n\nexport default new SimpleMonster({\n\tid: 3140,\n\tname: \"Icefiend\",\n\ttable: IcefiendTable,\n\taliases: [\"icefiend\"],\n});\n", "import LootTable from \"../../../../structures/LootTable\";\nimport SimpleMonster from \"../../../../structures/SimpleMonster\";\n\nexport const ImpTable = new LootTable()\n\t.tertiary(5000, \"Imp champion scroll\")\n\t.tertiary(25, \"Ensouled imp head\")\n\t.every(\"Fiendish ashes\")\n\t.add(\"Black bead\", 1, 5)\n\t.add(\"Red bead\", 1, 5)\n\t.add(\"White bead\", 1, 5)\n\t.add(\"Yellow bead\", 1, 5)\n\t.add(\"Bronze bolts\", 1, 8)\n\t.add(\"Blue wizard hat\", 1, 8)\n\n\t// Food\n\t.add(\"Egg\", 1, 5)\n\t.add(\"Raw chicken\", 1, 5)\n\t.add(\"Burnt bread\", 1, 4)\n\t.add(\"Burnt meat\", 1, 4)\n\t.add(\"Cabbage\", 1, 2)\n\t.add(\"Bread dough\", 1, 2)\n\t.add(\"Bread\", 1, 1)\n\t.add(\"Cooked meat\", 1, 1)\n\n\t// Tools\n\t.add(\"Hammer\", 1, 8)\n\t.add(\"Tinderbox\", 1, 5)\n\t.add(\"Shears\", 1, 4)\n\t.add(\"Bucket\", 1, 4)\n\t.add(\"Bucket of water\", 1, 2)\n\t.add(\"Jug\", 1, 2)\n\t.add(\"Jug of water\", 1, 2)\n\t.add(\"Pot\", 1, 2)\n\t.add(\"Pot of flour\", 1, 2)\n\n\t// Other\n\t.add(\"Ball of wool\", 1, 8)\n\t.add(\"Mind talisman\", 1, 7)\n\t.add(\"Ashes\", 1, 6)\n\t.add(\"Clay\", 1, 4)\n\t.add(\"Cadava berries\", 1, 4)\n\t.add(\"Grain\", 1, 3)\n\t.add(\"Chef's hat\", 1, 2)\n\t.add(\"Flyer\", 1, 2)\n\t.add(\"Potion\", 1, 1);\n\nexport default new SimpleMonster({\n\tid: 5007,\n\tname: \"Imp\",\n\ttable: ImpTable,\n\taliases: [\"imp\"],\n});\n", "import LootTable from \"../../../../structures/LootTable\";\nimport SimpleMonster from \"../../../../structures/SimpleMonster\";\n\nexport const InfernalMagePreTable = new LootTable()\n\t/* Weapons and armour */\n\t.oneIn(512, \"Mystic boots (dark)\")\n\t.oneIn(512, \"Mystic hat (dark)\")\n\n\t/* Staves */\n\t.add(\"Staff\", 1, 8)\n\t.add(\"Staff of fire\", 1, 1)\n\t.oneIn(1000, \"Lava battlestaff\")\n\n\t/* Elemental runes */\n\t.add(\"Earth rune\", 10, 6)\n\t.add(\"Fire rune\", 10, 6)\n\t.add(\"Earth rune\", 36, 4)\n\t.add(\"Air rune\", 10, 3)\n\t.add(\"Water rune\", 10, 3)\n\t.add(\"Air rune\", 18, 2)\n\t.add(\"Water rune\", 18, 2)\n\t.add(\"Earth rune\", 18, 2)\n\t.add(\"Fire rune\", 18, 2)\n\n\t/* Catalystic runes */\n\t.add(\"Death rune\", 7, 18)\n\t.add(\"Mind rune\", 18, 2)\n\t.add(\"Body rune\", 18, 2)\n\t.add(\"Blood rune\", 4, 2)\n\n\t/* Coins */\n\t.add(\"Coins\", 1, 19)\n\t.add(\"Coins\", 2, 14)\n\t.add(\"Coins\", 4, 8)\n\t.add(\"Coins\", 29, 3);\n\nconst InfernalMageTable = new LootTable().every(\"Bones\").every(InfernalMagePreTable);\n\nexport default new SimpleMonster({\n\tid: 447,\n\tname: \"Infernal Mage\",\n\ttable: InfernalMageTable,\n\taliases: [\"infernal mage\"],\n});\n", "import LootTable from \"../../../../structures/LootTable\";\nimport SimpleMonster from \"../../../../structures/SimpleMonster\";\nimport HerbDropTable from \"../../../subtables/HerbDropTable\";\nimport { GemTable } from \"../../../subtables/RareDropTable\";\nimport RareSeedTable from \"../../../subtables/RareSeedTable\";\n\nconst IorwerthArcherTable = new LootTable()\n\t.every(\"Bones\")\n\n\t/* Weapons and armour */\n\t.add(\"Green d'hide body\", 1, 4)\n\t.add(\"Green d'hide chaps\", 1, 3)\n\t.add(\"Mithril spear\", 1, 2)\n\t.add(\"Mithril kiteshield\", 1, 1)\n\t.add(\"Adamant full helm\", 1, 1)\n\t.add(\"Rune dagger\", 1, 1)\n\n\t/* Runes and ammunition */\n\t.add(\"Water rune\", 70, 8)\n\t.add(\"Nature rune\", 12, 5)\n\t.add(\"Law rune\", 2, 3)\n\t.add(\"Fire rune\", 37, 2)\n\n\t/* Herbs */\n\t.add(HerbDropTable, 1, 15)\n\n\t/* Seeds */\n\t.add(RareSeedTable, 1, 16)\n\n\t/* Coins */\n\t.add(\"Coins\", 44, 29)\n\t.add(\"Coins\", 180, 10)\n\t.add(\"Coins\", 132, 8)\n\t.add(\"Coins\", 20, 5)\n\t.add(\"Coins\", 440, 1)\n\n\t/* Other */\n\t.add(\"Bass\", 1, 3)\n\t.add(\"Shark\", 1, 3)\n\t.add(\"Adamantite ore\", 1, 2)\n\t.add(\"Teleport crystal (1)\", 1, 1)\n\n\t/* Gem drop table */\n\t.add(GemTable, 1, 5)\n\n\t/* Tertiary */\n\t.tertiary(50, \"Ensouled elf head\")\n\t.tertiary(128, \"Clue scroll (hard)\");\n\nexport default new SimpleMonster({\n\tid: 3428,\n\tname: \"Iorwerth Archer\",\n\ttable: IorwerthArcherTable,\n\taliases: [\"iorwerth archer\"],\n});\n", "import LootTable from \"../../../../structures/LootTable\";\nimport SimpleMonster from \"../../../../structures/SimpleMonster\";\nimport HerbDropTable from \"../../../subtables/HerbDropTable\";\nimport { GemTable } from \"../../../subtables/RareDropTable\";\nimport RareSeedTable from \"../../../subtables/RareSeedTable\";\n\nconst IorwerthWarriorTable = new LootTable()\n\t.every(\"Bones\")\n\n\t/* Weapons and armour */\n\t.add(\"Green d'hide body\", 1, 4)\n\t.add(\"Green d'hide chaps\", 1, 3)\n\t.add(\"Mithril spear\", 1, 2)\n\t.add(\"Mithril kiteshield\", 1, 1)\n\t.add(\"Adamant full helm\", 1, 1)\n\t.add(\"Rune dagger\", 1, 1)\n\n\t/* Runes and ammunition */\n\t.add(\"Water rune\", 70, 8)\n\t.add(\"Nature rune\", 12, 5)\n\t.add(\"Law rune\", 2, 3)\n\t.add(\"Fire rune\", 37, 2)\n\n\t/* Herbs */\n\t.add(HerbDropTable, 1, 15)\n\n\t/* Seeds */\n\t.add(RareSeedTable, 1, 16)\n\n\t/* Coins */\n\t.add(\"Coins\", 44, 29)\n\t.add(\"Coins\", 180, 10)\n\t.add(\"Coins\", 132, 8)\n\t.add(\"Coins\", 20, 5)\n\t.add(\"Coins\", 440, 1)\n\n\t/* Other */\n\t.add(\"Crystal teleport seed\", 25)\n\t.add(\"Bass\", 1, 3)\n\t.add(\"Shark\", 1, 3)\n\t.add(\"Adamantite ore\", 1, 2)\n\t.oneIn(1024, \"Enhanced crystal teleport seed\")\n\n\t/* Gem drop table */\n\t.add(GemTable, 1, 5)\n\n\t/* Tertiary */\n\t.tertiary(24, \"Crystal shard\")\n\t.tertiary(50, \"Ensouled elf head\")\n\t.tertiary(128, \"Clue scroll (hard)\");\n\nexport default new SimpleMonster({\n\tid: 3429,\n\tname: \"Iorwerth Warrior\",\n\ttable: IorwerthWarriorTable,\n\taliases: [\"iorwerth warrior\"],\n});\n", "import LootTable from \"../../../../structures/LootTable\";\nimport SimpleMonster from \"../../../../structures/SimpleMonster\";\nimport RareDropTable, { GemTable } from \"../../../subtables/RareDropTable\";\n\nconst IronDragonTable = new LootTable()\n\t.every(\"Dragon bones\")\n\t.every(\"Iron bar\", 5)\n\n\t/* Pre-roll */\n\t.oneIn(1024, \"Dragon plateskirt\")\n\t.oneIn(1024, \"Dragon platelegs\")\n\n\t/* Weapons and armour */\n\t.add(\"Rune dart(p)\", 9, 7)\n\t.add(\"Adamant 2h sword\", 1, 4)\n\t.add(\"Adamant axe\", 1, 3)\n\t.add(\"Adamant battleaxe\", 1, 3)\n\t.add(\"Rune knife\", 5, 3)\n\t.add(\"Adamant sq shield\", 1, 1)\n\t.add(\"Rune med helm\", 1, 1)\n\t.add(\"Rune battleaxe\", 1, 1)\n\n\t/* Runes and ammunition */\n\t.add(\"Rune javelin\", 4, 20)\n\t.add(\"Blood rune\", 15, 19)\n\t.add(\"Adamant bolts\", [2, 12], 6)\n\t.add(\"Soul rune\", 3, 5)\n\n\t/* Coins */\n\t.add(\"Coins\", 270, 20)\n\t.add(\"Coins\", 550, 10)\n\t.add(\"Coins\", 990, 1)\n\n\t/* Other */\n\t.add(\"Super strength(1)\", 1, 8)\n\t.add(\"Runite limbs\", 1, 5)\n\t.add(\"Adamantite bar\", 2, 3)\n\t.add(\"Curry\", 1, 3)\n\n\t/* RDT */\n\t.add(RareDropTable, 1, 2)\n\t.add(GemTable, 1, 3)\n\n\t/* Tertiary */\n\t.tertiary(128, \"Clue scroll (hard)\")\n\t.tertiary(10_000, \"Draconic visage\");\n\nexport default new SimpleMonster({\n\tid: 272,\n\tname: \"Iron Dragon\",\n\ttable: IronDragonTable,\n\taliases: [\"iron dragon\", \"iron d\"],\n});\n", "import LootTable from \"../../../../structures/LootTable\";\nimport SimpleMonster from \"../../../../structures/SimpleMonster\";\n\nexport const JackalTable = new LootTable().every(\"Bones\");\nexport default new SimpleMonster({\n\tid: 4185,\n\tname: \"Jackal\",\n\ttable: JackalTable,\n\taliases: [\"jackal\"],\n});\n", "import LootTable from \"../../../../structures/LootTable\";\nimport SimpleMonster from \"../../../../structures/SimpleMonster\";\nimport { GemTable } from \"../../../subtables/RareDropTable\";\n\nconst WildySlayerCaveTable = new LootTable()\n\t.add(\"Blighted entangle sack\", [1, 10], 6850)\n\t.add(\"Blighted anglerfish\", [1, 2], 5150)\n\t.add(\"Blighted manta ray\", [1, 2], 5150)\n\t.add(\"Blighted karambwan\", [1, 2], 3425)\n\t.add(\"Blighted teleport spell sack\", [1, 10], 3425)\n\t.add(\"Blighted ancient ice sack\", [1, 10], 3425)\n\t.add(\"Blighted vengeance sack\", [1, 10], 3425)\n\t.add(\"Blighted super restore(4)\", 1, 1710)\n\t.add(\"Revenant cave teleport\", 1, 1710)\n\t.add(\"Dareeyak teleport\", 1, 342)\n\t.add(\"Wilderness crabs teleport\", 1, 342)\n\t.add(\"Carrallanger teleport\", 1, 342)\n\t.add(\"Paddewwa teleport\", 1, 342)\n\t.add(\"Annakarl teleport\", 1, 342)\n\t.add(\"Lassar teleport\", 1, 342)\n\t.add(\"Kharyrll teleport\", 1, 342)\n\t.add(\"Senntisten teleport\", 1, 342)\n\t.add(\"Ghorrock teleport\", 1, 342)\n\t.add(\"Target teleport\", 1, 342)\n\t.add(\"Magic shortbow scroll\", 1, 137)\n\t.add(\"Ring of wealth scroll\", 1, 137)\n\t.add(\"Trouver parchment\", 2, 34)\n\t.add(\"Looting bag note\", 1, 34);\n\nexport const JellyPreTable = new LootTable()\n\t/* Weapons and armour */\n\t.add(\"Steel battleaxe\", 1, 11)\n\t.add(\"Steel 2h sword\", 1, 7)\n\t.add(\"Steel axe\", 1, 3)\n\t.add(\"Mithril kiteshield\", 1, 2)\n\t.add(\"Mithril boots\", 1, 1)\n\t.add(\"Rune full helm\", 1, 1)\n\n\t/* Coins */\n\t.add(\"Coins\", 102, 39)\n\t.add(\"Coins\", 44, 30)\n\t.add(\"Coins\", 220, 10)\n\t.add(\"Coins\", 11, 7)\n\t.add(\"Coins\", 460, 2)\n\n\t/* Other */\n\t.add(\"Chaos rune\", 15, 5)\n\t.add(\"Death rune\", 5, 3)\n\t.add(\"Gold bar\", 1, 2)\n\t.add(\"Thread\", 10, 1)\n\n\t/* Gem drop table */\n\t.add(GemTable, 1, 4);\n\nconst JellyTable = new LootTable()\n\t.every(JellyPreTable)\n\n\t/* Tertiary */\n\t.tertiary(128, \"Clue scroll (hard)\");\n\nconst JellyWildyCaveTable = new LootTable()\n\t.every(JellyTable)\n\t.add(WildySlayerCaveTable, 1, 76)\n\t.add(new LootTable(), 1, 24);\n\nexport default new SimpleMonster({\n\tid: 437,\n\tname: \"Jelly\",\n\ttable: JellyTable,\n\twildyCaveTable: JellyWildyCaveTable,\n\taliases: [\"jelly\", \"jello\"],\n});\n", "import LootTable from \"../../../../structures/LootTable\";\nimport SimpleMonster from \"../../../../structures/SimpleMonster\";\nimport CommonSeedDropTable from \"../../../subtables/CommonSeedDropTable\";\nimport HerbDropTable from \"../../../subtables/HerbDropTable\";\nimport { GemTable } from \"../../../subtables/RareDropTable\";\n\nexport const JogreTable = new LootTable({ limit: 129 })\n\t.tertiary(5000, \"Jogre champion scroll\")\n\t.tertiary(129, \"Clue scroll (medium)\")\n\t.every(\"Jogre bones\")\n\n\t// Weapons\n\t.add(\"Bronze spear\", 1, 30)\n\t.add(\"Iron spear\", 1, 4)\n\n\t// Runes/ammunition\n\t.add(\"Nature rune\", 2, 10)\n\t.add(\"Nature rune\", 10, 2)\n\t.add(\"Nature rune\", 5, 2)\n\t.add(\"Steel javelin\", 5, 2)\n\n\t.add(HerbDropTable, 1, 6)\n\t.add(CommonSeedDropTable, 1, 15)\n\t.add(GemTable, 1, 1)\n\n\t// Others\n\t.add(\"Trading sticks\", 22, 27)\n\t.add(\"Pineapple\", 2, 8)\n\t.add(\"Knife\", 1, 5)\n\t.add(\"Bones\", 1, 3)\n\t.add(\"Big bones\", 1, 3)\n\t.add(\"Big bones\", 3, 2)\n\t.add(\"Bones\", 1, 2);\n\nexport default new SimpleMonster({\n\tid: 2094,\n\tname: \"Jogre\",\n\ttable: JogreTable,\n\taliases: [\"jogre\"],\n});\n", "import LootTable from \"../../../../structures/LootTable\";\nimport SimpleMonster from \"../../../../structures/SimpleMonster\";\n\nexport default new SimpleMonster({\n\tid: 4863,\n\tname: \"Jubbly bird\",\n\ttable: new LootTable().every(\"Big bones\").every(\"Raw jubbly\").add(\"Feather\", [25, 32]),\n\taliases: [\"jubbly bird\", \"jubbly\"],\n});\n", "import LootTable from \"../../../../structures/LootTable\";\nimport SimpleMonster from \"../../../../structures/SimpleMonster\";\nimport { itemTupleToTable } from \"../../../../util\";\nimport HerbDropTable from \"../../../subtables/HerbDropTable\";\nimport { GemTable } from \"../../../subtables/RareDropTable\";\nimport VariableAllotmentSeedTable from \"../../../subtables/VariableAllotmentSeedTable\";\n\nconst JungleHorrorTable = new LootTable({ limit: 129 })\n\t.every(\"Bones\")\n\n\t/* Weapons and armor*/\n\t.add(\"Iron warhammer\", 1, 17)\n\t.add(\"Iron kiteshield\", 1, 5)\n\t.add(\"Iron spear\", 1, 4)\n\t.add(\"Iron javelin\", 5, 2)\n\n\t/* Runes */\n\t.add(\"Nature rune\", 4, 10)\n\t.add(\"Nature rune\", 2, 7)\n\t.add(\"Death rune\", 1, 5)\n\n\t/* Herbs */\n\t.add(HerbDropTable, 1, 6)\n\n\t/* Seeds */\n\t.add(VariableAllotmentSeedTable, 1, 15)\n\n\t/* Materials */\n\t.add(\"Iron ore\", 1, 27)\n\t.add(\"Teak logs\", 3, 9)\n\t.add(\"Mahogany logs\", 1, 3)\n\n\t/* Other */\n\t.add(\"Pineapple\", 1, 8)\n\t.add(\n\t\titemTupleToTable([\n\t\t\t[\"Big bones\", 1],\n\t\t\t[\"Bones\", 1],\n\t\t]),\n\t\t1,\n\t\t3,\n\t)\n\t.add(\n\t\titemTupleToTable([\n\t\t\t[\"Big bones\", 3],\n\t\t\t[\"Bones\", 1],\n\t\t]),\n\t\t1,\n\t\t2,\n\t)\n\n\t/* Gems */\n\t.add(GemTable, 1, 1)\n\n\t/* Tertiary */\n\t.tertiary(40, \"Ensouled horror head\")\n\t.tertiary(128, \"Clue scroll (medium)\");\n\nexport default new SimpleMonster({\n\tid: 1042,\n\tname: \"Jungle horror\",\n\ttable: JungleHorrorTable,\n\taliases: [\"jungle horror\", \"jungle h\"],\n});\n", "import LootTable from \"../../../../structures/LootTable\";\nimport SimpleMonster from \"../../../../structures/SimpleMonster\";\n\nexport const JungleWolfTable = new LootTable().every(\"Wolf bones\");\n\nexport default new SimpleMonster({\n\tid: 232,\n\tname: \"Jungle Wolf\",\n\ttable: JungleWolfTable,\n\taliases: [\"jungle wolf\"],\n});\n", "import LootTable from \"../../../../structures/LootTable\";\nimport SimpleMonster from \"../../../../structures/SimpleMonster\";\nimport HerbDropTable from \"../../../subtables/HerbDropTable\";\nimport RareDropTable, { GemTable } from \"../../../subtables/RareDropTable\";\n\nconst KalphiteGuardianTable = new LootTable({ limit: 128 })\n\n\t/* Weapons and armor */\n\t.add(\"Mithril sword\", 1, 4)\n\t.add(\"Steel battleaxe\", 1, 3)\n\t.add(\"Mithril axe\", 1, 2)\n\t.add(\"Adamant dagger\", 1, 2)\n\t.add(\"Mithril kiteshield\", 1, 1)\n\t.add(\"Rune med helm\", 1, 1)\n\t.add(\"Rune chainbody\", 1, 1)\n\n\t/* Runes */\n\t.add(\"Air rune\", 50, 8)\n\t.add(\"Chaos rune\", 10, 7)\n\t.add(\"Blood rune\", 7, 4)\n\t.add(\"Fire rune\", 37, 1)\n\t.add(\"Law rune\", 3, 1)\n\n\t/* Herbs */\n\t.add(HerbDropTable, 1, 23)\n\n\t/* Coins */\n\t.add(\"Coins\", 132, 40)\n\t.add(\"Coins\", 30, 7)\n\t.add(\"Coins\", 44, 6)\n\t.add(\"Coins\", 220, 6)\n\t.add(\"Coins\", 460, 1)\n\n\t/* Other */\n\t.add(\"Lobster\", 1, 3)\n\t.add(\"Defence potion(3)\", 1, 1)\n\n\t/* RDT */\n\t.add(RareDropTable, 1, 1)\n\t.add(GemTable, 1, 5)\n\n\t/* Tertiary */\n\t.tertiary(35, \"Ensouled kalphite head\");\n\nexport default new SimpleMonster({\n\tid: 959,\n\tname: \"Kalphite Guardian\",\n\ttable: KalphiteGuardianTable,\n\taliases: [\"kalphite guardian\"],\n});\n", "import LootTable from \"../../../../structures/LootTable\";\nimport SimpleMonster from \"../../../../structures/SimpleMonster\";\nimport HerbDropTable from \"../../../subtables/HerbDropTable\";\nimport { GemTable } from \"../../../subtables/RareDropTable\";\n\nconst KalphiteSoldierTable = new LootTable({ limit: 128 })\n\t/* Weapons and armor */\n\t.add(\"Steel full helm\", 1, 4)\n\t.add(\"Steel axe\", 1, 4)\n\t.add(\"Steel scimitar\", 1, 3)\n\t.add(\"Mithril chainbody\", 1, 1)\n\t.add(\"Mithril sq shield\", 1, 1)\n\t.add(\"Adamant med helm\", 1, 1)\n\n\t/* Runes */\n\t.add(\"Fire rune\", 60, 8)\n\t.add(\"Chaos rune\", 12, 5)\n\t.add(\"Death rune\", 3, 3)\n\t.add(\"Nature rune\", 1, 2)\n\t.add(\"Fire rune\", 30, 1)\n\n\t/* Herbs */\n\t.add(HerbDropTable, 1, 1)\n\n\t/* Coins */\n\t.add(\"Coins\", 120, 40)\n\t.add(\"Coins\", 40, 29)\n\t.add(\"Coins\", 200, 10)\n\t.add(\"Coins\", 10, 7)\n\t.add(\"Coins\", 450, 1)\n\n\t/* Other */\n\t.add(\"Waterskin(4)\", 1, 3)\n\n\t/* RDT */\n\t.add(GemTable, 1, 4)\n\n\t/* Tertiary */\n\t.tertiary(90, \"Ensouled kalphite head\");\n\nexport default new SimpleMonster({\n\tid: 957,\n\tname: \"Kalphite Soldier\",\n\ttable: KalphiteSoldierTable,\n\taliases: [\"kalphite soldier\"],\n});\n", "import LootTable from \"../../../../structures/LootTable\";\nimport SimpleMonster from \"../../../../structures/SimpleMonster\";\nimport HerbDropTable from \"../../../subtables/HerbDropTable\";\nimport { GemTable } from \"../../../subtables/RareDropTable\";\n\nconst KalphiteWorkerTable = new LootTable()\n\t/* Weapons and armor */\n\t.add(\"Iron sword\", 1, 3)\n\t.add(\"Steel dagger\", 1, 3)\n\t.add(\"Hardleather body\", 1, 2)\n\t.add(\"Iron javelin\", 5, 1)\n\t.add(\"Steel longsword\", 1, 1)\n\n\t/* Runes */\n\t.add(\"Law rune\", 2, 3)\n\t.add(\"Body rune\", 6, 2)\n\t.add(\"Chaos rune\", 3, 2)\n\t.add(\"Fire rune\", 7, 2)\n\t.add(\"Water rune\", 2, 2)\n\t.add(\"Nature rune\", 4, 2)\n\t.add(\"Cosmic rune\", 2, 1)\n\n\t/* Herbs */\n\t.add(HerbDropTable, 1, 7)\n\n\t/* Coins */\n\t.add(\"Coins\", 15, 34)\n\t.add(\"Coins\", 5, 12)\n\t.add(\"Coins\", 28, 12)\n\t.add(\"Coins\", 1, 8)\n\t.add(\"Coins\", 62, 4)\n\t.add(\"Coins\", 42, 3)\n\n\t/* Other */\n\t.add(\"Waterskin(4)\", 1, 21)\n\n\t/* RDT */\n\t.add(GemTable, 1, 2)\n\n\t/* Tertiary */\n\t.tertiary(250, \"Ensouled kalphite head\");\n\nexport default new SimpleMonster({\n\tid: 955,\n\tname: \"Kalphite Worker\",\n\ttable: KalphiteWorkerTable,\n\taliases: [\"kalphite worker\", \"kalphite\"],\n});\n", "import LootTable from \"../../../../structures/LootTable\";\nimport SimpleMonster from \"../../../../structures/SimpleMonster\";\nimport HerbDropTable from \"../../../subtables/HerbDropTable\";\nimport { GemTable } from \"../../../subtables/RareDropTable\";\n\nexport const KillerwattTable = new LootTable()\n\t.every(\"Ashes\")\n\n\t/* Weapons */\n\t.add(\"Staff of fire\", 1, 2)\n\t.add(\"Staff of air\", 1, 2)\n\t.add(\"Fire battlestaff\", 1, 1)\n\t.add(\"Air battlestaff\", 1, 1)\n\t.oneIn(512, \"Mystic fire staff\")\n\n\t/* Runes and ammunition */\n\t.add(\"Nature rune\", 8, 11)\n\t.add(\"Chaos rune\", 4, 9)\n\t.add(\"Fire rune\", 45, 8)\n\t.add(\"Fire rune\", 18, 5)\n\t.add(\"Air rune\", 5, 3)\n\t.add(\"Death rune\", 2, 3)\n\t.add(\"Air rune\", 17, 2)\n\t.add(\"Steam rune\", 2, 2)\n\t.add(\"Cannonball\", 3, 2)\n\t.add(\"Nature rune\", 37, 1)\n\n\t/* Herbs */\n\t.add(HerbDropTable, 1, 35)\n\n\t/* Coins */\n\t.add(\"Coins\", 44, 28)\n\t.add(\"Coins\", 11, 23)\n\t.add(\"Coins\", 200, 11)\n\t.add(\"Coins\", 76, 1)\n\t.add(\"Coins\", 127, 1)\n\n\t/* Other */\n\t.add(\"Fire orb\", 2, 1)\n\t.add(\"Soda ash\", 4, 1)\n\n\t/* Gem drop table */\n\t.add(GemTable, 1, 5);\n\nexport default new SimpleMonster({\n\tid: 469,\n\tname: \"Killerwatt\",\n\ttable: KillerwattTable,\n\taliases: [\"killerwatt\"],\n});\n", "import LootTable from \"../../../../structures/LootTable\";\nimport SimpleMonster from \"../../../../structures/SimpleMonster\";\n\nexport const KingScorpionTable = new LootTable()\n\t.tertiary(25, \"Ensouled scorpion head\")\n\t.tertiary(100, \"Clue scroll (beginner)\");\n\nexport default new SimpleMonster({\n\tid: 3027,\n\tname: \"King Scorpion\",\n\ttable: KingScorpionTable,\n\taliases: [\"king scorpion\"],\n});\n", "import LootTable from \"../../../../structures/LootTable\";\nimport SimpleMonster from \"../../../../structures/SimpleMonster\";\n\nexport default new SimpleMonster({\n\tid: 3297,\n\tname: \"Knight of Ardougne\",\n\tpickpocketTable: new LootTable().add(\"Coins\", 50).tertiary(257_211, \"Rocky\"),\n\taliases: [\"ardy knight\", \"ardougne knight\", \"knight of ardougne\"],\n});\n", "import LootTable from \"../../../../structures/LootTable\";\nimport SimpleMonster from \"../../../../structures/SimpleMonster\";\nimport HerbDropTable from \"../../../subtables/HerbDropTable\";\nimport { GemTable } from \"../../../subtables/RareDropTable\";\nimport RareSeedTable from \"../../../subtables/RareSeedTable\";\n\nexport const KuraskPreTable = new LootTable({ limit: 124 })\n\t/* Weapons and armor */\n\t.add(\"Mithril kiteshield\", 1, 3)\n\t.add(\"Rune longsword\", 1, 3)\n\t.add(\"Adamant platebody\", 1, 3)\n\t.add(\"Rune axe\", 1, 3)\n\t.oneIn(384, \"Leaf-bladed sword\")\n\t.oneIn(512, \"Mystic robe top (light)\")\n\t.oneIn(1026, \"Leaf-bladed battleaxe\")\n\n\t/* Runes */\n\t.add(\"Nature rune\", 10, 10)\n\t.add(\"Nature rune\", 15, 7)\n\t.add(\"Nature rune\", 30, 4)\n\n\t/* Herbs */\n\t.add(HerbDropTable, 3, 18)\n\n\t/* Seeds */\n\t.add(RareSeedTable, 1, 15)\n\n\t/* Other */\n\t.add(\"Coins\", [2000, 3000], 16)\n\t.add(\"Flax\", 100, 6)\n\t.add(\"White berries\", 12, 6)\n\t.add(\"Coins\", 10_000, 5)\n\t.add(\"Big bones\", 20, 5)\n\t.add(\"Papaya fruit\", 10, 4)\n\t.add(\"Coconut\", 10, 4)\n\n\t/* RDT */\n\t.add(GemTable, 1, 6);\n\nconst KuraskTable = new LootTable()\n\t.every(\"Bones\")\n\t.every(KuraskPreTable)\n\n\t/* Tertiary */\n\t.tertiary(128, \"Clue scroll (hard)\")\n\t.tertiary(3000, \"Kurask head\");\n\nexport default new SimpleMonster({\n\tid: 410,\n\tname: \"Kurask\",\n\ttable: KuraskTable,\n\taliases: [\"kurask\"],\n});\n", "import LootTable from \"../../../../structures/LootTable\";\nimport SimpleMonster from \"../../../../structures/SimpleMonster\";\nimport HerbDropTable from \"../../../subtables/HerbDropTable\";\nimport RareDropTable, { GemTable } from \"../../../subtables/RareDropTable\";\n\nexport const LavaDragonTable = new LootTable()\n\t.every(\"Lava dragon bones\")\n\t.every(\"Black dragonhide\")\n\t.every(\"Lava scale\")\n\n\t/* Weapons and armour */\n\t.add(\"Rune dart\", 12, 6)\n\t.add(\"Rune knife\", 8, 4)\n\t.add(\"Lava battlestaff\", 1, 3)\n\t.add(\"Adamant 2h sword\", 1, 2)\n\t.add(\"Adamant platebody\", 1, 2)\n\t.add(\"Rune axe\", 1, 2)\n\t.add(\"Rune kiteshield\", 1, 2)\n\t.add(\"Rune longsword\", 1, 2)\n\t.add(\"Rune med helm\", 1, 1)\n\t.add(\"Rune full helm\", 1, 1)\n\n\t/* Runes and ammunition */\n\t.add(\"Rune javelin\", 20, 10)\n\t.add(\"Fire rune\", 75, 7)\n\t.add(\"Blood rune\", 20, 7)\n\t.add(\"Runite bolts\", 30, 6)\n\t.add(\"Death rune\", 20, 5)\n\t.add(\"Law rune\", 20, 5)\n\t.add(\"Lava rune\", 15, 4)\n\t.add(\"Lava rune\", 30, 4)\n\n\t/* Herbs */\n\t.add(HerbDropTable, 2, 5)\n\n\t/* Coins */\n\t.add(\"Coins\", 66, 15)\n\t.add(\"Coins\", 690, 1)\n\n\t/* Other */\n\t.add(\"Dragon javelin heads\", 15, 7)\n\t.add(\"Fire orb\", 15, 5)\n\t.add(\"Adamantite bar\", 2, 5)\n\t.add(\"Onyx bolt tips\", 12, 5)\n\t.add(\"Chocolate cake\", 3, 3)\n\t.add(\"Fire talisman\", 1, 1)\n\n\t/* Gem drop table */\n\t.add(RareDropTable, 1, 3)\n\t.add(GemTable, 1, 5)\n\n\t/* Tertiary */\n\t.tertiary(18, \"Ensouled dragon head\")\n\t.tertiary(250, \"Clue scroll (elite)\")\n\t.tertiary(10_000, \"Draconic visage\");\n\nexport default new SimpleMonster({\n\tid: 6593,\n\tname: \"Lava dragon\",\n\ttable: LavaDragonTable,\n\taliases: [\"lava dragon\"],\n});\n", "import LootTable from \"../../../../structures/LootTable\";\nimport SimpleMonster from \"../../../../structures/SimpleMonster\";\nimport HerbDropTable from \"../../../subtables/HerbDropTable\";\nimport { GemTable } from \"../../../subtables/RareDropTable\";\n\nconst WildySlayerCaveTable = new LootTable()\n\t.add(\"Blighted entangle sack\", [1, 10], 11500)\n\t.add(\"Blighted anglerfish\", [1, 2], 8620)\n\t.add(\"Blighted manta ray\", [1, 2], 8620)\n\t.add(\"Blighted karambwan\", [1, 2], 5780)\n\t.add(\"Blighted teleport spell sack\", [1, 10], 5780)\n\t.add(\"Blighted ancient ice sack\", [1, 10], 5780)\n\t.add(\"Blighted vengeance sack\", [1, 10], 5780)\n\t.add(\"Blighted super restore(4)\", 1, 2880)\n\t.add(\"Revenant cave teleport\", 1, 2880)\n\t.add(\"Dareeyak teleport\", 1, 577)\n\t.add(\"Wilderness crabs teleport\", 1, 577)\n\t.add(\"Carrallanger teleport\", 1, 577)\n\t.add(\"Paddewwa teleport\", 1, 577)\n\t.add(\"Annakarl teleport\", 1, 577)\n\t.add(\"Lassar teleport\", 1, 577)\n\t.add(\"Kharyrll teleport\", 1, 577)\n\t.add(\"Senntisten teleport\", 1, 577)\n\t.add(\"Ghorrock teleport\", 1, 577)\n\t.add(\"Target teleport\", 1, 577)\n\t.add(\"Magic shortbow scroll\", 1, 231)\n\t.add(\"Ring of wealth scroll\", 1, 231)\n\t.add(\"Trouver parchment\", 2, 58)\n\t.add(\"Looting bag note\", 1, 58);\n\nconst LesserDemonTable = new LootTable()\n\t.every(\"Vile ashes\")\n\n\t/* Weapons and armor*/\n\t.add(\"Steel full helm\", 1, 4)\n\t.add(\"Steel axe\", 1, 4)\n\t.add(\"Steel scimitar\", 1, 3)\n\t.add(\"Mithril sq shield\", 1, 1)\n\t.add(\"Mithril chainbody\", 1, 1)\n\t.add(\"Rune med helm\", 1, 1)\n\n\t/* Runes */\n\t.add(\"Fire rune\", 60, 8)\n\t.add(\"Chaos rune\", 12, 5)\n\t.add(\"Death rune\", 3, 3)\n\t.add(\"Fire rune\", 30, 1)\n\n\t/* Herbs */\n\t.add(HerbDropTable, 1, 1)\n\n\t/* Coins */\n\t.add(\"Coins\", 120, 40)\n\t.add(\"Coins\", 40, 29)\n\t.add(\"Coins\", 200, 10)\n\t.add(\"Coins\", 10, 7)\n\t.add(\"Coins\", 450, 1)\n\n\t/* Other */\n\t.add(\"Jug of wine\", 1, 3)\n\t.add(\"Gold ore\", 1, 2)\n\n\t/* Gems */\n\t.add(GemTable, 1, 4)\n\n\t/* Tertiary */\n\t.tertiary(50, \"Ensouled demon head\")\n\t.tertiary(5000, \"Lesser demon champion scroll\");\n\nconst LesserDemonWildyCaveTable = new LootTable()\n\t.every(LesserDemonTable)\n\t.add(WildySlayerCaveTable, 1, 64)\n\t.add(new LootTable(), 1, 36);\n\nexport default new SimpleMonster({\n\tid: 2005,\n\tname: \"Lesser demon\",\n\ttable: LesserDemonTable,\n\twildyCaveTable: LesserDemonWildyCaveTable,\n\taliases: [\"lesser demon\"],\n});\n", "import LootTable from \"../../../../structures/LootTable\";\nimport SimpleMonster from \"../../../../structures/SimpleMonster\";\nimport FixedAllotmentSeedTable from \"../../../subtables/FixedAllotmentSeedTable\";\nimport HerbDropTable from \"../../../subtables/HerbDropTable\";\nimport { GemTable } from \"../../../subtables/RareDropTable\";\n\nconst HerbFireRuneTable = new LootTable().every(HerbDropTable).every(\"Fire rune\", 42);\nconst SeedWaterskinTable = new LootTable().every(FixedAllotmentSeedTable).every(\"Waterskin(0)\", 2);\n\nexport const LizardTable = new LootTable()\n\t.every(\"Big bones\")\n\n\t.tertiary(400, \"Long bone\")\n\t.tertiary(5013, \"Curved bone\")\n\n\t.oneIn(512, \"Mystic gloves (light)\")\n\n\t/* Runes */\n\t.add(\"Fire rune\", 5, 30)\n\t.add(\"Fire rune\", 42, 4)\n\t.add(\"Nature rune\", 5, 4)\n\n\t/* Herbs */\n\t.add(HerbFireRuneTable, 1, 10)\n\n\t/* Seeds */\n\t.add(SeedWaterskinTable, 1, 9)\n\n\t/* Ores and bars */\n\t.add(\"Iron ore\", 1, 22)\n\t.add(\"Coal\", 1, 13)\n\t.add(\"Tin ore\", 1, 4)\n\t.add(\"Copper ore\", 1, 3)\n\t.add(\"Silver ore\", 1, 3)\n\t.add(\"Silver bar\", 1, 2)\n\t.add(\"Mithril ore\")\n\n\t/* Other */\n\t.add(\"Kebab\", 1, 13)\n\t.add(\"Waterskin(0)\", 2, 4)\n\n\t/* Subtables */\n\t.add(GemTable, 1, 4)\n\t.add(GemTable, 2, 2);\n\nexport default new SimpleMonster({\n\tid: 458,\n\tname: \"Lizard\",\n\ttable: LizardTable,\n\taliases: [\"lizard\"],\n});\n", "import LootTable from \"../../../../structures/LootTable\";\nimport SimpleMonster from \"../../../../structures/SimpleMonster\";\nimport CommonSeedDropTable from \"../../../subtables/CommonSeedDropTable\";\n\nconst LizardmanTable = new LootTable({ limit: 78 })\n\t.every(\"Bones\")\n\n\t/* Seeds */\n\t.add(CommonSeedDropTable, 1, 15)\n\n\t/* Other */\n\t.add(\"Lizardman fang\", 1, 14)\n\t.add(\"Xerician fabric\", 1, 8)\n\t.oneIn(125, \"Xeric's talisman (inert)\");\n\nexport default new SimpleMonster({\n\tid: 6914,\n\tname: \"Lizardman\",\n\ttable: LizardmanTable,\n\taliases: [\"lizardman\"],\n});\n", "import LootTable from \"../../../../structures/LootTable\";\nimport SimpleMonster from \"../../../../structures/SimpleMonster\";\nimport { UncommonSeedDropTable } from \"../../../subtables/index\";\n\nconst LizardmanBruteTable = new LootTable()\n\t.every(\"Bones\")\n\n\t/* Seeds */\n\t.add(UncommonSeedDropTable, 1, 15)\n\n\t/* Other */\n\t.add(\"Lizardman fang\", 1, 14)\n\t.add(\"Xerician fabric\", 1, 8)\n\t.oneIn(125, \"Xeric's talisman (inert)\");\n\nexport default new SimpleMonster({\n\tid: 6918,\n\tname: \"Lizardman brute\",\n\ttable: LizardmanBruteTable,\n\taliases: [\"lizardman brute\"],\n});\n", "import LootTable from \"../../../../structures/LootTable\";\nimport SimpleMonster from \"../../../../structures/SimpleMonster\";\nimport { NotedHerbTable } from \"../../../subtables/NotedHerbTable\";\nimport RareDropTable from \"../../../subtables/RareDropTable\";\nimport TreeHerbSeedTable from \"../../../subtables/TreeHerbSeedTable\";\n\nconst LizardmanShamanTable = new LootTable({ limit: 500 })\n\t.every(\"Big bones\")\n\t.oneIn(3000, \"Dragon warhammer\")\n\n\t/* Weapons and armor */\n\t.add(\"Rune med helm\", 1, 18)\n\t.add(\"Earth battlestaff\", 1, 17)\n\t.add(\"Mystic earth staff\", 1, 17)\n\t.add(\"Rune warhammer\", 1, 16)\n\t.add(\"Rune chainbody\", 1, 12)\n\t.add(\"Red d'hide vambraces\", 1, 10)\n\n\t/* Runes */\n\t.add(\"Air rune\", [60, 80], 25)\n\t.add(\"Chaos rune\", [40, 60], 25)\n\t.add(\"Death rune\", [20, 30], 25)\n\t.add(\"Fire rune\", [60, 80], 25)\n\n\t/*  Materials */\n\t.add(\"Xerician fabric\", 2, 40)\n\t.add(\"Coal\", [20, 25], 20)\n\t.add(\"Iron ore\", [30, 35], 20)\n\t.add(\"Runite ore\", [3, 5], 8)\n\n\t/* Herbs */\n\t.add(NotedHerbTable, [2, 3], 45)\n\n\t/* Seeds */\n\t.add(TreeHerbSeedTable, 1, 10)\n\n\t/* Other */\n\t.add(\"Coins\", [100, 6000], 70)\n\t.add(\"Lizardman fang\", [10, 14], 38)\n\t.add(\"Chilli potato\", 2, 30)\n\t.add(\"Xeric's talisman (inert)\", 1, 4)\n\n\t/* RDT */\n\t.add(RareDropTable, 1, 20)\n\n\t/* Tertiary */\n\t.tertiary(200, \"Clue scroll (hard)\")\n\t.tertiary(400, \"Long bone\")\n\t.tertiary(1200, \"Clue scroll (elite)\")\n\t.tertiary(5013, \"Curved bone\");\n\nexport default new SimpleMonster({\n\tid: 6766,\n\tname: \"Lizardman Shaman\",\n\ttable: LizardmanShamanTable,\n\taliases: [\"lizardman shaman\", \"shaman\"],\n});\n", "import LootTable from \"../../../../structures/LootTable\";\nimport SimpleMonster from \"../../../../structures/SimpleMonster\";\n\nexport const LoarShadeTable = new LootTable().every(\"Loar remains\");\n\nexport default new SimpleMonster({\n\tid: 1277,\n\tname: \"Loar Shade\",\n\ttable: LoarShadeTable,\n\taliases: [\"loar shade\"],\n});\n", "import LootTable from \"../../../../structures/LootTable\";\nimport SimpleMonster from \"../../../../structures/SimpleMonster\";\nimport HerbDropTable from \"../../../subtables/HerbDropTable\";\nimport { NotedHerbTable } from \"../../../subtables/NotedHerbTable\";\nimport { GemTable } from \"../../../subtables/RareDropTable\";\nimport RareSeedTable from \"../../../subtables/RareSeedTable\";\nimport { UncommonSeedDropTable } from \"../../../subtables/index\";\n\nexport const LobstrosityTable = new LootTable()\n\t.every(\"Raw lobster\")\n\n\t/* Runes */\n\t.add(\"Water rune\", 100, 8)\n\t.add(\"Chaos rune\", 20, 8)\n\t.add(\"Nature rune\", 10, 6)\n\t.add(\"Death rune\", 10, 5)\n\n\t/* Noted herbs */\n\t.add(NotedHerbTable, 2, 11)\n\n\t/* Un-noted herbs */\n\t.add(HerbDropTable, 2, 14)\n\n\t/* Seeds */\n\t.add(UncommonSeedDropTable, 2, 4)\n\t.add(RareSeedTable, 1, 5)\n\t.add(\"Seaweed spore\", 5, 6)\n\n\t/* Other */\n\t.add(\"Coins\", 1000, 9)\n\t.add(\"Pufferfish\", 1, 8)\n\t.add(\"Giant seaweed\", 6, 8)\n\t.add(\"Seaweed\", 6, 8)\n\t.add(\"Toad's legs\", 2, 6)\n\t.add(\"Caviar\", 2, 5)\n\t.add(\"Oyster pearls\", 1, 4)\n\n\t/* Gem drop table */\n\t.add(GemTable, 1, 3)\n\n\t/* Tertiary */\n\t.tertiary(4, \"Numulite\", [5, 14])\n\t.tertiary(70, \"Unidentified small fossil\")\n\t.tertiary(128, \"Clue scroll (easy)\")\n\t.tertiary(140, \"Unidentified medium fossil\")\n\t.tertiary(175, \"Unidentified large fossil\")\n\t.tertiary(700, \"Unidentified rare fossil\");\n\nexport default new SimpleMonster({\n\tid: 7796,\n\tname: \"Lobstrosity\",\n\ttable: LobstrosityTable,\n\taliases: [\"lobstrosity\"],\n});\n", "import LootTable from \"../../../../structures/LootTable\";\nimport SimpleMonster from \"../../../../structures/SimpleMonster\";\nimport HerbDropTable from \"../../../subtables/HerbDropTable\";\nimport RareDropTable, { GemTable } from \"../../../subtables/RareDropTable\";\nimport RareSeedTable from \"../../../subtables/RareSeedTable\";\n\nconst LocustRiderTable = new LootTable({ limit: 128 })\n\t.every(\"Bones\")\n\n\t/* Weapons and armor */\n\t.add(\"Adamant kiteshield\", 1, 3)\n\t.add(\"Battlestaff\", 3, 2)\n\t.add(\"Rune dagger\", 1, 2)\n\t.add(\"Rune mace\", 1, 1)\n\t.add(\"Rune sq shield\", 1, 1)\n\n\t/* Runes and ammunition */\n\t.add(\"Adamant arrow\", 36, 4)\n\t.add(\"Blood rune\", 18, 4)\n\t.add(\"Fire rune\", 250, 2)\n\t.add(\"Cosmic rune\", 35, 2)\n\t.add(\"Lava rune\", 150, 2)\n\t.add(\"Rune arrow\", 18, 2)\n\n\t/* Herbs */\n\t.add(HerbDropTable, 1, 20)\n\n\t/* Seeds */\n\t.add(RareSeedTable, 1, 2)\n\n\t/* Materials */\n\t.add(\"Raw lobster\", 15, 7)\n\t.add(\"Coal\", 32, 6)\n\t.add(\"Raw bass\", 24, 4)\n\t.add(\"Uncut sapphire\", 4, 3)\n\t.add(\"Adamantite ore\", 14, 2)\n\t.add(\"Desert goat horn\", 6, 2)\n\t.add(\"Mithril bar\", 22, 2)\n\n\t/* Other */\n\t.add(\"Coins\", [2000, 3000], 32)\n\t.add(\"Bass\", 6, 4)\n\t.add(\"Waterskin(4)\", 1, 1)\n\t.add(\"Lobster\", 5, 1)\n\t.add(\"Marrentill tar\", 80, 1)\n\n\t/* RDT */\n\t.add(RareDropTable, 1, 1)\n\t.add(GemTable, 1, 15);\n\nexport default new SimpleMonster({\n\tid: 795,\n\tname: \"Locust Rider\",\n\ttable: LocustRiderTable,\n\taliases: [\"locust rider\", \"locust\"],\n});\n", "import LootTable from \"../../../../structures/LootTable\";\nimport SimpleMonster from \"../../../../structures/SimpleMonster\";\n\nexport const MagicAxeTable = new LootTable().every(\"Iron battleaxe\").tertiary(256, \"Clue scroll (medium)\");\n\nexport default new SimpleMonster({\n\tid: 2844,\n\tname: \"Magic axe\",\n\ttable: MagicAxeTable,\n\taliases: [\"magic axe\"],\n});\n", "import LootTable from \"../../../../structures/LootTable\";\nimport SimpleMonster from \"../../../../structures/SimpleMonster\";\n\nconst MaleHamMemberTable = new LootTable()\n\t// Armour and weaponry\n\t.add(\"Bronze arrow\", [1, 13], 1 / 33.33)\n\t.add(\"Bronze axe\", 1, 1 / 33.33)\n\t.add(\"Bronze dagger\", 1, 1 / 33.33)\n\t.add(\"Bronze pickaxe\", 1, 1 / 33.33)\n\t.add(\"Iron axe\", 1, 1 / 33.33)\n\t.add(\"Iron dagger\", 1, 1 / 33.33)\n\t.add(\"Iron pickaxe\", 1, 1 / 33.33)\n\t.add(\"Leather body\", 1, 1 / 33.33)\n\t.add(\"Steel arrow\", [1, 13], 1 / 50)\n\t.add(\"Steel axe\", 1, 1 / 50)\n\t.add(\"Steel dagger\", 1, 1 / 50)\n\t.add(\"Steel pickaxe\", 1, 1 / 50)\n\t.add(\"Ham boots\", 1, 1 / 100)\n\t.add(\"Ham cloak\", 1, 1 / 100)\n\t.add(\"Ham gloves\", 1, 1 / 100)\n\t.add(\"Ham hood\", 1, 1 / 100)\n\t.add(\"Ham logo\", 1, 1 / 100)\n\t.add(\"Ham robe\", 1, 1 / 100)\n\t.add(\"Ham shirt\", 1, 1 / 100)\n\n\t// Other\n\t.add(\"Coins\", [1, 21], 1 / 6.667)\n\t.add(\"Buttons\", 1, 1 / 25)\n\t.add(\"Damaged armour\", 1, 1 / 25)\n\t.add(\"Rusty sword\", 1, 1 / 25)\n\t.add(\"Feather\", [1, 7], 1 / 33.33)\n\t.add(\"Logs\", 1, 1 / 33.33)\n\t.add(\"Thread\", [1, 10], 1 / 33.33)\n\t.add(\"Cowhide\", 1, 1 / 33.33)\n\t.add(\"Knife\", 1, 1 / 50)\n\t.add(\"Needle\", 1, 1 / 50)\n\t.add(\"Raw anchovies\", 1, 1 / 50)\n\t.add(\"Raw chicken\", 1, 1 / 50)\n\t.add(\"Tinderbox\", 1, 1 / 50)\n\t.add(\"Uncut opal\", 1, 1 / 50)\n\t.add(\"Clue scroll (easy)\", 1, 1 / 50)\n\t.add(\"Coal\", 1, 1 / 50)\n\t.add(\"Iron ore\", 1, 1 / 50)\n\t.add(\"Uncut jade\", 1, 1 / 50)\n\t.add(\"Grimy guam leaf\", 1, 1 / 91.67)\n\t.add(\"Grimy marrentill\", 1, 1 / 183.3)\n\t.add(\"Grimy tarromin\", 1, 1 / 275)\n\t.tertiary(257_211, \"Rocky\");\n\nexport default new SimpleMonster({\n\tid: 2540,\n\tname: \"Male H.A.M. Member\",\n\tpickpocketTable: MaleHamMemberTable,\n\taliases: [\"ham member male\", \"ham male\", \"male h.a.m. member\"],\n});\n", "import LootTable from \"../../../../structures/LootTable\";\nimport SimpleMonster from \"../../../../structures/SimpleMonster\";\nimport HerbDropTable from \"../../../subtables/HerbDropTable\";\nimport RareDropTable, { GemTable } from \"../../../subtables/RareDropTable\";\n\nconst AllotmentSeedTable = new LootTable()\n\t.add(\"Potato seed\", 3, 15)\n\t.add(\"Onion seed\", 3, 10)\n\t.add(\"Cabbage seed\", 3, 8)\n\t.add(\"Tomato seed\", 3, 7)\n\t.add(\"Sweetcorn seed\", 3, 5)\n\t.add(\"Strawberry seed\", 3, 4)\n\t.add(\"Watermelon seed\", 3, 1);\n\nconst BushSeedTable = new LootTable()\n\t.add(\"Redberry seed\", 2, 6)\n\t.add(\"Cadavaberry seed\", 2, 4)\n\t.add(\"Dwellberry seed\", 2, 3)\n\t.add(\"Jangerberry seed\", 2, 3)\n\t.add(\"Whiteberry seed\", 2, 2)\n\t.add(\"Poison ivy seed\", 2, 2);\n\nconst HopsSeedTable = new LootTable()\n\t.add(\"Barley seed\", 4, 15)\n\t.add(\"Hammerstone seed\", 4, 10)\n\t.add(\"Asgarnian seed\", 4, 8)\n\t.add(\"Jute seed\", 4, 7)\n\t.add(\"Yanillian seed\", 4, 5)\n\t.add(\"Krandorian seed\", 4, 4)\n\t.add(\"Wildblood seed\", 4, 1);\n\nconst FruitTreeSeedTable = new LootTable()\n\t.add(\"Apple tree seed\", 1, 18)\n\t.add(\"Banana tree seed\", 1, 12)\n\t.add(\"Orange tree seed\", 1, 10)\n\t.add(\"Curry tree seed\", 1, 6)\n\t.add(\"Pineapple seed\", 1, 3)\n\t.add(\"Papaya tree seed\", 1, 1);\n\nexport const MammothTable = new LootTable()\n\t.every(\"Big bones\")\n\n\t/* Herbs */\n\t.add(HerbDropTable, 1, 8)\n\n\t/* Seeds */\n\t.add(AllotmentSeedTable, 1, 20)\n\t.add(BushSeedTable, 1, 20)\n\t.add(HopsSeedTable, 1, 20)\n\t.add(FruitTreeSeedTable, 1, 10)\n\n\t/* Other */\n\t.add(\"Coins\", 30, 13)\n\t.add(\"Coins\", 180, 7)\n\t.add(\"Acorn\", 1, 5)\n\t.add(\"Limpwurt seed\", 2, 5)\n\t.add(\"Prayer potion(1)\", 1, 5)\n\t.add(\"Steel arrow\", 5, 5)\n\t.add(\"Lobster\", 2, 3)\n\t.add(\"Dark fishing bait\", 12, 2)\n\n\t/* Gem drop table */\n\t.add(RareDropTable, 1, 2)\n\t.add(GemTable, 1, 3)\n\n\t/* Tertiary */\n\t.oneIn(128, \"Clue scroll (medium)\")\n\t.oneIn(400, \"Long bone\")\n\t.oneIn(5013, \"Curved bone\");\n\nexport default new SimpleMonster({\n\tid: 6604,\n\tname: \"Mammoth\",\n\ttable: MammothTable,\n\taliases: [\"mammoth\"],\n});\n", "import LootTable from \"../../structures/LootTable\";\nimport HerbDropTable from \"./HerbDropTable\";\n\nexport default new LootTable({ limit: 128 })\n\t.every(\"Bones\")\n\n\t.add(\"Bronze med helm\", 1, 2)\n\t.add(\"Iron dagger\", 1)\n\n\t.add(\"Bronze bolts\", [2, 12], 22)\n\t.add(\"Bronze arrow\", 7, 3)\n\t.add(\"Earth rune\", 4, 2)\n\t.add(\"Fire rune\", 6, 2)\n\t.add(\"Mind rune\", 9, 2)\n\t.add(\"Chaos rune\", 2, 1)\n\n\t.add(HerbDropTable, 1, 23)\n\n\t.add(\"Coins\", 3, 38)\n\t.add(\"Coins\", 5, 9)\n\t.add(\"Coins\", 15, 4)\n\t.add(\"Coins\", 25, 1)\n\n\t.add(\"Fishing bait\", 1, 5)\n\t.add(\"Copper ore\", 1, 2)\n\t.add(\"Earth talisman\", 1, 2)\n\t.add(\"Cabbage\", 1, 1)\n\n\t.tertiary(90, \"Clue scroll (beginner)\", 1)\n\t.tertiary(128, \"Clue scroll (easy)\", 1);\n", "import LootTable from \"../../../../structures/LootTable\";\nimport SimpleMonster from \"../../../../structures/SimpleMonster\";\nimport ManWomanTable from \"../../../subtables/ManWomanTable\";\n\nexport default new SimpleMonster({\n\tid: 1118,\n\tname: \"Man\",\n\ttable: ManWomanTable,\n\tpickpocketTable: new LootTable().add(\"Coins\", 3).tertiary(257_211, \"Rocky\"),\n\taliases: [\"man\", \"men\"],\n});\n", "import LootTable from \"../../../../structures/LootTable\";\nimport SimpleMonster from \"../../../../structures/SimpleMonster\";\n\nexport const ManiacalMonkeyTable = new LootTable()\n\t.every(\"Small ninja monkey bones\")\n\n\t/* Weapons and armour */\n\t.add(\"Steel scimitar\", 1, 2)\n\t.add(\"Maple shortbow\", 1, 1)\n\n\t/* Materials */\n\t.add(\"Oak plank\", 1, 3)\n\t.add(\"Grimy guam leaf\", 1, 2)\n\n\t/* Other */\n\t.add(\"Bass\", 2, 4)\n\t.add(\"Banana\", 1, 2)\n\t.add(\"Antipoison(2)\", 1, 2)\n\t.add(\"Prayer potion(1)\", 1, 2)\n\t.add(\"Adamant arrow(p++)\", 1, 1)\n\t.add(\"Rope\", 1, 1);\n\nexport default new SimpleMonster({\n\tid: 7118,\n\tname: \"Maniacal monkey\",\n\ttable: ManiacalMonkeyTable,\n\taliases: [\"maniacal monkey\", \"maniacal\", \"mm\"],\n});\n", "import LootTable from \"../../../../structures/LootTable\";\nimport SimpleMonster from \"../../../../structures/SimpleMonster\";\n\nconst MasterFarmerTable = new LootTable()\n\t.add(\"Potato seed\", [1, 4], 1 / 5.6)\n\t.add(\"Onion seed\", [1, 3], 1 / 7.47)\n\t.add(\"Cabbage seed\", [1, 3], 1 / 14.3)\n\t.add(\"Tomato seed\", [1, 2], 1 / 15.6)\n\t.add(\"Sweetcorn seed\", [1, 2], 1 / 44.8)\n\t.add(\"Strawberry seed\", 1, 1 / 82.5)\n\t.add(\"Watermelon seed\", 1, 1 / 187)\n\t.add(\"Snape grass seed\", 1, 1 / 260)\n\n\t// Hops\n\t.add(\"Barley seed\", [1, 12], 1 / 18)\n\t.add(\"Hammerstone seed\", [1, 10], 1 / 18)\n\t.add(\"Asgarnian seed\", [1, 10], 1 / 23.9)\n\t.add(\"Jute seed\", [1, 10], 1 / 24.1)\n\t.add(\"Yanillian seed\", [1, 10], 1 / 36.1)\n\t.add(\"Krandorian seed\", [1, 10], 1 / 76.2)\n\t.add(\"Wildblood seed\", [1, 3], 1 / 142)\n\n\t// Flowers\n\t.add(\"Marigold seed\", 1, 1 / 21.8)\n\t.add(\"Nasturtium seed\", 1, 1 / 32.9)\n\t.add(\"Rosemary seed\", 1, 1 / 50.9)\n\t.add(\"Woad seed\", 1, 1 / 68.9)\n\t.add(\"Limpwurt seed\", 1, 1 / 86.3)\n\n\t// Bushes\n\t.add(\"Redberry seed\", 1, 1 / 25.8)\n\t.add(\"Cadavaberry seed\", 1, 1 / 36.8)\n\t.add(\"Dwellberry seed\", 1, 1 / 51.5)\n\t.add(\"Jangerberry seed\", 1, 1 / 129)\n\t.add(\"Whiteberry seed\", 1, 1 / 355)\n\t.add(\"Poison ivy seed\", 1, 1 / 937)\n\n\t// Herbs\n\t.add(\"Guam seed\", 1, 1 / 65.1)\n\t.add(\"Marrentill seed\", 1, 1 / 95.6)\n\t.add(\"Tarromin seed\", 1, 1 / 140)\n\t.add(\"Harralander seed\", 1, 1 / 206)\n\t.add(\"Ranarr seed\", 1, 1 / 302)\n\t.add(\"Toadflax seed\", 1, 1 / 443)\n\t.add(\"Irit seed\", 1, 1 / 651)\n\t.add(\"Avantoe seed\", 1, 1 / 947)\n\t.add(\"Kwuarm seed\", 1, 1 / 1389)\n\t.add(\"Snapdragon seed\", 1, 1 / 2083)\n\t.add(\"Cadantine seed\", 1, 1 / 2976)\n\t.add(\"Lantadyme seed\", 1, 1 / 4167)\n\t.add(\"Dwarf weed seed\", 1, 1 / 6944)\n\t.add(\"Torstol seed\", 1, 1 / 10_417)\n\n\t// Special\n\t.add(\"Mushroom spore\", 1, 1 / 400)\n\t.add(\"Belladonna seed\", 1, 1 / 667)\n\t.add(\"Cactus seed\", 1, 1 / 1000)\n\t.add(\"Seaweed spore\", 1, 1 / 2200)\n\t.add(\"Potato cactus seed\", 1, 1 / 2200)\n\t.tertiary(257_211, \"Rocky\");\n\nexport default new SimpleMonster({\n\tid: 5730,\n\tname: \"Master Farmer\",\n\ttable: MasterFarmerTable,\n\tpickpocketTable: MasterFarmerTable,\n\taliases: [\"master farmer\", \"mfarmer\"],\n});\n", "import LootTable from \"../../../../structures/LootTable\";\nimport SimpleMonster from \"../../../../structures/SimpleMonster\";\n\nexport default new SimpleMonster({\n\tid: 3549,\n\tname: \"Menaphite Thug\",\n\tpickpocketTable: new LootTable().add(\"Coins\", 60).tertiary(257_211, \"Rocky\"),\n\taliases: [\"menaphite thug\", \"menaphite\", \"thug\"],\n});\n", "import LootTable from \"../../../../structures/LootTable\";\nimport SimpleMonster from \"../../../../structures/SimpleMonster\";\nimport { GemTable } from \"../../../subtables/RareDropTable\";\n\nexport const MinotaurTable = new LootTable({ limit: 101 })\n\t.every(\"Bones\")\n\n\t.oneIn(33, \"Right skull half\")\n\n\t.tertiary(50, \"Ensouled minotaur head\")\n\t.tertiary(60, \"Clue scroll (beginner)\")\n\t.tertiary(101, \"Clue scroll (easy)\")\n\n\t/* Weapons and armour */\n\t.add(\"Iron arrow\", [5, 14], 10)\n\t.add(\"Bronze spear\", 1, 10)\n\t.add(\"Bronze full helm\", 1, 10)\n\t.add(\"Bronze dagger\", 1, 4)\n\t.add(\"Bronze arrow\", 3, 3)\n\n\t/* Runes */\n\t.add(\"Mind rune\", 1, 1)\n\n\t/* Other */\n\t.add(\"Coins\", 7, 20)\n\t.add(\"Coins\", 2, 11)\n\t.add(\"Coins\", [5, 84], 7)\n\t.add(\"Tin ore\", 1, 6)\n\t.add(\"Copper ore\", 1, 6)\n\t.add(\"Cooked meat\", 1, 3)\n\t.add(\"Pure essence\", 15, 5)\n\n\t/* Subtables */\n\t.add(GemTable, 1, 1);\n\nexport default new SimpleMonster({\n\tid: 2481,\n\tname: \"Minotaur\",\n\ttable: MinotaurTable,\n\taliases: [\"minotaur\"],\n});\n", "import LootTable from \"../../../../structures/LootTable\";\nimport SimpleMonster from \"../../../../structures/SimpleMonster\";\nimport RareDropTable, { GemTable } from \"../../../subtables/RareDropTable\";\n\nconst ancientPageTable = new LootTable()\n\t.add(11_341, 1, 1)\n\t.add(11_342, 1, 1)\n\t.add(11_343, 1, 1)\n\t.add(11_344, 1, 1)\n\t.add(11_345, 1, 1)\n\t.add(11_346, 1, 1)\n\t.add(11_347, 1, 1)\n\t.add(11_348, 1, 1)\n\t.add(11_349, 1, 1)\n\t.add(11_350, 1, 1)\n\t.add(11_351, 1, 1)\n\t.add(11_352, 1, 1)\n\t.add(11_353, 1, 1)\n\t.add(11_354, 1, 1)\n\t.add(11_355, 1, 1)\n\t.add(11_356, 1, 1)\n\t.add(11_357, 1, 1)\n\t.add(11_358, 1, 1)\n\t.add(11_359, 1, 1)\n\t.add(11_360, 1, 1)\n\t.add(11_361, 1, 1)\n\t.add(11_362, 1, 1)\n\t.add(11_363, 1, 1)\n\t.add(11_364, 1, 1)\n\t.add(11_365, 1, 1)\n\t.add(11_366, 1, 1);\n\nconst MithrilDragonTable = new LootTable()\n\t.every(\"Dragon bones\")\n\t.every(\"Mithril bar\", 3)\n\n\t/* Weapons and armour */\n\t.add(\"Rune battleaxe\", 1, 12)\n\t.add(\"Rune dart(p)\", 14, 7)\n\t.add(\"Rune knife\", 8, 3)\n\t.add(\"Rune mace\", 1, 3)\n\t.add(\"Rune spear\", 1, 2)\n\t.add(\"Rune full helm\", 1, 1)\n\t.oneIn(32_768, \"Dragon full helm\")\n\n\t/* Runes and ammunition */\n\t.add(\"Blood rune\", 27, 19)\n\t.add(\"Rune javelin\", 8, 14)\n\t.add(\"Runite bolts\", [10, 21], 6)\n\t.add(\"Soul rune\", 10, 5)\n\t.add(\"Rune arrow\", 8, 3)\n\n\t/* Consumables */\n\t.add(\"Shark\", 1, 6)\n\t.add(\"Prayer mix(2)\", 1, 2)\n\t.add(\"Shark\", 6, 2)\n\t.add(\"Superattack mix(2)\", 1, 2)\n\t.add(\"Super def. mix(2)\", 1, 2)\n\t.add(\"Super str. mix(2)\", 1, 2)\n\n\t/* Other */\n\t.add(\"Coins\", 600, 17)\n\t.add(\"Dragon javelin heads\", 15, 7)\n\t.add(\"Chewed bones\", 1, 3)\n\t.add(\"Runite bar\", 2, 3)\n\t.add(ancientPageTable, 2, 1)\n\n\t/* RDT */\n\t.add(RareDropTable, 1, 1)\n\t.add(GemTable, 1, 4)\n\n\t/* Tertiary */\n\t.tertiary(350, \"Clue scroll (elite)\")\n\t.tertiary(10_000, \"Draconic visage\");\n\nexport default new SimpleMonster({\n\tid: 2919,\n\tname: \"Mithril Dragon\",\n\ttable: MithrilDragonTable,\n\taliases: [\"mithril dragon\", \"mith dragon\", \"mith drags\", \"mithril dragons\"],\n});\n", "import LootTable from \"../../../../structures/LootTable\";\nimport SimpleMonster from \"../../../../structures/SimpleMonster\";\nimport { UncommonSeedDropTable } from \"../../../subtables/index\";\n\nexport const MogreTable = new LootTable()\n\t.every(\"Big bones\")\n\n\t/* Runes */\n\t.add(\"Water rune\", 5, 4)\n\t.add(\"Water rune\", 7, 4)\n\t.add(\"Water rune\", 14, 4)\n\n\t/* Seeds */\n\t.add(UncommonSeedDropTable, 1, 13)\n\n\t/* Fish */\n\t.add(\"Raw swordfish\", 1, 20)\n\t.add(\"Raw tuna\", 1, 9)\n\t.add(\"Raw pike\", 1, 7)\n\t.add(\"Raw salmon\", 1, 4)\n\t.add(\"Raw herring\", 1, 3)\n\t.add(\"Raw sardine\", 1, 3)\n\t.add(\"Raw shark\", 1, 3)\n\n\t/* Other */\n\t.add(\"Fishing bait\", 5, 30)\n\t.add(\"Fishing bait\", 15, 10)\n\t.add(\"Mudskipper hat\", 1, 5)\n\t.add(\"Oyster\", 1, 3)\n\t.add(\"Flippers\", 1, 2)\n\t.add(\"Seaweed\", 1, 2)\n\t.add(\"Staff of water\", 1, 1)\n\t.add(\"Fishbowl\", 1, 1)\n\n\t/* Tertiary */\n\t.tertiary(400, \"Long bone\")\n\t.tertiary(5013, \"Curved bone\");\n\nexport default new SimpleMonster({\n\tid: 2592,\n\tname: \"Mogre\",\n\ttable: MogreTable,\n\taliases: [\"mogre\"],\n});\n", "import LootTable from \"../../../../structures/LootTable\";\nimport SimpleMonster from \"../../../../structures/SimpleMonster\";\nimport HerbDropTable from \"../../../subtables/HerbDropTable\";\nimport RareDropTable from \"../../../subtables/RareDropTable\";\n\nconst MolaniskTable = new LootTable()\n\t.every(\"Bones\")\n\n\t/* Runes */\n\t.add(\"Water rune\", [1, 14], 10)\n\t.add(\"Earth rune\", [1, 20], 10)\n\t.add(\"Cosmic rune\", [1, 7], 5)\n\t.add(\"Nature rune\", [1, 5], 3)\n\t.add(\"Mud rune\", [1, 15], 2)\n\n\t/* Herbs */\n\t.add(HerbDropTable, 1, 32)\n\n\t/* Other */\n\t.add(\"Swamp weed\", [1, 4], 37)\n\t.add(\"Swamp weed\", [5, 8], 10)\n\t.add(\"Coins\", [1, 75], 10)\n\t.add(\"Mole claw\", 1, 1)\n\n\t/* Rare drop table */\n\t.add(RareDropTable, 1, 7)\n\n\t/* Tertiary */\n\t.tertiary(128, \"Clue scroll (easy)\");\n\nexport default new SimpleMonster({\n\tid: 1,\n\tname: \"Molanisk\",\n\ttable: MolaniskTable,\n\taliases: [\"molanisk\"],\n});\n", "import LootTable from \"../../../../structures/LootTable\";\nimport SimpleMonster from \"../../../../structures/SimpleMonster\";\n\nexport const MonkeyTable = new LootTable().every(\"Monkey bones\").tertiary(35, \"Ensouled monkey head\");\n\nexport default new SimpleMonster({\n\tid: 2848,\n\tname: \"Monkey\",\n\ttable: MonkeyTable,\n\taliases: [\"monkey\"],\n});\n", "import LootTable from \"../../../../structures/LootTable\";\nimport SimpleMonster from \"../../../../structures/SimpleMonster\";\n\nexport const MonkeyArcherTable = new LootTable().every(\"Monkey bones\").tertiary(35, \"Ensouled monkey head\");\n\nexport default new SimpleMonster({\n\tid: 5272,\n\tname: \"Monkey Archer\",\n\ttable: MonkeyArcherTable,\n\taliases: [\"monkey archer\"],\n});\n", "import LootTable from \"../../../../structures/LootTable\";\nimport SimpleMonster from \"../../../../structures/SimpleMonster\";\n\nexport const MonkeyGuardTable = new LootTable().every(\"Monkey bones\").tertiary(35, \"Ensouled monkey head\");\n\nexport default new SimpleMonster({\n\tid: 5271,\n\tname: \"Monkey Guard\",\n\ttable: MonkeyGuardTable,\n\taliases: [\"monkey guard\"],\n});\n", "import LootTable from \"../../../../structures/LootTable\";\nimport SimpleMonster from \"../../../../structures/SimpleMonster\";\n\nexport const MonkeyZombieTable = new LootTable().every(\"Monkey bones\");\n\nexport default new SimpleMonster({\n\tid: 5281,\n\tname: \"Monkey Zombie\",\n\ttable: MonkeyZombieTable,\n\taliases: [\"monkey zombie\"],\n});\n", "import LootTable from \"../../../../structures/LootTable\";\nimport SimpleMonster from \"../../../../structures/SimpleMonster\";\nimport HerbDropTable from \"../../../subtables/HerbDropTable\";\nimport { GemTable } from \"../../../subtables/RareDropTable\";\nimport { UncommonSeedDropTable } from \"../../../subtables/index\";\n\nconst MossGiantTable = new LootTable()\n\t.every(\"Big bones\")\n\n\t/* Weapons and armour */\n\t.add(\"Black sq shield\", 1, 5)\n\t.add(\"Magic staff\", 1, 2)\n\t.add(\"Steel med helm\", 1, 2)\n\t.add(\"Mithril sword\", 1, 2)\n\t.add(\"Mithril spear\", 1, 2)\n\t.add(\"Steel kiteshield\", 1, 1)\n\n\t/* Runes and ammunition */\n\t.add(\"Law rune\", 3, 4)\n\t.add(\"Air rune\", 18, 3)\n\t.add(\"Earth rune\", 27, 3)\n\t.add(\"Chaos rune\", 7, 3)\n\t.add(\"Nature rune\", 6, 3)\n\t.add(\"Cosmic rune\", 3, 2)\n\t.add(\"Iron arrow\", 15, 2)\n\t.add(\"Steel arrow\", 30, 1)\n\t.add(\"Death rune\", 3, 1)\n\t.add(\"Blood rune\", 1, 1)\n\n\t/* Herbs */\n\t.add(HerbDropTable, 1, 5)\n\n\t/* Seeds */\n\t.add(UncommonSeedDropTable, 1, 35)\n\n\t/* Coins */\n\t.add(\"Coins\", 37, 19)\n\t.add(\"Coins\", 2, 8)\n\t.add(\"Coins\", 119, 10)\n\t.add(\"Coins\", 300, 2)\n\n\t/* Other */\n\t.add(\"Steel bar\", 1, 6)\n\t.add(\"Coal\", 1, 1)\n\t.add(\"Spinach roll\", 1, 1)\n\n\t/* Gem drop table */\n\t.add(GemTable, 1, 4)\n\n\t/* Tertiary */\n\t.tertiary(24, \"Ensouled giant head\")\n\t.tertiary(45, \"Clue scroll (beginner)\")\n\t.tertiary(150, \"Mossy key\")\n\t.tertiary(400, \"Long bone\")\n\t.tertiary(5000, \"Giant champion scroll\")\n\t.tertiary(5013, \"Curved bone\");\n\nexport default new SimpleMonster({\n\tid: 2090,\n\tname: \"Moss giant\",\n\ttable: MossGiantTable,\n\taliases: [\"moss giant\"],\n});\n", "import LootTable from \"../../../../structures/LootTable\";\nimport SimpleMonster from \"../../../../structures/SimpleMonster\";\nimport CommonSeedDropTable from \"../../../subtables/CommonSeedDropTable\";\nimport HerbDropTable from \"../../../subtables/HerbDropTable\";\nimport { GemTable } from \"../../../subtables/RareDropTable\";\n\nconst MountainTrollTable = new LootTable({ limit: 128 })\n\t.every(\"Big bones\")\n\n\t/* Weapons and armour */\n\t.add(\"Steel med helm\", 1, 4)\n\t.add(\"Black warhammer\", 1, 3)\n\t.add(\"Steel warhammer\", 1, 3)\n\t.add(\"Adamant med helm\", 1, 1)\n\t.add(\"Adamant warhammer\", 1, 1)\n\t.add(\"Mithril sq shield\", 1, 1)\n\n\t/* Runes */\n\t.add(\"Earth rune\", 60, 8)\n\t.add(\"Nature rune\", 7, 5)\n\t.add(\"Law rune\", 2, 3)\n\t.add(\"Earth rune\", 45, 1)\n\t.add(\"Earth rune\", 25, 1)\n\n\t/* Herbs */\n\t.add(HerbDropTable, 1, 15)\n\n\t/* Seeds */\n\t.add(CommonSeedDropTable, 1, 19)\n\n\t/* Other */\n\t.add(\"Coins\", 35, 29)\n\t.add(\"Coins\", 100, 10)\n\t.add(\"Coins\", 8, 7)\n\t.add(\"Coins\", 50, 6)\n\t.add(\"Coins\", 250, 1)\n\n\t/* Other */\n\t.add(\"Coal\", 3, 3)\n\t.add(\"Raw mackerel\", 3, 2)\n\n\t/* RDT */\n\t.add(GemTable, 1, 5)\n\n\t/* Tertiary */\n\t.tertiary(45, \"Ensouled troll head\")\n\t.tertiary(400, \"Long bone\")\n\t.tertiary(5013, \"Curved bone\");\n\nexport default new SimpleMonster({\n\tid: 936,\n\tname: \"Mountain Troll\",\n\ttable: MountainTrollTable,\n\taliases: [\"mountain troll\", \"troll\", \"trolls\"],\n});\n", "import LootTable from \"../../../../structures/LootTable\";\nimport SimpleMonster from \"../../../../structures/SimpleMonster\";\n\nexport const MountedTerrorBirdGnomeTable = new LootTable().every(\"Bones\");\n\nexport default new SimpleMonster({\n\tid: 2067,\n\tname: \"Mounted terrorbird gnome\",\n\ttable: MountedTerrorBirdGnomeTable,\n\taliases: [\"mounted terrorbird\", \"mounted terrorbird gnome\"],\n});\n", "import LootTable from \"../../../../structures/LootTable\";\nimport SimpleMonster from \"../../../../structures/SimpleMonster\";\n\nconst MournerTable = new LootTable()\n\t.every(\"Bones\")\n\t.every(\"Mourner cloak\")\n\t.every(\"Mourner boots\")\n\t.every(\"Mourner gloves\")\n\t.every(\"Gas mask\")\n\t.every(\"Mourner trousers\");\n\nexport default new SimpleMonster({\n\tid: 8844,\n\tname: \"Mourner\",\n\ttable: MournerTable,\n\taliases: [\"mourner\"],\n});\n", "import LootTable from \"../../../../structures/LootTable\";\nimport SimpleMonster from \"../../../../structures/SimpleMonster\";\nimport RareDropTable, { GemTable } from \"../../../subtables/RareDropTable\";\n\nexport const MutatedBloodveldPreTable = new LootTable()\n\t/* Weapons and armour */\n\t.add(\"Mithril full helm\", 1, 8)\n\t.add(\"Mithril battleaxe\", 1, 6)\n\t.add(\"Black med helm\", 1, 5)\n\t.add(\"Mithril axe\", 1, 5)\n\t.add(\"Adamant knife\", 2, 3)\n\t.add(\"Adamant chainbody\", 1, 3)\n\t.add(\"Adamant scimitar\", 1, 3)\n\t.add(\"Mithril platebody\", 1, 2)\n\t.add(\"Rune med helm\", 1, 2)\n\t.add(\"Black boots\", 1, 1)\n\t.add(\"Adamant longsword\", 1, 1)\n\t.add(\"Rune dagger\", 1, 1)\n\t.add(\"Rune battleaxe\", 1, 1)\n\n\t/* Runes and ammunition */\n\t.add(\"Blood rune\", 30, 13)\n\t.add(\"Blood rune\", 7, 10)\n\t.add(\"Fire rune\", 75, 9)\n\t.add(\"Air rune\", 105, 7)\n\t.add(\"Soul rune\", 4, 7)\n\n\t/* Other */\n\t.add(\"Coins\", 350, 10)\n\t.add(\"Gold ore\", 1, 7)\n\t.add(\"Meat pizza\", 1, 5)\n\t.add(\"Mithril bar\", 1, 5)\n\t.add(\"Bow string\", 1, 4)\n\t.add(\"Coins\", 11, 3)\n\t.add(\"Ruby amulet\", 1, 2)\n\n\t/* Rare and Gem drop table */\n\t.add(RareDropTable, 1, 3)\n\t.add(GemTable, 1, 2);\n\nconst MutatedBloodveldTable = new LootTable()\n\t.every(\"Vile ashes\")\n\t.every(MutatedBloodveldPreTable)\n\n\t/* Tertiary */\n\t.tertiary(128, \"Clue scroll (hard)\")\n\t.tertiary(20, \"Ensouled bloodveld head\");\n\nexport default new SimpleMonster({\n\tid: 7276,\n\tname: \"Mutated Bloodveld\",\n\ttable: MutatedBloodveldTable,\n\taliases: [\"mutated bloodveld\", \"thicc bois\", \"thicc boi\", \"mutated velds\"],\n});\n", "import LootTable from \"../../../../structures/LootTable\";\nimport SimpleMonster from \"../../../../structures/SimpleMonster\";\nimport RareDropTable, { GemTable } from \"../../../subtables/RareDropTable\";\nimport RareSeedTable from \"../../../subtables/RareSeedTable\";\n\nexport const NechryaelPreTable = new LootTable()\n\t/* Weapons and armor */\n\t.add(\"Adamant platelegs\", 1, 8)\n\t.add(\"Rune 2h sword\", 1, 8)\n\t.add(\"Rune full helm\", 1, 6)\n\t.add(\"Adamant kiteshield\", 1, 4)\n\t.add(\"Rune boots\", 1, 1)\n\n\t/* Runes*/\n\t.add(\"Chaos rune\", 37, 16)\n\t.add(\"Death rune\", 5, 12)\n\t.add(\"Death rune\", 10, 12)\n\t.add(\"Law rune\", [25, 35], 10)\n\t.add(\"Blood rune\", [15, 20], 8)\n\n\t/* Seeds */\n\t.add(\"Limpwurt seed\", 1, 12)\n\t.add(RareSeedTable, 2, 36)\n\n\t/* Coins */\n\t.add(\"Coins\", [1000, 1499], 26)\n\t.add(\"Coins\", [1500, 2000], 21)\n\t.add(\"Coins\", [2500, 2999], 12)\n\t.add(\"Coins\", [3000, 3500], 6)\n\t.add(\"Coins\", [500, 999], 5)\n\t.add(\"Coins\", 5000, 2)\n\n\t/* Other */\n\t.add(\"Soft clay\", 25, 8)\n\t.add(\"Tuna\", 1, 6)\n\n\t/* RDT */\n\t.add(RareDropTable, 1, 2)\n\t.add(GemTable, 1, 10);\n\nconst NechryaelTable = new LootTable()\n\t.every(\"Malicious ashes\")\n\t.every(NechryaelPreTable)\n\n\t/* Tertiary */\n\t.tertiary(128, \"Clue scroll (hard)\");\n\nexport default new SimpleMonster({\n\tid: 8,\n\tname: \"Nechryael\",\n\ttable: NechryaelTable,\n\taliases: [\"nechryael\", \"nech\", \"nechs\"],\n});\n", "import LootTable from \"../../../../structures/LootTable\";\nimport SimpleMonster from \"../../../../structures/SimpleMonster\";\nimport { UncommonSeedDropTable } from \"../../../subtables/index\";\n\nconst OgreTable = new LootTable({ limit: 128 })\n\t.every(\"Big bones\")\n\n\t/* Seeds */\n\t.add(UncommonSeedDropTable, 1, 19)\n\n\t/* Tertiary, Averaged mossy key */\n\t.tertiary(30, \"Ensouled ogre head\")\n\t.tertiary(400, \"Long bone\")\n\t.tertiary(5013, \"Curved bone\");\n\nexport default new SimpleMonster({\n\tid: 136,\n\tname: \"Ogre\",\n\ttable: OgreTable,\n\taliases: [\"ogre\"],\n});\n", "import LootTable from \"../../../../structures/LootTable\";\nimport SimpleMonster from \"../../../../structures/SimpleMonster\";\nimport { GemTable } from \"../../../subtables/RareDropTable\";\nimport { UncommonSeedDropTable } from \"../../../subtables/index\";\n\nconst OgressShamanTable = new LootTable()\n\t.every(\"Big bones\")\n\n\t/* Armour */\n\t.add(\"Mithril kiteshield\", 1, 7)\n\n\t/* Runes and ammunition */\n\t.add(\"Mithril arrow\", [5, 15], 7)\n\t.add(\"Chaos rune\", [15, 30], 7)\n\t.add(\"Law rune\", [8, 15], 7)\n\t.add(\"Nature rune\", [8, 15], 7)\n\t.add(\"Death rune\", [8, 15], 6)\n\t.add(\"Air rune\", [10, 20], 5)\n\t.add(\"Cosmic rune\", [10, 15], 5)\n\t.add(\"Earth rune\", [10, 20], 5)\n\t.add(\"Fire rune\", [10, 20], 5)\n\t.add(\"Mind rune\", [10, 20], 5)\n\t.add(\"Water rune\", [10, 20], 5)\n\t.add(\"Steel arrow\", [10, 30], 5)\n\t.add(\"Iron arrow\", [20, 40], 5)\n\n\t/* Seeds */\n\t.add(UncommonSeedDropTable, 1, 5)\n\n\t/* Materials */\n\t.add(\"Limpwurt root\", 1, 5)\n\t.add(\"Uncut diamond\", 1, 4)\n\t.add(\"Uncut emerald\", 1, 4)\n\t.add(\"Uncut ruby\", 1, 4)\n\t.add(\"Uncut sapphire\", 1, 4)\n\n\t/* Coins */\n\t.add(\"Coins\", [500, 1000], 9)\n\n\t/* Gem drop table */\n\t.add(GemTable, 1, 4)\n\n\t/* Tertiary */\n\t.tertiary(20, \"Salmon\", [1, 3])\n\t.tertiary(30, \"Ensouled ogre head\")\n\t.tertiary(40, \"Rune med helm\")\n\t.tertiary(100, \"Rune full helm\")\n\t.tertiary(100, \"Rune battleaxe\")\n\t.tertiary(400, \"Long bone\")\n\t.tertiary(1200, \"Shaman mask\")\n\t.tertiary(5013, \"Curved bone\");\n\nexport default new SimpleMonster({\n\tid: 7991,\n\tname: \"Ogress Shaman\",\n\ttable: OgressShamanTable,\n\taliases: [\"ogress shaman\"],\n});\n", "import LootTable from \"../../../../structures/LootTable\";\nimport SimpleMonster from \"../../../../structures/SimpleMonster\";\nimport { GemTable } from \"../../../subtables/RareDropTable\";\nimport { UncommonSeedDropTable } from \"../../../subtables/index\";\n\nconst OgressWarriorTable = new LootTable()\n\t.every(\"Big bones\")\n\n\t/* Armour */\n\t.add(\"Mithril kiteshield\", 1, 7)\n\n\t/* Runes and ammunition */\n\t.add(\"Mithril arrow\", [5, 15], 7)\n\t.add(\"Chaos rune\", [15, 30], 7)\n\t.add(\"Law rune\", [8, 15], 7)\n\t.add(\"Nature rune\", [8, 15], 7)\n\t.add(\"Death rune\", [8, 15], 6)\n\t.add(\"Air rune\", [10, 20], 5)\n\t.add(\"Cosmic rune\", [10, 15], 5)\n\t.add(\"Earth rune\", [10, 20], 5)\n\t.add(\"Fire rune\", [10, 20], 5)\n\t.add(\"Mind rune\", [10, 20], 5)\n\t.add(\"Water rune\", [10, 20], 5)\n\t.add(\"Steel arrow\", [10, 30], 5)\n\t.add(\"Iron arrow\", [20, 40], 5)\n\n\t/* Seeds */\n\t.add(UncommonSeedDropTable, 1, 5)\n\n\t/* Materials */\n\t.add(\"Limpwurt root\", 1, 5)\n\t.add(\"Uncut diamond\", 1, 4)\n\t.add(\"Uncut emerald\", 1, 4)\n\t.add(\"Uncut ruby\", 1, 4)\n\t.add(\"Uncut sapphire\", 1, 4)\n\n\t/* Coins */\n\t.add(\"Coins\", [500, 1000], 9)\n\n\t/* Gem drop table */\n\t.add(GemTable, 1, 4)\n\n\t/* Tertiary */\n\t.tertiary(20, \"Salmon\", [1, 3])\n\t.tertiary(30, \"Ensouled ogre head\")\n\t.tertiary(40, \"Rune med helm\")\n\t.tertiary(100, \"Rune full helm\")\n\t.tertiary(100, \"Rune battleaxe\")\n\t.tertiary(400, \"Long bone\")\n\t.tertiary(1200, \"Shaman mask\")\n\t.tertiary(5013, \"Curved bone\");\n\nexport default new SimpleMonster({\n\tid: 7990,\n\tname: \"Ogress Warrior\",\n\ttable: OgressWarriorTable,\n\taliases: [\"ogress warrior\"],\n});\n", "import LootTable from \"../../../../structures/LootTable\";\nimport SimpleMonster from \"../../../../structures/SimpleMonster\";\nimport HerbDropTable from \"../../../subtables/HerbDropTable\";\nimport { GemTable } from \"../../../subtables/RareDropTable\";\n\nconst OtherworldlybeingTable = new LootTable({ limit: 128 })\n\t/* Runes */\n\t.add(\"Nature rune\", 5, 9)\n\t.add(\"Chaos rune\", 4, 8)\n\t.add(\"Law rune\", 2, 7)\n\t.add(\"Cosmic rune\", 2, 5)\n\t.add(\"Death rune\", 2, 4)\n\t.add(\"Blood rune\", 2, 1)\n\n\t/* Herbs */\n\t.add(HerbDropTable, 1, 10)\n\n\t/* Other */\n\t.add(\"Coins\", 15, 59)\n\t.add(\"Ruby ring\", 1, 2)\n\t.add(\"Mithril mace\", 1, 1)\n\t.add(\"Mackerel\", 1, 1)\n\n\t/* Gem drop table */\n\t.add(GemTable, 1, 3);\n\nexport default new SimpleMonster({\n\tid: 2843,\n\tname: \"Otherworldly being\",\n\ttable: OtherworldlybeingTable,\n\taliases: [\"otherworldly being\"],\n});\n", "import LootTable from \"../../../../structures/LootTable\";\nimport SimpleMonster from \"../../../../structures/SimpleMonster\";\n\nconst PaladinTable = new LootTable().every(\"Coins\", 80).every(\"Chaos rune\", 2).tertiary(127_056, \"Rocky\");\n\nexport default new SimpleMonster({\n\tid: 1144,\n\tname: \"Paladin\",\n\tpickpocketTable: PaladinTable,\n\taliases: [\"paladin\"],\n});\n", "import LootTable from \"../../../../structures/LootTable\";\nimport SimpleMonster from \"../../../../structures/SimpleMonster\";\n\nexport const PenguinTable = new LootTable().every(\"Bones\");\n\nexport default new SimpleMonster({\n\tid: 2063,\n\tname: \"Penguin\",\n\ttable: PenguinTable,\n\taliases: [\"penguin\"],\n});\n", "import LootTable from \"../../../../structures/LootTable\";\nimport SimpleMonster from \"../../../../structures/SimpleMonster\";\n\nexport const PhrinShadeTable = new LootTable().every(\"Phrin remains\");\n\nexport default new SimpleMonster({\n\tid: 1280,\n\tname: \"Phrin Shade\",\n\ttable: PhrinShadeTable,\n\taliases: [\"phrin shade\"],\n});\n", "import LootTable from \"../../../../structures/LootTable\";\nimport SimpleMonster from \"../../../../structures/SimpleMonster\";\nimport { GemTable } from \"../../../subtables/RareDropTable\";\n\nexport const PirateTable = new LootTable({ limit: 128 })\n\t.every(\"Bones\")\n\n\t/* Weapons and armour */\n\t.add(\"Iron bolts\", [2, 12], 10)\n\t.add(\"Iron dagger\", 1, 6)\n\t.add(\"Bronze scimitar\", 1, 4)\n\t.add(\"Iron platebody\", 1, 1)\n\n\t/* Runes and ammunition */\n\t.add(\"Chaos rune\", 2, 6)\n\t.add(\"Nature rune\", 2, 5)\n\t.add(\"Bronze arrow\", 9, 3)\n\t.add(\"Bronze arrow\", 12, 2)\n\t.add(\"Air rune\", 10, 2)\n\t.add(\"Earth rune\", 9, 2)\n\t.add(\"Fire rune\", 5, 2)\n\t.add(\"Law rune\", 2, 1)\n\n\t/* Coins */\n\t.add(\"Coins\", 4, 29)\n\t.add(\"Coins\", 25, 13)\n\t.add(\"Coins\", 7, 8)\n\t.add(\"Coins\", 12, 6)\n\t.add(\"Coins\", 35, 4)\n\t.add(\"Coins\", 55, 1)\n\n\t/* Other */\n\t.add(\"Right eye patch\", 1, 12)\n\t.add(\"Chef's hat\", 1, 1)\n\t.add(\"Iron bar\", 1, 1)\n\n\t/* Gem drop table */\n\t.add(GemTable, 1, 1);\n\nexport default new SimpleMonster({\n\tid: 521,\n\tname: \"Pirate\",\n\ttable: PirateTable,\n\taliases: [\"pirate\"],\n});\n", "import LootTable from \"../../../../structures/LootTable\";\nimport SimpleMonster from \"../../../../structures/SimpleMonster\";\n\nexport const PitScorpionTable = new LootTable()\n\t.tertiary(25, \"Ensouled scorpion head\")\n\t.tertiary(100, \"Clue scroll (beginner)\");\n\nexport default new SimpleMonster({\n\tid: 3026,\n\tname: \"Pit Scorpion\",\n\ttable: PitScorpionTable,\n\taliases: [\"pit scorpion\"],\n});\n", "import LootTable from \"../../../../structures/LootTable\";\nimport SimpleMonster from \"../../../../structures/SimpleMonster\";\n\nexport const PoisonScorpionTable = new LootTable()\n\t.tertiary(25, \"Ensouled scorpion head\")\n\t.tertiary(100, \"Clue scroll (beginner)\");\n\nexport default new SimpleMonster({\n\tid: 3025,\n\tname: \"Poison Scorpion\",\n\ttable: PoisonScorpionTable,\n\taliases: [\"poison scorpion\"],\n});\n", "import LootTable from \"../../../../structures/LootTable\";\nimport SimpleMonster from \"../../../../structures/SimpleMonster\";\n\nexport default new SimpleMonster({\n\tid: 736,\n\tname: \"Pollnivnian bandit\",\n\tpickpocketTable: new LootTable().add(\"Coins\", 50),\n\taliases: [\"pollnivnian bandit\"],\n});\n", "import LootTable from \"../../../../structures/LootTable\";\nimport SimpleMonster from \"../../../../structures/SimpleMonster\";\n\nexport const PorazdirTable = new LootTable().every(\"Demon's heart\");\n\nexport default new SimpleMonster({\n\tid: 7860,\n\tname: \"Porazdir\",\n\ttable: PorazdirTable,\n\taliases: [\"porazdir\"],\n});\n", "import LootTable from \"../../../../structures/LootTable\";\nimport SimpleMonster from \"../../../../structures/SimpleMonster\";\nimport Elf from \"../a-f/Elf\";\n\nconst PrifddinasElfTable = new LootTable()\n\t.oneIn(35, \"Crystal shard\")\n\t.oneIn(1024, \"Enhanced crystal teleport seed\")\n\t.add(Elf.pickpocketTable!, 1)\n\t.tertiary(99_175, \"Rocky\");\n\nexport default new SimpleMonster({\n\tid: 9076,\n\tname: \"Prifddinas Elf\",\n\tpickpocketTable: PrifddinasElfTable,\n\taliases: [\"prif elf\", \"elf prif\", \"prifddinas elf\"],\n});\n", "import LootTable from \"../../../../structures/LootTable\";\nimport SimpleMonster from \"../../../../structures/SimpleMonster\";\n\nexport const PriffRabbit = new LootTable().every(\"Crystal grail\");\n\nexport default new SimpleMonster({\n\tid: 9118,\n\tname: \"Rabbit\",\n\ttable: PriffRabbit,\n\taliases: [\"rabbit\"],\n});\n", "import LootTable from \"../../../../structures/LootTable\";\nimport SimpleMonster from \"../../../../structures/SimpleMonster\";\nimport { GemTable } from \"../../../subtables/RareDropTable\";\n\nexport const PyrefiendPreTable = new LootTable()\n\t/* Weapons and armour */\n\t.add(\"Steel axe\", 1, 4)\n\t.add(\"Steel full helm\", 1, 4)\n\t.add(\"Staff of fire\", 1, 3)\n\t.add(\"Mithril chainbody\", 1, 2)\n\t.add(\"Steel boots\", 1, 1)\n\t.add(\"Adamant med helm\", 1, 1)\n\n\t/* Runes */\n\t.add(\"Fire rune\", 30, 21)\n\t.add(\"Fire rune\", 60, 8)\n\t.add(\"Chaos rune\", 12, 5)\n\t.add(\"Death rune\", 3, 3)\n\n\t/* Coins */\n\t.add(\"Coins\", 40, 24)\n\t.add(\"Coins\", 120, 20)\n\t.add(\"Coins\", 200, 10)\n\t.add(\"Coins\", 10, 7)\n\t.add(\"Coins\", 450, 2)\n\n\t/* Other */\n\t.add(\"Gold ore\", 1, 8)\n\t.add(\"Jug of wine\", 1, 2)\n\n\t/* Gem drop table */\n\t.add(GemTable, 1, 3);\n\nconst PyrefiendTable = new LootTable()\n\t.every(\"Fiendish ashes\")\n\t.every(PyrefiendPreTable)\n\n\t/* Tertiary */\n\t.tertiary(128, \"Clue scroll (medium)\");\n\nexport default new SimpleMonster({\n\tid: 433,\n\tname: \"Pyrefiend\",\n\ttable: PyrefiendTable,\n\taliases: [\"pyrefiend\"],\n});\n", "import LootTable from \"../../../../structures/LootTable\";\nimport SimpleMonster from \"../../../../structures/SimpleMonster\";\nimport { GemTable } from \"../../../subtables/RareDropTable\";\n\nexport const PyrelordPreTable = new LootTable()\n\t/* Weapons and armour */\n\t.add(\"Steel axe\", 1, 4)\n\t.add(\"Steel full helm\", 1, 4)\n\t.add(\"Staff of fire\", 1, 3)\n\t.add(\"Mithril chainbody\", 1, 2)\n\t.add(\"Steel boots\", 1, 1)\n\t.add(\"Adamant med helm\", 1, 1)\n\n\t/* Runes */\n\t.add(\"Fire rune\", 30, 21)\n\t.add(\"Fire rune\", 60, 8)\n\t.add(\"Chaos rune\", 12, 5)\n\t.add(\"Death rune\", 3, 3)\n\n\t/* Coins */\n\t.add(\"Coins\", 40, 24)\n\t.add(\"Coins\", 120, 20)\n\t.add(\"Coins\", 200, 10)\n\t.add(\"Coins\", 10, 7)\n\t.add(\"Coins\", 450, 2)\n\n\t/* Other */\n\t.add(\"Gold ore\", 1, 8)\n\t.add(\"Jug of wine\", 1, 2)\n\n\t/* Gem drop table */\n\t.add(GemTable, 1, 3);\n\nconst PyrelordTable = new LootTable()\n\t.every(\"Fiendish ashes\")\n\t.every(PyrelordPreTable)\n\n\t/* Tertiary */\n\t.tertiary(128, \"Clue scroll (medium)\");\n\nexport default new SimpleMonster({\n\tid: 6762,\n\tname: \"Pyrelord\",\n\ttable: PyrelordTable,\n\taliases: [\"pyrelord\"],\n});\n", "import LootTable from \"../../../../structures/LootTable\";\nimport SimpleMonster from \"../../../../structures/SimpleMonster\";\n\nexport const RatTable = new LootTable().every(\"Bones\");\n\nexport default new SimpleMonster({\n\tid: 2854,\n\tname: \"Rat\",\n\ttable: RatTable,\n\taliases: [\"rat\"],\n});\n", "import LootTable from \"../../../../structures/LootTable\";\nimport SimpleMonster from \"../../../../structures/SimpleMonster\";\nimport HerbDropTable from \"../../../subtables/HerbDropTable\";\nimport { GemTable } from \"../../../subtables/RareDropTable\";\n\nconst RedDragonTable = new LootTable()\n\t.every(\"Dragon bones\")\n\t.every(\"Red dragonhide\")\n\n\t/* Weapons and armour */\n\t.add(\"Mithril 2h sword\", 1, 4)\n\t.add(\"Mithril axe\", 1, 3)\n\t.add(\"Mithril battleaxe\", 1, 3)\n\t.add(\"Rune dart\", 8, 3)\n\t.add(\"Mithril javelin\", 20, 1)\n\t.add(\"Mithril kiteshield\", 1, 1)\n\t.add(\"Adamant platebody\", 1, 1)\n\t.add(\"Rune longsword\", 1, 1)\n\n\t/* Runes and ammunition */\n\t.add(\"Rune arrow\", 4, 8)\n\t.add(\"Law rune\", 4, 5)\n\t.add(\"Blood rune\", 2, 4)\n\t.add(\"Death rune\", 5, 3)\n\n\t/* Herbs */\n\t.add(HerbDropTable, 1, 2)\n\n\t/* Coins */\n\t.add(\"Coins\", 196, 40)\n\t.add(\"Coins\", 66, 29)\n\t.add(\"Coins\", 330, 10)\n\t.add(\"Coins\", 690, 1)\n\n\t/* Other */\n\t.add(\"Dragon javelin heads\", 10, 10)\n\t.add(\"Chocolate cake\", 3, 3)\n\t.add(\"Adamantite bar\", 1, 1)\n\n\t/* RDT */\n\t.add(GemTable, 1, 5)\n\n\t/* Tertiary */\n\t.tertiary(40, \"Ensouled dragon head\")\n\t.tertiary(128, \"Clue scroll (hard)\");\n\nexport default new SimpleMonster({\n\tid: 247,\n\tname: \"Red Dragon\",\n\ttable: RedDragonTable,\n\taliases: [\"red dragon\", \"red drags\"],\n});\n", "import LootTable from \"../../../../structures/LootTable\";\nimport SimpleMonster from \"../../../../structures/SimpleMonster\";\nimport { makeRevTable } from \"../../../../util\";\n\nexport const RevenantCyclopsTable = new LootTable()\n\t.every(\"Revenant ether\", [1, 10])\n\n\t/* Weapons and armour */\n\t.add(\"Bracelet of ethereum (uncharged)\", 1, 15)\n\t.add(\"Battlestaff\", 3, 5)\n\t.add(\"Rune full helm\", 1, 2)\n\t.add(\"Rune platebody\", 1, 2)\n\t.add(\"Rune platelegs\", 1, 2)\n\t.add(\"Rune kiteshield\", 1, 2)\n\t.add(\"Rune warhammer\", 1, 2)\n\t.add(\"Dragon platelegs\", 1, 1)\n\t.add(\"Dragon plateskirt\", 1, 1)\n\t.add(\"Dragon dagger\", 1, 1)\n\t.add(\"Dragon longsword\", 1, 1)\n\t.oneIn(751, \"Dragon med helm\")\n\n\t/* Resources */\n\t.add(\"Coal\", [50, 100], 6)\n\t.add(\"Adamantite bar\", [8, 12], 6)\n\t.add(\"Runite ore\", [3, 6], 6)\n\t.add(\"Runite bar\", [3, 5], 6)\n\t.add(\"Black dragonhide\", [10, 15], 6)\n\t.add(\"Mahogany plank\", [15, 25], 5)\n\t.add(\"Manta ray\", [30, 50], 3)\n\t.add(\"Yew logs\", [60, 100], 3)\n\t.add(\"Magic logs\", [15, 25], 2)\n\t.add(\"Uncut dragonstone\", [5, 7], 1)\n\n\t/* Other */\n\t.add(\"Coins\", [1, 226], 120)\n\t.add(\"Revenant cave teleport\", 1, 7)\n\t.add(\"Super restore(4)\", [3, 5], 4)\n\t.add(\"Dragonstone bolt tips\", [40, 70], 4)\n\t.add(\"Onyx bolt tips\", [5, 10], 4)\n\t.add(\"Law rune\", [80, 120], 3)\n\t.add(\"Death rune\", [60, 100], 3)\n\t.add(\"Blood rune\", [60, 100], 3);\n\nexport default new SimpleMonster({\n\tid: 7934,\n\tname: \"Revenant cyclops\",\n\ttable: RevenantCyclopsTable,\n\taliases: [\"revenant cyclops\"],\n\tcustomKillLogic: makeRevTable({\n\t\tseeds: [1342, 1342],\n\t\tuniqueTable: [3579, 716],\n\t\tancientEmblem: [5368, 5368],\n\t\tancientTotem: [1342, 1342],\n\t\tancientCrystal: [1789, 1789],\n\t\tancientStatuette: [2684, 2684],\n\t\ttopThree: [5368, 5368],\n\t}),\n});\n", "import LootTable from \"../../../../structures/LootTable\";\nimport SimpleMonster from \"../../../../structures/SimpleMonster\";\nimport { makeRevTable } from \"../../../../util\";\n\nexport const RevenantDarkBeastTable = new LootTable()\n\t.every(\"Revenant ether\", [1, 11])\n\n\t/* Weapons and armour */\n\t.add(\"Bracelet of ethereum (uncharged)\", 1, 15)\n\t.add(\"Battlestaff\", 3, 5)\n\t.add(\"Rune full helm\", 1, 2)\n\t.add(\"Rune platebody\", 1, 2)\n\t.add(\"Rune platelegs\", 1, 2)\n\t.add(\"Rune kiteshield\", 1, 2)\n\t.add(\"Rune warhammer\", 1, 2)\n\t.add(\"Dragon platelegs\", 1, 1)\n\t.add(\"Dragon plateskirt\", 1, 1)\n\t.add(\"Dragon dagger\", 1, 1)\n\t.add(\"Dragon longsword\", 1, 1)\n\t.oneIn(677, \"Dragon med helm\")\n\n\t/* Resources */\n\t.add(\"Coal\", [50, 100], 6)\n\t.add(\"Adamantite bar\", [8, 12], 6)\n\t.add(\"Runite ore\", [3, 6], 6)\n\t.add(\"Runite bar\", [3, 5], 6)\n\t.add(\"Black dragonhide\", [10, 15], 6)\n\t.add(\"Mahogany plank\", [15, 25], 5)\n\t.add(\"Manta ray\", [30, 50], 3)\n\t.add(\"Yew logs\", [60, 100], 3)\n\t.add(\"Magic logs\", [15, 25], 2)\n\t.add(\"Uncut dragonstone\", [5, 7], 1)\n\n\t/* Other */\n\t.add(\"Coins\", [1, 251], 26)\n\t.add(\"Revenant cave teleport\", 1, 7)\n\t.add(\"Super restore(4)\", [3, 5], 4)\n\t.add(\"Dragonstone bolt tips\", [40, 70], 4)\n\t.add(\"Onyx bolt tips\", [5, 10], 4)\n\t.add(\"Law rune\", [80, 120], 3)\n\t.add(\"Death rune\", [60, 100], 3)\n\t.add(\"Blood rune\", [60, 100], 3);\n\nexport default new SimpleMonster({\n\tid: 7938,\n\tname: \"Revenant dark beast\",\n\ttable: RevenantDarkBeastTable,\n\taliases: [\"revenant dark beast\"],\n\tcustomKillLogic: makeRevTable({\n\t\tseeds: [1210, 1210],\n\t\tuniqueTable: [3227, 645],\n\t\tancientEmblem: [4840, 4840],\n\t\tancientTotem: [1210, 1210],\n\t\tancientCrystal: [1613, 1613],\n\t\tancientStatuette: [2420, 2420],\n\t\ttopThree: [4840, 4840],\n\t}),\n});\n", "import LootTable from \"../../../../structures/LootTable\";\nimport SimpleMonster from \"../../../../structures/SimpleMonster\";\nimport { makeRevTable } from \"../../../../util\";\n\nexport const RevenantDemonTable = new LootTable()\n\t.every(\"Revenant ether\", [1, 10])\n\n\t/* Weapons and armour */\n\t.add(\"Bracelet of ethereum (uncharged)\", 1, 15)\n\t.add(\"Battlestaff\", 3, 5)\n\t.add(\"Rune full helm\", 1, 2)\n\t.add(\"Rune platebody\", 1, 2)\n\t.add(\"Rune platelegs\", 1, 2)\n\t.add(\"Rune kiteshield\", 1, 2)\n\t.add(\"Rune warhammer\", 1, 2)\n\t.add(\"Dragon platelegs\", 1, 1)\n\t.add(\"Dragon plateskirt\", 1, 1)\n\t.add(\"Dragon dagger\", 1, 1)\n\t.add(\"Dragon longsword\", 1, 1)\n\t.oneIn(751, \"Dragon med helm\")\n\n\t/* Resources */\n\t.add(\"Coal\", [50, 100], 6)\n\t.add(\"Adamantite bar\", [8, 12], 6)\n\t.add(\"Runite ore\", [3, 6], 6)\n\t.add(\"Runite bar\", [3, 5], 6)\n\t.add(\"Black dragonhide\", [10, 15], 6)\n\t.add(\"Mahogany plank\", [15, 25], 5)\n\t.add(\"Manta ray\", [30, 50], 3)\n\t.add(\"Yew logs\", [60, 100], 3)\n\t.add(\"Magic logs\", [15, 25], 2)\n\t.add(\"Uncut dragonstone\", [5, 7], 1)\n\n\t/* Other */\n\t.add(\"Coins\", [1, 226], 81)\n\t.add(\"Revenant cave teleport\", 1, 7)\n\t.add(\"Super restore(4)\", [3, 5], 4)\n\t.add(\"Dragonstone bolt tips\", [40, 70], 4)\n\t.add(\"Onyx bolt tips\", [5, 10], 4)\n\t.add(\"Law rune\", [80, 120], 3)\n\t.add(\"Death rune\", [60, 100], 3)\n\t.add(\"Blood rune\", [60, 100], 3);\n\nexport default new SimpleMonster({\n\tid: 7936,\n\tname: \"Revenant demon\",\n\ttable: RevenantDemonTable,\n\taliases: [\"revenant demon\"],\n\tcustomKillLogic: makeRevTable({\n\t\tseeds: [1342, 1342],\n\t\tuniqueTable: [3579, 716],\n\t\tancientEmblem: [5368, 5368],\n\t\tancientTotem: [1342, 1342],\n\t\tancientCrystal: [1789, 1789],\n\t\tancientStatuette: [2684, 2684],\n\t\ttopThree: [5368, 5368],\n\t}),\n});\n", "import LootTable from \"../../../../structures/LootTable\";\nimport SimpleMonster from \"../../../../structures/SimpleMonster\";\nimport { makeRevTable } from \"../../../../util\";\n\nexport const RevenantDragonTable = new LootTable()\n\t.every(\"Revenant ether\", [1, 12])\n\n\t/* Weapons and armour */\n\t.add(\"Bracelet of ethereum (uncharged)\", 1, 15)\n\t.add(\"Battlestaff\", 3, 5)\n\t.add(\"Rune full helm\", 1, 2)\n\t.add(\"Rune platebody\", 1, 2)\n\t.add(\"Rune platelegs\", 1, 2)\n\t.add(\"Rune kiteshield\", 1, 2)\n\t.add(\"Rune warhammer\", 1, 2)\n\t.add(\"Dragon platelegs\", 1, 1)\n\t.add(\"Dragon plateskirt\", 1, 1)\n\t.add(\"Dragon dagger\", 1, 1)\n\t.add(\"Dragon longsword\", 1, 1)\n\t.oneIn(615, \"Dragon med helm\")\n\n\t/* Resources */\n\t.add(\"Coal\", [50, 100], 6)\n\t.add(\"Adamantite bar\", [8, 12], 6)\n\t.add(\"Runite ore\", [3, 6], 6)\n\t.add(\"Runite bar\", [3, 5], 6)\n\t.add(\"Black dragonhide\", [10, 15], 6)\n\t.add(\"Mahogany plank\", [15, 25], 5)\n\t.add(\"Manta ray\", [30, 50], 3)\n\t.add(\"Yew logs\", [60, 100], 3)\n\t.add(\"Magic logs\", [15, 25], 2)\n\t.add(\"Uncut dragonstone\", [5, 7], 1)\n\n\t/* Other */\n\t.add(\"Revenant cave teleport\", 1, 7)\n\t.add(\"Super restore(4)\", [3, 5], 4)\n\t.add(\"Dragonstone bolt tips\", [40, 70], 4)\n\t.add(\"Onyx bolt tips\", [5, 10], 4)\n\t.add(\"Law rune\", [80, 120], 3)\n\t.add(\"Death rune\", [60, 100], 3)\n\t.add(\"Blood rune\", [60, 100], 3);\n\nexport default new SimpleMonster({\n\tid: 7940,\n\tname: \"Revenant dragon\",\n\ttable: RevenantDragonTable,\n\taliases: [\"revenant dragon\"],\n\tcustomKillLogic: makeRevTable({\n\t\tseeds: [1100, 1100],\n\t\tuniqueTable: [2933, 587],\n\t\tancientEmblem: [4400, 4400],\n\t\tancientTotem: [1100, 1100],\n\t\tancientCrystal: [1467, 1467],\n\t\tancientStatuette: [2000, 2000],\n\t\ttopThree: [4400, 4400],\n\t}),\n});\n", "import LootTable from \"../../../../structures/LootTable\";\nimport SimpleMonster from \"../../../../structures/SimpleMonster\";\nimport { makeRevTable } from \"../../../../util\";\n\nexport const RevenantGoblinTable = new LootTable()\n\t.every(\"Revenant ether\", [1, 4])\n\n\t/* Weapons and armour */\n\t.add(\"Bracelet of ethereum (uncharged)\", 1, 15)\n\t.add(\"Battlestaff\", 3, 5)\n\t.add(\"Rune full helm\", 1, 2)\n\t.add(\"Rune platebody\", 1, 2)\n\t.add(\"Rune platelegs\", 1, 2)\n\t.add(\"Rune kiteshield\", 1, 2)\n\t.add(\"Rune warhammer\", 1, 2)\n\t.add(\"Dragon platelegs\", 1, 1)\n\t.add(\"Dragon plateskirt\", 1, 1)\n\t.add(\"Dragon dagger\", 1, 1)\n\t.add(\"Dragon longsword\", 1, 1)\n\t.add(\"Dragon med helm\", 1, 1)\n\n\t/* Resources */\n\t.add(\"Coal\", [50, 100], 6)\n\t.add(\"Adamantite bar\", [8, 12], 6)\n\t.add(\"Runite ore\", [3, 6], 6)\n\t.add(\"Runite bar\", [3, 5], 6)\n\t.add(\"Black dragonhide\", [10, 15], 6)\n\t.add(\"Mahogany plank\", [15, 25], 5)\n\t.add(\"Manta ray\", [30, 50], 3)\n\t.add(\"Yew logs\", [60, 100], 3)\n\t.add(\"Magic logs\", [15, 25], 2)\n\t.add(\"Uncut dragonstone\", [5, 7], 1)\n\n\t/* Other */\n\t.add(\"Coins\", [1, 76], 1745)\n\t.add(\"Revenant cave teleport\", 1, 7)\n\t.add(\"Super restore(4)\", [3, 5], 4)\n\t.add(\"Dragonstone bolt tips\", [40, 70], 4)\n\t.add(\"Onyx bolt tips\", [5, 10], 4)\n\t.add(\"Law rune\", [80, 120], 3)\n\t.add(\"Death rune\", [60, 100], 3)\n\t.add(\"Blood rune\", [60, 100], 3);\n\nexport default new SimpleMonster({\n\tid: 7931,\n\tname: \"Revenant goblin\",\n\ttable: RevenantGoblinTable,\n\taliases: [\"revenant goblin\"],\n\tcustomKillLogic: makeRevTable({\n\t\tseeds: [4032, 4032],\n\t\tuniqueTable: [10_751, 2150],\n\t\tancientEmblem: [16_126, 16_126],\n\t\tancientTotem: [4032, 4032],\n\t\tancientCrystal: [5375, 5375],\n\t\tancientStatuette: [8063, 8063],\n\t\ttopThree: [16_126, 16_126],\n\t}),\n});\n", "import LootTable from \"../../../../structures/LootTable\";\nimport SimpleMonster from \"../../../../structures/SimpleMonster\";\nimport { makeRevTable } from \"../../../../util\";\n\nexport const RevenantHellhoundTable = new LootTable()\n\t.every(\"Revenant ether\", [1, 10])\n\n\t/* Weapons and armour */\n\t.add(\"Bracelet of ethereum (uncharged)\", 1, 15)\n\t.add(\"Battlestaff\", 3, 5)\n\t.add(\"Rune full helm\", 1, 2)\n\t.add(\"Rune platebody\", 1, 2)\n\t.add(\"Rune platelegs\", 1, 2)\n\t.add(\"Rune kiteshield\", 1, 2)\n\t.add(\"Rune warhammer\", 1, 2)\n\t.add(\"Dragon platelegs\", 1, 1)\n\t.add(\"Dragon plateskirt\", 1, 1)\n\t.add(\"Dragon dagger\", 1, 1)\n\t.add(\"Dragon longsword\", 1, 1)\n\t.oneIn(751, \"Dragon med helm\")\n\n\t/* Resources */\n\t.add(\"Coal\", [50, 100], 6)\n\t.add(\"Adamantite bar\", [8, 12], 6)\n\t.add(\"Runite ore\", [3, 6], 6)\n\t.add(\"Runite bar\", [3, 5], 6)\n\t.add(\"Black dragonhide\", [10, 15], 6)\n\t.add(\"Mahogany plank\", [15, 25], 5)\n\t.add(\"Manta ray\", [30, 50], 3)\n\t.add(\"Yew logs\", [60, 100], 3)\n\t.add(\"Magic logs\", [15, 25], 2)\n\t.add(\"Uncut dragonstone\", [5, 7], 1)\n\n\t/* Other */\n\t.add(\"Coins\", [1, 226], 98)\n\t.add(\"Revenant cave teleport\", 1, 7)\n\t.add(\"Super restore(4)\", [3, 5], 4)\n\t.add(\"Dragonstone bolt tips\", [40, 70], 4)\n\t.add(\"Onyx bolt tips\", [5, 10], 4)\n\t.add(\"Law rune\", [80, 120], 3)\n\t.add(\"Death rune\", [60, 100], 3)\n\t.add(\"Blood rune\", [60, 100], 3);\n\nexport default new SimpleMonster({\n\tid: 7935,\n\tname: \"Revenant hellhound\",\n\ttable: RevenantHellhoundTable,\n\taliases: [\"revenant hellhound\"],\n\tcustomKillLogic: makeRevTable({\n\t\tseeds: [1342, 1342],\n\t\tuniqueTable: [3579, 716],\n\t\tancientEmblem: [5368, 5368],\n\t\tancientTotem: [1342, 1342],\n\t\tancientCrystal: [1789, 1789],\n\t\tancientStatuette: [2684, 2684],\n\t\ttopThree: [5368, 5368],\n\t}),\n});\n", "import LootTable from \"../../../../structures/LootTable\";\nimport SimpleMonster from \"../../../../structures/SimpleMonster\";\nimport { makeRevTable } from \"../../../../util\";\n\nexport const RevenantHobgoblinTable = new LootTable()\n\t.every(\"Revenant ether\", [1, 8])\n\n\t/* Weapons and armour */\n\t.add(\"Bracelet of ethereum (uncharged)\", 1, 15)\n\t.add(\"Battlestaff\", 3, 5)\n\t.add(\"Rune full helm\", 1, 2)\n\t.add(\"Rune platebody\", 1, 2)\n\t.add(\"Rune platelegs\", 1, 2)\n\t.add(\"Rune kiteshield\", 1, 2)\n\t.add(\"Rune warhammer\", 1, 2)\n\t.add(\"Dragon platelegs\", 1, 1)\n\t.add(\"Dragon plateskirt\", 1, 1)\n\t.add(\"Dragon dagger\", 1, 1)\n\t.add(\"Dragon longsword\", 1, 1)\n\t.oneIn(966, \"Dragon med helm\")\n\n\t/* Resources */\n\t.add(\"Coal\", [50, 100], 6)\n\t.add(\"Adamantite bar\", [8, 12], 6)\n\t.add(\"Runite ore\", [3, 6], 6)\n\t.add(\"Runite bar\", [3, 5], 6)\n\t.add(\"Black dragonhide\", [10, 15], 6)\n\t.add(\"Mahogany plank\", [15, 25], 5)\n\t.add(\"Manta ray\", [30, 50], 3)\n\t.add(\"Yew logs\", [60, 100], 3)\n\t.add(\"Magic logs\", [15, 25], 2)\n\t.add(\"Uncut dragonstone\", [5, 7], 1)\n\t.oneIn(3140, \"Magic seed\", [5, 19])\n\n\t/* Other */\n\t.add(\"Coins\", [1, 176], 280)\n\t.add(\"Revenant cave teleport\", 1, 7)\n\t.add(\"Super restore(4)\", [3, 5], 4)\n\t.add(\"Dragonstone bolt tips\", [40, 70], 4)\n\t.add(\"Onyx bolt tips\", [5, 10], 4)\n\t.add(\"Law rune\", [80, 120], 3)\n\t.add(\"Death rune\", [60, 100], 3)\n\t.add(\"Blood rune\", [60, 100], 3);\n\nexport default new SimpleMonster({\n\tid: 7933,\n\tname: \"Revenant hobgoblin\",\n\ttable: RevenantHobgoblinTable,\n\taliases: [\"revenant hobgoblin\"],\n\tcustomKillLogic: makeRevTable({\n\t\tseeds: [1727, 1727],\n\t\tuniqueTable: [4605, 921],\n\t\tancientEmblem: [6908, 6908],\n\t\tancientTotem: [1727, 1727],\n\t\tancientCrystal: [2302, 2302],\n\t\tancientStatuette: [3454, 3454],\n\t\ttopThree: [6908, 6908],\n\t}),\n});\n", "import LootTable from \"../../../../structures/LootTable\";\nimport SimpleMonster from \"../../../../structures/SimpleMonster\";\nimport { makeRevTable } from \"../../../../util\";\n\nexport const RevenantImpTable = new LootTable()\n\t.every(\"Revenant ether\", [1, 3])\n\n\t/* Weapons and armour */\n\t.add(\"Bracelet of ethereum (uncharged)\", 1, 15)\n\t.add(\"Battlestaff\", 3, 5)\n\t.add(\"Rune full helm\", 1, 2)\n\t.add(\"Rune platebody\", 1, 2)\n\t.add(\"Rune platelegs\", 1, 2)\n\t.add(\"Rune kiteshield\", 1, 2)\n\t.add(\"Rune warhammer\", 1, 2)\n\t.add(\"Dragon platelegs\", 1, 1)\n\t.add(\"Dragon plateskirt\", 1, 1)\n\t.add(\"Dragon dagger\", 1, 1)\n\t.add(\"Dragon longsword\", 1, 1)\n\t.add(\"Dragon med helm\", 1, 1)\n\n\t/* Resources */\n\t.add(\"Coal\", [50, 100], 6)\n\t.add(\"Adamantite bar\", [8, 12], 6)\n\t.add(\"Runite ore\", [3, 6], 6)\n\t.add(\"Runite bar\", [3, 5], 6)\n\t.add(\"Black dragonhide\", [10, 15], 6)\n\t.add(\"Mahogany plank\", [15, 25], 5)\n\t.add(\"Manta ray\", [30, 50], 3)\n\t.add(\"Yew logs\", [60, 100], 3)\n\t.add(\"Magic logs\", [15, 25], 2)\n\t.add(\"Uncut dragonstone\", [5, 7], 1)\n\n\t/* Other */\n\t.add(\"Coins\", [1, 51], 3145)\n\t.add(\"Revenant cave teleport\", 1, 7)\n\t.add(\"Super restore(4)\", [3, 5], 4)\n\t.add(\"Dragonstone bolt tips\", [40, 70], 4)\n\t.add(\"Onyx bolt tips\", [5, 10], 4)\n\t.add(\"Law rune\", [80, 120], 3)\n\t.add(\"Death rune\", [60, 100], 3)\n\t.add(\"Blood rune\", [60, 100], 3);\n\nexport default new SimpleMonster({\n\tid: 7881,\n\tname: \"Revenant imp\",\n\ttable: RevenantImpTable,\n\taliases: [\"revenant imp\"],\n\tcustomKillLogic: makeRevTable({\n\t\tseeds: [6050, 6050],\n\t\tuniqueTable: [161_334, 3226],\n\t\tancientEmblem: [24_200, 24_200],\n\t\tancientTotem: [6050, 6050],\n\t\tancientCrystal: [8067, 8067],\n\t\tancientStatuette: [12_100, 12_000],\n\t\ttopThree: [24_200, 24_200],\n\t}),\n});\n", "import LootTable from \"../../../../structures/LootTable\";\nimport SimpleMonster from \"../../../../structures/SimpleMonster\";\nimport { makeRevTable } from \"../../../../util\";\n\nexport const RevenantKnightTable = new LootTable()\n\t.every(\"Revenant ether\", [1, 12])\n\n\t/* Weapons and armour */\n\t.add(\"Bracelet of ethereum (uncharged)\", 1, 15)\n\t.add(\"Battlestaff\", 3, 5)\n\t.add(\"Rune full helm\", 1, 2)\n\t.add(\"Rune platebody\", 1, 2)\n\t.add(\"Rune platelegs\", 1, 2)\n\t.add(\"Rune kiteshield\", 1, 2)\n\t.add(\"Rune warhammer\", 1, 2)\n\t.add(\"Dragon platelegs\", 1, 1)\n\t.add(\"Dragon plateskirt\", 1, 1)\n\t.add(\"Dragon dagger\", 1, 1)\n\t.add(\"Dragon longsword\", 1, 1)\n\t.oneIn(615, \"Dragon med helm\")\n\n\t/* Resources */\n\t.add(\"Coal\", [50, 100], 6)\n\t.add(\"Adamantite bar\", [8, 12], 6)\n\t.add(\"Runite ore\", [3, 6], 6)\n\t.add(\"Runite bar\", [3, 5], 6)\n\t.add(\"Black dragonhide\", [10, 15], 6)\n\t.add(\"Mahogany plank\", [15, 25], 5)\n\t.add(\"Manta ray\", [30, 50], 3)\n\t.add(\"Yew logs\", [60, 100], 3)\n\t.add(\"Magic logs\", [15, 25], 2)\n\t.add(\"Uncut dragonstone\", [5, 7], 1)\n\n\t/* Other */\n\t.add(\"Coins\", [1, 276], 8)\n\t.add(\"Revenant cave teleport\", 1, 7)\n\t.add(\"Super restore(4)\", [3, 5], 4)\n\t.add(\"Dragonstone bolt tips\", [40, 70], 4)\n\t.add(\"Onyx bolt tips\", [5, 10], 4)\n\t.add(\"Law rune\", [80, 120], 3)\n\t.add(\"Death rune\", [60, 100], 3)\n\t.add(\"Blood rune\", [60, 100], 3);\n\nexport default new SimpleMonster({\n\tid: 7939,\n\tname: \"Revenant knight\",\n\ttable: RevenantKnightTable,\n\taliases: [\"revenant knight\"],\n\tcustomKillLogic: makeRevTable({\n\t\tseeds: [1100, 1100],\n\t\tuniqueTable: [2933, 587],\n\t\tancientEmblem: [4400, 4400],\n\t\tancientTotem: [1100, 1100],\n\t\tancientCrystal: [1467, 1467],\n\t\tancientStatuette: [2200, 2200],\n\t\ttopThree: [4400, 4400],\n\t}),\n});\n", "import LootTable from \"../../../../structures/LootTable\";\nimport SimpleMonster from \"../../../../structures/SimpleMonster\";\nimport { makeRevTable } from \"../../../../util\";\n\nexport const RevenantOrkTable = new LootTable()\n\t.every(\"Revenant ether\", [1, 11])\n\n\t/* Weapons and armour */\n\t.add(\"Bracelet of ethereum (uncharged)\", 1, 15)\n\t.add(\"Battlestaff\", 3, 5)\n\t.add(\"Rune full helm\", 1, 2)\n\t.add(\"Rune platebody\", 1, 2)\n\t.add(\"Rune platelegs\", 1, 2)\n\t.add(\"Rune kiteshield\", 1, 2)\n\t.add(\"Rune warhammer\", 1, 2)\n\t.add(\"Dragon platelegs\", 1, 1)\n\t.add(\"Dragon plateskirt\", 1, 1)\n\t.add(\"Dragon dagger\", 1, 1)\n\t.add(\"Dragon longsword\", 1, 1)\n\t.oneIn(677, \"Dragon med helm\")\n\n\t/* Resources */\n\t.add(\"Coal\", [50, 100], 6)\n\t.add(\"Adamantite bar\", [8, 12], 6)\n\t.add(\"Runite ore\", [3, 6], 6)\n\t.add(\"Runite bar\", [3, 5], 6)\n\t.add(\"Black dragonhide\", [10, 15], 6)\n\t.add(\"Mahogany plank\", [15, 25], 5)\n\t.add(\"Manta ray\", [30, 50], 3)\n\t.add(\"Yew logs\", [60, 100], 3)\n\t.add(\"Magic logs\", [15, 25], 2)\n\t.add(\"Uncut dragonstone\", [5, 7], 1)\n\n\t/* Other */\n\t.add(\"Coins\", [1, 251], 49)\n\t.add(\"Revenant cave teleport\", 1, 7)\n\t.add(\"Super restore(4)\", [3, 5], 4)\n\t.add(\"Dragonstone bolt tips\", [40, 70], 4)\n\t.add(\"Onyx bolt tips\", [5, 10], 4)\n\t.add(\"Law rune\", [80, 120], 3)\n\t.add(\"Death rune\", [60, 100], 3)\n\t.add(\"Blood rune\", [60, 100], 3);\n\nexport default new SimpleMonster({\n\tid: 7937,\n\tname: \"Revenant ork\",\n\ttable: RevenantOrkTable,\n\taliases: [\"revenant ork\"],\n\tcustomKillLogic: makeRevTable({\n\t\tseeds: [1210, 1210],\n\t\tuniqueTable: [3227, 645],\n\t\tancientEmblem: [4840, 4840],\n\t\tancientTotem: [1210, 1210],\n\t\tancientCrystal: [1613, 1613],\n\t\tancientStatuette: [2420, 2420],\n\t\ttopThree: [4840, 4840],\n\t}),\n});\n", "import LootTable from \"../../../../structures/LootTable\";\nimport SimpleMonster from \"../../../../structures/SimpleMonster\";\nimport { makeRevTable } from \"../../../../util\";\n\nexport const RevenantPyrefiendTable = new LootTable()\n\t.every(\"Revenant ether\", [1, 8])\n\n\t/* Weapons and armour */\n\t.add(\"Bracelet of ethereum (uncharged)\", 1, 15)\n\t.add(\"Battlestaff\", 3, 5)\n\t.add(\"Rune full helm\", 1, 2)\n\t.add(\"Rune platebody\", 1, 2)\n\t.add(\"Rune platelegs\", 1, 2)\n\t.add(\"Rune kiteshield\", 1, 2)\n\t.add(\"Rune warhammer\", 1, 2)\n\t.add(\"Dragon platelegs\", 1, 1)\n\t.add(\"Dragon plateskirt\", 1, 1)\n\t.add(\"Dragon dagger\", 1, 1)\n\t.add(\"Dragon longsword\", 1, 1)\n\t.oneIn(966, \"Dragon med helm\")\n\n\t/* Resources */\n\t.add(\"Coal\", [50, 100], 6)\n\t.add(\"Adamantite bar\", [8, 12], 6)\n\t.add(\"Runite ore\", [3, 6], 6)\n\t.add(\"Runite bar\", [3, 5], 6)\n\t.add(\"Black dragonhide\", [10, 15], 6)\n\t.add(\"Mahogany plank\", [15, 25], 5)\n\t.add(\"Manta ray\", [30, 50], 3)\n\t.add(\"Yew logs\", [60, 100], 3)\n\t.add(\"Magic logs\", [15, 25], 2)\n\t.add(\"Uncut dragonstone\", [5, 7], 1)\n\n\t/* Other */\n\t.add(\"Coins\", [1, 176], 332)\n\t.add(\"Revenant cave teleport\", 1, 7)\n\t.add(\"Super restore(4)\", [3, 5], 4)\n\t.add(\"Dragonstone bolt tips\", [40, 70], 4)\n\t.add(\"Onyx bolt tips\", [5, 10], 4)\n\t.add(\"Law rune\", [80, 120], 3)\n\t.add(\"Death rune\", [60, 100], 3)\n\t.add(\"Blood rune\", [60, 100], 3);\n\nexport default new SimpleMonster({\n\tid: 7932,\n\tname: \"Revenant pyrefiend\",\n\ttable: RevenantPyrefiendTable,\n\taliases: [\"revenant pyrefiend\"],\n\tcustomKillLogic: makeRevTable({\n\t\tseeds: [1727, 1727],\n\t\tuniqueTable: [4605, 921],\n\t\tancientEmblem: [6908, 6908],\n\t\tancientTotem: [1727, 1727],\n\t\tancientCrystal: [2303, 2303],\n\t\tancientStatuette: [3454, 3454],\n\t\ttopThree: [6908, 6908],\n\t}),\n});\n", "import LootTable from \"../../../../structures/LootTable\";\nimport SimpleMonster from \"../../../../structures/SimpleMonster\";\n\nexport const RiylShadeTable = new LootTable().every(\"Riyl remains\");\n\nexport default new SimpleMonster({\n\tid: 1282,\n\tname: \"Riyl Shade\",\n\ttable: RiylShadeTable,\n\taliases: [\"riyl shade\"],\n});\n", "import LootTable from \"../../../../structures/LootTable\";\nimport SimpleMonster from \"../../../../structures/SimpleMonster\";\nimport { GemTable } from \"../../../subtables/RareDropTable\";\n\nexport const RockslugTable = new LootTable()\n\t/* Armour */\n\t.oneIn(512, \"Mystic gloves (light)\")\n\n\t/* Runes */\n\t.add(\"Earth rune\", 5, 30)\n\t.add(\"Earth rune\", 42, 4)\n\t.add(\"Chaos rune\", 2, 4)\n\n\t/* Ores and bars */\n\t.add(\"Iron ore\", 1, 22)\n\t.add(\"Coal\", 1, 13)\n\t.add(\"Tin ore\", 1, 8)\n\t.add(\"Iron bar\", 1, 3)\n\t.add(\"Copper ore\", 1, 3)\n\t.add(\"Bronze bar\", 1, 2)\n\t.add(\"Mithril ore\", 1, 1)\n\n\t/* Other */\n\t.add(\"Dwarven stout\", 1, 13)\n\t.add(\"Hammer\", 4, 10)\n\n\t/* Gem drop table */\n\t.add(GemTable, 1, 6);\n\nexport default new SimpleMonster({\n\tid: 421,\n\tname: \"Rockslug\",\n\ttable: RockslugTable,\n\taliases: [\"rockslug\"],\n});\n", "import LootTable from \"../../../../structures/LootTable\";\nimport SimpleMonster from \"../../../../structures/SimpleMonster\";\n\nconst RogueTable = new LootTable()\n\t// Weaponry\n\t.add(\"Iron dagger(p)\", 1, 1 / 128)\n\n\t// Other\n\t.add(\"Coins\", [25, 40], 1 / 1.185)\n\t.add(\"Air rune\", 8, 1 / 16)\n\t.add(\"Jug of wine\", 1, 1 / 21.33)\n\t.add(\"Lockpick\", 1, 1 / 25.6)\n\t.tertiary(257_211, \"Rocky\");\n\nexport default new SimpleMonster({\n\tid: 526,\n\tname: \"Rogue\",\n\tpickpocketTable: RogueTable,\n\taliases: [\"rogue\"],\n});\n", "import LootTable from \"../../../../structures/LootTable\";\nimport SimpleMonster from \"../../../../structures/SimpleMonster\";\n\nexport const RoosterTable = new LootTable({ limit: 4 })\n\t.every(\"Bones\")\n\t.every(\"Raw chicken\")\n\t.add(\"Feather\", 5, 2)\n\t.add(\"Feather\", 15, 1);\n\nexport default new SimpleMonster({\n\tid: 3663,\n\tname: \"Rooster\",\n\ttable: RoosterTable,\n\taliases: [\"rooster\"],\n});\n", "import LootTable from \"../../../../structures/LootTable\";\nimport SimpleMonster from \"../../../../structures/SimpleMonster\";\nimport RareDropTable from \"../../../subtables/RareDropTable\";\nimport UsefulHerbTable from \"../../../subtables/UsefulHerbTable\";\n\nconst RuneDragonTable = new LootTable()\n\t.every(\"Dragon bones\")\n\t.every(\"Runite bar\")\n\n\t/* Weapons and armour */\n\t.add(\"Rune platebody\", 1, 9)\n\t.add(\"Rune longsword\", 1, 8)\n\t.add(\"Rune mace\", 1, 7)\n\t.add(\"Rune scimitar\", 1, 7)\n\t.add(\"Rune warhammer\", 1, 7)\n\t.add(\"Rune platelegs\", 1, 6)\n\t.add(\"Dragon platelegs\", 1, 1)\n\t.add(\"Dragon plateskirt\", 1, 1)\n\t.add(\"Dragon med helm\", 1, 1)\n\n\t/* Runes and ammunition */\n\t.add(\"Rune arrow\", [30, 40], 8)\n\t.add(\"Wrath rune\", [30, 50], 8)\n\t.add(\"Chaos rune\", [75, 150], 7)\n\t.add(\"Death rune\", [50, 100], 7)\n\n\t/* Herbs */\n\t.add(UsefulHerbTable, 1, 8)\n\n\t/* Other */\n\t.add(\"Rune javelin heads\", [20, 30], 10)\n\t.add(\"Runite bolts (unf)\", [20, 30], 11)\n\t.add(\"Dragonstone\", 1, 7)\n\t.add(\"Runite ore\", [2, 5], 6)\n\t.add(\"Dragon javelin heads\", [30, 40], 5)\n\t.add(\"Dragon bolts (unf)\", [20, 40], 1)\n\t.add(\"Wrath talisman\", 1, 1)\n\n\t/* RDT */\n\t.add(RareDropTable, 1, 1)\n\n\t/* Tertiary */\n\t.tertiary(300, \"Clue scroll (elite)\")\n\t.tertiary(800, \"Dragon limbs\")\n\t.tertiary(5000, \"Dragon metal lump\")\n\t.tertiary(8000, \"Draconic visage\");\n\nexport default new SimpleMonster({\n\tid: 8031,\n\tname: \"Rune Dragon\",\n\ttable: RuneDragonTable,\n\taliases: [\"rune dragon\"],\n});\n", "import LootTable from \"../../../../structures/LootTable\";\nimport SimpleMonster from \"../../../../structures/SimpleMonster\";\nimport HerbDropTable from \"../../../subtables/HerbDropTable\";\nimport RareDropTable, { GemTable } from \"../../../subtables/RareDropTable\";\nimport RareSeedTable from \"../../../subtables/RareSeedTable\";\n\nconst ScarabMageTable = new LootTable({ limit: 128 })\n\t.every(\"Bones\")\n\n\t/* Weapons and armor */\n\t.add(\"Adamant kiteshield\", 1, 3)\n\t.add(\"Battlestaff\", 3, 2)\n\t.add(\"Rune dagger\", 1, 2)\n\t.add(\"Rune mace\", 1, 1)\n\t.add(\"Rune sq shield\", 1, 1)\n\n\t/* Runes and ammunition */\n\t.add(\"Adamant arrow\", 36, 4)\n\t.add(\"Blood rune\", 18, 4)\n\t.add(\"Fire rune\", 250, 2)\n\t.add(\"Cosmic rune\", 35, 2)\n\t.add(\"Lava rune\", 150, 2)\n\t.add(\"Rune arrow\", 18, 2)\n\n\t/* Herbs */\n\t.add(HerbDropTable, 1, 20)\n\n\t/* Seeds */\n\t.add(RareSeedTable, 1, 2)\n\n\t/* Materials */\n\t.add(\"Raw lobster\", 15, 7)\n\t.add(\"Coal\", 32, 6)\n\t.add(\"Raw bass\", 24, 4)\n\t.add(\"Uncut sapphire\", 4, 3)\n\t.add(\"Adamantite ore\", 14, 2)\n\t.add(\"Desert goat horn\", 6, 2)\n\t.add(\"Mithril bar\", 22, 2)\n\n\t/* Other */\n\t.add(\"Coins\", [2000, 3000], 32)\n\t.add(\"Bass\", 6, 4)\n\t.add(\"Waterskin(4)\", 1, 1)\n\t.add(\"Lobster\", 5, 1)\n\t.add(\"Marrentill tar\", 80, 1)\n\n\t/* RDT */\n\t.add(RareDropTable, 1, 1)\n\t.add(GemTable, 1, 15);\n\nexport default new SimpleMonster({\n\tid: 794,\n\tname: \"Scarab Mage\",\n\ttable: ScarabMageTable,\n\taliases: [\"scarab mage\", \"scarab\"],\n});\n", "import LootTable from \"../../../../structures/LootTable\";\nimport SimpleMonster from \"../../../../structures/SimpleMonster\";\n\nexport const ScorpionTable = new LootTable()\n\t.tertiary(25, \"Ensouled scorpion head\")\n\t.tertiary(100, \"Clue scroll (beginner)\");\n\nexport default new SimpleMonster({\n\tid: 3024,\n\tname: \"Scorpion\",\n\ttable: ScorpionTable,\n\taliases: [\"scorpion\"],\n});\n", "import LootTable from \"../../../../structures/LootTable\";\nimport SimpleMonster from \"../../../../structures/SimpleMonster\";\nimport { GemTable } from \"../../../subtables/RareDropTable\";\n\nconst SeaSnakeHatchlingTable = new LootTable()\n\t.every(\"Bones\")\n\n\t/* Runes and ammunition */\n\t.add(\"Water rune\", 15, 2)\n\t.add(\"Mist rune\", 1, 2)\n\t.add(\"Broad arrows\", 4, 2)\n\n\t/* Coins */\n\t.add(\"Coins\", 44, 60)\n\t.add(\"Coins\", 32, 11)\n\t.add(\"Coins\", 24, 9)\n\t.add(\"Coins\", 23, 7)\n\n\t/* Other */\n\t.add(\"Adamant dart tip\", 2, 1)\n\t.add(\"Fishing bait\", 50, 4)\n\t.add(\"Pearl bolt tips\", 3, 4)\n\t.add(\"Raw bass\", 2, 4)\n\t.add(\"Water orb\", 1, 3)\n\t.add(\"Raw lobster\", 1, 2)\n\t.add(\"Seaweed\", 5, 2)\n\t.add(\"Edible seaweed\", 5, 2)\n\t.add(\"Oyster pearl\", 2, 1)\n\t.add(\"Oyster pearls\", 1, 1)\n\t.add(\"Casket\", 1, 1)\n\n\t/* Gem drop table */\n\t.add(GemTable, 1, 1)\n\n\t/* Tertiary */\n\t.tertiary(128, \"Clue scroll (medium)\");\n\nexport default new SimpleMonster({\n\tid: 1098,\n\tname: \"Sea Snake Hatchling\",\n\ttable: SeaSnakeHatchlingTable,\n\taliases: [\"sea snake hatchling\"],\n});\n", "import LootTable from \"../../../../structures/LootTable\";\nimport SimpleMonster from \"../../../../structures/SimpleMonster\";\nimport { GemTable } from \"../../../subtables/RareDropTable\";\n\nconst SeaSnakeYoungTable = new LootTable()\n\t.every(\"Big bones\")\n\n\t/* Runes and ammunition */\n\t.add(\"Water rune\", 15, 2)\n\t.add(\"Mist rune\", 1, 2)\n\t.add(\"Broad arrows\", 4, 2)\n\n\t/* Coins */\n\t.add(\"Coins\", 44, 41)\n\t.add(\"Coins\", 32, 11)\n\t.add(\"Coins\", 24, 9)\n\t.add(\"Coins\", 23, 7)\n\n\t/* Other */\n\t.add(\"Adamant dart tip\", 2, 10)\n\t.add(\"Fishing bait\", 50, 4)\n\t.add(\"Pearl bolt tips\", 3, 4)\n\t.add(\"Raw bass\", 2, 4)\n\t.add(\"Water orb\", 1, 3)\n\t.add(\"Raw lobster\", 1, 2)\n\t.add(\"Seaweed\", 5, 2)\n\t.add(\"Edible seaweed\", 5, 2)\n\t.add(\"Oyster pearl\", 2, 1)\n\t.add(\"Oyster pearls\", 1, 1)\n\t.add(\"Casket\", 1, 1)\n\n\t/* Gem drop table */\n\t.add(GemTable, 1, 1)\n\n\t/* Tertiary */\n\t.tertiary(128, \"Clue scroll (medium)\")\n\t.tertiary(400, \"Long bone\")\n\t.tertiary(5013, \"Curved bone\");\n\nexport default new SimpleMonster({\n\tid: 1097,\n\tname: \"Sea Snake Young\",\n\ttable: SeaSnakeYoungTable,\n\taliases: [\"sea snake young\"],\n});\n", "import LootTable from \"../../../../structures/LootTable\";\nimport SimpleMonster from \"../../../../structures/SimpleMonster\";\n\nexport const SeagullTable = new LootTable().every(\"Bones\");\n\nexport default new SimpleMonster({\n\tid: 1338,\n\tname: \"Seagull\",\n\ttable: SeagullTable,\n\taliases: [\"seagull\"],\n});\n", "import LootTable from \"../../../../structures/LootTable\";\nimport SimpleMonster from \"../../../../structures/SimpleMonster\";\n\nexport const ShadeTable = new LootTable({ limit: 4 }).add(\"Shade robe top\", 1, 1).add(\"Shade robe\", 1, 1);\n\nexport default new SimpleMonster({\n\tid: 5633,\n\tname: \"Shade\",\n\ttable: ShadeTable,\n\taliases: [\"shade\"],\n});\n", "import LootTable from \"../../../../structures/LootTable\";\nimport SimpleMonster from \"../../../../structures/SimpleMonster\";\n\nexport const ShadowSpiderTable = new LootTable().tertiary(128, \"Clue scroll (beginner)\");\n\nexport default new SimpleMonster({\n\tid: 3016,\n\tname: \"Shadow spider\",\n\ttable: ShadowSpiderTable,\n\taliases: [\"shadow spider\"],\n});\n", "import LootTable from \"../../../../structures/LootTable\";\nimport SimpleMonster from \"../../../../structures/SimpleMonster\";\nimport HerbDropTable from \"../../../subtables/HerbDropTable\";\nimport { GemTable } from \"../../../subtables/RareDropTable\";\n\nconst ShadowWarriorTable = new LootTable({ limit: 128 })\n\t/* Weapons and armour */\n\t.add(\"Adamant spear\", 1, 1)\n\t.add(\"Black dagger(p)\", 1, 1)\n\t.add(\"Black knife\", 1, 1)\n\t.add(\"Black longsword\", 1, 1)\n\t.add(\"Black robe\", 1, 1)\n\n\t/* Runes*/\n\t.add(\"Cosmic rune\", 3, 9)\n\t.add(\"Blood rune\", 2, 6)\n\t.add(\"Air rune\", 45, 4)\n\t.add(\"Death rune\", 2, 4)\n\n\t/* Herbs */\n\t.add(HerbDropTable, 1, 18)\n\n\t/* Other */\n\t.add(\"Coins\", 8, 47)\n\t.add(\"Mithril bar\", 1, 4)\n\t.add(\"Weapon poison\", 1, 1)\n\n\t/* Gem drop table */\n\t.add(GemTable, 1, 8);\n\nexport default new SimpleMonster({\n\tid: 2853,\n\tname: \"Shadow warrior\",\n\ttable: ShadowWarriorTable,\n\taliases: [\"shadow warrior\"],\n});\n", "import LootTable from \"../../../../structures/LootTable\";\nimport SimpleMonster from \"../../../../structures/SimpleMonster\";\nimport HerbDropTable from \"../../../subtables/HerbDropTable\";\nimport RareDropTable from \"../../../subtables/RareDropTable\";\n\nconst SkeletalWyvernTable = new LootTable()\n\t.every(\"Wyvern bones\")\n\n\t/* Weapons and armour */\n\t.add(\"Earth battlestaff\", 1, 4)\n\t.add(\"Battlestaff\", 10, 3)\n\t.add(\"Rune axe\", 1, 3)\n\t.add(\"Rune battleaxe\", 1, 2)\n\t.add(\"Rune warhammer\", 1, 2)\n\t.add(\"Rune full helm\", 1, 2)\n\t.add(\"Rune kiteshield\", 1, 1)\n\t.oneIn(512, \"Granite legs\")\n\t.oneIn(512, \"Dragon platelegs\")\n\t.oneIn(512, \"Dragon plateskirt\")\n\n\t/* Runes and ammunition */\n\t.add(\"Air rune\", 225, 6)\n\t.add(\"Rune arrow\", 36, 5)\n\t.add(\"Water rune\", 150, 4)\n\t.add(\"Chaos rune\", 80, 4)\n\t.add(\"Law rune\", 45, 4)\n\t.add(\"Death rune\", 40, 4)\n\t.add(\"Blood rune\", 25, 4)\n\t.add(\"Adamant bolts\", [75, 99], 3)\n\t.add(\"Runite bolts\", [35, 44], 3)\n\t.add(\"Soul rune\", 20, 1)\n\n\t/* Herbs */\n\t.add(HerbDropTable, 3, 7)\n\n\t/* Resources */\n\t.add(\"Pure essence\", 250, 8)\n\t.add(\"Magic logs\", 35, 6)\n\t.add(\"Adamantite bar\", 10, 6)\n\t.add(\"Iron ore\", 200, 3)\n\t.add(\"Uncut ruby\", 10, 2)\n\t.add(\"Uncut diamond\", 5, 2)\n\n\t/* Other */\n\t.add(\"Coins\", 300, 12)\n\t.add(\"Lobster\", 6, 8)\n\t.add(\"Prayer potion(4)\", 2, 7)\n\t.add(\"Unpowered orb\", 75, 2)\n\t.add(\"Runite crossbow (u)\", 1, 2)\n\t.add(\"Ranarr seed\", 3, 2)\n\t.add(\"Snapdragon seed\", 1, 2)\n\n\t/* RDT */\n\t.add(RareDropTable, 1, 3)\n\n\t/* Tertiary */\n\t.tertiary(350, \"Clue scroll (elite)\")\n\t.tertiary(10_000, \"Draconic visage\");\n\nexport default new SimpleMonster({\n\tid: 465,\n\tname: \"Skeletal Wyvern\",\n\ttable: SkeletalWyvernTable,\n\taliases: [\"skeletal wyvern\"],\n});\n", "import LootTable from \"../../../../structures/LootTable\";\nimport SimpleMonster from \"../../../../structures/SimpleMonster\";\nimport HerbDropTable from \"../../../subtables/HerbDropTable\";\nimport { GemTable } from \"../../../subtables/RareDropTable\";\n\nexport const SkeletonTable = new LootTable({ limit: 128 })\n\t.every(\"Bones\")\n\t.tertiary(5000, \"Skeleton champion scroll\")\n\t.tertiary(100, \"Clue scroll (beginner)\")\n\n\t/* Runes/Ammunition */\n\t.add(\"Bronze arrow\", 2, 7)\n\t.add(\"Bronze arrow\", 5, 4)\n\t.add(\"Iron arrow\", 1, 4)\n\t.add(\"Air rune\", 12, 2)\n\t.add(\"Earth rune\", 3, 2)\n\t.add(\"Fire rune\", 2, 2)\n\t.add(\"Chaos rune\", 3, 2)\n\t.add(\"Nature rune\", 3, 1)\n\t.add(\"Steel arrow\", 1, 1)\n\n\t.add(HerbDropTable, 1, 21)\n\n\t/* Other */\n\t.add(\"Coins\", 2, 18)\n\t.add(\"Coins\", 12, 15)\n\t.add(\"Coins\", 4, 7)\n\t.add(\"Coins\", 16, 4)\n\t.add(\"Coins\", 25, 4)\n\t.add(\"Coins\", 33, 4)\n\t.add(\"Coins\", 48, 1)\n\t.add(\"Iron dagger\", 1, 6)\n\t.add(\"Fire talisman\", 1, 2)\n\t.add(\"Grain\", 1, 1)\n\t.add(\"Iron ore\", 1, 1)\n\n\t.add(GemTable);\n\nexport default new SimpleMonster({\n\tid: 70,\n\tname: \"Skeleton\",\n\ttable: SkeletonTable,\n\taliases: [\"skeleton\"],\n});\n", "import LootTable from \"../../../../structures/LootTable\";\nimport SimpleMonster from \"../../../../structures/SimpleMonster\";\nimport { GemTable } from \"../../../subtables/RareDropTable\";\nimport { UncommonSeedDropTable } from \"../../../subtables/index\";\n\nexport const SkeletonFremennikTable = new LootTable()\n\t.every(\"Bones\")\n\t.tertiary(5000, \"Skeleton champion scroll\")\n\n\t/* Weapons and armour */\n\t.add(\"Steel med helm\", 1, 6)\n\t.add(\"Steel sword\", 1, 4)\n\t.add(\"Black axe\", 1, 2)\n\t.add(\"Mithril scimitar\", 1, 1)\n\n\t/* Runes and ammunition */\n\t.add(\"Air rune\", 60, 3)\n\t.add(\"Chaos rune\", 9, 3)\n\t.add(\"Water rune\", 20, 3)\n\t.add(\"Law rune\", 2, 2)\n\t.add(\"Mithril arrow\", 8, 2)\n\t.add(\"Cosmic rune\", 4, 1)\n\n\t/* Seeds */\n\t.add(UncommonSeedDropTable, 1, 20)\n\n\t/* Coins */\n\t.add(\"Coins\", 80, 23)\n\t.add(\"Coins\", 20, 22)\n\t.add(\"Coins\", 50, 8)\n\t.add(\"Coins\", 90, 4)\n\t.add(\"Coins\", 185, 3)\n\t.add(\"Coins\", 200, 2)\n\n\t/* Other */\n\t.add(\"Mithril bar\", 1, 5)\n\n\t/* Gem drop table */\n\t.add(GemTable);\n\nexport default new SimpleMonster({\n\tid: 4498,\n\tname: \"Skeleton fremennik\",\n\ttable: SkeletonFremennikTable,\n\taliases: [\"skeleton fremennik\"],\n});\n", "import LootTable from \"../../../../structures/LootTable\";\nimport SimpleMonster from \"../../../../structures/SimpleMonster\";\nimport HerbDropTable from \"../../../subtables/HerbDropTable\";\nimport { GemTable } from \"../../../subtables/RareDropTable\";\n\nexport const SkeletonMageTable = new LootTable()\n\t.every(\"Ashes\")\n\n\t/* Weapons and armour */\n\t.add(\"Pink skirt\", 1, 2)\n\n\t/* Runes */\n\t.add(\"Mind rune\", [7, 9], 12)\n\t.add(\"Law rune\", [2, 3], 12)\n\t.add(\"Nature rune\", [1, 3], 11)\n\t.add(\"Chaos rune\", [3, 4], 10)\n\n\t/* Herbs */\n\t.add(HerbDropTable, 1, 12)\n\n\t/* Materials */\n\t.add(\"Uncut opal\", 1, 10)\n\t.add(\"Pot of flour\", 1, 10)\n\t.add(\"Iron bar\", [1, 2], 5)\n\n\t/* Other */\n\t.add(\"Coins\", [25, 54], 33)\n\t.add(\"Big bones\", [2, 4], 6)\n\n\t/* Gem drop table */\n\t.add(GemTable, 1, 5)\n\n\t/* Tertiary */\n\t.tertiary(128, \"Clue scroll (medium)\")\n\t.tertiary(5000, \"Skeleton champion scroll\");\n\nexport default new SimpleMonster({\n\tid: 4319,\n\tname: \"Skeleton Mage\",\n\ttable: SkeletonMageTable,\n\taliases: [\"skeleton mage\"],\n});\n", "import LootTable from \"../../../../structures/LootTable\";\nimport SimpleMonster from \"../../../../structures/SimpleMonster\";\n\nexport const SkogreTable = new LootTable().every(\"Zogre bones\").every(\"Ogre coffin key\");\n\nexport default new SimpleMonster({\n\tid: 878,\n\tname: \"Skogre\",\n\ttable: SkogreTable,\n\taliases: [\"skogre\"],\n});\n", "import LootTable from \"../../../../structures/LootTable\";\nimport SimpleMonster from \"../../../../structures/SimpleMonster\";\nimport FixedAllotmentSeedTable from \"../../../subtables/FixedAllotmentSeedTable\";\nimport HerbDropTable from \"../../../subtables/HerbDropTable\";\nimport { GemTable } from \"../../../subtables/RareDropTable\";\n\nconst HerbFireRuneTable = new LootTable().every(HerbDropTable).every(\"Fire rune\", 42);\nconst SeedWaterskinTable = new LootTable().every(FixedAllotmentSeedTable).every(\"Waterskin(0)\", 2);\n\nexport const SmallLizardTable = new LootTable()\n\t.every(\"Bones\")\n\t.oneIn(512, \"Mystic gloves (light)\")\n\n\t/* Runes */\n\t.add(\"Fire rune\", 5, 30)\n\t.add(\"Fire rune\", 42, 14)\n\t.add(\"Nature rune\", 5, 4)\n\n\t/* Herbs */\n\t.add(HerbFireRuneTable, 1, 10)\n\n\t/* Seeds */\n\t.add(SeedWaterskinTable, 1, 9)\n\n\t/* Ores and bars */\n\t.add(\"Iron ore\", 1, 22)\n\t.add(\"Coal\", 1, 13)\n\t.add(\"Tin ore\", 1, 4)\n\t.add(\"Copper ore\", 1, 3)\n\t.add(\"Silver ore\", 1, 3)\n\t.add(\"Silver bar\", 1, 2)\n\t.add(\"Mithril ore\")\n\n\t/* Other */\n\t.add(\"Kebab\", 1, 13)\n\t.add(\"Waterskin(0)\", 2, 13)\n\n\t/* Subtables */\n\t.add(GemTable, 1, 4)\n\t.add(GemTable, 2, 2);\n\nexport default new SimpleMonster({\n\tid: 463,\n\tname: \"Small Lizard\",\n\ttable: SmallLizardTable,\n\taliases: [\"small lizard\"],\n});\n", "import LootTable from \"../../../../structures/LootTable\";\nimport SimpleMonster from \"../../../../structures/SimpleMonster\";\nimport HerbDropTable from \"../../../subtables/HerbDropTable\";\nimport RareDropTable, { GemTable } from \"../../../subtables/RareDropTable\";\n\nconst SmokeDevilHerbTable = new LootTable().add(HerbDropTable, 1, 2).add(HerbDropTable, 2, 1);\n\nexport const SmokeDevilPreTable = new LootTable({ limit: 128 })\n\t/* Weapons and armor */\n\t.add(\"Adamant battleaxe\", 1, 3)\n\t.add(\"Rune dagger\", 1, 3)\n\t.add(\"Air battlestaff\", 1, 3)\n\t.add(\"Black d'hide vambraces\", 1, 3)\n\t.add(\"Fire battlestaff\", 1, 3)\n\t.add(\"Mithril plateskirt\", 1, 2)\n\t.add(\"Rune full helm\", 1, 2)\n\t.add(\"Rune chainbody\", 1, 2)\n\t.add(\"Red d'hide body\", 1, 1)\n\t.oneIn(512, \"Occult necklace\")\n\t.oneIn(32_768, \"Dragon chainbody\")\n\n\t/* Runes and ammunition */\n\t.add(\"Smoke rune\", 15, 11)\n\t.add(\"Smoke rune\", 40, 5)\n\t.add(\"Runite bolts\", 15, 5)\n\t.add(\"Fire rune\", 37, 4)\n\t.add(\"Air rune\", 37, 4)\n\t.add(\"Soul rune\", 10, 4)\n\t.add(\"Fire rune\", 150, 2)\n\t.add(\"Rune arrow\", 24, 2)\n\n\t/* Herbs */\n\t.add(SmokeDevilHerbTable, 1, 18)\n\n\t/* Coins */\n\t.add(\"Coins\", 750, 12)\n\t.add(\"Coins\", 80, 7)\n\t.add(\"Coins\", 300, 3)\n\n\t/* Other */\n\t.add(\"Shark\", 1, 6)\n\t.add(\"Steel bar\", 2, 3)\n\t.add(\"Magic logs\", 5, 3)\n\t.add(\"Coal\", 15, 3)\n\t.add(\"Adamantite bar\", 1, 2)\n\t.add(\"Crossbow string\", 1, 2)\n\t.add(\"Ugthanki kebab\", 3, 2)\n\n\t/* RDT */\n\t.add(RareDropTable, 1, 4)\n\t.add(GemTable, 1, 4);\n\nconst SmokeDevilTable = new LootTable()\n\t.every(\"Ashes\")\n\t.every(SmokeDevilPreTable)\n\n\t/* Tertiary */\n\t.tertiary(128, \"Clue scroll (hard)\")\n\t.tertiary(750, \"Clue scroll (elite)\");\n\nexport default new SimpleMonster({\n\tid: 498,\n\tname: \"Smoke Devil\",\n\ttable: SmokeDevilTable,\n\taliases: [\"smoke devil\", \"smokeys\", \"smokies\", \"smoke devils\"],\n});\n", "import LootTable from \"../../../../structures/LootTable\";\nimport SimpleMonster from \"../../../../structures/SimpleMonster\";\n\nexport const SpiderTable = new LootTable().tertiary(128, \"Clue scroll (beginner)\");\n\nexport default new SimpleMonster({\n\tid: 3019,\n\tname: \"Spider\",\n\ttable: SpiderTable,\n\taliases: [\"spider\"],\n});\n", "import LootTable from \"../../../../structures/LootTable\";\nimport SimpleMonster from \"../../../../structures/SimpleMonster\";\nimport { GemTable } from \"../../../subtables/RareDropTable\";\n\nconst SpiritualMageTable = new LootTable()\n\n\t/* Armour */\n\t.add(\"Dragon boots\", 1, 1)\n\n\t/* Elemental runes */\n\t.add(\"Air rune\", 30, 9)\n\t.add(\"Water rune\", 15, 8)\n\t.add(\"Water rune\", 50, 7)\n\t.add(\"Air rune\", 50, 2)\n\t.add(\"Fire rune\", 65, 2)\n\n\t/* Combination runes */\n\t.add(\"Dust rune\", 15, 11)\n\t.add(\"Mud rune\", 20, 7)\n\t.add(\"Mist rune\", 20, 6)\n\n\t/* Catalytic runes */\n\t.add(\"Chaos rune\", 10, 18)\n\t.add(\"Astral rune\", 15, 9)\n\t.add(\"Death rune\", 15, 8)\n\t.add(\"Nature rune\", 25, 7)\n\t.add(\"Mind rune\", 50, 4)\n\t.add(\"Nature rune\", 18, 4)\n\t.add(\"Body rune\", 35, 3)\n\t.add(\"Law rune\", 15, 2)\n\t.add(\"Body rune\", 25, 2)\n\t.add(\"Blood rune\", 10, 2)\n\t.add(\"Chaos rune\", 25, 1)\n\n\t/* Other */\n\t.add(\"Pure essence\", 90, 6)\n\t.add(\"Antipoison(3)\", 5, 5)\n\n\t/* RDT */\n\t.add(GemTable, 1, 2)\n\n\t/* Tertiary */\n\t.tertiary(128, \"Clue scroll (hard)\");\n\nexport default new SimpleMonster({\n\tid: 2212,\n\tname: \"Spiritual Mage\",\n\ttable: SpiritualMageTable,\n\taliases: [\"spiritual mage\"],\n});\n", "import LootTable from \"../../../../structures/LootTable\";\nimport SimpleMonster from \"../../../../structures/SimpleMonster\";\n\nconst SpiritualRangerTable = new LootTable({ limit: 128 })\n\n\t/* Weapons */\n\t.add(\"Oak shortbow\", 1, 5)\n\t.add(\"Maple longbow\", 1, 4)\n\t.add(\"Steel crossbow\", 1, 3)\n\t.add(\"Magic shortbow\", [1, 2], 1)\n\n\t/* Runes and ammunition */\n\t.add(\"Iron arrow\", 12, 15)\n\t.add(\"Bronze arrow\", 16, 13)\n\t.add(\"Mithril arrow(p+)\", 1, 11)\n\t.add(\"Steel arrow\", 12, 4)\n\t.add(\"Body rune\", 12, 4)\n\t.add(\"Adamant arrow(p++)\", 3, 3)\n\t.add(\"Rune arrow\", 5, 2)\n\t.add(\"Adamant fire arrow\", 4, 2)\n\t.add(\"Bronze arrow(p+)\", 1, 1)\n\t.add(\"Adamant arrow\", 12, 1)\n\n\t/* Other */\n\t.add(\"Bow string\", 7, 18)\n\t.add(\"Iron arrowtips\", 5, 11)\n\t.add(\"Headless arrow\", 12, 10)\n\t.add(\"Adamant arrowtips\", 13, 9)\n\t.add(\"Oak longbow (u)\", 12, 9)\n\t.add(\"Broken arrow\", 1, 1)\n\n\t/* Tertiary */\n\t.tertiary(128, \"Clue scroll (hard)\");\n\nexport default new SimpleMonster({\n\tid: 2211,\n\tname: \"Spiritual Ranger\",\n\ttable: SpiritualRangerTable,\n\taliases: [\"spiritual ranger\", \"spiritual creatures\"],\n});\n", "import LootTable from \"../../../../structures/LootTable\";\nimport SimpleMonster from \"../../../../structures/SimpleMonster\";\nimport { GemTable } from \"../../../subtables/RareDropTable\";\n\nconst SpiritualWarriorTable = new LootTable({ limit: 127 })\n\n\t/* Weapons */\n\t.add(\"Steel longsword\", 1, 15)\n\t.add(\"Mithril spear(p)\", 1, 9)\n\t.add(\"Iron scimitar\", 1, 8)\n\t.add(\"Mithril axe\", 1, 8)\n\t.add(\"Steel sword\", 1, 7)\n\t.add(\"Mithril mace\", 1, 7)\n\t.add(\"Black warhammer\", 1, 5)\n\t.add(\"Iron sword\", 1, 3)\n\t.add(\"Black dagger\", 1, 2)\n\t.add(\"Adamant battleaxe\", 1, 2)\n\t.add(\"Adamant 2h sword\", 1, 1)\n\t.add(\"Rune longsword\", 1, 1)\n\t.add(\"Rune halberd\", 1, 1)\n\n\t/* Armor */\n\t.add(\"Steel chainbody\", 1, 18)\n\t.add(\"Mithril platelegs\", 1, 11)\n\t.add(\"Leather gloves\", 1, 9)\n\t.add(\"Adamant full helm\", 1, 8)\n\t.add(\"Iron plateskirt\", 1, 4)\n\t.add(\"Black kiteshield\", 1, 3)\n\t.add(\"Rune kiteshield\", 1, 1)\n\n\t/* RDT */\n\t.add(GemTable, 1, 4)\n\n\t/* Tertiary */\n\t.tertiary(128, \"Clue scroll (hard)\");\n\nexport default new SimpleMonster({\n\tid: 2210,\n\tname: \"Spiritual Warrior\",\n\ttable: SpiritualWarriorTable,\n\taliases: [\"spiritual warrior\"],\n});\n", "import LootTable from \"../../../../structures/LootTable\";\nimport SimpleMonster from \"../../../../structures/SimpleMonster\";\nimport RareDropTable, { GemTable } from \"../../../subtables/RareDropTable\";\n\nconst SteelDragonTable = new LootTable({ limit: 128 })\n\t.every(\"Dragon bones\")\n\t.every(\"Steel bar\", 5)\n\n\t/* Weapons and armour */\n\t.add(\"Rune dart(p)\", 12, 7)\n\t.add(\"Rune mace\", 1, 4)\n\t.add(\"Rune knife\", 7, 3)\n\t.add(\"Adamant kiteshield\", 1, 2)\n\t.add(\"Rune axe\", 1, 2)\n\t.add(\"Rune full helm\", 1, 1)\n\t.oneIn(512, \"Dragon plateskirt\")\n\t.oneIn(512, \"Dragon platelegs\")\n\n\t/* Runes and ammunition */\n\t.add(\"Rune javelin\", 7, 20)\n\t.add(\"Blood rune\", 20, 19)\n\t.add(\"Runite bolts\", [2, 12], 6)\n\t.add(\"Soul rune\", 5, 5)\n\n\t/* Coins */\n\t.add(\"Coins\", 470, 17)\n\n\t/* Other */\n\t.add(\"Super attack(3)\", 1, 13)\n\t.add(\"Runite limbs\", 1, 8)\n\t.add(\"Dragon javelin heads\", 12, 5)\n\t.add(\"Runite bar\", 1, 3)\n\t.add(\"Super defence(2)\", 1, 3)\n\t.add(\"Curry\", 1, 1)\n\t.add(\"Curry\", 2, 1)\n\n\t/* RDT */\n\t.add(RareDropTable, 1, 4)\n\t.add(GemTable, 1, 4)\n\n\t/* Tertiary */\n\t.tertiary(64, \"Clue scroll (hard)\")\n\t.tertiary(500, \"Clue scroll (elite)\")\n\t.tertiary(10_000, \"Draconic visage\");\n\nexport default new SimpleMonster({\n\tid: 8086,\n\tname: \"Steel Dragon\",\n\ttable: SteelDragonTable,\n\taliases: [\"steel dragon\"],\n});\n", "import LootTable from \"../../../../structures/LootTable\";\nimport SimpleMonster from \"../../../../structures/SimpleMonster\";\nimport FixedAllotmentSeedTable from \"../../../subtables/FixedAllotmentSeedTable\";\nimport HerbDropTable from \"../../../subtables/HerbDropTable\";\nimport { GemTable } from \"../../../subtables/RareDropTable\";\n\nexport const SulphurLizardTable = new LootTable()\n\t.every(\"Bones\")\n\t.oneIn(512, \"Mystic gloves (light)\")\n\t.tertiary(128, \"Clue scroll (medium)\")\n\n\t/* Runes */\n\t.add(\"Fire rune\", [10, 25], 26)\n\t.add(\"Fire rune\", [40, 60], 4)\n\t.add(\"Nature rune\", [5, 10], 4)\n\n\t/* Ores and bars */\n\t.add(\"Iron ore\", [5, 10], 22)\n\t.add(\"Coal\", [5, 10], 13)\n\t.add(\"Iron bar\", [6, 10], 4)\n\t.add(\"Steel bar\", [3, 5], 4)\n\t.add(\"Tin ore\", [10, 15], 4)\n\t.add(\"Copper ore\", [10, 15], 3)\n\t.add(\"Silver ore\", [5, 10], 3)\n\t.add(\"Silver bar\", [3, 5], 2)\n\t.add(\"Mithril ore\", [3, 5], 1)\n\n\t/* Herbs */\n\t.add(HerbDropTable, 1, 10)\n\n\t/* Seeds */\n\t.add(FixedAllotmentSeedTable, 1, 9)\n\n\t/* Other */\n\t.add(\"Rainbow fish\", 1, 13)\n\n\t/* Subtables */\n\t.add(GemTable, 1, 4)\n\t.add(GemTable, 2, 2);\n\nexport default new SimpleMonster({\n\tid: 8614,\n\tname: \"Sulphur Lizard\",\n\ttable: SulphurLizardTable,\n\taliases: [\"sulphur lizard\"],\n});\n", "import LootTable from \"../../../../structures/LootTable\";\nimport SimpleMonster from \"../../../../structures/SimpleMonster\";\nimport { GemTable } from \"../../../subtables/RareDropTable\";\n\nconst SuqahTable = new LootTable({ limit: 129 })\n\t.every(\"Big bones\")\n\t.every(\"Suqah hide\")\n\n\t/* Other */\n\t.add(\"Suqah tooth\", 1, 69)\n\t.add(\"Grimy guam leaf\", 1, 30)\n\t.add(\"Grimy marrentill\", 1, 25)\n\n\t/* RDT */\n\t.add(GemTable, 1, 5)\n\n\t/* Tertiary */\n\t.tertiary(129, \"Clue scroll (hard)\")\n\t.tertiary(400, \"Long bone\")\n\t.tertiary(5013, \"Curved bone\");\n\nexport default new SimpleMonster({\n\tid: 787,\n\tname: \"Suqah\",\n\ttable: SuqahTable,\n\taliases: [\"suqah\"],\n});\n", "import LootTable from \"../../../../structures/LootTable\";\nimport SimpleMonster from \"../../../../structures/SimpleMonster\";\nimport HerbDropTable from \"../../../subtables/HerbDropTable\";\nimport { GemTable } from \"../../../subtables/RareDropTable\";\nimport { UncommonSeedDropTable } from \"../../../subtables/index\";\n\nconst TatteredPageTable = new LootTable()\n\t.add(\"Tattered moon page\")\n\t.add(\"Tattered sun page\")\n\t.add(\"Tattered temple page\");\n\nexport const TempleSpiderTable = new LootTable()\n\t/* Tertiary */\n\t.tertiary(30, TatteredPageTable)\n\t.tertiary(100, \"Grubby key\")\n\t.tertiary(200, \"Clue scroll (hard)\")\n\n\t/* Weapons and armour */\n\t.add(\"Adamant longsword\", 1, 4)\n\t.add(\"Adamant med helm\", 1, 4)\n\t.add(\"Rune dagger\", 1, 1)\n\t.add(\"Rune med helm\", 1, 1)\n\n\t/* Runes */\n\t.add(\"Air rune\", [30, 50], 5)\n\t.add(\"Earth rune\", [30, 50], 5)\n\t.add(\"Fire rune\", [30, 50], 5)\n\t.add(\"Water rune\", [30, 50], 5)\n\t.add(\"Chaos rune\", [10, 15], 2)\n\t.add(\"Cosmic rune\", [10, 15], 2)\n\t.add(\"Death rune\", [10, 15], 2)\n\t.add(\"Nature rune\", [10, 15], 2)\n\t.add(\"Law rune\", 5, 1)\n\t.add(\"Soul rune\", 5, 1)\n\n\t/* Herbs */\n\t.add(HerbDropTable, 1, 15)\n\n\t/* Seeds */\n\t.add(UncommonSeedDropTable, 1, 6)\n\n\t/* Other */\n\t.add(\"Coins\", [400, 600], 17)\n\t.add(\"Red spiders' eggs\", [3, 5], 8)\n\t.add(\"Superantipoison(2)\", 1, 8)\n\t.add(\"Weapon poison(+)\", 1, 2)\n\n\t/* Gem drop table */\n\t.add(GemTable, 1, 1);\n\nexport default new SimpleMonster({\n\tid: 8703,\n\tname: \"Temple Spider\",\n\ttable: TempleSpiderTable,\n\taliases: [\"temple spider\"],\n});\n", "import LootTable from \"../../../../structures/LootTable\";\nimport SimpleMonster from \"../../../../structures/SimpleMonster\";\n\nexport const TerrorBirdTable = new LootTable().every(\"Bones\");\n\nexport default new SimpleMonster({\n\tid: 2064,\n\tname: \"Terrorbird\",\n\ttable: TerrorBirdTable,\n\taliases: [\"terrorbird\"],\n});\n", "import LootTable from \"../../../../structures/LootTable\";\nimport SimpleMonster from \"../../../../structures/SimpleMonster\";\nimport HerbDropTable from \"../../../subtables/HerbDropTable\";\nimport { GemTable } from \"../../../subtables/RareDropTable\";\n\nconst TerrorDogTable = new LootTable()\n\t.every(\"Big bones\")\n\n\t/* Weapons and armour */\n\t.add(\"Steel platelegs\", 1, 4)\n\t.add(\"Mithril axe\", 1, 3)\n\t.add(\"Steel battleaxe\", 1, 3)\n\t.add(\"Mithril spear\", 1, 2)\n\t.add(\"Adamant full helm\", 1, 1)\n\t.add(\"Granite helm\", 1, 1)\n\t.add(\"Mithril kiteshield\", 1, 1)\n\t.add(\"Rune dagger\", 1, 1)\n\n\t/* Runes*/\n\t.add(\"Water rune\", 75, 8)\n\t.add(\"Nature rune\", 15, 5)\n\t.add(\"Law rune\", 3, 3)\n\t.add(\"Fire rune\", 37, 1)\n\n\t/* Herbs */\n\t.add(HerbDropTable, 1, 15)\n\n\t/* Coins */\n\t.add(\"Coins\", 44, 29)\n\t.add(\"Coins\", 132, 25)\n\t.add(\"Coins\", 200, 10)\n\t.add(\"Coins\", 11, 5)\n\t.add(\"Coins\", 440, 1)\n\n\t/* Other */\n\t.add(\"Adamantite ore\", 1, 3)\n\t.add(\"Bass\", 1, 3)\n\n\t/* Gem drop table */\n\t.add(GemTable, 1, 5)\n\n\t/* Tertiary */\n\t.tertiary(128, \"Clue scroll (hard)\")\n\t.tertiary(400, \"Long bone\")\n\t.tertiary(5013, \"Curved bone\");\n\nexport default new SimpleMonster({\n\tid: 6473,\n\tname: \"Terror dog\",\n\ttable: TerrorDogTable,\n\taliases: [\"terror dog\"],\n});\n", "import LootTable from \"../../../../structures/LootTable\";\nimport SimpleMonster from \"../../../../structures/SimpleMonster\";\nimport TreeHerbSeedTable from \"../../../subtables/TreeHerbSeedTable\";\n\nconst TormentedDemonHerbTable = new LootTable()\n\t.add(\"Grimy kwuarm\", 1, 10)\n\t.add(\"Grimy dwarf weed\", 1, 8)\n\t.add(\"Grimy cadantine\", 1, 8)\n\t.add(\"Grimy lantadyme\", 1, 6)\n\t.add(\"Grimy avantoe\", 1, 5)\n\t.add(\"Grimy ranarr weed\", 1, 4)\n\t.add(\"Grimy snapdragon\", 1, 4)\n\t.add(\"Grimy torstol\", 1, 3);\n\nconst TormentedDemonBowTable = new LootTable().add(\"Magic shortbow (u)\", 1, 29).add(\"Magic longbow (u)\", 1, 1);\n\nconst TormentedDemonTable = new LootTable()\n\t.every(\"Infernal ashes\")\n\t.oneIn(500, \"Tormented synapse\")\n\t.oneIn(500, \"Burning claw\")\n\n\t/* Weapons and Armour */\n\t.add(\"Rune platebody\", 1, 4)\n\t.add(\"Dragon dagger\", 1, 3)\n\t.add(\"Battlestaff\", 1, 3)\n\t.add(\"Rune kiteshield\", 1, 2)\n\n\t/* Runes and Ammunition */\n\t.add(\"Chaos rune\", [25, 100], 4)\n\t.add(\"Rune arrow\", [65, 125], 4)\n\t.add(\"Soul rune\", [50, 75], 2)\n\n\t/* Consumables */\n\t.add(\"Manta ray\", [1, 2], 4)\n\t.add(\"Prayer potion(4)\", 1, 1)\n\t.add(\"Prayer potion(2)\", 2, 1)\n\t.add(new LootTable(), 1, 5) //Smouldering drops\n\n\t/* Other */\n\t.add(TormentedDemonBowTable, 1, 6)\n\t.add(\"Malicious ashes\", [2, 3], 2)\n\t.add(\"Fire orb\", [5, 7], 2)\n\t.add(\"Dragon arrowtips\", [30, 40], 1)\n\n\t.add(TormentedDemonHerbTable, 1, 6)\n\t.add(TreeHerbSeedTable, 1, 1)\n\n\t.tertiary(12, \"Guthixian temple teleport\", 2)\n\t.tertiary(128, \"Clue scroll (elite)\");\n\nexport default new SimpleMonster({\n\tid: 13600,\n\tname: \"Tormented Demon\",\n\ttable: TormentedDemonTable,\n\taliases: [\"tormented demon\", \"td\", \"tds\", \"torm\", \"torm demon\"],\n});\n", "import LootTable from \"../../../../structures/LootTable\";\nimport SimpleMonster from \"../../../../structures/SimpleMonster\";\nimport RareDropTable from \"../../../subtables/RareDropTable\";\nimport TreeHerbSeedTable from \"../../../subtables/TreeHerbSeedTable\";\n\nconst UniqueTable = new LootTable()\n\t.add(\"Zenyte shard\", 1, 5)\n\t.add(\"Ballista limbs\", 1, 3)\n\t.add(\"Ballista spring\", 1, 3)\n\t.add(\"Light frame\", 1, 2)\n\t.add(\"Heavy frame\", 1, 1)\n\t.add(\"Monkey tail\", 1, 1);\n\nconst TorturedGorillaTable = new LootTable()\n\t.every(\"Big bones\")\n\t.oneIn(1000, UniqueTable)\n\n\t// Todo: Check in future for updated loot chances.\n\t/* Weapons and armor */\n\t.add(\"Rune med helm\", 1, 8)\n\t.add(\"Rune scimitar\", 1, 8)\n\n\t/* Runes and ammunition */\n\t.add(\"Adamant bolts\", 1, 36)\n\t.add(\"Earth rune\", [418, 599], 10)\n\t.add(\"Law rune\", [50, 75], 35)\n\t.add(\"Death rune\", [50, 75], 35)\n\n\t/* Herbs */\n\t.add(\"Grimy cadantine\", 1, 8)\n\t.add(\"Grimy kwuarm\", 1, 8)\n\t.add(\"Grimy dwarf weed\", 1, 8)\n\n\t/* Seeds */\n\t.add(TreeHerbSeedTable, 1, 25)\n\n\t/* Materials */\n\t.add(\"Javelin shaft\", [100, 299], 10)\n\t.add(\"Adamantite bar\", [1, 2], 5)\n\t.add(\"Ruby\", [2, 3], 5)\n\t.add(\"Rune javelin heads\", [45, 55], 5)\n\t.add(\"Dragon javelin heads\", [27, 33], 5)\n\n\t/* Other */\n\t.add(\"Coins\", [1171, 1969], 30)\n\t.add(\"Shark\", 1, 5)\n\t.add(\"Prayer potion(1)\", 1, 5)\n\n\t/* RDT */\n\t.add(RareDropTable, 1, 5)\n\n\t/* Tertiary */\n\t.tertiary(300, \"Clue scroll (hard)\")\n\t.tertiary(400, \"Long bone\")\n\t.tertiary(1500, \"Clue scroll (elite)\")\n\t.tertiary(5013, \"Curved bone\");\n\nexport default new SimpleMonster({\n\tid: 7097,\n\tname: \"Tortured Gorilla\",\n\ttable: TorturedGorillaTable,\n\taliases: [\"tortured gorilla\"],\n});\n", "import LootTable from \"../../../../structures/LootTable\";\nimport SimpleMonster from \"../../../../structures/SimpleMonster\";\nimport { UncommonSeedDropTable } from \"../../../subtables/index\";\n\nexport const TorturedSoulTable = new LootTable({ limit: 128 })\n\n\t/* Runes */\n\t.add(\"Body rune\", 7, 7)\n\t.add(\"Water rune\", 6, 6)\n\t.add(\"Law rune\", 2, 3)\n\n\t/* Herbs */\n\t.add(\"Grimy harralander\", 1, 5)\n\t.add(\"Grimy tarromin\", 1, 3)\n\t.add(\"Grimy marrentill\", 1, 2)\n\t.add(\"Grimy guam leaf\", 1, 1)\n\t.add(\"Grimy ranarr weed\", 1, 1)\n\n\t/* Coins */\n\t.add(\"Coins\", 3, 30)\n\t.add(\"Coins\", 2, 21)\n\t.add(\"Coins\", 6, 3)\n\t.add(\"Coins\", 5, 3)\n\t.add(\"Coins\", 2, 2)\n\t.add(\"Coins\", 12, 1)\n\n\t/* Other */\n\t.add(\"Limpwurt root\", 1, 3)\n\t.add(\"Vial of water\", 1, 1)\n\n\t/* Subtable */\n\t.add(UncommonSeedDropTable, 1, 20);\n\nexport default new SimpleMonster({\n\tid: 2999,\n\tname: \"Tortured soul\",\n\ttable: TorturedSoulTable,\n\taliases: [\"tortured soul\"],\n});\n", "import LootTable from \"../../../../structures/LootTable\";\nimport SimpleMonster from \"../../../../structures/SimpleMonster\";\nimport HerbDropTable from \"../../../subtables/HerbDropTable\";\nimport { GemTable } from \"../../../subtables/RareDropTable\";\n\nconst TrollGeneralTable = new LootTable()\n\t.every(\"Big bones\")\n\n\t/* Weapons and armour */\n\t.add(\"Steel platebody\", 1, 4)\n\t.add(\"Black warhammer\", 1, 3)\n\t.add(\"Steel warhammer\", 1, 3)\n\t.add(\"Adamant axe\", 1, 2)\n\t.add(\"Adamant sq shield\", 1, 1)\n\t.add(\"Granite shield\", 1, 1)\n\t.add(\"Mithril platebody\", 1, 1)\n\t.add(\"Rune warhammer\", 1, 1)\n\n\t/* Runes */\n\t.add(\"Earth rune\", 80, 8)\n\t.add(\"Nature rune\", 16, 5)\n\t.add(\"Law rune\", 4, 3)\n\t.add(\"Earth rune\", 65, 1)\n\t.add(\"Earth rune\", 25, 1)\n\n\t/* Herbs */\n\t.add(HerbDropTable, 1, 15)\n\n\t/* Coins */\n\t.add(\"Coins\", 40, 29)\n\t.add(\"Coins\", 135, 25)\n\t.add(\"Coins\", 190, 10)\n\t.add(\"Coins\", 20, 4)\n\t.add(\"Coins\", 420, 1)\n\n\t/* Other */\n\t.add(\"Coal\", 6, 3)\n\t.add(\"Raw tuna\", 4, 2)\n\n\t/* Gem drop table */\n\t.add(GemTable, 1, 5)\n\n\t/* Tertiary */\n\t.tertiary(28, \"Ensouled troll head\")\n\t.tertiary(400, \"Long bone\")\n\t.tertiary(5013, \"Curved bone\");\n\nexport default new SimpleMonster({\n\tid: 4120,\n\tname: \"Troll general\",\n\ttable: TrollGeneralTable,\n\taliases: [\"troll general\"],\n});\n", "import LootTable from \"../../../../structures/LootTable\";\nimport SimpleMonster from \"../../../../structures/SimpleMonster\";\nimport HerbDropTable from \"../../../subtables/HerbDropTable\";\nimport { GemTable } from \"../../../subtables/RareDropTable\";\nimport RareSeedTable from \"../../../subtables/RareSeedTable\";\n\nconst TurothHerbTable = new LootTable().add(HerbDropTable, 1, 15).add(HerbDropTable, 2, 10).add(HerbDropTable, 3, 6);\n\nexport const TurothPreTable = new LootTable({ limit: 128 })\n\t/* Weapons and armour */\n\t.add(\"Steel platelegs\", 1, 7)\n\t.add(\"Mithril axe\", 1, 3)\n\t.add(\"Mithril kiteshield\", 1, 1)\n\t.add(\"Adamant full helm\", 1, 1)\n\t.add(\"Rune dagger\", 1, 1)\n\t.oneIn(500, \"Leaf-bladed sword\")\n\t.oneIn(512, \"Mystic robe bottom (light)\")\n\n\t/* Runes */\n\t.add(\"Law rune\", 3, 6)\n\t.add(\"Nature rune\", 15, 5)\n\t.add(\"Nature rune\", 37, 1)\n\n\t/* Herbs */\n\t.add(TurothHerbTable, 1, 31)\n\n\t/* Seeds */\n\t.add(RareSeedTable, 1, 18)\n\n\t/* Materials */\n\t.add(\"Limpwurt root\", 1, 7)\n\n\t/* Other */\n\t.add(\"Coins\", 44, 29)\n\t.add(\"Coins\", 132, 12)\n\t.add(\"Coins\", 440, 1)\n\n\t/* RDT */\n\t.add(GemTable, 1, 5);\n\nconst TurothTable = new LootTable()\n\t.every(\"Bones\")\n\t.every(TurothPreTable)\n\n\t/* Tertiary */\n\t.tertiary(128, \"Clue scroll (hard)\");\n\nexport default new SimpleMonster({\n\tid: 426,\n\tname: \"Turoth\",\n\ttable: TurothTable,\n\taliases: [\"turoth\"],\n});\n", "import LootTable from \"../../../../structures/LootTable\";\nimport SimpleMonster from \"../../../../structures/SimpleMonster\";\nimport HerbDropTable from \"../../../subtables/HerbDropTable\";\nimport { GemTable } from \"../../../subtables/RareDropTable\";\nimport RareSeedTable from \"../../../subtables/RareSeedTable\";\n\nexport const TwistedBansheePreTable = new LootTable()\n\t/* Weapons and armour */\n\t.add(\"Battlestaff\", 1, 10)\n\t.add(\"Air battlestaff\", 1, 4)\n\t.add(\"Adamant mace\", 1, 4)\n\t.add(\"Rune dagger\", 1, 4)\n\t.add(\"Rune med helm\", 1, 4)\n\t.add(\"Adamant kiteshield\", 1, 2)\n\t.add(\"Rune full helm\", 1, 2)\n\t.add(\"Mystic gloves (dark)\", 1, 1)\n\n\t/* Runes */\n\t.add(\"Cosmic rune\", 20, 6)\n\t.add(\"Air rune\", 30, 5)\n\t.add(\"Chaos rune\", 30, 4)\n\t.add(\"Chaos rune\", 17, 2)\n\t.add(\"Fire rune\", 35, 2)\n\n\t/* Materials */\n\t.add(\"Pure essence\", 65, 42)\n\t.add(\"Eye of newt\", 1, 2)\n\t.add(\"Mithril ore\", 1, 2)\n\n\t/* Coins */\n\t.add(\"Coins\", 130, 18)\n\t.add(\"Coins\", 35, 14)\n\t.add(\"Coins\", 260, 14)\n\n\t/* Other */\n\t.add(\"Swordfish\", 1, 10)\n\n\t/* Subtables */\n\t.add(HerbDropTable, 1, 68)\n\t.add(RareSeedTable, 1, 26)\n\t.add(GemTable, 1, 4);\n\nconst TwistedBansheeTable = new LootTable()\n\t.every(TwistedBansheePreTable)\n\n\t/* Tertiary */\n\t.tertiary(128, \"Clue scroll (hard)\", 1);\n\nexport default new SimpleMonster({\n\tid: 7272,\n\tname: \"Twisted Banshee\",\n\ttable: TwistedBansheeTable,\n\taliases: [\"twisted banshee\"],\n});\n", "import LootTable from \"../../../../structures/LootTable\";\nimport SimpleMonster from \"../../../../structures/SimpleMonster\";\n\nconst TzHaarHurTable = new LootTable({ limit: 195 })\n\t.add(\"Tokkul\", [3, 7], 182)\n\t.add(\"Uncut sapphire\", 1, 5)\n\t.add(\"Uncut emerald\", 1, 4)\n\t.add(\"Uncut ruby\", 1, 3)\n\t.add(\"Uncut diamond\", 1, 1)\n\t.tertiary(176_743, \"Rocky\");\n\nexport default new SimpleMonster({\n\tid: 2161,\n\tname: \"TzHaar-Hur\",\n\tpickpocketTable: TzHaarHurTable,\n\taliases: [\"tzhaarhur\", \"tzhaar hur\", \"tzhaar-hur\"],\n});\n", "import LootTable from \"../../../../structures/LootTable\";\nimport SimpleMonster from \"../../../../structures/SimpleMonster\";\n\nconst OnyxBoltTipTable = new LootTable().add(\"Onyx bolt tips\", [1, 4], 1).add(\"Onyx bolt tips\", 20, 1);\n\nconst TzHaarKetTable = new LootTable()\n\t/* Weapons and armour */\n\t.oneIn(512, \"Tzhaar-ket-om\")\n\t.oneIn(512, \"Toktz-ket-xil\")\n\t.oneIn(512, \"Obsidian cape\")\n\t.oneIn(2000, \"Obsidian helmet\")\n\t.oneIn(2000, \"Obsidian platebody\")\n\t.oneIn(2000, \"Obsidian platelegs\")\n\n\t/* Materials */\n\t.add(\"Uncut sapphire\", 1, 4)\n\t.add(\"Uncut emerald\", 1, 3)\n\t.add(\"Uncut ruby\", 1, 3)\n\t.add(\"Uncut diamond\", 1, 1)\n\t.add(OnyxBoltTipTable, 1, 1)\n\n\t/* Other */\n\t.add(\"Tokkul\", [1, 103], 15)\n\n\t/* Tertiary */\n\t.tertiary(35, \"Ensouled tzhaar head\");\n\nexport default new SimpleMonster({\n\tid: 2173,\n\tname: \"TzHaar-Ket\",\n\ttable: TzHaarKetTable,\n\taliases: [\"tzhaar-ket\", \"tzhaar\"],\n});\n", "import LootTable from \"../../../../structures/LootTable\";\nimport SimpleMonster from \"../../../../structures/SimpleMonster\";\n\nconst TzHaarMejTable = new LootTable()\n\t.oneIn(4096, \"Toktz-mej-tal\")\n\t.oneIn(4096, \"Obsidian cape\")\n\t.add(\"Tokkul\", [1, 71], 10)\n\t.add(\"Earth rune\", 25)\n\t.add(\"Fire rune\", 25)\n\t.add(\"Air rune\", 25)\n\t.add(\"Chaos rune\", 5)\n\t.add(\"Nature rune\", 2)\n\t.add(\"Death rune\", 2)\n\t.add(\"Uncut diamond\", 1);\n\nexport const TzHaarMej = new SimpleMonster({\n\tid: 2154,\n\tname: \"TzHaar-Mej\",\n\ttable: TzHaarMejTable,\n\taliases: [\"tzhaar-mej\", \"mej\"],\n});\n", "import LootTable from \"../../../../structures/LootTable\";\nimport SimpleMonster from \"../../../../structures/SimpleMonster\";\n\nconst TzHaarXilTable = new LootTable()\n\t.oneIn(512, \"Toktz-xil-ul\", [9, 29])\n\t.oneIn(512, \"Toktz-xil-ak\")\n\t.oneIn(512, \"Toktz-xil-ek\")\n\t.oneIn(512, \"Obsidian cape\")\n\t.add(\"Tokkul\", [1, 59], 10)\n\t.add(\"Uncut sapphire\", 2)\n\t.add(\"Uncut emerald\", 2)\n\t.add(\"Uncut ruby\", 2)\n\t.add(\"Uncut diamond\");\n\nexport const TzHaarXil = new SimpleMonster({\n\tid: 2168,\n\tname: \"TzHaar-Xil\",\n\ttable: TzHaarXilTable,\n\taliases: [\"tzhaar-xil\", \"xil\"],\n});\n", "import LootTable from \"../../../../structures/LootTable\";\nimport SimpleMonster from \"../../../../structures/SimpleMonster\";\n\nexport const UndeadChickenTable = new LootTable({ limit: 4 })\n\t.every(\"Bones\")\n\t.every(\"Raw chicken\")\n\t.add(\"Feather\", 5, 2)\n\t.add(\"Feather\", 15, 1);\n\nexport default new SimpleMonster({\n\tid: 2993,\n\tname: \"Undead chicken\",\n\ttable: UndeadChickenTable,\n\taliases: [\"undead chicken\"],\n});\n", "import LootTable from \"../../../../structures/LootTable\";\nimport SimpleMonster from \"../../../../structures/SimpleMonster\";\n\nexport const UndeadCowTable = new LootTable().every(\"Bones\").every(\"Cowhide\").every(4287);\n\nexport default new SimpleMonster({\n\tid: 2992,\n\tname: \"Undead cow\",\n\ttable: UndeadCowTable,\n\taliases: [\"undead cow\"],\n});\n", "import LootTable from \"../../../../structures/LootTable\";\nimport SimpleMonster from \"../../../../structures/SimpleMonster\";\nimport { UncommonSeedDropTable } from \"../../../subtables\";\nimport HerbDropTable from \"../../../subtables/HerbDropTable\";\nimport { GemTable } from \"../../../subtables/RareDropTable\";\n\nconst TatteredPageTable = new LootTable()\n\t.add(\"Tattered moon page\")\n\t.add(\"Tattered sun page\")\n\t.add(\"Tattered temple page\");\n\nconst HerbHerbDropTable = new LootTable().add(HerbDropTable, 1, 1).add(HerbDropTable, 2, 1).add(HerbDropTable, 3, 1);\n\nexport const UndeadDruidTable = new LootTable()\n\t.every(\"Bones\")\n\n\t/* Tertiary */\n\t.tertiary(30, TatteredPageTable)\n\t.tertiary(75, \"Grubby key\")\n\t.tertiary(100, \"Clue scroll (hard)\")\n\t.tertiary(5000, \"Zombie champion scroll\")\n\n\t/* Weapons and armour */\n\t.add(\"Air battlestaff\", 1, 2)\n\t.add(\"Earth battlestaff\", 1, 2)\n\t.oneIn(1000, \"Mask of ranul\")\n\n\t/* Runes */\n\t.add(\"Air rune\", [200, 300], 5)\n\t.add(\"Earth rune\", [200, 300], 5)\n\t.add(\"Blood rune\", [20, 30], 3)\n\t.add(\"Chaos rune\", [50, 80], 3)\n\t.add(\"Cosmic rune\", [20, 30], 3)\n\t.add(\"Death rune\", [20, 30], 3)\n\t.add(\"Nature rune\", [20, 30], 3)\n\t.add(\"Mud rune\", [30, 70], 3)\n\t.add(\"Law rune\", [10, 20], 2)\n\n\t/* Herbs */\n\t.add(HerbHerbDropTable, 1, 22)\n\n\t/* Seeds */\n\t.add(UncommonSeedDropTable, 1, 12)\n\n\t/* Materials */\n\t.add(\"Eye of newt\", [25, 30], 2)\n\t.add(\"Potato cactus\", [10, 15], 2)\n\t.add(\"White berries\", [10, 15], 2)\n\t.add(\"Wine of zamorak\", [5, 8], 2)\n\n\t/* Other */\n\t.add(\"Coins\", [1000, 5000], 6)\n\t.add(\"Amulet of defence\", 1, 5)\n\t.add(\"Amulet of magic\", 1, 5)\n\t.add(\"Amulet of strength\", 1, 5)\n\n\t/* Gem drop table */\n\t.add(GemTable, 1, 1);\n\nexport default new SimpleMonster({\n\tid: 2145,\n\tname: \"Undead Druid\",\n\ttable: UndeadDruidTable,\n\taliases: [\"undead druid\"],\n});\n", "import LootTable from \"../../../../structures/LootTable\";\nimport SimpleMonster from \"../../../../structures/SimpleMonster\";\n\nconst ScrollTable = new LootTable().add(\"Skeleton champion scroll\").add(\"Zombie champion scroll\");\n\nexport const UndeadOneTable = new LootTable().every(\"Bones\").tertiary(5000, ScrollTable);\n\nexport default new SimpleMonster({\n\tid: 5342,\n\tname: \"Undead one\",\n\ttable: UndeadOneTable,\n\taliases: [\"undead one\"],\n});\n", "import LootTable from \"../../../../structures/LootTable\";\nimport SimpleMonster from \"../../../../structures/SimpleMonster\";\n\nexport const UnicornTable = new LootTable().every(\"Bones\").every(\"Unicorn horn\").tertiary(35, \"Ensouled unicorn head\");\n\nexport default new SimpleMonster({\n\tid: 2837,\n\tname: \"Unicorn\",\n\ttable: UnicornTable,\n\taliases: [\"unicorn\"],\n});\n", "import LootTable from \"../../../../structures/LootTable\";\nimport SimpleMonster from \"../../../../structures/SimpleMonster\";\n\nexport const UriumShadeTable = new LootTable().every(\"Urium remains\");\n\nexport default new SimpleMonster({\n\tid: 10_589,\n\tname: \"Urium Shade\",\n\ttable: UriumShadeTable,\n\taliases: [\"urium shade\", \"urium\"],\n});\n", "import LootTable from \"../../../../structures/LootTable\";\nimport SimpleMonster from \"../../../../structures/SimpleMonster\";\n\nexport const VampyreJuvinateTable = new LootTable()\n\t/* Weapons */\n\t.add(\"Black battleaxe\", 1, 2)\n\t.add(\"Mithril battleaxe\", 1, 2)\n\t.add(\"Mithril scimitar\", 1, 2)\n\t.add(\"Mithril longsword\", 1, 2)\n\t.add(\"Adamant axe\", 1, 2)\n\t.add(\"Staff of air\", 1, 1)\n\t.add(\"Staff of fire\", 1, 1)\n\t.add(\"Black spear\", 1, 1)\n\t.add(\"Black 2h sword\", 1, 1)\n\t.add(\"Mithril 2h sword\", 1, 1)\n\t.add(\"Mithril warhammer\", 1, 1)\n\t.add(\"Adamant sword\", 1, 1)\n\t.add(\"Adamant mace\", 1, 1)\n\t.add(\"Adamant scimitar\", 1, 1)\n\n\t/* Armour */\n\t.add(\"Steel plateskirt\", 1, 4)\n\t.add(\"Steel platebody\", 1, 4)\n\t.add(\"Black full helm\", 1, 2)\n\t.add(\"Black kiteshield\", 1, 2)\n\t.add(\"Black sq shield\", 1, 2)\n\t.add(\"Mithril full helm\", 1, 2)\n\t.add(\"Mithril chainbody\", 1, 2)\n\t.add(\"Black chainbody\", 1, 1)\n\t.add(\"Black platelegs\", 1, 1)\n\t.add(\"Mithril platelegs\", 1, 1)\n\t.add(\"Mithril sq shield\", 1, 1)\n\t.add(\"Adamant med helm\", 1, 1)\n\n\t/* Runes */\n\t.add(\"Nature rune\", 10, 1)\n\t.add(\"Death rune\", 10, 1)\n\n\t/* Materials */\n\t.add(\"Willow logs\", 5, 2)\n\t.add(\"Yew logs\", 5, 2)\n\t.add(\"Ruby ring\", 1, 2)\n\n\t/* Tertiary */\n\t.tertiary(128, \"Clue scroll (medium)\");\n\nexport default new SimpleMonster({\n\tid: 3694,\n\tname: \"Vampyre Juvinate\",\n\ttable: VampyreJuvinateTable,\n\taliases: [\"vampyre juvinate\"],\n});\n", "import LootTable from \"../../../../structures/LootTable\";\nimport SimpleMonster from \"../../../../structures/SimpleMonster\";\n\nconst VyreTable = new LootTable({ limit: 132 })\n\t.add(\"Coins\", [250, 315], 109)\n\t.add(\"Death rune\", 2, 8)\n\t.add(\"Blood pint\", 1, 6)\n\t.add(\"Uncut ruby\", 1, 5)\n\t.add(\"Blood rune\", 4, 2)\n\t.add(\"Diamond\")\n\t.add(\"Cooked mystery meat\")\n\t.oneIn(5000, \"Blood shard\")\n\t.tertiary(99_175, \"Rocky\");\n\nexport default new SimpleMonster({\n\tid: 9710,\n\tname: \"Vyre\",\n\tpickpocketTable: VyreTable,\n\taliases: [\"vyre\"],\n});\n", "import LootTable from \"../../../../structures/LootTable\";\nimport SimpleMonster from \"../../../../structures/SimpleMonster\";\nimport RareDropTable from \"../../../subtables/RareDropTable\";\n\nexport const VyrewatchTable = new LootTable()\n\t.every(\"Vampyre dust\")\n\t/* Weapons and armour */\n\t.add(\"Rune dagger\", 1, 8)\n\t.add(\"Adamant platelegs\", 1, 8)\n\t.add(\"Adamant platebody\", 1, 8)\n\t.add(\"Rune platelegs\", 1, 4)\n\t.add(\"Mithril axe\", 1, 4)\n\t.add(\"Rune full helm\", 1, 2)\n\n\t/* Runes and ammunition */\n\t.add(\"Earth rune\", [4, 12], 8)\n\t.add(\"Death rune\", [4, 12], 4)\n\t.add(\"Chaos rune\", [7, 25], 4)\n\t.add(\"Adamant arrow\", [8, 16], 4)\n\t.add(\"Rune javelin\", [9, 15], 2)\n\n\t/* Herbs */\n\t.add(\"Grimy marrentill\", 1, 2)\n\t.add(\"Grimy harralander\", 1, 2)\n\t.add(\"Grimy guam leaf\", 1, 2)\n\t.add(\"Grimy avantoe\", 1, 2)\n\n\t/* Seeds */\n\t.add(\"Cabbage seed\", 4, 4)\n\t.add(\"Potato seed\", 4, 4)\n\t.add(\"Mushroom spore\", 1, 4)\n\t.add(\"Marigold seed\", 1, 2)\n\t.add(\"Tarromin seed\", 1, 2)\n\t.add(\"Torstol seed\", 1, 1)\n\t.add(\"Asgarnian seed\", 3, 1)\n\t.add(\"Snapdragon seed\", 1, 1)\n\n\t/* Materials */\n\t.add(\"Adamantite ore\", 1, 4)\n\t.add(\"Coal\", 6, 4)\n\t.add(\"Runite bar\", 1, 4)\n\t.add(\"Mort myre fungus\", 2, 4)\n\t.add(\"Yew logs\", 4, 3)\n\t.add(\"Bark\", [6, 10], 3)\n\t.add(\"Black axe\", 1, 3)\n\t.add(\"Opal bolt tips\", [4, 7], 2)\n\t.add(\"Pearl bolt tips\", [5, 10], 2)\n\t.add(\"Emerald bolt tips\", 6, 2)\n\t.add(\"Onyx bolt tips\", [4, 10], 2)\n\t.add(\"Ruby bolt tips\", 9, 2)\n\t.add(\"Amethyst bolt tips\", 10, 2)\n\t.add(\"Diamond bolt tips\", [4, 6], 2)\n\t.add(\"Dragonstone bolt tips\", 5, 2)\n\n\t/* Coins */\n\t.add(\"Coins\", [244, 1000], 24)\n\n\t/* Rare drop table */\n\t.add(RareDropTable, 1, 1)\n\n\t/* Tertiary */\n\t.tertiary(128, \"Clue scroll (hard)\");\n\nexport default new SimpleMonster({\n\tid: 3717,\n\tname: \"Vyrewatch\",\n\ttable: VyrewatchTable,\n\taliases: [\"vyrewatch\"],\n});\n", "import LootTable from \"../../../../structures/LootTable\";\nimport SimpleMonster from \"../../../../structures/SimpleMonster\";\nimport HerbDropTable from \"../../../subtables/HerbDropTable\";\nimport RareDropTable from \"../../../subtables/RareDropTable\";\nimport { UncommonSeedDropTable } from \"../../../subtables/index\";\n\nexport const VyrewatchSentinelTable = new LootTable()\n\t.every(\"Vampyre dust\")\n\n\t/* Unique */\n\t.oneIn(1500, \"Blood shard\")\n\n\t/* Weapons and armour */\n\t.add(\"Rune dagger\", 1, 6)\n\t.add(\"Adamant platelegs\", 1, 6)\n\t.add(\"Adamant platebody\", 1, 4)\n\t.add(\"Rune full helm\", 1, 1)\n\t.add(\"Rune kiteshield\", 1, 1)\n\n\t/* Runes and ammunition */\n\t.add(\"Death rune\", [6, 10], 10)\n\t.add(\"Blood rune\", [8, 16], 10)\n\t.add(\"Nature rune\", [6, 11], 10)\n\t.add(\"Rune arrow\", [4, 10], 4)\n\t.add(\"Rune javelin\", [5, 15], 2)\n\n\t/* Herbs */\n\t.add(HerbDropTable, 1, 1)\n\n\t/* Seeds */\n\t.add(UncommonSeedDropTable, 1, 1)\n\n\t/* Bolt tips */\n\t.oneIn(589, \"Opal bolt tips\", [6, 14])\n\t.oneIn(589, \"Pearl bolt tips\", [6, 14])\n\t.oneIn(589, \"Diamond bolt tips\", [6, 14])\n\t.oneIn(883, \"Emerald bolt tips\", [6, 14])\n\t.oneIn(883, \"Ruby bolt tips\", [6, 14])\n\t.oneIn(884, \"Dragonstone bolt tips\", [6, 14])\n\t.oneIn(1767, \"Jade bolt tips\", [6, 14])\n\t.oneIn(1767, \"Topaz bolt tips\", [6, 14])\n\t.oneIn(1767, \"Sapphire bolt tips\", [6, 14])\n\t.oneIn(1767, \"Onyx bolt tips\", [6, 14])\n\n\t/* Materials */\n\t.add(\"Bark\", [4, 8], 4)\n\t.add(\"Coal\", 8, 4)\n\t.add(\"Runite bar\", 1, 2)\n\t.add(\"Yew logs\", 6, 2)\n\t.add(\"Runite ore\", 1, 2)\n\n\t/* Coins */\n\t.add(\"Coins\", [100, 1000], 21)\n\n\t/* Rare drop table */\n\t.add(RareDropTable, 1, 1)\n\n\t/* Tertiary */\n\t.tertiary(128, \"Clue scroll (hard)\");\n\nexport default new SimpleMonster({\n\tid: 9756,\n\tname: \"Vyrewatch Sentinel\",\n\ttable: VyrewatchSentinelTable,\n\taliases: [\"vyrewatch sentinel\", \"bat people\", \"bat person\"],\n});\n", "import LootTable from \"../../../../structures/LootTable\";\nimport SimpleMonster from \"../../../../structures/SimpleMonster\";\n\nexport const WallBeastTable = new LootTable()\n\t/* Runes */\n\t.add(\"Air rune\", 3, 8)\n\t.add(\"Cosmic rune\", 2, 2)\n\t.add(\"Chaos rune\", [3, 7], 2)\n\n\t/* Weapons and armour */\n\t.add(\"Bronze med helm\", 1, 8)\n\t.add(\"Bronze full helm\", 1, 8)\n\t.add(\"Iron med helm\", 1, 8)\n\t.add(\"Steel med helm\", 1, 8)\n\t.add(\"Steel full helm\", 1, 8)\n\t.add(\"Black full helm\", 1, 4)\n\t.add(\"Mithril med helm\", 1, 4)\n\t.add(\"Mithril full helm\", 1, 4)\n\t.add(\"Adamant med helm\", 1, 4)\n\t.oneIn(512, \"Mystic hat (light)\")\n\n\t/* Herbs */\n\t.add(\"Grimy guam leaf\", 1, 8)\n\n\t/* Other */\n\t.add(\"Coins\", 15, 24)\n\t.add(\"Tinderbox\", 1, 8)\n\t.add(\"Lantern lens\", 1, 8)\n\t.add(\"Unlit torch\", 1, 8)\n\t.add(\"Eye of newt\", 1, 4)\n\t.add(\"Bullseye lantern (unf)\", 1, 1)\n\n\t/* Tertiary */\n\t.tertiary(128, \"Clue scroll (medium)\");\n\nexport default new SimpleMonster({\n\tid: 476,\n\tname: \"Wall beast\",\n\ttable: WallBeastTable,\n\taliases: [\"wall beast\"],\n});\n", "import LootTable from \"../../../../structures/LootTable\";\nimport SimpleMonster from \"../../../../structures/SimpleMonster\";\nimport { GemTable } from \"../../../subtables/RareDropTable\";\n\nexport const WarpedJellyPreTable = new LootTable()\n\t/* Weapons and armour */\n\t.add(\"Adamant battleaxe\", 1, 11)\n\t.add(\"Black 2h sword\", 1, 5)\n\t.add(\"Adamant axe\", 1, 3)\n\t.add(\"Adamant 2h sword\", 1, 2)\n\t.add(\"Mithril boots\", 1, 2)\n\t.add(\"Rune kiteshield\", 1, 2)\n\t.add(\"Rune full helm\", 1, 1)\n\n\t/* Runes */\n\t.add(\"Chaos rune\", 45, 5)\n\t.add(\"Death rune\", 15, 3)\n\n\t/* Coins */\n\t.add(\"Coins\", 44, 27)\n\t.add(\"Coins\", 102, 27)\n\t.add(\"Coins\", 220, 9)\n\t.add(\"Coins\", 11, 6)\n\t.add(\"Coins\", 460, 2)\n\n\t/* Other */\n\t.add(\"Lobster\", 2, 16)\n\t.add(\"Gold bar\", 1, 2)\n\t.add(\"Thread\", 10, 1)\n\n\t/* Gem drop table */\n\t.add(GemTable, 1, 4);\n\nconst WarpedJellyTable = new LootTable()\n\t.every(WarpedJellyPreTable)\n\n\t/* Tertiary */\n\t.tertiary(64, \"Clue scroll (hard)\");\n\nexport default new SimpleMonster({\n\tid: 7277,\n\tname: \"Warped Jelly\",\n\ttable: WarpedJellyTable,\n\taliases: [\"warped jelly\", \"mouldy jelly\", \"moldy jello\"],\n});\n", "import LootTable from \"../../../../structures/LootTable\";\nimport SimpleMonster from \"../../../../structures/SimpleMonster\";\n\nexport default new SimpleMonster({\n\tid: 3260,\n\tname: \"Warrior woman\",\n\tpickpocketTable: new LootTable().add(\"Coins\", 18).tertiary(257_211, \"Rocky\"),\n\taliases: [\"warrior woman\"],\n});\n", "import LootTable from \"../../../../structures/LootTable\";\nimport SimpleMonster from \"../../../../structures/SimpleMonster\";\nimport HerbDropTable from \"../../../subtables/HerbDropTable\";\nimport { GemTable } from \"../../../subtables/RareDropTable\";\nimport RareSeedTable from \"../../../subtables/RareSeedTable\";\n\nconst WaterfiendTable = new LootTable()\n\t.every(\"Water rune\")\n\t.every(\"Fiendish ashes\")\n\n\t/* Pre-roll */\n\t.oneIn(3000, \"Mist battlestaff\")\n\n\t/* Weapons and armour */\n\t.add(\"Staff of water\", 1, 6)\n\t.add(\"Water battlestaff\", 1, 4)\n\t.add(\"Adamant chainbody\", 1, 2)\n\t.add(\"Adamant warhammer\", 1, 2)\n\t.add(\"Rune med helm\", 1, 2)\n\t.add(\"Mystic water staff\", 1, 1)\n\t.add(\"Blue d'hide vambraces\", 1, 1)\n\t.add(\"Rune full helm\", 1, 1)\n\n\t/* Runes and ammunition */\n\t.add(\"Mithril arrow\", 90, 10)\n\t.add(\"Water rune\", 150, 6)\n\t.add(\"Sapphire bolts\", 15, 5)\n\t.add(\"Death rune\", 23, 5)\n\t.add(\"Blood rune\", 17, 3)\n\t.add(\"Mist rune\", [25, 75], 2)\n\t.add(\"Mud rune\", [75, 100], 2)\n\t.add(\"Steam rune\", [40, 60], 2)\n\n\t/* Materials */\n\t.add(\"Mithril ore\", [10, 20], 4)\n\t.add(\"Raw lobster\", 18, 3)\n\t.add(\"Raw shark\", 8, 3)\n\t.add(\"Shark\", 2, 3)\n\t.add(\"Mithril bar\", [10, 15], 1)\n\t.add(\"Uncut sapphire\", 3, 1)\n\t.add(\"Uncut emerald\", 3, 1)\n\t.add(\"Uncut ruby\", 3, 1)\n\t.add(\"Uncut diamond\", 3, 1)\n\n\t/* Herbs */\n\t.add(HerbDropTable, 1, 9)\n\n\t/* Seeds */\n\t.add(RareSeedTable, 1, 4)\n\t.add(\"Watermelon seed\", [5, 15], 3)\n\n\t/* Other */\n\t.add(\"Coins\", [2000, 3000], 15)\n\t.add(\"Water orb\", [6, 10], 8)\n\t.add(\"Vial of water\", [40, 50], 4)\n\t.add(\"Water talisman\", 1, 4)\n\t.add(\"Oyster\", 3, 2)\n\t.add(\"Seaweed\", [20, 30], 2)\n\t.add(\"Snape grass\", [20, 30], 2)\n\n\t/* Gem drop table */\n\t.add(GemTable, 1, 3)\n\n\t/* Tertiary */\n\t.tertiary(24, \"Crystal shard\")\n\t.tertiary(128, \"Clue scroll (hard)\");\n\nexport default new SimpleMonster({\n\tid: 2916,\n\tname: \"Waterfiend\",\n\ttable: WaterfiendTable,\n\taliases: [\"waterfiend\"],\n});\n", "import LootTable from \"../../../../structures/LootTable\";\nimport SimpleMonster from \"../../../../structures/SimpleMonster\";\nimport HerbDropTable from \"../../../subtables/HerbDropTable\";\nimport { GemTable } from \"../../../subtables/RareDropTable\";\n\nconst WerewolfTable = new LootTable({ limit: 512 })\n\t.every(\"Wolf bones\")\n\n\t/* Weapons and armour */\n\t.add(\"Steel scimitar\", 1, 32)\n\t.add(\"Steel axe\", 1, 25)\n\t.add(\"Steel full helm\", 1, 15)\n\t.add(\"Mithril chainbody\", 1, 10)\n\t.add(\"Mithril sq shield\", 1, 10)\n\t.add(\"Rune med helm\", 1, 3)\n\n\t/* Herbs */\n\t.add(HerbDropTable, 1, 3)\n\n\t/* Food */\n\t.add(\"Jug of wine\", 1, 20)\n\t.add(\"Raw chicken\", 5, 10)\n\t.add(\"Raw beef\", 5, 10)\n\t.add(\"Raw bear meat\", 5, 10)\n\n\t/* Coins */\n\t.add(\"Coins\", 10, 80)\n\t.add(\"Coins\", 90, 20)\n\t.add(\"Coins\", 120, 20)\n\t.add(\"Coins\", 222, 20)\n\t.add(\"Coins\", 364, 20)\n\n\t/* Other */\n\t.add(\"Grey wolf fur\", 1, 100)\n\t.add(\"Fur\", 1, 100)\n\n\t/* Gem drop table */\n\t.add(GemTable, 1, 2)\n\n\t/* Tertiary */\n\t.tertiary(128, \"Clue scroll (easy)\")\n\t.tertiary(512, \"Clue scroll (medium)\");\n\nexport default new SimpleMonster({\n\tid: 2593,\n\tname: \"Werewolf\",\n\ttable: WerewolfTable,\n\taliases: [\"werewolf\"],\n});\n", "import LootTable from \"../../../../structures/LootTable\";\nimport SimpleMonster from \"../../../../structures/SimpleMonster\";\n\nexport const WhiteWolfTable = new LootTable().every(\"Wolf bones\");\n\nexport default new SimpleMonster({\n\tid: 108,\n\tname: \"White Wolf\",\n\ttable: WhiteWolfTable,\n\taliases: [\"white wolf\"],\n});\n", "import LootTable from \"../../../../structures/LootTable\";\nimport SimpleMonster from \"../../../../structures/SimpleMonster\";\n\nexport const WildDogTable = new LootTable().every(\"Bones\").tertiary(25, \"Ensouled dog head\");\n\nexport default new SimpleMonster({\n\tid: 112,\n\tname: \"Wild dog\",\n\ttable: WildDogTable,\n\taliases: [\"wild dog\"],\n});\n", "import LootTable from \"../../../../structures/LootTable\";\nimport SimpleMonster from \"../../../../structures/SimpleMonster\";\n\nexport const WolfTable = new LootTable().every(\"Wolf bones\").tertiary(128, \"Clue scroll (beginner)\");\n\nexport default new SimpleMonster({\n\tid: 106,\n\tname: \"Wolf\",\n\ttable: WolfTable,\n\taliases: [\"wolf\"],\n});\n", "import LootTable from \"../../../../structures/LootTable\";\nimport SimpleMonster from \"../../../../structures/SimpleMonster\";\nimport ManWomanTable from \"../../../subtables/ManWomanTable\";\n\nexport default new SimpleMonster({\n\tid: 1119,\n\tname: \"Woman\",\n\ttable: ManWomanTable,\n\tpickpocketTable: new LootTable().add(\"Coins\", 3).tertiary(257_211, \"Rocky\"),\n\taliases: [\"women\", \"woman\"],\n});\n", "import LootTable from \"../../../../structures/LootTable\";\nimport SimpleMonster from \"../../../../structures/SimpleMonster\";\nimport HerbDropTable from \"../../../subtables/HerbDropTable\";\nimport { GemTable } from \"../../../subtables/RareDropTable\";\nimport RareSeedTable from \"../../../subtables/RareSeedTable\";\n\nconst WyrmOnTaskUniqueTable = new LootTable()\n\t/* Pre-roll*/\n\t.oneIn(2000, \"Dragon knife\", [75, 150])\n\t.oneIn(2000, \"Dragon thrownaxe\", [75, 150])\n\t.oneIn(2000, \"Dragon sword\")\n\t.oneIn(2000, \"Dragon harpoon\");\n\nconst WyrmOffTaskUniqueTable = new LootTable()\n\t/* Pre-roll*/\n\t.oneIn(10_000, \"Dragon knife\", [75, 150])\n\t.oneIn(10_000, \"Dragon thrownaxe\", [75, 150])\n\t.oneIn(10_000, \"Dragon sword\")\n\t.oneIn(10_000, \"Dragon harpoon\");\n\nexport const WyrmPreTable = new LootTable({ limit: 76 })\n\t/* Weapons and armour */\n\t.add(\"Red d'hide chaps\", 1, 3)\n\t.add(\"Adamant axe\", 1, 2)\n\t.add(\"Adamant sq shield\", 1, 2)\n\t.add(\"Adamant battleaxe\", 1, 2)\n\t.add(\"Adamant 2h sword\", 1, 2)\n\t.add(\"Rune med helm\", 1, 2)\n\t.add(\"Earth battlestaff\", 1, 1)\n\t.add(\"Rune battleaxe\", 1, 1)\n\t.add(\"Dragon dagger\", 1, 1)\n\n\t/* Runes */\n\t.add(\"Fire rune\", 200, 10)\n\t.add(\"Earth rune\", [75, 150], 10)\n\t.add(\"Soul rune\", [15, 20], 5)\n\t.add(\"Blood rune\", [25, 30], 5)\n\n\t/* Herbs */\n\t.add(HerbDropTable, 2, 4)\n\n\t/* Seeds */\n\t.add(RareSeedTable, 1, 3)\n\n\t/* Other */\n\t.add(\"Coins\", [950, 1450], 8)\n\t.add(\"Bass\", 1, 7)\n\t.add(\"Pure essence\", [200, 300], 3)\n\t.add(\"Rune arrowtips\", [8, 12], 2)\n\t.add(\"Adamant arrowtips\", [8, 12], 2)\n\n\t/* RDT */\n\t.add(GemTable, 1, 1);\n\nconst WyrmTable = new LootTable()\n\t.every(\"Wyrm bones\")\n\t.every(WyrmOffTaskUniqueTable)\n\t.every(WyrmPreTable)\n\n\t/* Tertiary */\n\t.tertiary(256, \"Clue scroll (hard)\");\n\nconst WyrmOnTaskTable = new LootTable()\n\t.every(\"Wyrm bones\")\n\t.every(WyrmOnTaskUniqueTable)\n\t.every(WyrmPreTable)\n\n\t/* Tertiary */\n\t.tertiary(256, \"Clue scroll (hard)\");\n\nexport default new SimpleMonster({\n\tid: 8610,\n\tname: \"Wyrm\",\n\ttable: WyrmTable,\n\tonTaskTable: WyrmOnTaskTable,\n\taliases: [\"wyrm\", \"wurms\", \"worms\", \"wyrms\", \"worm\", \"wurm\"],\n});\n", "import LootTable from \"../../../../structures/LootTable\";\nimport SimpleMonster from \"../../../../structures/SimpleMonster\";\n\nconst YanilleWatchmanTable = new LootTable().every(\"Coins\", 60).every(\"Bread\").tertiary(134_625, \"Rocky\");\n\nexport default new SimpleMonster({\n\tid: 5420,\n\tname: \"Watchman\",\n\tpickpocketTable: YanilleWatchmanTable,\n\taliases: [\"yanille\", \"watchman\", \"yanille watchman\"],\n});\n", "import LootTable from \"../../../../structures/LootTable\";\nimport SimpleMonster from \"../../../../structures/SimpleMonster\";\n\nexport const ZogreTable = new LootTable()\n\t.every(\"Zogre bones\")\n\t.every(\"Ogre coffin key\")\n\t.tertiary(5000, \"Zombie champion scroll\");\n\nexport default new SimpleMonster({\n\tid: 866,\n\tname: \"Zogre\",\n\ttable: ZogreTable,\n\taliases: [\"zogre\"],\n});\n", "import LootTable from \"../../../../structures/LootTable\";\nimport SimpleMonster from \"../../../../structures/SimpleMonster\";\nimport HerbDropTable from \"../../../subtables/HerbDropTable\";\n\nexport const ZombieTable = new LootTable({ limit: 128 })\n\t.every(\"Bones\")\n\t.tertiary(5000, \"Zombie champion scroll\")\n\n\t/* Weapons and armour */\n\t.add(\"Bronze med helm\", 1, 4)\n\t.add(\"Bronze longsword\")\n\t.add(\"Iron axe\")\n\n\t/* Runes and ammunition */\n\t.add(\"Iron arrow\", 5, 7)\n\t.add(\"Body rune\", 6, 5)\n\t.add(\"Mind rune\", 5, 5)\n\t.add(\"Air rune\", 13, 4)\n\t.add(\"Iron arrow\", 8, 4)\n\t.add(\"Steel arrow\", 5, 2)\n\t.add(\"Nature rune\", 6, 1)\n\n\t/* Coins */\n\t.add(\"Coins\", 10, 11)\n\t.add(\"Coins\", 4, 4)\n\t.add(\"Coins\", 18, 3)\n\t.add(\"Coins\", 13, 2)\n\t.add(\"Coins\", 28, 2)\n\n\t/* Other */\n\t.add(\"Fishing bait\", 5, 37)\n\t.add(\"Copper ore\", 1, 2)\n\n\t/* Subtables */\n\t.add(HerbDropTable, 1, 25);\n\nexport default new SimpleMonster({\n\tid: 26,\n\tname: \"Zombie\",\n\ttable: ZombieTable,\n\taliases: [\"zombie\"],\n});\n", "import LootTable from \"../../../../structures/LootTable\";\nimport SimpleMonster from \"../../../../structures/SimpleMonster\";\n\nexport const ZombiePirateTable = new LootTable()\n\t.every(\"Bones\")\n\n\t/* Pre-roll */\n\t.oneIn(2, new LootTable()) // 'Nothing' drop\n\t.oneIn(24, \"Zombie pirate key\")\n\t.oneIn(20_000, \"Teleport anchoring scroll\")\n\n\t/* Runes */\n\t.add(\"Blood rune\", [30, 60], 4)\n\t.add(\"Death rune\", [30, 90], 4)\n\t.add(\"Chaos rune\", [30, 90], 4)\n\t.add(\"Mind rune\", [30, 90], 4)\n\n\t/* Weapons and armour */\n\t.add(\"Battlestaff\", [1, 3], 8)\n\t.add(\"Adamant platebody\", 1, 6)\n\t.add(\"Rune med helm\", 1, 6)\n\t.add(\"Rune warhammer\", 1, 6)\n\t.add(\"Rune battleaxe\", 1, 6)\n\t.add(\"Rune longsword\", 1, 6)\n\t.add(\"Rune sword\", 1, 6)\n\t.add(\"Rune mace\", 1, 6)\n\t.add(\"Dragon dagger\", 1, 1)\n\t.add(\"Dragon longsword\", 1, 1)\n\t.add(\"Dragon scimitar\", 1, 1)\n\n\t/* Blighted supplies */\n\t.add(\"Blighted ancient ice sack\", [10, 30], 12)\n\t.add(\"Blighted anglerfish\", [5, 15], 12)\n\t.add(\"Blighted manta ray\", [5, 15], 12)\n\t.add(\"Blighted karambwan\", [5, 15], 12)\n\t.add(\"Blighted super restore(4)\", [1, 3], 12)\n\n\t/* Other */\n\t.add(\"Coins\", [1_000, 8_000], 12)\n\t.add(\"Cannonball\", [20, 100], 12)\n\t.add(\"Gold ore\", [5, 15], 12)\n\t.add(\"Adamant seeds\", [5, 10], 8)\n\n\t/* Tertiary */\n\t.tertiary(5000, \"Zombie champion scroll\");\n\nexport default new SimpleMonster({\n\tid: 13_489,\n\tname: \"Zombie pirate\",\n\ttable: ZombiePirateTable,\n\taliases: [\"zombie pirate\"],\n});\n", "import LootTable from \"../../../../structures/LootTable\";\nimport SimpleMonster from \"../../../../structures/SimpleMonster\";\n\nexport const ZombieRatTable = new LootTable().every(\"Bones\");\n\nexport default new SimpleMonster({\n\tid: 3969,\n\tname: \"Zombie rat\",\n\ttable: ZombieRatTable,\n\taliases: [\"zombie rat\"],\n});\n", "import LootTable from \"../../../../structures/LootTable\";\nimport SimpleMonster from \"../../../../structures/SimpleMonster\";\nimport CommonSeedDropTable from \"../../../subtables/CommonSeedDropTable\";\nimport HerbDropTable from \"../../../subtables/HerbDropTable\";\nimport RareDropTable from \"../../../subtables/RareDropTable\";\n\n// TODO: check back for wiki drop table update\nconst ZygomiteTable = new LootTable()\n\t.every(\"Ashes\")\n\n\t/* Weapons and armour */\n\t.add(\"Steel axe\", 1, 10)\n\t.add(\"Steel 2h sword\", 1, 10)\n\t.add(\"Mithril full helm\", 1, 5)\n\t.add(\"Rune full helm\", 1, 5)\n\n\t/* Runes and ammunition */\n\t.add(\"Nature rune\", 5, 15)\n\t.add(\"Law rune\", [10, 20], 10)\n\t.add(\"Earth rune\", 15, 10)\n\n\t/* Herbs */\n\t.add(HerbDropTable, 1, 16)\n\n\t/* Seeds */\n\t.add(CommonSeedDropTable, 1, 10)\n\n\t/* Other */\n\t.add(\"Coins\", [44, 460], 9)\n\t.add(\"Supercompost\", [1, 3], 7)\n\t.add(\"Mort myre fungus\", [1, 5], 7)\n\t.add(\"Clay\", 1, 7)\n\t.add(\"Fungicide\", 1, 7)\n\n\t/* RDT */\n\t.add(RareDropTable, 1, 1);\n\nexport default new SimpleMonster({\n\tid: 537,\n\tname: \"Zygomite\",\n\ttable: ZygomiteTable,\n\taliases: [\"mutated zygomite\", \"zygomite\"],\n});\n", "import DagannothPrime from \"../bosses/DagannothPrime\";\nimport AberrantSpectre from \"./a-f/AberrantSpectre\";\nimport AbyssalDemon from \"./a-f/AbyssalDemon\";\nimport AdamantDragon from \"./a-f/AdamantDragon\";\nimport AlKharidWarrior from \"./a-f/AlKharidWarrior\";\nimport AncientZygomite from \"./a-f/AncientZygomite\";\nimport Ankou from \"./a-f/Ankou\";\nimport { Araxyte } from \"./a-f/Araxyte\";\nimport ArmadylianGuard from \"./a-f/ArmadylianGuard\";\nimport ArmouredZombie from \"./a-f/ArmouredZombie\";\nimport AsynShade from \"./a-f/AsynShade\";\nimport Aviansie from \"./a-f/Aviansie\";\nimport BabyBlackDragon from \"./a-f/BabyBlackDragon\";\nimport BabyBlueDragon from \"./a-f/BabyBlueDragon\";\nimport BabyGreenDragon from \"./a-f/BabyGreenDragon\";\nimport BabyRedDragon from \"./a-f/BabyRedDragon\";\nimport Bandit from \"./a-f/Bandit\";\nimport Banshee from \"./a-f/Banshee\";\nimport Basilisk from \"./a-f/Basilisk\";\nimport BasiliskKnight from \"./a-f/BasiliskKnight\";\nimport Bat from \"./a-f/Bat\";\nimport BearCub from \"./a-f/BearCub\";\nimport BeardedBandit from \"./a-f/BeardedBandit\";\nimport BigWolf from \"./a-f/BigWolf\";\nimport Bird from \"./a-f/Bird\";\nimport BlackBear from \"./a-f/BlackBear\";\nimport BlackDemon from \"./a-f/BlackDemon\";\nimport BlackDragon from \"./a-f/BlackDragon\";\nimport BlackGuard from \"./a-f/BlackGuard\";\nimport BlackKnight from \"./a-f/BlackKnight\";\nimport BloodReaver from \"./a-f/BloodReaver\";\nimport Bloodveld from \"./a-f/Bloodveld\";\nimport BlueDragon from \"./a-f/BlueDragon\";\nimport BrineRat from \"./a-f/BrineRat\";\nimport BronzeDragon from \"./a-f/BronzeDragon\";\nimport BrutalBlackDragon from \"./a-f/BrutalBlackDragon\";\nimport BrutalBlueDragon from \"./a-f/BrutalBlueDragon\";\nimport BrutalGreenDragon from \"./a-f/BrutalGreenDragon\";\nimport BrutalRedDragon from \"./a-f/BrutalRedDragon\";\nimport Catablepon from \"./a-f/Catablepon\";\nimport CaveBug from \"./a-f/CaveBug\";\nimport CaveCrawler from \"./a-f/CaveCrawler\";\nimport CaveGoblin from \"./a-f/CaveGoblin\";\nimport CaveGoblinGuard from \"./a-f/CaveGoblinGuard\";\nimport CaveHorror from \"./a-f/CaveHorror\";\nimport CaveKraken from \"./a-f/CaveKraken\";\nimport CaveSlime from \"./a-f/CaveSlime\";\nimport ChaosDruid from \"./a-f/ChaosDruid\";\nimport ChaosDwarf from \"./a-f/ChaosDwarf\";\nimport Chicken from \"./a-f/Chicken\";\nimport ChompyBird from \"./a-f/ChompyBird\";\nimport Cockatrice from \"./a-f/Cockatrice\";\nimport Cow from \"./a-f/Cow\";\nimport CowCalf from \"./a-f/CowCalf\";\nimport Crab from \"./a-f/Crab\";\nimport CrawlingHand from \"./a-f/CrawlingHand\";\nimport Crocodile from \"./a-f/Crocodile\";\nimport CryptRat from \"./a-f/CryptRat\";\nimport Cyclops from \"./a-f/Cyclops\";\nimport Dagannoth from \"./a-f/Dagannoth\";\nimport DagannothSpawn from \"./a-f/DagannothSpawn\";\nimport DaganothFledgeling from \"./a-f/DaganothFledgeling\";\nimport DarkBeast from \"./a-f/DarkBeast\";\nimport DarkWarrior from \"./a-f/DarkWarrior\";\nimport DeadlyRedSpider from \"./a-f/DeadlyRedSpider\";\nimport DeathWing from \"./a-f/DeathWing\";\nimport DemonicGorilla from \"./a-f/DemonicGorilla\";\nimport DesertBandit from \"./a-f/DesertBandit\";\nimport DesertLizard from \"./a-f/DesertLizard\";\nimport DesertWolf from \"./a-f/DesertWolf\";\nimport DeviantSpectre from \"./a-f/DeviantSpectre\";\nimport Drake from \"./a-f/Drake\";\nimport Duck from \"./a-f/Duck\";\nimport Duckling from \"./a-f/Duckling\";\nimport DungeonRat from \"./a-f/DungeonRat\";\nimport DustDevil from \"./a-f/DustDevil\";\nimport Dwarf from \"./a-f/Dwarf\";\nimport DwarfGangMember from \"./a-f/DwarfGangMember\";\nimport EarthWarrior from \"./a-f/EarthWarrior\";\nimport ElderChaosDruid from \"./a-f/ElderChaosDruid\";\nimport Elf from \"./a-f/Elf\";\nimport ElfArcher from \"./a-f/ElfArcher\";\nimport ElfWarrior from \"./a-f/ElfWarrior\";\nimport Ent from \"./a-f/Ent\";\nimport Farmer from \"./a-f/Farmer\";\nimport FemaleHamMember from \"./a-f/FemaleHamMember\";\nimport FeralVampyre from \"./a-f/FeralVampyre\";\nimport FeverSpider from \"./a-f/FeverSpider\";\nimport FireGiant from \"./a-f/FireGiant\";\nimport FiyrShade from \"./a-f/FiyrShade\";\nimport FleshCrawler from \"./a-f/FleshCrawler\";\nimport FossilIslandWyvernAncient from \"./a-f/FossilIslandWyvernAncient\";\nimport FossilIslandWyvernLongTailed from \"./a-f/FossilIslandWyvernLongTailed\";\nimport FossilIslandWyvernSpitting from \"./a-f/FossilIslandWyvernSpitting\";\nimport FossilIslandWyvernTaloned from \"./a-f/FossilIslandWyvernTaloned\";\nimport FremennikCitizen from \"./a-f/FremennikCitizen\";\nimport Gargoyle from \"./g-m/Gargoyle\";\nimport Ghost from \"./g-m/Ghost\";\nimport Ghoul from \"./g-m/Ghoul\";\nimport GiantBat from \"./g-m/GiantBat\";\nimport GiantCryptSpider from \"./g-m/GiantCryptSpider\";\nimport GiantFrog from \"./g-m/GiantFrog\";\nimport GiantRat from \"./g-m/GiantRat\";\nimport GiantSeaSnake from \"./g-m/GiantSeaSnake\";\nimport GiantSpider from \"./g-m/GiantSpider\";\nimport Gnome from \"./g-m/Gnome\";\nimport Goat from \"./g-m/Goat\";\nimport Goblin from \"./g-m/Goblin\";\nimport GreaterDemon from \"./g-m/GreaterDemon\";\nimport GreaterNechryael from \"./g-m/GreaterNechryael\";\nimport GreenDragon from \"./g-m/GreenDragon\";\nimport GrizzlyBear from \"./g-m/GrizzlyBear\";\nimport GrizzlyBearCub from \"./g-m/GrizzlyBearCub\";\nimport Guard from \"./g-m/Guard\";\nimport GuardBandit from \"./g-m/GuardBandit\";\nimport GuardDog from \"./g-m/GuardDog\";\nimport HarpieBugSwarm from \"./g-m/HarpieBugSwarm\";\nimport Hellhound from \"./g-m/Hellhound\";\nimport Hero from \"./g-m/Hero\";\nimport HillGiant from \"./g-m/HillGiant\";\nimport Hobgoblin from \"./g-m/Hobgoblin\";\nimport Hydra from \"./g-m/Hydra\";\nimport IceGiant from \"./g-m/IceGiant\";\nimport IceTroll from \"./g-m/IceTroll\";\nimport IceWarrior from \"./g-m/IceWarrior\";\nimport IceWolf from \"./g-m/IceWolf\";\nimport Icefiend from \"./g-m/Icefiend\";\nimport Imp from \"./g-m/Imp\";\nimport InfernalMage from \"./g-m/InfernalMage\";\nimport IorwerthArcher from \"./g-m/IorwerthArcher\";\nimport IorwerthWarrior from \"./g-m/IorwerthWarrior\";\nimport IronDragon from \"./g-m/IronDragon\";\nimport Jackal from \"./g-m/Jackal\";\nimport Jelly from \"./g-m/Jelly\";\nimport Jogre from \"./g-m/Jogre\";\nimport JubblyBird from \"./g-m/JubblyBird\";\nimport JungleHorror from \"./g-m/JungleHorror\";\nimport JungleWolf from \"./g-m/JungleWolf\";\nimport KalphiteGuardian from \"./g-m/KalphiteGuardian\";\nimport KalphiteSoldier from \"./g-m/KalphiteSoldier\";\nimport KalphiteWorker from \"./g-m/KalphiteWorker\";\nimport Killerwatt from \"./g-m/Killerwatt\";\nimport KingScorpion from \"./g-m/KingScorpion\";\nimport KnightOfArdougne from \"./g-m/KnightOfArdougne\";\nimport Kurask from \"./g-m/Kurask\";\nimport LavaDragon from \"./g-m/LavaDragon\";\nimport LesserDemon from \"./g-m/LesserDemon\";\nimport Lizard from \"./g-m/Lizard\";\nimport Lizardman from \"./g-m/Lizardman\";\nimport LizardmanBrute from \"./g-m/LizardmanBrute\";\nimport LizardmanShaman from \"./g-m/LizardmanShaman\";\nimport LoarShade from \"./g-m/LoarShade\";\nimport Lobstrosity from \"./g-m/Lobstrosity\";\nimport LocustRider from \"./g-m/LocustRider\";\nimport MagicAxe from \"./g-m/MagicAxe\";\nimport MaleHamMember from \"./g-m/MaleHamMember\";\nimport Mammoth from \"./g-m/Mammoth\";\nimport Man from \"./g-m/Man\";\nimport ManiacalMonkey from \"./g-m/ManiacalMonkey\";\nimport MasterFarmer from \"./g-m/MasterFarmer\";\nimport MenaphiteThug from \"./g-m/MenaphiteThug\";\nimport Minotaur from \"./g-m/Minotaur\";\nimport MithrilDragon from \"./g-m/MithrilDragon\";\nimport Mogre from \"./g-m/Mogre\";\nimport Molanisk from \"./g-m/Molanisk\";\nimport Monkey from \"./g-m/Monkey\";\nimport MonkeyArcher from \"./g-m/MonkeyArcher\";\nimport MonkeyGuard from \"./g-m/MonkeyGuard\";\nimport MonkeyZombie from \"./g-m/MonkeyZombie\";\nimport MossGiant from \"./g-m/MossGiant\";\nimport MountainTroll from \"./g-m/MountainTroll\";\nimport MountedTerrorBirdGnome from \"./g-m/MountedTerrorBirdGnome\";\nimport Mourner from \"./g-m/Mourner\";\nimport MutatedBloodveld from \"./g-m/MutatedBloodveld\";\nimport Nechryael from \"./n-s/Nechryael\";\nimport Ogre from \"./n-s/Ogre\";\nimport OgressShaman from \"./n-s/OgressShaman\";\nimport OgressWarrior from \"./n-s/OgressWarrior\";\nimport Otherworldlybeing from \"./n-s/Otherworldlybeing\";\nimport Paladin from \"./n-s/Paladin\";\nimport Penguin from \"./n-s/Penguin\";\nimport PhrinShade from \"./n-s/PhrinShade\";\nimport Pirate from \"./n-s/Pirate\";\nimport PitScorpion from \"./n-s/PitScorpion\";\nimport PoisonScorpion from \"./n-s/PoisonScorpion\";\nimport PollnivnianBandit from \"./n-s/PollnivnianBandit\";\nimport Porazdir from \"./n-s/Porazdir\";\nimport PrifddinasElf from \"./n-s/PrifddinasElf\";\nimport PriffRabbit from \"./n-s/PriffRabbit\";\nimport Pyrefiend from \"./n-s/Pyrefiend\";\nimport Pyrelord from \"./n-s/Pyrelord\";\nimport Rat from \"./n-s/Rat\";\nimport RedDragon from \"./n-s/RedDragon\";\nimport RevenantCyclops from \"./n-s/RevenantCyclops\";\nimport RevenantDarkBeast from \"./n-s/RevenantDarkBeast\";\nimport RevenantDemon from \"./n-s/RevenantDemon\";\nimport RevenantDragon from \"./n-s/RevenantDragon\";\nimport RevenantGoblin from \"./n-s/RevenantGoblin\";\nimport RevenantHellhound from \"./n-s/RevenantHellhound\";\nimport RevenantHobgoblin from \"./n-s/RevenantHobgoblin\";\nimport RevenantImp from \"./n-s/RevenantImp\";\nimport RevenantKnight from \"./n-s/RevenantKnight\";\nimport RevenantOrk from \"./n-s/RevenantOrk\";\nimport RevenantPyrefiend from \"./n-s/RevenantPyrefiend\";\nimport RiylShade from \"./n-s/RiylShade\";\nimport Rockslug from \"./n-s/Rockslug\";\nimport Rogue from \"./n-s/Rogue\";\nimport Rooster from \"./n-s/Rooster\";\nimport RuneDragon from \"./n-s/RuneDragon\";\nimport ScarabMage from \"./n-s/ScarabMage\";\nimport Scorpion from \"./n-s/Scorpion\";\nimport SeaSnakeHatchling from \"./n-s/SeaSnakeHatchling\";\nimport SeaSnakeYoung from \"./n-s/SeaSnakeYoung\";\nimport Seagull from \"./n-s/Seagull\";\nimport Shade from \"./n-s/Shade\";\nimport ShadowSpider from \"./n-s/ShadowSpider\";\nimport ShadowWarrior from \"./n-s/ShadowWarrior\";\nimport SkeletalWyvern from \"./n-s/SkeletalWyvern\";\nimport Skeleton from \"./n-s/Skeleton\";\nimport SkeletonFremennik from \"./n-s/SkeletonFremennik\";\nimport SkeletonMage from \"./n-s/SkeletonMage\";\nimport Skogre from \"./n-s/Skogre\";\nimport SmallLizard from \"./n-s/SmallLizard\";\nimport SmokeDevil from \"./n-s/SmokeDevil\";\nimport Spider from \"./n-s/Spider\";\nimport SpiritualMage from \"./n-s/SpiritualMage\";\nimport SpiritualRanger from \"./n-s/SpiritualRanger\";\nimport SpiritualWarrior from \"./n-s/SpiritualWarrior\";\nimport SteelDragon from \"./n-s/SteelDragon\";\nimport SulphurLizard from \"./n-s/SulphurLizard\";\nimport Suqah from \"./n-s/Suqah\";\nimport TempleSpider from \"./t-z/TempleSpider\";\nimport TerrorBird from \"./t-z/TerrorBird\";\nimport TerrorDog from \"./t-z/TerrorDog\";\nimport TormentedDemon from \"./t-z/TormentedDemon\";\nimport TorturedGorilla from \"./t-z/TorturedGorilla\";\nimport TorturedSoul from \"./t-z/TorturedSoul\";\nimport TrollGeneral from \"./t-z/TrollGeneral\";\nimport Turoth from \"./t-z/Turoth\";\nimport TwistedBanshee from \"./t-z/TwistedBanshee\";\nimport TzHaarHur from \"./t-z/TzHaarHur\";\nimport TzHaarKet from \"./t-z/TzHaarKet\";\nimport { TzHaarMej } from \"./t-z/TzHaarMej\";\nimport { TzHaarXil } from \"./t-z/TzHaarXil\";\nimport UndeadChicken from \"./t-z/UndeadChicken\";\nimport UndeadCow from \"./t-z/UndeadCow\";\nimport UndeadDruid from \"./t-z/UndeadDruid\";\nimport UndeadOne from \"./t-z/UndeadOne\";\nimport Unicorn from \"./t-z/Unicorn\";\nimport UriumShade from \"./t-z/UriumShade\";\nimport VampyreJuvinate from \"./t-z/VampyreJuvinate\";\nimport Vyre from \"./t-z/Vyre\";\nimport Vyrewatch from \"./t-z/Vyrewatch\";\nimport VyrewatchSentinel from \"./t-z/VyrewatchSentinel\";\nimport WallBeast from \"./t-z/WallBeast\";\nimport WarpedJelly from \"./t-z/WarpedJelly\";\nimport WarriorWoman from \"./t-z/WarriorWoman\";\nimport Waterfiend from \"./t-z/Waterfiend\";\nimport Werewolf from \"./t-z/Werewolf\";\nimport WhiteWolf from \"./t-z/WhiteWolf\";\nimport WildDog from \"./t-z/WildDog\";\nimport Wolf from \"./t-z/Wolf\";\nimport Woman from \"./t-z/Woman\";\nimport Wyrm from \"./t-z/Wyrm\";\nimport YanilleWatchman from \"./t-z/YanilleWatchman\";\nimport Zogre from \"./t-z/Zogre\";\nimport Zombie from \"./t-z/Zombie\";\nimport ZombiePirate from \"./t-z/ZombiePirate\";\nimport ZombieRat from \"./t-z/ZombieRat\";\nimport Zygomite from \"./t-z/Zygomite\";\n\nexport const allLowMonsters = {\n\tAraxyte,\n\tBloodReaver,\n\tBrutalBlackDragon,\n\tBabyBlackDragon,\n\tBandit,\n\tArmadylianGuard,\n\tBlackKnight,\n\tDarkWarrior,\n\tDeadlyRedSpider,\n\tElderChaosDruid,\n\tEnt,\n\tRevenantCyclops,\n\tRevenantPyrefiend,\n\tRevenantOrk,\n\tRevenantKnight,\n\tRevenantImp,\n\tRevenantHobgoblin,\n\tRevenantHellhound,\n\tRevenantGoblin,\n\tRevenantDragon,\n\tRevenantDemon,\n\tRevenantDarkBeast,\n\tPirate,\n\tMammoth,\n\tMagicAxe,\n\tLavaDragon,\n\tGuardBandit,\n\tDagannothSpawn,\n\tFeralVampyre,\n\tFeverSpider,\n\tGiantSeaSnake,\n\tGreaterNechryael,\n\tGreenDragon,\n\tHarpieBugSwarm,\n\tInfernalMage,\n\tJungleHorror,\n\tKillerwatt,\n\tLesserDemon,\n\tElfArcher,\n\tFleshCrawler,\n\tFiyrShade,\n\tDeviantSpectre,\n\tDagannothPrime,\n\tDaganothFledgeling,\n\tHydra,\n\tIceGiant,\n\tIceTroll,\n\tIceWarrior,\n\tPhrinShade,\n\tOtherworldlybeing,\n\tMutatedBloodveld,\n\tMourner,\n\tMossGiant,\n\tMolanisk,\n\tMogre,\n\tLoarShade,\n\tLizardmanBrute,\n\tJelly,\n\tIorwerthArcher,\n\tIorwerthWarrior,\n\tWerewolf,\n\tWaterfiend,\n\tWarpedJelly,\n\tWallBeast,\n\tVyrewatchSentinel,\n\tVyrewatch,\n\tVampyreJuvinate,\n\tTzHaarKet,\n\tTrollGeneral,\n\tTerrorDog,\n\tShadowWarrior,\n\tShade,\n\tSeaSnakeYoung,\n\tSeaSnakeHatchling,\n\tRockslug,\n\tRiylShade,\n\tPyrefiend,\n\tPyrelord,\n\tPorazdir,\n\tOgre,\n\tOgressShaman,\n\tOgressWarrior,\n\tAncientZygomite,\n\tAsynShade,\n\tBabyBlueDragon,\n\tBabyGreenDragon,\n\tBabyRedDragon,\n\tBronzeDragon,\n\tBrutalBlueDragon,\n\tBrutalGreenDragon,\n\tBrutalRedDragon,\n\tCatablepon,\n\tCockatrice,\n\tCrocodile,\n\tCyclops,\n\tTempleSpider,\n\tTerrorBird,\n\tTorturedGorilla,\n\tTorturedSoul,\n\tTwistedBanshee,\n\tUndeadChicken,\n\tUndeadCow,\n\tUndeadDruid,\n\tUndeadOne,\n\tUriumShade,\n\tWhiteWolf,\n\tWildDog,\n\tZogre,\n\tZombieRat,\n\tPenguin,\n\tPitScorpion,\n\tPoisonScorpion,\n\tRooster,\n\tSeagull,\n\tShadowSpider,\n\tSkeletonFremennik,\n\tSkeletonMage,\n\tSkogre,\n\tSmallLizard,\n\tSulphurLizard,\n\tGiantBat,\n\tGiantCryptSpider,\n\tGiantRat,\n\tGiantSpider,\n\tGrizzlyBear,\n\tGrizzlyBearCub,\n\tIceWolf,\n\tJackal,\n\tJungleWolf,\n\tKalphiteGuardian,\n\tKalphiteSoldier,\n\tKingScorpion,\n\tLobstrosity,\n\tMonkeyArcher,\n\tMonkeyGuard,\n\tMonkeyZombie,\n\tMountedTerrorBirdGnome,\n\tBearCub,\n\tBigWolf,\n\tBird,\n\tBlackGuard,\n\tCaveGoblinGuard,\n\tChaosDwarf,\n\tChicken,\n\tChompyBird,\n\tCowCalf,\n\tCryptRat,\n\tDeathWing,\n\tDesertLizard,\n\tDesertWolf,\n\tDuck,\n\tDuckling,\n\tDungeonRat,\n\tDwarfGangMember,\n\tAberrantSpectre,\n\tDagannoth,\n\tGuard,\n\tRedDragon,\n\tAbyssalDemon,\n\tDarkBeast,\n\tHellhound,\n\tRuneDragon,\n\tAdamantDragon,\n\tDemonicGorilla,\n\tScarabMage,\n\tAnkou,\n\tDrake,\n\tIronDragon,\n\tSkeletalWyvern,\n\tAviansie,\n\tDustDevil,\n\tKalphiteWorker,\n\tSmokeDevil,\n\tBasiliskKnight,\n\tElfWarrior,\n\tKurask,\n\tSpiritualMage,\n\tBasilisk,\n\tFireGiant,\n\tLizardmanShaman,\n\tSpiritualRanger,\n\tBlackDemon,\n\tFossilIslandWyvernAncient,\n\tLizardman,\n\tSpiritualWarrior,\n\tBlackDragon,\n\tFossilIslandWyvernLongTailed,\n\tLocustRider,\n\tSteelDragon,\n\tBloodveld,\n\tFossilIslandWyvernSpitting,\n\tMan,\n\tSuqah,\n\tBlueDragon,\n\tFossilIslandWyvernTaloned,\n\tMithrilDragon,\n\tTuroth,\n\tBrineRat,\n\tGargoyle,\n\tMountainTroll,\n\tWoman,\n\tCaveHorror,\n\tGoblin,\n\tZygomite,\n\tWyrm,\n\tCaveKraken,\n\tGreaterDemon,\n\tNechryael,\n\tBanshee,\n\tCaveBug,\n\tCow,\n\tDwarf,\n\tLizard,\n\tRat,\n\tSpider,\n\tBat,\n\tCaveCrawler,\n\tCrawlingHand,\n\tGhost,\n\tMinotaur,\n\tScorpion,\n\tWolf,\n\tBlackBear,\n\tCaveSlime,\n\tGuardDog,\n\tIcefiend,\n\tMonkey,\n\tSkeleton,\n\tZombie,\n\tHillGiant,\n\tBeardedBandit,\n\tCaveGoblin,\n\tDesertBandit,\n\tElf,\n\tFarmer,\n\tFremennikCitizen,\n\tGnome,\n\tGoat,\n\tMaleHamMember,\n\tFemaleHamMember,\n\tHero,\n\tKnightOfArdougne,\n\tMasterFarmer,\n\tPaladin,\n\tYanilleWatchman,\n\tVyre,\n\tTzHaarHur,\n\tRogue,\n\tPrifddinasElf,\n\tPollnivnianBandit,\n\tWarriorWoman,\n\tAlKharidWarrior,\n\tGhoul,\n\tEarthWarrior,\n\tImp,\n\tJogre,\n\tHobgoblin,\n\tChaosDruid,\n\tUnicorn,\n\tMenaphiteThug,\n\tPriffRabbit,\n\tTzHaarXil,\n\tTzHaarMej,\n\tGiantFrog,\n\tJubblyBird,\n\tManiacalMonkey,\n\tZombiePirate,\n\tTormentedDemon,\n\tArmouredZombie,\n\tCrab,\n};\n", "import LootTable from \"../../../structures/LootTable\";\nimport SimpleMonster from \"../../../structures/SimpleMonster\";\n\nconst FlawedGolem = new SimpleMonster({\n\tid: 10_695,\n\tname: \"Flawed Golem\",\n\ttable: new LootTable()\n\t\t.add(\"Rune essence\", [1, 3], 12)\n\t\t.add(\"Rune essence\", [2, 4], 9)\n\t\t.add(\"Clay\", 1, 8)\n\t\t.add(\"Tin ore\", [1, 2], 6)\n\t\t.add(\"Copper ore\", [1, 2], 6)\n\t\t.add(\"Clay\", 2, 5)\n\t\t.add(\"Clay\", 3, 3)\n\t\t.add(\"Uncut sapphire\", 1, 2)\n\t\t.add(\"Uncut emerald\", 1, 1)\n\t\t.tertiary(16, \"Barronite shards\", [6, 12])\n\t\t.tertiary(200, \"Clue scroll (beginner)\")\n\t\t.tertiary(800, \"Barronite guard\"),\n\taliases: [\"flawed golem\"],\n});\n\nconst MindGolem = new SimpleMonster({\n\tid: 10_693,\n\tname: \"Mind Golem\",\n\ttable: new LootTable()\n\t\t.add(\"Mind rune\", [5, 10], 8)\n\t\t.add(\"Clay\", [2, 3], 6)\n\t\t.add(\"Copper ore\", [2, 3], 6)\n\t\t.add(\"Tin ore\", [2, 3], 6)\n\t\t.add(\"Iron ore\", [1, 2], 6)\n\t\t.add(\"Rune essence\", [3, 5], 6)\n\t\t.add(\"Mind rune\", 1, 6)\n\t\t.add(\"Uncut sapphire\", 1, 4)\n\t\t.add(\"Uncut emerald\", 1, 2)\n\t\t.add(\"Rune essence\", 1, 1)\n\t\t.add(\"Uncut ruby\", 1, 1)\n\t\t.tertiary(7.5, \"Barronite shards\", [8, 16])\n\t\t.tertiary(7.5, \"Mind core\")\n\t\t.tertiary(100, \"Clue scroll (beginner)\")\n\t\t.tertiary(500, \"Barronite guard\"),\n\taliases: [\"mind golem\"],\n});\n\nconst BodyGolem = new SimpleMonster({\n\tid: 10_691,\n\tname: \"Body Golem\",\n\ttable: new LootTable()\n\t\t.add(\"Body rune\", [5, 10], 8)\n\t\t.add(\"Clay\", [3, 4], 6)\n\t\t.add(\"Copper ore\", [3, 4], 6)\n\t\t.add(\"Tin ore\", [3, 4], 6)\n\t\t.add(\"Iron ore\", [3, 4], 6)\n\t\t.add(\"Rune essence\", [4, 6], 6)\n\t\t.add(\"Body rune\", 1, 6)\n\t\t.add(\"Uncut sapphire\", 1, 4)\n\t\t.add(\"Uncut emerald\", 1, 2)\n\t\t.add(\"Rune essence\", 1, 1)\n\t\t.add(\"Uncut ruby\", 1, 1)\n\t\t.tertiary(5, \"Barronite shards\", [10, 20])\n\t\t.tertiary(7.5, \"Body core\")\n\t\t.tertiary(62, \"Clue scroll (beginner)\")\n\t\t.tertiary(250, \"Barronite guard\"),\n\taliases: [\"body golem\"],\n});\n\nconst ChaosGolem = new SimpleMonster({\n\tid: 10_689,\n\tname: \"Chaos Golem\",\n\ttable: new LootTable()\n\t\t.add(\"Chaos rune\", [5, 10], 8)\n\t\t.add(\"Clay\", [3, 4], 6)\n\t\t.add(\"Tin ore\", [3, 4], 6)\n\t\t.add(\"Iron ore\", [3, 4], 6)\n\t\t.add(\"Gold ore\", [2, 3], 6)\n\t\t.add(\"Rune essence\", [4, 6], 6)\n\t\t.add(\"Uncut sapphire\", 1, 6)\n\t\t.add(\"Uncut emerald\", 1, 4)\n\t\t.add(\"Uncut ruby\", 1, 2)\n\t\t.add(\"Uncut diamond\", 1, 1)\n\t\t.add(\"Chaos talisman\", 1, 1)\n\t\t.tertiary(3.5, \"Barronite shards\", [12, 24])\n\t\t.tertiary(7.5, \"Chaos core\")\n\t\t.tertiary(100, \"Clue scroll (beginner)\")\n\t\t.tertiary(150, \"Barronite guard\"),\n\taliases: [\"chaos golem\"],\n});\n\nexport const CamdozaalGolems = { FlawedGolem, MindGolem, BodyGolem, ChaosGolem };\n", "import LootTable from \"../../../structures/LootTable\";\nimport SimpleMonster from \"../../../structures/SimpleMonster\";\n\nconst ReanimatedGoblin = new SimpleMonster({\n\tid: 7018,\n\tname: \"Reanimated Goblin\",\n\ttable: new LootTable(),\n\taliases: [\"reanimated goblin\"],\n});\n\nconst ReanimatedMonkey = new SimpleMonster({\n\tid: 7019,\n\tname: \"Reanimated Monkey\",\n\ttable: new LootTable(),\n\taliases: [\"reanimated monkey\"],\n});\n\nconst ReanimatedImp = new SimpleMonster({\n\tid: 7020,\n\tname: \"Reanimated Imp\",\n\ttable: new LootTable(),\n\taliases: [\"reanimated imp\"],\n});\n\nconst ReanimatedMinotaur = new SimpleMonster({\n\tid: 7021,\n\tname: \"Reanimated Minotaur\",\n\ttable: new LootTable(),\n\taliases: [\"reanimated minotaur\"],\n});\n\nconst ReanimatedScorpion = new SimpleMonster({\n\tid: 7022,\n\tname: \"Reanimated Scorpion\",\n\ttable: new LootTable(),\n\taliases: [\"reanimated scorpion\"],\n});\n\nconst ReanimatedBear = new SimpleMonster({\n\tid: 7023,\n\tname: \"Reanimated Bear\",\n\ttable: new LootTable(),\n\taliases: [\"reanimated bear\"],\n});\n\nconst ReanimatedUnicorn = new SimpleMonster({\n\tid: 7024,\n\tname: \"Reanimated Unicorn\",\n\ttable: new LootTable(),\n\taliases: [\"reanimated unicorn\"],\n});\n\nconst ReanimatedDog = new SimpleMonster({\n\tid: 7025,\n\tname: \"Reanimated Dog\",\n\ttable: new LootTable(),\n\taliases: [\"reanimated dog\"],\n});\n\nconst ReanimatedChaosDruid = new SimpleMonster({\n\tid: 7026,\n\tname: \"Reanimated Chaos Druid\",\n\ttable: new LootTable(),\n\taliases: [\"reanimated chaos druid\"],\n});\n\nconst ReanimatedGiant = new SimpleMonster({\n\tid: 7027,\n\tname: \"Reanimated Giant\",\n\ttable: new LootTable(),\n\taliases: [\"reanimated giant\"],\n});\n\nconst ReanimatedOgre = new SimpleMonster({\n\tid: 7028,\n\tname: \"Reanimated Ogre\",\n\ttable: new LootTable(),\n\taliases: [\"reanimated ogre\"],\n});\n\nconst ReanimatedElf = new SimpleMonster({\n\tid: 7029,\n\tname: \"Reanimated Elf\",\n\ttable: new LootTable(),\n\taliases: [\"reanimated elf\"],\n});\n\nconst ReanimatedTroll = new SimpleMonster({\n\tid: 7030,\n\tname: \"Reanimated Troll\",\n\ttable: new LootTable(),\n\taliases: [\"reanimated troll\"],\n});\n\nconst ReanimatedHorror = new SimpleMonster({\n\tid: 7031,\n\tname: \"Reanimated Horror\",\n\ttable: new LootTable(),\n\taliases: [\"reanimated horror\"],\n});\n\nconst ReanimatedKalphite = new SimpleMonster({\n\tid: 7032,\n\tname: \"Reanimated Kalphite\",\n\ttable: new LootTable(),\n\taliases: [\"reanimated kalphite\"],\n});\n\nconst ReanimatedDagannoth = new SimpleMonster({\n\tid: 7033,\n\tname: \"Reanimated Dagannoth\",\n\ttable: new LootTable(),\n\taliases: [\"reanimated dagannoth\"],\n});\n\nconst ReanimatedBloodveld = new SimpleMonster({\n\tid: 7034,\n\tname: \"Reanimated Bloodveld\",\n\ttable: new LootTable(),\n\taliases: [\"reanimated bloodveld\"],\n});\n\nconst ReanimatedTzhaar = new SimpleMonster({\n\tid: 7035,\n\tname: \"Reanimated Tzhaar\",\n\ttable: new LootTable(),\n\taliases: [\"reanimated tzhaar\"],\n});\n\nconst ReanimatedDemon = new SimpleMonster({\n\tid: 7036,\n\tname: \"Reanimated Demon\",\n\ttable: new LootTable(),\n\taliases: [\"reanimated demon\"],\n});\n\nconst ReanimatedHellhound = new SimpleMonster({\n\tid: 11_463,\n\tname: \"Reanimated Hellhound\",\n\ttable: new LootTable(),\n\taliases: [\"reanimated hellhound\"],\n});\n\nconst ReanimatedAviansie = new SimpleMonster({\n\tid: 7037,\n\tname: \"Reanimated Aviansie\",\n\ttable: new LootTable(),\n\taliases: [\"reanimated aviansie\"],\n});\n\nconst ReanimatedAbyssal = new SimpleMonster({\n\tid: 7038,\n\tname: \"Reanimated Abyssal\",\n\ttable: new LootTable(),\n\taliases: [\"reanimated abyssal\"],\n});\n\nconst ReanimatedDragon = new SimpleMonster({\n\tid: 7039,\n\tname: \"Reanimated Dragon\",\n\ttable: new LootTable(),\n\taliases: [\"reanimated dragon\"],\n});\n\nexport const ReanimatedMonsters = {\n\tReanimatedGoblin,\n\tReanimatedMonkey,\n\tReanimatedImp,\n\tReanimatedMinotaur,\n\tReanimatedScorpion,\n\tReanimatedBear,\n\tReanimatedUnicorn,\n\tReanimatedDog,\n\tReanimatedChaosDruid,\n\tReanimatedGiant,\n\tReanimatedOgre,\n\tReanimatedElf,\n\tReanimatedTroll,\n\tReanimatedHorror,\n\tReanimatedKalphite,\n\tReanimatedDagannoth,\n\tReanimatedBloodveld,\n\tReanimatedTzhaar,\n\tReanimatedDemon,\n\tReanimatedHellhound,\n\tReanimatedAviansie,\n\tReanimatedAbyssal,\n\tReanimatedDragon,\n};\n", "import { roll } from \"e\";\n\nimport Bank from \"../../../structures/Bank\";\nimport LootTable from \"../../../structures/LootTable\";\nimport Monster from \"../../../structures/Monster\";\n\nconst BarrowsTable = new LootTable();\n\n[\n\t\"Ahrim's hood\",\n\t\"Ahrim's robetop\",\n\t\"Ahrim's robeskirt\",\n\t\"Ahrim's staff\",\n\n\t\"Dharok's helm\",\n\t\"Dharok's platebody\",\n\t\"Dharok's platelegs\",\n\t\"Dharok's greataxe\",\n\n\t\"Guthan's helm\",\n\t\"Guthan's platebody\",\n\t\"Guthan's chainskirt\",\n\t\"Guthan's warspear\",\n\n\t\"Karil's coif\",\n\t\"Karil's leathertop\",\n\t\"Karil's leatherskirt\",\n\t\"Karil's crossbow\",\n\n\t\"Torag's helm\",\n\t\"Torag's platebody\",\n\t\"Torag's platelegs\",\n\t\"Torag's hammers\",\n\n\t\"Verac's helm\",\n\t\"Verac's brassard\",\n\t\"Verac's plateskirt\",\n\t\"Verac's flail\",\n].map(item => BarrowsTable.add(item));\n\nconst OtherTable = new LootTable()\n\t.add(\"Coins\", [2, 760], 380)\n\t.add(\"Mind rune\", [381, 504], 125)\n\t.add(\"Chaos rune\", [168, 210], 125)\n\t.add(\"Death rune\", [105, 124], 125)\n\t.add(\"Bolt rack\", [35, 40], 125)\n\t.add(\"Blood rune\", [55, 66], 125)\n\t.add(new LootTable().add(\"Loop half of key\").add(\"Tooth half of key\"), 1, 6)\n\t.add(\"Dragon med helm\");\n\nconst ClueTable = new LootTable().tertiary(34, \"Clue scroll (elite)\");\n\nconst NUMBER_OF_BROTHERS = 6;\n\nexport class Barrows extends Monster {\n\tpublic kill(quantity = 1): Bank {\n\t\tconst loot = new Bank();\n\n\t\tfor (let i = 0; i < quantity; i++) {\n\t\t\tClueTable.roll(1, { targetBank: loot });\n\n\t\t\t// We use a set to track items received, you cannot get\n\t\t\t// the same item twice per chest.\n\t\t\tconst barrowsItemsThisKill = new Set();\n\t\t\t// You get 1 initial roll, then +6 for 6 brothers killed.\n\t\t\tfor (let x = 0; x < NUMBER_OF_BROTHERS + 1; x++) {\n\t\t\t\t// 1 in (450 - (58 * Number of Brothers Killed))\n\t\t\t\tif (roll(450 - 58 * NUMBER_OF_BROTHERS)) {\n\t\t\t\t\tlet [barrowsItem] = BarrowsTable.roll().items()[0];\n\t\t\t\t\twhile (barrowsItemsThisKill.has(barrowsItem.id)) {\n\t\t\t\t\t\t[[barrowsItem]] = BarrowsTable.roll().items();\n\t\t\t\t\t}\n\t\t\t\t\tbarrowsItemsThisKill.add(barrowsItem.id);\n\t\t\t\t\tloot.add(barrowsItem.id);\n\t\t\t\t} else {\n\t\t\t\t\tOtherTable.roll(1, { targetBank: loot });\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn loot;\n\t}\n}\n\n// Uses NPC id for Dharoks\nexport default new Barrows({\n\tid: 1673,\n\tname: \"Barrows\",\n\taliases: [\"barrows\"],\n\tallItems: [...BarrowsTable.allItems, ...OtherTable.allItems],\n});\n", "import { roll } from \"e\";\n\nimport type { MonsterKillOptions } from \"../../../meta/types\";\nimport Bank from \"../../../structures/Bank\";\nimport LootTable from \"../../../structures/LootTable\";\nimport SimpleMonster from \"../../../structures/Monster\";\n\nconst HesporiTable = new LootTable()\n\t.add(\"Attas seed\", [1, 2], 1)\n\t.add(\"Iasor seed\", [1, 2], 1)\n\t.add(\"Kronos seed\", [1, 2], 1);\n\nconst MainTable = new LootTable()\n\t.every(HesporiTable)\n\n\t// Pre-roll for bucket\n\t.oneIn(35, \"Bottomless compost bucket\")\n\n\t// Allotment seeds\n\t.add(\"Watermelon seed\", [10, 20], 2)\n\t.add(\"Snape grass seed\", [6, 16], 2)\n\n\t// Flower seeds\n\t.add(\"White lily seed\", [8, 18], 5)\n\t.add(\"Limpwurt seed\", [6, 14], 2)\n\n\t// Hop seeds\n\t.add(\"Wildblood seed\", [10, 20], 2)\n\n\t// Bush seeds\n\t.add(\"Whiteberry seed\", [10, 16], 2)\n\t.add(\"Poison ivy seed\", [8, 16], 2)\n\n\t// Herb seeds\n\t.add(\"Irit seed\", [2, 8], 3)\n\t.add(\"Avantoe seed\", [2, 5], 3)\n\t.add(\"Kwuarm seed\", [2, 5], 3)\n\t.add(\"Toadflax seed\", [2, 5], 3)\n\t.add(\"Cadantine seed\", [2, 5], 3)\n\t.add(\"Lantadyme seed\", [2, 5], 3)\n\t.add(\"Dwarf weed seed\", [2, 5], 3)\n\t.add(\"Ranarr seed\", [1, 2], 2)\n\t.add(\"Snapdragon seed\", 1, 2)\n\t.add(\"Torstol seed\", 1, 2)\n\n\t// Tree seeds\n\t.add(\"Maple seed\", [2, 4], 4)\n\t.add(\"Willow seed\", [2, 5], 3)\n\t.add(\"Yew seed\", 1, 2)\n\t.add(\"Magic seed\", 1, 1)\n\n\t// Fruit tree seeds\n\t.add(\"Pineapple seed\", [3, 6], 3)\n\t.add(\"Papaya tree seed\", [1, 3], 3)\n\t.add(\"Palm tree seed\", [1, 3], 3)\n\t.add(\"Dragonfruit tree seed\", 1, 2)\n\n\t// Special seeds\n\t.add(\"Teak seed\", [2, 5], 4)\n\t.add(\"Mahogany seed\", [1, 3], 3)\n\t.add(\"Cactus seed\", [4, 14], 2)\n\t.add(\"Potato cactus seed\", [4, 14], 2)\n\t.add(\"Celastrus seed\", 1, 2)\n\t.add(\"Spirit seed\", 1, 1)\n\t.add(\"Redwood tree seed\", 1, 1);\n\nexport class Hespori extends SimpleMonster {\n\tpublic kill(quantity = 1, options: MonsterKillOptions = { farmingLevel: 99 }): Bank {\n\t\tconst loot = new Bank();\n\t\tconst farmingLvl = options.farmingLevel ?? 99;\n\n\t\tfor (let i = 0; i < quantity; i++) {\n\t\t\tloot.add(MainTable.roll());\n\t\t\tif (roll(7000 - farmingLvl * 25)) loot.add(\"Tangleroot\");\n\t\t}\n\t\treturn loot;\n\t}\n}\n\nexport default new Hespori({ id: 8583, name: \"Hespori\", aliases: [\"hespori\"] });\n", "import { roll } from \"e\";\n\nimport type { MonsterKillOptions } from \"../../../meta/types\";\nimport Bank from \"../../../structures/Bank\";\nimport Monster from \"../../../structures/Monster\";\n\nexport class TzKalZukClass extends Monster {\n\tpublic kill(quantity = 1, options: MonsterKillOptions = {}): Bank {\n\t\tconst loot = new Bank();\n\n\t\tfor (let i = 0; i < quantity; i++) {\n\t\t\tloot.add(\"Tokkul\", 16_440);\n\t\t\tloot.add(\"Infernal cape\");\n\t\t\tif (roll(options.onSlayerTask ? 75 : 100)) {\n\t\t\t\tloot.add(\"Jal-nib-rek\");\n\t\t\t}\n\t\t}\n\n\t\treturn loot;\n\t}\n}\n\nexport const TzKalZuk = new TzKalZukClass({\n\tid: 7706,\n\tname: \"TzKal-Zuk\",\n\taliases: [\"tzkal-zuk\", \"zuk\", \"inferno\"],\n});\n", "import { roll } from \"e\";\n\nimport type { MonsterKillOptions } from \"../../../meta/types\";\nimport Bank from \"../../../structures/Bank\";\nimport Monster from \"../../../structures/Monster\";\n\nexport class TzTokJadClass extends Monster {\n\tpublic kill(quantity = 1, options: MonsterKillOptions = {}): Bank {\n\t\tconst loot = new Bank();\n\n\t\tfor (let i = 0; i < quantity; i++) {\n\t\t\tloot.add(\"Tokkul\", 8032);\n\t\t\tloot.add(\"Fire cape\");\n\t\t\tif (roll(options.onSlayerTask ? 100 : 200)) {\n\t\t\t\tloot.add(\"Tzrek-jad\");\n\t\t\t}\n\t\t}\n\n\t\treturn loot;\n\t}\n}\n\nconst TzTokJad = new TzTokJadClass({\n\tid: 3127,\n\tname: \"TzTok-Jad\",\n\taliases: [\"tztok-jad\", \"jad\", \"tztok jad\"],\n});\n\nexport default TzTokJad;\n", "import Barrows from \"./Barrows\";\nimport Hespori from \"./Hespori\";\nimport { TzKalZuk } from \"./TzKalZuk\";\nimport TzTokJad from \"./TzTokJad\";\n\nexport const specialBosses = { Barrows, TzTokJad, Hespori, TzKalZuk };\n", "import LootTable from \"../../../structures/LootTable\";\nimport SimpleMonster from \"../../../structures/SimpleMonster\";\nimport { AberrantSpectrePreTable } from \"../low/a-f/AberrantSpectre\";\n\nconst AbhorrentSpectreTable = new LootTable()\n\t.every(AberrantSpectrePreTable, 3)\n\t.tertiary(13, \"Clue scroll (hard)\")\n\n\t/* Superior Slayer tertiary */\n\t.tertiary(215, \"Mist battlestaff\")\n\t.tertiary(215, \"Dust battlestaff\")\n\t.tertiary(754, \"Eternal gem\")\n\t.tertiary(754, \"Imbued heart\");\n\nexport default new SimpleMonster({\n\tid: 7402,\n\tname: \"Abhorrent spectre\",\n\ttable: AbhorrentSpectreTable,\n\taliases: [\"abhorrent spectre\"],\n});\n", "import LootTable from \"../../../structures/LootTable\";\nimport SimpleMonster from \"../../../structures/SimpleMonster\";\nimport { BasiliskKnightPreTable } from \"../low/a-f/BasiliskKnight\";\n\nconst BasiliskSentinelTable = new LootTable()\n\t.every(\"Big bones\")\n\t.every(BasiliskKnightPreTable, 3)\n\t.tertiary(19, \"Clue scroll (hard)\")\n\t.tertiary(256, \"Mystic hat (light)\")\n\t.tertiary(400, \"Long bone\")\n\t.tertiary(1000, \"Basilisk head\")\n\t.tertiary(1000, \"Basilisk jaw\")\n\t.tertiary(5013, \"Curved bone\")\n\n\t/* Superior Slayer tertiary */\n\t.tertiary(215, \"Mist battlestaff\")\n\t.tertiary(215, \"Dust battlestaff\")\n\t.tertiary(754, \"Eternal gem\")\n\t.tertiary(754, \"Imbued heart\");\n\nexport default new SimpleMonster({\n\tid: 9258,\n\tname: \"Basilisk Sentinel\",\n\ttable: BasiliskSentinelTable,\n\taliases: [\"basilisk sentinel\"],\n});\n", "import LootTable from \"../../../structures/LootTable\";\nimport SimpleMonster from \"../../../structures/SimpleMonster\";\nimport { CaveHorrorPreTable } from \"../low/a-f/CaveHorror\";\n\nconst CaveAbominationTable = new LootTable()\n\t.every(\"Big bones\")\n\t.every(\"Ensouled horror head\")\n\t.every(CaveHorrorPreTable, 3)\n\t.tertiary(13, \"Clue scroll (hard)\")\n\t.tertiary(400, \"Long bone\")\n\t.tertiary(5013, \"Curved bone\")\n\n\t/* Superior Slayer tertiary */\n\t.tertiary(224, \"Mist battlestaff\")\n\t.tertiary(223, \"Dust battlestaff\")\n\t.tertiary(783, \"Eternal gem\")\n\t.tertiary(783, \"Imbued heart\");\n\nexport default new SimpleMonster({\n\tid: 7401,\n\tname: \"Cave abomination\",\n\ttable: CaveAbominationTable,\n\taliases: [\"cave abomination\"],\n});\n", "import LootTable from \"../../../structures/LootTable\";\nimport SimpleMonster from \"../../../structures/SimpleMonster\";\nimport { CaveCrawlerTable } from \"../low/a-f/CaveCrawler\";\n\nconst ChasmCrawlerTable = new LootTable()\n\t.every(CaveCrawlerTable, 3)\n\n\t/* Superior Slayer tertiary */\n\t.tertiary(380, \"Mist battlestaff\")\n\t.tertiary(380, \"Dust battlestaff\")\n\t.tertiary(1330, \"Eternal gem\")\n\t.tertiary(1330, \"Imbued heart\");\n\nexport default new SimpleMonster({\n\tid: 7389,\n\tname: \"Chasm Crawler\",\n\ttable: ChasmCrawlerTable,\n\taliases: [\"chasm crawler\"],\n});\n", "import LootTable from \"../../../structures/LootTable\";\nimport SimpleMonster from \"../../../structures/SimpleMonster\";\nimport { DustDevilPreTable } from \"../low/a-f/DustDevil\";\n\nconst ChokeDevilTable = new LootTable()\n\t.every(\"Bones\")\n\t.every(DustDevilPreTable, 3)\n\n\t/* Superior Slayer tertiary */\n\t.tertiary(194, \"Mist battlestaff\")\n\t.tertiary(194, \"Dust battlestaff\")\n\t.tertiary(678, \"Eternal gem\")\n\t.tertiary(679, \"Imbued heart\");\n\nexport default new SimpleMonster({\n\tid: 7404,\n\tname: \"Choke devil\",\n\ttable: ChokeDevilTable,\n\taliases: [\"choke devil\"],\n});\n", "import LootTable from \"../../../structures/LootTable\";\nimport SimpleMonster from \"../../../structures/SimpleMonster\";\nimport { CockatricePreTable } from \"../low/a-f/Cockatrice\";\n\nconst CockathriceTable = new LootTable()\n\t.every(\"Bones\")\n\t.every(CockatricePreTable, 3)\n\n\t/* Tertiary */\n\t.tertiary(13, \"Clue scroll (medium)\")\n\t.tertiary(1000, \"Cockatrice head\")\n\n\t/* Superior Slayer tertiary */\n\t.tertiary(340, \"Mist battlestaff\")\n\t.tertiary(340, \"Dust battlestaff\")\n\t.tertiary(1190, \"Eternal gem\")\n\t.tertiary(1190, \"Imbued heart\");\n\nexport default new SimpleMonster({\n\tid: 7393,\n\tname: \"Cockathrice\",\n\ttable: CockathriceTable,\n\taliases: [\"cockathrice\"],\n});\n", "import LootTable from \"../../../structures/LootTable\";\nimport SimpleMonster from \"../../../structures/SimpleMonster\";\nimport { HydraPreTable } from \"../low/g-m/Hydra\";\n\nconst ColossalHydraTable = new LootTable()\n\t.every(\"Hydra bones\")\n\t.every(HydraPreTable, 3)\n\t.tertiary(13, \"Clue scroll (hard)\")\n\t.tertiary(51, \"Clue scroll (elite)\")\n\n\t/* Superior Slayer tertiary */\n\t.tertiary(46, \"Mist battlestaff\")\n\t.tertiary(46, \"Dust battlestaff\")\n\t.tertiary(160, \"Eternal gem\")\n\t.tertiary(160, \"Imbued heart\");\n\nexport default new SimpleMonster({\n\tid: 10_402,\n\tname: \"Colossal Hydra\",\n\ttable: ColossalHydraTable,\n\taliases: [\"colossal hydra\"],\n});\n", "import LootTable from \"../../../structures/LootTable\";\nimport SimpleMonster from \"../../../structures/SimpleMonster\";\nimport { CrawlingHandPreTable } from \"../low/a-f/CrawlingHand\";\n\nconst CrushingHandTable = new LootTable()\n\t.every(\"Bones\")\n\t.tertiary(500, \"Crawling hand\", 1)\n\t.every(CrawlingHandPreTable, 3)\n\n\t/* Superior Slayer tertiary */\n\t.tertiary(391, \"Mist battlestaff\")\n\t.tertiary(391, \"Dust battlestaff\")\n\t.tertiary(1370, \"Eternal gem\")\n\t.tertiary(1370, \"Imbued heart\");\n\nexport default new SimpleMonster({\n\tid: 7388,\n\tname: \"Crushing hand\",\n\ttable: CrushingHandTable,\n\taliases: [\"crushing hand\"],\n});\n", "import LootTable from \"../../../structures/LootTable\";\nimport SimpleMonster from \"../../../structures/SimpleMonster\";\nimport { PyrefiendPreTable } from \"../low/n-s/Pyrefiend\";\n\nconst FlamingPyrelordTable = new LootTable()\n\t.every(\"Fiendish ashes\")\n\t.every(PyrefiendPreTable, 3)\n\n\t/* Tertiary */\n\t.tertiary(13, \"Clue scroll (medium)\")\n\n\t/* Superior Slayer tertiary */\n\t.tertiary(325, \"Mist battlestaff\")\n\t.tertiary(325, \"Dust battlestaff\")\n\t.tertiary(1138, \"Eternal gem\")\n\t.tertiary(1138, \"Imbued heart\");\n\nexport default new SimpleMonster({\n\tid: 7394,\n\tname: \"Flaming pyrelord\",\n\ttable: FlamingPyrelordTable,\n\taliases: [\"flaming pyrelord\"],\n});\n", "import LootTable from \"../../../structures/LootTable\";\nimport SimpleMonster from \"../../../structures/SimpleMonster\";\nimport { RockslugTable } from \"../low/n-s/Rockslug\";\n\nconst GiantRockslugTable = new LootTable()\n\t.every(RockslugTable, 3)\n\n\t/* Superior Slayer tertiary */\n\t.tertiary(354, \"Mist battlestaff\")\n\t.tertiary(354, \"Dust battlestaff\")\n\t.tertiary(1240, \"Eternal gem\")\n\t.tertiary(1240, \"Imbued heart\");\n\nexport default new SimpleMonster({\n\tid: 7392,\n\tname: \"Giant rockslug\",\n\ttable: GiantRockslugTable,\n\taliases: [\"giant rockslug\"],\n});\n", "import LootTable from \"../../../structures/LootTable\";\nimport SimpleMonster from \"../../../structures/SimpleMonster\";\nimport { AbyssalDemonPreTable } from \"../low/a-f/AbyssalDemon\";\n\nconst GreaterAbyssalDemonTable = new LootTable()\n\t.every(\"Abyssal ashes\")\n\t.every(\"Ensouled abyssal head\")\n\t.every(AbyssalDemonPreTable, 3)\n\t.tertiary(13, \"Clue scroll (hard)\")\n\t.tertiary(120, \"Clue scroll (elite)\")\n\t.tertiary(6000, \"Abyssal head\")\n\n\t/* Superior Slayer tertiary */\n\t.tertiary(99, \"Mist battlestaff\")\n\t.tertiary(99, \"Dust battlestaff\")\n\t.tertiary(346, \"Eternal gem\")\n\t.tertiary(345, \"Imbued heart\");\n\nexport default new SimpleMonster({\n\tid: 7410,\n\tname: \"Greater abyssal demon\",\n\ttable: GreaterAbyssalDemonTable,\n\taliases: [\"greater abyssal demon\"],\n});\n", "import LootTable from \"../../../structures/LootTable\";\nimport SimpleMonster from \"../../../structures/SimpleMonster\";\nimport { DrakePreTable } from \"../low/a-f/Drake\";\n\nconst GuardianDrakeTable = new LootTable()\n\t.every(\"Drake bones\")\n\t.every(DrakePreTable, 3)\n\t.tertiary(13, \"Clue scroll (hard)\")\n\n\t/* Superior Slayer tertiary */\n\t.tertiary(104, \"Mist battlestaff\")\n\t.tertiary(104, \"Dust battlestaff\")\n\t.tertiary(364, \"Eternal gem\")\n\t.tertiary(363, \"Imbued heart\");\n\nexport default new SimpleMonster({\n\tid: 10_400,\n\tname: \"Guardian Drake\",\n\ttable: GuardianDrakeTable,\n\taliases: [\"guardian drake\"],\n});\n", "import LootTable from \"../../../structures/LootTable\";\nimport SimpleMonster from \"../../../structures/SimpleMonster\";\nimport { BloodveldPreTable } from \"../low/a-f/Bloodveld\";\n\nconst InsatiableBloodveldTable = new LootTable()\n\t.every(\"Vile ashes\")\n\t.every(\"Ensouled bloodveld head\")\n\t.every(BloodveldPreTable, 3)\n\t.tertiary(26, \"Clue scroll (hard)\")\n\n\t/* Superior Slayer tertiary */\n\t.tertiary(256, \"Mist battlestaff\")\n\t.tertiary(255, \"Dust battlestaff\")\n\t.tertiary(894, \"Eternal gem\")\n\t.tertiary(895, \"Imbued heart\");\n\nexport default new SimpleMonster({\n\tid: 7397,\n\tname: \"Insatiable Bloodveld\",\n\ttable: InsatiableBloodveldTable,\n\taliases: [\"insatiable bloodveld\"],\n});\n", "import LootTable from \"../../../structures/LootTable\";\nimport SimpleMonster from \"../../../structures/SimpleMonster\";\nimport { MutatedBloodveldPreTable } from \"../low/g-m/MutatedBloodveld\";\n\nconst InsatiableMutatedBloodveldTable = new LootTable()\n\t.every(\"Vile ashes\")\n\t.every(\"Ensouled bloodveld head\")\n\t.every(MutatedBloodveldPreTable, 3)\n\t.tertiary(13, \"Clue scroll (hard)\")\n\n\t/* Superior Slayer tertiary */\n\t.tertiary(255, \"Mist battlestaff\")\n\t.tertiary(256, \"Dust battlestaff\")\n\t.tertiary(895, \"Eternal gem\")\n\t.tertiary(894, \"Imbued heart\");\n\nexport default new SimpleMonster({\n\tid: 7398,\n\tname: \"Insatiable mutated Bloodveld\",\n\ttable: InsatiableMutatedBloodveldTable,\n\taliases: [\"insatiable mutated bloodveld\"],\n});\n", "import LootTable from \"../../../structures/LootTable\";\nimport SimpleMonster from \"../../../structures/SimpleMonster\";\nimport { KuraskPreTable } from \"../low/g-m/Kurask\";\n\nconst KingKuraskTable = new LootTable()\n\t.every(\"Bones\")\n\t.every(KuraskPreTable, 3)\n\t.tertiary(13, \"Clue scroll (hard)\")\n\t.tertiary(3000, \"Kurask head\")\n\n\t/* Superior Slayer tertiary */\n\t.tertiary(171, \"Mist battlestaff\")\n\t.tertiary(172, \"Dust battlestaff\")\n\t.tertiary(600, \"Eternal gem\")\n\t.tertiary(600, \"Imbued heart\");\n\nexport default new SimpleMonster({\n\tid: 7405,\n\tname: \"King kurask\",\n\ttable: KingKuraskTable,\n\taliases: [\"king kurask\"],\n});\n", "import LootTable from \"../../../structures/LootTable\";\nimport SimpleMonster from \"../../../structures/SimpleMonster\";\nimport { InfernalMagePreTable } from \"../low/g-m/InfernalMage\";\n\nconst MalevolentMageTable = new LootTable()\n\t.every(\"Bones\")\n\t.every(InfernalMagePreTable, 3)\n\n\t/* Superior Slayer tertiary */\n\t.tertiary(274, \"Mist battlestaff\")\n\t.tertiary(275, \"Dust battlestaff\")\n\t.tertiary(960, \"Eternal gem\")\n\t.tertiary(960, \"Imbued heart\");\n\nexport default new SimpleMonster({\n\tid: 7396,\n\tname: \"Malevolent Mage\",\n\ttable: MalevolentMageTable,\n\taliases: [\"malevolent mage\"],\n});\n", "import LootTable from \"../../../structures/LootTable\";\nimport SimpleMonster from \"../../../structures/SimpleMonster\";\nimport { GargoylePreTable } from \"../low/g-m/Gargoyle\";\n\nconst MarbleGargoyleTable = new LootTable()\n\t.every(GargoylePreTable, 3)\n\t.tertiary(13, \"Clue scroll (hard)\")\n\n\t/* Superior Slayer tertiary */\n\t.tertiary(148, \"Mist battlestaff\")\n\t.tertiary(148, \"Dust battlestaff\")\n\t.tertiary(519, \"Eternal gem\")\n\t.tertiary(518, \"Imbued heart\");\n\nexport default new SimpleMonster({\n\tid: 7407,\n\tname: \"Marble gargoyle\",\n\ttable: MarbleGargoyleTable,\n\taliases: [\"marble gargoyle\"],\n});\n", "import LootTable from \"../../../structures/LootTable\";\nimport SimpleMonster from \"../../../structures/SimpleMonster\";\nimport { BasiliskPreTable } from \"../low/a-f/Basilisk\";\n\nconst MonstrousBasiliskTable = new LootTable()\n\t.every(\"Bones\")\n\t.every(BasiliskPreTable, 3)\n\n\t/* Tertiary */\n\t.tertiary(2000, \"Basilisk head\")\n\n\t/* Superior Slayer tertiary */\n\t.tertiary(292, \"Mist battlestaff\")\n\t.tertiary(292, \"Dust battlestaff\")\n\t.tertiary(1022, \"Eternal gem\")\n\t.tertiary(1022, \"Imbued heart\");\n\nexport default new SimpleMonster({\n\tid: 7395,\n\tname: \"Monstrous basilisk\",\n\ttable: MonstrousBasiliskTable,\n\taliases: [\"monstrous basilisk\"],\n});\n", "import LootTable from \"../../../structures/LootTable\";\nimport SimpleMonster from \"../../../structures/SimpleMonster\";\nimport { NechryaelPreTable } from \"../low/n-s/Nechryael\";\n\nconst NechryarchTable = new LootTable()\n\t.every(\"Malicious ashes\")\n\t.every(NechryaelPreTable, 3)\n\t.tertiary(13, \"Clue scroll (hard)\")\n\n\t/* Superior Slayer tertiary */\n\t.tertiary(124, \"Mist battlestaff\")\n\t.tertiary(124, \"Dust battlestaff\")\n\t.tertiary(433, \"Eternal gem\")\n\t.tertiary(434, \"Imbued heart\");\n\nexport default new SimpleMonster({\n\tid: 7411,\n\tname: \"Nechryarch\",\n\ttable: NechryarchTable,\n\taliases: [\"nechryarch\"],\n});\n", "import LootTable from \"../../../structures/LootTable\";\nimport SimpleMonster from \"../../../structures/SimpleMonster\";\nimport { DarkBeastPreTable } from \"../low/a-f/DarkBeast\";\n\nconst NightBeastTable = new LootTable()\n\t.every(\"Big bones\")\n\t.every(DarkBeastPreTable, 3)\n\t.tertiary(13, \"Clue scroll (hard)\")\n\t.tertiary(120, \"Clue scroll (elite)\")\n\t.tertiary(400, \"Long bone\")\n\t.tertiary(5013, \"Curved bone\")\n\n\t/* Superior Slayer tertiary */\n\t.tertiary(73, \"Mist battlestaff\")\n\t.tertiary(73, \"Dust battlestaff\")\n\t.tertiary(255, \"Eternal gem\")\n\t.tertiary(254, \"Imbued heart\");\n\nexport default new SimpleMonster({\n\tid: 7409,\n\tname: \"Night beast\",\n\ttable: NightBeastTable,\n\taliases: [\"night beast\"],\n});\n", "import LootTable from \"../../../structures/LootTable\";\nimport SimpleMonster from \"../../../structures/SimpleMonster\";\nimport { SmokeDevilPreTable } from \"../low/n-s/SmokeDevil\";\n\nconst NuclearSmokeDevilTable = new LootTable()\n\t.every(\"Ashes\")\n\t.every(SmokeDevilPreTable, 3)\n\t.tertiary(13, \"Clue scroll (hard)\")\n\t.tertiary(75, \"Clue scroll (elite)\")\n\n\t/* Superior Slayer tertiary */\n\t.tertiary(57, \"Mist battlestaff\")\n\t.tertiary(57, \"Dust battlestaff\")\n\t.tertiary(198, \"Eternal gem\")\n\t.tertiary(198, \"Imbued heart\");\n\nexport default new SimpleMonster({\n\tid: 7406,\n\tname: \"Nuclear smoke devil\",\n\ttable: NuclearSmokeDevilTable,\n\taliases: [\"nuclear smoke devil\"],\n});\n", "import LootTable from \"../../../structures/LootTable\";\nimport SimpleMonster from \"../../../structures/SimpleMonster\";\nimport { DeviantSpectrePreTable } from \"../low/a-f/DeviantSpectre\";\n\nconst RepugnantSpectreTable = new LootTable()\n\t.every(DeviantSpectrePreTable, 3)\n\t.tertiary(13, \"Clue scroll (hard)\")\n\t.tertiary(512, \"Mystic robe bottom (dark)\")\n\n\t/* Superior Slayer tertiary */\n\t.tertiary(215, \"Mist battlestaff\")\n\t.tertiary(215, \"Dust battlestaff\")\n\t.tertiary(754, \"Eternal gem\")\n\t.tertiary(754, \"Imbued heart\");\n\nexport default new SimpleMonster({\n\tid: 7403,\n\tname: \"Repugnant spectre\",\n\ttable: RepugnantSpectreTable,\n\taliases: [\"repugnant spectre\"],\n});\n", "import LootTable from \"../../../structures/LootTable\";\nimport SimpleMonster from \"../../../structures/SimpleMonster\";\nimport { BansheePreTable } from \"../low/a-f/Banshee\";\n\nconst ScreamingBansheeTable = new LootTable()\n\t.every(BansheePreTable, 3)\n\t.tertiary(13, \"Clue scroll (easy)\")\n\n\t/* Superior Slayer tertiary */\n\t.tertiary(368, \"Mist battlestaff\")\n\t.tertiary(367, \"Dust battlestaff\")\n\t.tertiary(1286, \"Eternal gem\")\n\t.tertiary(1286, \"Imbued heart\");\n\nexport default new SimpleMonster({\n\tid: 7390,\n\tname: \"Screaming banshee\",\n\ttable: ScreamingBansheeTable,\n\taliases: [\"screaming banshee\"],\n});\n", "import LootTable from \"../../../structures/LootTable\";\nimport SimpleMonster from \"../../../structures/SimpleMonster\";\nimport { TwistedBansheePreTable } from \"../low/t-z/TwistedBanshee\";\n\nconst ScreamingTwistedBansheeTable = new LootTable()\n\t.every(TwistedBansheePreTable, 3)\n\t.tertiary(13, \"Clue scroll (hard)\")\n\n\t/* Superior Slayer tertiary */\n\t.tertiary(367, \"Mist battlestaff\")\n\t.tertiary(368, \"Dust battlestaff\")\n\t.tertiary(1286, \"Eternal gem\")\n\t.tertiary(1286, \"Imbued heart\");\n\nexport default new SimpleMonster({\n\tid: 7391,\n\tname: \"Screaming twisted banshee\",\n\ttable: ScreamingTwistedBansheeTable,\n\taliases: [\"screaming twisted banshee\"],\n});\n", "import LootTable from \"../../../structures/LootTable\";\nimport SimpleMonster from \"../../../structures/SimpleMonster\";\nimport { WyrmPreTable } from \"../low/t-z/Wyrm\";\n\nconst ShadowWyrmTable = new LootTable()\n\t.every(\"Wyrm bones\")\n\t.every(WyrmPreTable, 3)\n\t.tertiary(26, \"Clue scroll (hard)\")\n\n\t/* Superior Slayer tertiary */\n\t.tertiary(207, \"Mist battlestaff\")\n\t.tertiary(207, \"Dust battlestaff\")\n\t.tertiary(724, \"Eternal gem\")\n\t.tertiary(724, \"Imbued heart\");\n\nexport default new SimpleMonster({\n\tid: 10_398,\n\tname: \"Shadow Wyrm\",\n\ttable: ShadowWyrmTable,\n\taliases: [\"shadow wyrm\"],\n});\n", "import LootTable from \"../../../structures/LootTable\";\nimport SimpleMonster from \"../../../structures/SimpleMonster\";\nimport { TurothPreTable } from \"../low/t-z/Turoth\";\n\nconst SpikedTurothTable = new LootTable()\n\t.every(\"Bones\")\n\t.every(TurothPreTable, 3)\n\t.tertiary(13, \"Clue scroll (hard)\")\n\n\t/* Superior Slayer tertiary */\n\t.tertiary(236, \"Mist battlestaff\")\n\t.tertiary(236, \"Dust battlestaff\")\n\t.tertiary(825, \"Eternal gem\")\n\t.tertiary(826, \"Imbued heart\");\n\nexport default new SimpleMonster({\n\tid: 10_397,\n\tname: \"Spiked Turoth\",\n\ttable: SpikedTurothTable,\n\taliases: [\"spiked turoth\"],\n});\n", "import LootTable from \"../../../structures/LootTable\";\nimport SimpleMonster from \"../../../structures/SimpleMonster\";\nimport { JellyPreTable } from \"../low/g-m/Jelly\";\n\nconst VitreousJellyTable = new LootTable()\n\t.every(JellyPreTable, 3)\n\t.tertiary(13, \"Clue scroll (hard)\")\n\n\t/* Superior Slayer tertiary */\n\t.tertiary(248, \"Mist battlestaff\")\n\t.tertiary(248, \"Dust battlestaff\")\n\t.tertiary(867, \"Eternal gem\")\n\t.tertiary(867, \"Imbued heart\");\n\nexport default new SimpleMonster({\n\tid: 7399,\n\tname: \"Vitreous Jelly\",\n\ttable: VitreousJellyTable,\n\taliases: [\"vitreous jelly\"],\n});\n", "import LootTable from \"../../../structures/LootTable\";\nimport SimpleMonster from \"../../../structures/SimpleMonster\";\nimport { WarpedJellyPreTable } from \"../low/t-z/WarpedJelly\";\n\nconst VitreousWarpedJellyTable = new LootTable()\n\t.every(WarpedJellyPreTable, 3)\n\t.tertiary(7, \"Clue scroll (hard)\")\n\n\t/* Superior Slayer tertiary */\n\t.tertiary(248, \"Mist battlestaff\")\n\t.tertiary(248, \"Dust battlestaff\")\n\t.tertiary(867, \"Eternal gem\")\n\t.tertiary(867, \"Imbued heart\");\n\nexport default new SimpleMonster({\n\tid: 7400,\n\tname: \"Vitreous warped Jelly\",\n\ttable: VitreousWarpedJellyTable,\n\taliases: [\"vitreous warped jelly\"],\n});\n", "import LootTable from \"../../../structures/LootTable\";\nimport SimpleMonster from \"../../../structures/SimpleMonster\";\nimport { AraxyteTable } from \"../low/a-f/Araxyte\";\nimport AbhorrentSpectre from \"./AbhorrentSpectre\";\nimport BasiliskSentinel from \"./BasiliskSentinel\";\nimport CaveAbomination from \"./CaveAbomination\";\nimport ChasmCrawler from \"./ChasmCrawler\";\nimport ChokeDevil from \"./ChokeDevil\";\nimport Cockathrice from \"./Cockathrice\";\nimport ColossalHydra from \"./ColossalHydra\";\nimport CrushingHand from \"./CrushingHand\";\nimport FlamingPyrelord from \"./FlamingPyrelord\";\nimport GiantRockslug from \"./GiantRockslug\";\nimport GreaterAbyssalDemon from \"./GreaterAbyssalDemon\";\nimport GuardianDrake from \"./GuardianDrake\";\nimport InsatiableBloodveld from \"./InsatiableBloodveld\";\nimport InsatiableMutatedBloodveld from \"./InsatiableMutatedBloodveld\";\nimport KingKurask from \"./KingKurask\";\nimport MalevolentMage from \"./MalevolentMage\";\nimport MarbleGargoyle from \"./MarbleGargoyle\";\nimport MonstrousBasilisk from \"./MonstrousBasilisk\";\nimport Nechryarch from \"./Nechryarch\";\nimport NightBeast from \"./NightBeast\";\nimport NuclearSmokeDevil from \"./NuclearSmokeDevil\";\nimport RepugnantSpectre from \"./RepugnantSpectre\";\nimport ScreamingBanshee from \"./ScreamingBanshee\";\nimport ScreamingTwistedBanshee from \"./ScreamingTwistedBanshee\";\nimport ShadowWyrm from \"./ShadowWyrm\";\nimport SpikedTuroth from \"./SpikedTuroth\";\nimport VitreousJelly from \"./VitreousJelly\";\nimport VitreousWarpedJelly from \"./VitreousWarpedJelly\";\n\nconst DreadbornAraxyte = new SimpleMonster({\n\tid: 13680,\n\tname: \"Dreadborn araxyte\",\n\ttable: new LootTable()\n\t\t.every(\"Araxyte venom sack\")\n\t\t.every(AraxyteTable, 3)\n\t\t.tertiary(64, \"Mist battlestaff\")\n\t\t.tertiary(64, \"Dust battlestaff\")\n\t\t.tertiary(224, \"Eternal gem\")\n\t\t.tertiary(224, \"Imbued heart\"),\n\taliases: [\"dreadborn araxyte\"],\n});\n\nexport const allSuperiorMonsters = {\n\tAbhorrentSpectre,\n\tBasiliskSentinel,\n\tCaveAbomination,\n\tChasmCrawler,\n\tChokeDevil,\n\tCockathrice,\n\tColossalHydra,\n\tCrushingHand,\n\tDreadbornAraxyte,\n\tFlamingPyrelord,\n\tGiantRockslug,\n\tGreaterAbyssalDemon,\n\tGuardianDrake,\n\tInsatiableBloodveld,\n\tInsatiableMutatedBloodveld,\n\tKingKurask,\n\tMalevolentMage,\n\tMarbleGargoyle,\n\tMonstrousBasilisk,\n\tNechryarch,\n\tNightBeast,\n\tNuclearSmokeDevil,\n\tRepugnantSpectre,\n\tScreamingBanshee,\n\tScreamingTwistedBanshee,\n\tShadowWyrm,\n\tSpikedTuroth,\n\tVitreousJelly,\n\tVitreousWarpedJelly,\n};\n", "import { Collection } from \"../../structures/Collection\";\nimport type Monster from \"../../structures/Monster\";\nimport { CreatureCreation } from \"./CreatureCreation\";\nimport { allBosses } from \"./bosses\";\nimport { allLowMonsters } from \"./low\";\nimport { CamdozaalGolems } from \"./low/camdozaalGolems\";\nimport { ReanimatedMonsters } from \"./low/reanimated\";\nimport { specialBosses } from \"./special\";\nimport { allSuperiorMonsters } from \"./superiorMonsters\";\n\nconst monstersObject = {\n\t...allBosses,\n\t...allLowMonsters,\n\t...specialBosses,\n\t...allSuperiorMonsters,\n\t...CreatureCreation,\n\t...ReanimatedMonsters,\n\t...CamdozaalGolems,\n};\n\nconst allMonsters: [number, Monster][] = Object.values(monstersObject).map((monster: Monster) => [monster.id, monster]);\n\nexport const Monsters = Object.assign(new Collection(allMonsters), monstersObject);\n\nexport default Monsters;\n", "import { percentChance, randInt, roll } from \"e\";\n\nimport type { OpenableOpenOptions } from \"../../meta/types\";\nimport Bank from \"../../structures/Bank\";\nimport LootTable from \"../../structures/LootTable\";\nimport SimpleOpenable from \"../../structures/SimpleOpenable\";\nimport { BrimstoneChestFish, chanceOfFish } from \"./BonusOpenables\";\n\nconst BrimstoneChestTable = new LootTable()\n\t.add(\"Uncut diamond\", [25, 35], 5)\n\t.add(\"Uncut ruby\", [25, 35], 5)\n\t.add(\"Coal\", [300, 500], 5)\n\t.add(\"Coins\", [50_000, 150_000], 5)\n\t.add(\"Gold ore\", [100, 200], 4)\n\t.add(\"Dragon arrowtips\", [50, 200], 4)\n\t.add(\"Iron ore\", [350, 500], 3)\n\t.add(\"Rune full helm\", [2, 4], 3)\n\t.add(\"Rune platebody\", [1, 2], 3)\n\t.add(\"Rune platelegs\", [1, 2], 3)\n\t.add(\"Runite ore\", [10, 15], 2)\n\t.add(\"Steel bar\", [300, 500], 2)\n\t.add(\"Magic logs\", [120, 160], 2)\n\t.add(\"Dragon dart tip\", [40, 160], 2)\n\t.add(\"Palm tree seed\", [2, 4], 1)\n\t.add(\"Magic seed\", [2, 4], 1)\n\t.add(\"Celastrus seed\", [2, 4], 1)\n\t.add(\"Dragonfruit tree seed\", [1, 4], 1)\n\t.add(\"Redwood tree seed\", 1, 1)\n\t.add(\"Torstol seed\", [3, 5], 1)\n\t.add(\"Snapdragon seed\", [3, 5], 1)\n\t.add(\"Ranarr seed\", [3, 5], 1)\n\t.add(\"Pure essence\", [3000, 6000], 1)\n\t.oneIn(200, \"Broken dragon hasta\")\n\t.oneIn(1000, \"Mystic hat (dusk)\")\n\t.oneIn(1000, \"Mystic robe top (dusk)\")\n\t.oneIn(1000, \"Mystic robe bottom (dusk)\")\n\t.oneIn(1000, \"Mystic gloves (dusk)\")\n\t.oneIn(1000, \"Mystic boots (dusk)\");\n\nexport class BrimstoneChestOpenable extends SimpleOpenable {\n\tpublic open(quantity = 1, options: OpenableOpenOptions = { fishLvl: 99 }) {\n\t\tconst loot = new Bank();\n\t\tconst fishLvl = options.fishLvl ?? 99;\n\n\t\tconst lobster = BrimstoneChestFish.find(fish => fish.item === \"Raw lobster\");\n\t\tfor (let i = 0; i < quantity; i++) {\n\t\t\tif (roll(20)) {\n\t\t\t\tlet fishRolled = false;\n\t\t\t\tfor (const fish of BrimstoneChestFish) {\n\t\t\t\t\tif (fishLvl >= fish.req) {\n\t\t\t\t\t\tif (percentChance(chanceOfFish(fishLvl, fish.low, fish.high))) {\n\t\t\t\t\t\t\tloot.add(fish.item, randInt(fish.qty[0], fish.qty[1]));\n\t\t\t\t\t\t\tfishRolled = true;\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif (!fishRolled) {\n\t\t\t\t\tloot.add(lobster?.item, randInt(lobster!.qty[0], lobster!.qty[1]));\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tloot.add(BrimstoneChestTable.roll());\n\t\t\t}\n\t\t}\n\t\treturn loot;\n\t}\n}\n\nexport default new BrimstoneChestOpenable({\n\tid: 23_083,\n\tname: \"Brimstone chest\",\n\taliases: [\"brimstone chest\", \"brimstone\"],\n\ttable: BrimstoneChestTable,\n});\n", "import type { OpenableOpenOptions, OpenableOptions } from \"../meta/types\";\nimport type Bank from \"./Bank\";\n\n/**\n * An entity from OSRS which can be opened (e.g. implings)\n */\nexport default abstract class Openable {\n\t/**\n\t *  The item ID of the item which is opened.\n\t */\n\tpublic id: number;\n\tpublic name: string;\n\tpublic aliases: string[];\n\tpublic abstract open(quantity: number, options: OpenableOpenOptions): Bank;\n\tpublic allItems: number[];\n\n\tconstructor(options: OpenableOptions) {\n\t\tthis.id = options.id;\n\t\tthis.name = options.name;\n\t\tthis.aliases = options.aliases ?? [];\n\t\tthis.allItems = options.allItems ?? [];\n\t}\n}\n", "import type { OpenableOptions } from \"../meta/types\";\nimport Bank from \"./Bank\";\nimport type LootTable from \"./LootTable\";\nimport Openable from \"./Openable\";\n\ninterface SimpleOpenableOptions extends OpenableOptions {\n\ttable: LootTable;\n}\n\nexport default class SimpleOpenable extends Openable {\n\tpublic table: LootTable;\n\n\tconstructor(options: SimpleOpenableOptions) {\n\t\tsuper({ ...options, allItems: options.table.allItems });\n\t\tthis.table = options.table;\n\t}\n\n\tpublic open(quantity = 1) {\n\t\tconst loot = new Bank();\n\n\t\tfor (let i = 0; i < quantity; i++) {\n\t\t\tloot.add(this.table.roll());\n\t\t}\n\n\t\treturn loot;\n\t}\n}\n", "export interface FishDropTable {\n\titem: string;\n\tqty: [number, number];\n\tlow: number;\n\thigh: number;\n\treq: number;\n}\n\n// Uses the skilling success rate formula: https://oldschool.runescape.wiki/w/Skilling_success_rate\nexport function chanceOfFish(fishLvl: number, low: number, high: number) {\n\tconst num1: number = (low * (99 - fishLvl)) / 98;\n\tconst num2: number = (high * (fishLvl - 1)) / 98;\n\n\tconst chanceOfSuccess = (num1 + num2 + 1) / 256;\n\n\treturn chanceOfSuccess * 100;\n}\n\nexport const BrimstoneChestFish: FishDropTable[] = [\n\t{\n\t\titem: \"Raw manta ray\",\n\t\tqty: [80, 160],\n\t\tlow: -10,\n\t\thigh: 20,\n\t\treq: 31,\n\t},\n\t{\n\t\titem: \"Raw sea turtle\",\n\t\tqty: [80, 200],\n\t\tlow: -10,\n\t\thigh: 50,\n\t\treq: 17,\n\t},\n\t{\n\t\titem: \"Raw shark\",\n\t\tqty: [100, 250],\n\t\tlow: -60,\n\t\thigh: 140,\n\t\treq: 27,\n\t},\n\t{\n\t\titem: \"Raw monkfish\",\n\t\tqty: [100, 300],\n\t\tlow: 0,\n\t\thigh: 170,\n\t\treq: 1,\n\t},\n\t{\n\t\titem: \"Raw swordfish\",\n\t\tqty: [100, 300],\n\t\tlow: 30,\n\t\thigh: 200,\n\t\treq: 1,\n\t},\n\t{\n\t\titem: \"Raw lobster\",\n\t\tqty: [100, 350],\n\t\tlow: 70,\n\t\thigh: 270,\n\t\treq: 1,\n\t},\n\t{\n\t\titem: \"Raw tuna\",\n\t\tqty: [100, 350],\n\t\tlow: 225,\n\t\thigh: 324,\n\t\treq: 1,\n\t},\n];\n\nexport const LarransSmallChestFish: FishDropTable[] = [\n\t{\n\t\titem: \"Raw manta ray\",\n\t\tqty: [81, 177],\n\t\tlow: -10,\n\t\thigh: 20,\n\t\treq: 31,\n\t},\n\t{\n\t\titem: \"Raw sea turtle\",\n\t\tqty: [81, 177],\n\t\tlow: -10,\n\t\thigh: 50,\n\t\treq: 17,\n\t},\n\t{\n\t\titem: \"Raw shark\",\n\t\tqty: [126, 250],\n\t\tlow: -60,\n\t\thigh: 140,\n\t\treq: 27,\n\t},\n\t{\n\t\titem: \"Raw monkfish\",\n\t\tqty: [162, 297],\n\t\tlow: 0,\n\t\thigh: 170,\n\t\treq: 1,\n\t},\n\t{\n\t\titem: \"Raw swordfish\",\n\t\tqty: [113, 264],\n\t\tlow: 30,\n\t\thigh: 200,\n\t\treq: 1,\n\t},\n\t{\n\t\titem: \"Raw lobster\",\n\t\tqty: [163, 342],\n\t\tlow: 70,\n\t\thigh: 270,\n\t\treq: 1,\n\t},\n\t{\n\t\titem: \"Raw tuna\",\n\t\tqty: [112, 307],\n\t\tlow: 225,\n\t\thigh: 324,\n\t\treq: 1,\n\t},\n];\n\nexport const LarransBigChestFish: FishDropTable[] = [\n\t{\n\t\titem: \"Raw manta ray\",\n\t\tqty: [120, 240],\n\t\tlow: -10,\n\t\thigh: 20,\n\t\treq: 31,\n\t},\n\t{\n\t\titem: \"Raw sea turtle\",\n\t\tqty: [120, 300],\n\t\tlow: -10,\n\t\thigh: 50,\n\t\treq: 17,\n\t},\n\t{\n\t\titem: \"Raw shark\",\n\t\tqty: [150, 375],\n\t\tlow: -60,\n\t\thigh: 140,\n\t\treq: 27,\n\t},\n\t{\n\t\titem: \"Raw monkfish\",\n\t\tqty: [150, 450],\n\t\tlow: 0,\n\t\thigh: 170,\n\t\treq: 1,\n\t},\n\t{\n\t\titem: \"Raw swordfish\",\n\t\tqty: [150, 450],\n\t\tlow: 30,\n\t\thigh: 200,\n\t\treq: 1,\n\t},\n\t{\n\t\titem: \"Raw lobster\",\n\t\tqty: [150, 525],\n\t\tlow: 70,\n\t\thigh: 270,\n\t\treq: 1,\n\t},\n\t{\n\t\titem: \"Raw tuna\",\n\t\tqty: [150, 525],\n\t\tlow: 225,\n\t\thigh: 324,\n\t\treq: 1,\n\t},\n];\n", "import LootTable from \"../../structures/LootTable\";\nimport SimpleOpenable from \"../../structures/SimpleOpenable\";\n\nconst CasketTable = new LootTable()\n\t.add(\"Coins\", 160, 24)\n\t.add(\"Coins\", 20, 22)\n\t.add(\"Coins\", 40, 20)\n\t.add(\"Coins\", 320, 19)\n\t.add(\"Coins\", 80, 18)\n\t.add(\"Coins\", 640, 18)\n\t.add(\"Uncut sapphire\", 1, 64)\n\t.add(\"Uncut emerald\", 1, 33)\n\t.add(\"Uncut ruby\", 1, 15)\n\t.add(\"Uncut diamond\", 1, 4)\n\t.add(\"Cosmic talisman\", 1, 16)\n\t.add(\"Loop half of key\", 1, 2)\n\t.add(\"Tooth half of key\", 1, 2);\n\nexport default new SimpleOpenable({\n\tid: 405,\n\tname: \"Casket\",\n\taliases: [\"casket\"],\n\ttable: CasketTable,\n});\n", "import LootTable from \"../../structures/LootTable\";\nimport SimpleOpenable from \"../../structures/SimpleOpenable\";\nimport { itemTupleToTable } from \"../../util\";\n\nconst runeArmorTable = new LootTable().add(\"Rune platelegs\", 1, 1).add(\"Rune plateskirt\", 1, 1);\n\nconst coinsKeyHalfTable = new LootTable()\n\t.every(\"Coins\", 750)\n\t.add(\"Tooth half of key\", 1, 1)\n\t.add(\"Loop half of key\", 1, 1);\n\nconst CrystalChestTable = new LootTable({ limit: 128 })\n\t.every(\"Uncut dragonstone\")\n\t.add(\n\t\titemTupleToTable([\n\t\t\t[\"Spinach roll\", 1],\n\t\t\t[\"Coins\", 2000],\n\t\t]),\n\t\t1,\n\t\t34,\n\t)\n\t.add(\n\t\titemTupleToTable([\n\t\t\t[\"Air rune\", 50],\n\t\t\t[\"Water rune\", 50],\n\t\t\t[\"Earth rune\", 50],\n\t\t\t[\"Fire rune\", 50],\n\t\t\t[\"Body rune\", 50],\n\t\t\t[\"Mind rune\", 50],\n\t\t\t[\"Chaos rune\", 10],\n\t\t\t[\"Death rune\", 10],\n\t\t\t[\"Cosmic rune\", 10],\n\t\t\t[\"Nature rune\", 10],\n\t\t\t[\"Law rune\", 10],\n\t\t]),\n\t\t1,\n\t\t12,\n\t)\n\t.add(\n\t\titemTupleToTable([\n\t\t\t[\"Ruby\", 2],\n\t\t\t[\"Diamond\", 2],\n\t\t]),\n\t\t1,\n\t\t12,\n\t)\n\t.add(\"Runite bar\", 3, 12)\n\t.add(coinsKeyHalfTable, 1, 10)\n\t.add(\"Iron ore\", 150, 10)\n\t.add(\"Coal\", 100, 10)\n\t.add(\n\t\titemTupleToTable([\n\t\t\t[\"Raw swordfish\", 5],\n\t\t\t[\"Coins\", 1000],\n\t\t]),\n\t\t1,\n\t\t8,\n\t)\n\t.add(\"Adamant sq shield\", 1, 2)\n\t.add(runeArmorTable, 1);\n\nexport default new SimpleOpenable({\n\tid: 989,\n\tname: \"Crystal chest\",\n\taliases: [\"crystal chest\"],\n\ttable: CrystalChestTable,\n});\n", "import LootTable from \"../../structures/LootTable\";\nimport SimpleOpenable from \"../../structures/SimpleOpenable\";\nimport { itemTupleToTable } from \"../../util\";\n\n/* Dragonstone armour roll */\nconst DragonStoneArmorTable = new LootTable()\n\t.add(\"Dragonstone full helm\", 1, 1)\n\t.add(\"Dragonstone platebody\", 1, 1)\n\t.add(\"Dragonstone platelegs\", 1, 1)\n\t.add(\"Dragonstone gauntlets\", 1, 1)\n\t.add(\"Dragonstone boots\", 1, 1);\n\n/* Key half roll */\nconst coinsKeyHalfTable = new LootTable()\n\t.every(\"Uncut dragonstone\")\n\t.every(\"Coins\", [10_000, 15_000])\n\t.add(\"Tooth half of key\", 1, 1)\n\t.add(\"Loop half of key\", 1, 1);\n\n/* Rune armor roll */\nconst runeArmorTable = new LootTable()\n\t.every(\"Uncut dragonstone\")\n\t.every(\"Crystal shard\", [4, 6])\n\t.add(\"Rune platelegs\", 1, 1)\n\t.add(\"Rune plateskirt\", 1, 1);\n\n/* Dragon items roll */\nconst dragonItemTable = new LootTable()\n\t.every(\"Uncut dragonstone\")\n\t.add(\"Dragon platelegs\", 1, 1)\n\t.add(\"Dragon plateskirt\", 1, 1)\n\t.add(\"Shield left half\", 1, 1);\n\nconst ElvenCrystalChestTable = new LootTable()\n\t.oneIn(10_000, \"Uncut onyx\")\n\t.oneIn(500, DragonStoneArmorTable)\n\t.add(coinsKeyHalfTable, 1, 64)\n\t.add(\n\t\titemTupleToTable([\n\t\t\t[\"Uncut dragonstone\", 1],\n\t\t\t[\"Uncut ruby\", [10, 13]],\n\t\t\t[\"Uncut diamond\", [5, 8]],\n\t\t]),\n\t\t1,\n\t\t32,\n\t)\n\t.add(\n\t\titemTupleToTable([\n\t\t\t[\"Uncut dragonstone\", 1],\n\t\t\t[\"Crystal key\", 1],\n\t\t]),\n\t\t1,\n\t\t24,\n\t)\n\t.add(\n\t\titemTupleToTable([\n\t\t\t[\"Uncut dragonstone\", 1],\n\t\t\t[\"Coins\", [30_000, 50_000]],\n\t\t\t[\"Crystal shard\", [8, 13]],\n\t\t]),\n\t\t1,\n\t\t20,\n\t)\n\t.add(\n\t\titemTupleToTable([\n\t\t\t[\"Uncut dragonstone\", 1],\n\t\t\t[\"Crystal shard\", [20, 30]],\n\t\t]),\n\t\t1,\n\t\t17,\n\t)\n\t.add(runeArmorTable, 1, 17)\n\t.add(\n\t\titemTupleToTable([\n\t\t\t[\"Uncut dragonstone\", 1],\n\t\t\t[\"Cosmic rune\", [50, 100]],\n\t\t\t[\"Chaos rune\", [50, 100]],\n\t\t\t[\"Nature rune\", [50, 100]],\n\t\t\t[\"Law rune\", [50, 100]],\n\t\t\t[\"Death rune\", [50, 100]],\n\t\t]),\n\t\t1,\n\t\t17,\n\t)\n\t.add(\n\t\titemTupleToTable([\n\t\t\t[\"Uncut dragonstone\", 1],\n\t\t\t[\"Yew seed\", 1],\n\t\t]),\n\t\t1,\n\t\t17,\n\t)\n\t.add(\n\t\titemTupleToTable([\n\t\t\t[\"Uncut dragonstone\", 1],\n\t\t\t[\"Raw shark\", [50, 100]],\n\t\t]),\n\t\t1,\n\t\t17,\n\t)\n\t.add(\n\t\titemTupleToTable([\n\t\t\t[\"Uncut dragonstone\", 1],\n\t\t\t[\"Gold ore\", [350, 500]],\n\t\t]),\n\t\t1,\n\t\t12,\n\t)\n\t.add(\n\t\titemTupleToTable([\n\t\t\t[\"Uncut dragonstone\", 1],\n\t\t\t[\"Runite ore\", [7, 10]],\n\t\t]),\n\t\t1,\n\t\t9,\n\t)\n\t.add(\n\t\titemTupleToTable([\n\t\t\t[\"Uncut dragonstone\", 1],\n\t\t\t[\"Crystal acorn\", [1, 2]],\n\t\t]),\n\t\t1,\n\t\t7,\n\t)\n\t.add(dragonItemTable, 1, 3);\n\nexport default new SimpleOpenable({\n\tid: 23_951,\n\tname: \"Elven crystal chest\",\n\taliases: [\"elven crystal chest\", \"elven chest\", \"enhanced\", \"enhanced crystal chest\", \"elven chest\", \"elven\"],\n\ttable: ElvenCrystalChestTable,\n});\n", "import LootTable from \"../../structures/LootTable\";\nimport SimpleOpenable from \"../../structures/SimpleOpenable\";\n\nconst GiantEggSacFullTable = new LootTable().every(\"Red spiders' eggs\", 100);\n\nexport default new SimpleOpenable({\n\tid: 23_517,\n\tname: \"Giant egg sac(full)\",\n\taliases: [\"giant egg sac(full)\", \"giant egg sac full\"],\n\ttable: GiantEggSacFullTable,\n});\n", "import LootTable from \"../../structures/LootTable\";\nimport SimpleOpenable from \"../../structures/SimpleOpenable\";\nimport { itemTupleToTable } from \"../../util\";\n\nconst FoodTable = new LootTable()\n\t.add(\"Egg potato\", 4, 12)\n\t.add(\"Shark\", 4, 7)\n\t.add(\n\t\titemTupleToTable([\n\t\t\t[\"Saradomin brew(2)\", 3],\n\t\t\t[\"Super restore(2)\", 1],\n\t\t]),\n\t\t1,\n\t\t1,\n\t);\n\nconst PotionTable = new LootTable()\n\t.add(\n\t\titemTupleToTable([\n\t\t\t[\"Super attack(2)\", 1],\n\t\t\t[\"Super strength(2)\", 1],\n\t\t\t[\"Super defence(2)\", 1],\n\t\t]),\n\t\t1,\n\t\t8,\n\t)\n\t.add(\n\t\titemTupleToTable([\n\t\t\t[\"Super defence(2)\", 1],\n\t\t\t[\"Ranging potion(2)\", 1],\n\t\t]),\n\t\t1,\n\t\t8,\n\t)\n\t.add(\"Prayer potion(3)\", 2, 3)\n\t.add(\"Super restore(3)\", 2, 1);\n\nconst GrubbyChestTable = new LootTable()\n\t/* Food roll */\n\t.every(FoodTable, 2)\n\n\t/* Potion roll */\n\t.every(PotionTable, 1)\n\n\t/* Main roll */\n\t.add(\"Law rune\", 200, 10)\n\t.add(\"Death rune\", 200, 10)\n\t.add(\"Astral rune\", 200, 10)\n\t.add(\"Blood rune\", 200, 10)\n\t.add(\"Grimy toadflax\", 10, 8)\n\t.add(\"Grimy ranarr weed\", 10, 8)\n\t.add(\"Coins\", 10_000, 8)\n\t.add(\"Grimy snapdragon\", 10, 7)\n\t.add(\"Grimy torstol\", 5, 7)\n\t.add(\"Crystal key\", 1, 6)\n\t.add(\"Dragon bones\", 10, 6)\n\t.add(\"Red dragonhide\", 10, 6)\n\t.add(\"Dragon dart tip\", 50, 2)\n\t.add(\"Dragon arrowtips\", 100, 2)\n\n\t/* Tertiary */\n\t.tertiary(25, \"Orange egg sac\")\n\t.tertiary(25, \"Blue egg sac\");\n\nexport default new SimpleOpenable({\n\tid: 23_499,\n\tname: \"Grubby chest\",\n\taliases: [\"grubby chest\", \"grubby\"],\n\ttable: GrubbyChestTable,\n});\n", "import LootTable from \"../../structures/LootTable\";\nimport SimpleOpenable from \"../../structures/SimpleOpenable\";\n\n// TODO: check back for wiki drop table update from another one in the repo\nconst GemTable = new LootTable()\n\t.add(\"Sapphire necklace\", 1, 4)\n\t.add(\"Sapphire amulet\", 1, 4)\n\t.add(\"Sapphire ring\", 1, 4)\n\t.add(\"Emerald necklace\", 1, 3)\n\t.add(\"Emerald amulet\", 1, 3)\n\t.add(\"Emerald ring\", 1, 3)\n\t.add(\"Ruby necklace\", 1, 2)\n\t.add(\"Ruby amulet\", 1, 2)\n\t.add(\"Ruby ring\", 1, 2)\n\t.add(\"Gold necklace\", 1, 2)\n\t.add(\"Gold amulet\", 1, 2)\n\t.add(\"Gold ring\", 1, 2)\n\t.add(\"Sapphire\", 1, 2)\n\t.add(\"Emerald\", 1, 2)\n\t.add(\"Ruby\", 1, 2)\n\t.add(\"Diamond necklace\", 1, 1)\n\t.add(\"Diamond amulet\", 1, 1)\n\t.add(\"Diamond ring\", 1, 1)\n\t.add(\"Diamond\", 1, 1);\n\nconst HAMChestTable = new LootTable()\n\t.every(\"Coins\", [0, 99])\n\t.add(GemTable, 1, 1)\n\t.add(GemTable, 2, 1)\n\t.add(GemTable, 3, 1)\n\t.add(GemTable, 4, 1)\n\t.add(GemTable, 5, 1);\n\nexport const BronzeHAMChest = new SimpleOpenable({\n\tid: 8867,\n\tname: \"Bronze HAM chest\",\n\taliases: [\"Bronze\", \"bronze ham chest\", \"bronze chest\"],\n\ttable: HAMChestTable,\n});\n\nexport const IronHAMChest = new SimpleOpenable({\n\tid: 8869,\n\tname: \"Iron HAM chest\",\n\taliases: [\"iron\", \"iron ham chest\", \"iron chest\"],\n\ttable: HAMChestTable,\n});\n\nexport const SilverHAMChest = new SimpleOpenable({\n\tid: 8868,\n\tname: \"Silver HAM chest\",\n\taliases: [\"silver\", \"silver ham chest\", \"silver chest\"],\n\ttable: HAMChestTable,\n});\n\nexport const SteelHAMChest = new SimpleOpenable({\n\tid: 8866,\n\tname: \"Steel HAM chest\",\n\taliases: [\"steel\", \"steel ham chest\", \"steel chest\"],\n\ttable: HAMChestTable,\n});\n", "import LootTable from \"../../structures/LootTable\";\nimport SimpleOpenable from \"../../structures/SimpleOpenable\";\n\nconst SackLogTable = new LootTable()\n\t.add(\"Maple logs\", 4)\n\t.add(\"Yew logs\", 4)\n\t.add(\"Teak logs\", 4)\n\t.add(\"Mahogany logs\", 4)\n\t.add(\"Magic logs\", 4);\n\nconst SackHerbTable = new LootTable()\n\t.add(\"Grimy harralander\", 4)\n\t.add(\"Grimy irit leaf\", 4)\n\t.add(\"Grimy avantoe\", 4)\n\t.add(\"Grimy ranarr weed\", 4)\n\t.add(\"Grimy cadantine\", 4)\n\t.add(\"Grimy kwuarm\", 4)\n\t.add(\"Grimy lantadyme\", 4);\n\nconst BasicSackTable = new LootTable()\n\t.add(\"Quetzal feed\", 1)\n\t.add(\"Coins\", [750, 1_250])\n\t.add(\"Hunter spear tips\", [15, 30])\n\t.add(\"Blessed bone shards\", [100, 200])\n\t.add(\"Raw kyatt\", 2)\n\t.add(\"Raw pyre fox\", 3)\n\t.add(SackLogTable);\n\nconst BSackTable = new LootTable().every(BasicSackTable, 5);\n\nconst AdeptSackTable = new LootTable()\n\t.add(\"Quetzal feed\", 1)\n\t.add(\"Coins\", [750, 1_250])\n\t.add(\"Hunter spear tips\", [15, 30])\n\t.add(\"Blessed bone shards\", [100, 200])\n\t.add(\"Raw kyatt\", 2)\n\t.add(\"Raw pyre fox\", 3)\n\t.add(5_075, 1)\n\t.add(5_075, [2, 3])\n\t.add(\"Raw sunlight antelope\", 2)\n\t.add(\"Sun-kissed bones\", 2)\n\t.add(SackLogTable)\n\t.add(SackHerbTable);\n\nconst ASackTable = new LootTable().every(AdeptSackTable, 7);\n\nconst ExpertSackTable = new LootTable()\n\t.add(\"Quetzal feed\", 1)\n\t.add(\"Coins\", [750, 1_250])\n\t.add(\"Coins\", [2_500, 3_500])\n\t.add(\"Hunter spear tips\", [15, 30])\n\t.add(\"Blessed bone shards\", [100, 200])\n\t.add(\"Raw kyatt\", 2)\n\t.add(\"Raw pyre fox\", 3)\n\t.add(5_075, 1)\n\t.add(5_075, [2, 3])\n\t.add(\"Raw sunlight antelope\", 2)\n\t.add(\"Raw moonlight antelope\", 2)\n\t.add(\"Sun-kissed bones\", 2)\n\t.add(\"Sun-kissed bones\", 3)\n\t.add(SackLogTable)\n\t.add(SackHerbTable);\n\nconst ESackTable = new LootTable().every(ExpertSackTable, 9);\n\nconst MasterSackTable = new LootTable()\n\t.add(\"Quetzal feed\", 1)\n\t.add(\"Coins\", [750, 1_250])\n\t.add(\"Coins\", [2_500, 3_500])\n\t.add(\"Hunter spear tips\", [15, 30])\n\t.add(\"Blessed bone shards\", [100, 200])\n\t.add(\"Raw kyatt\", 2)\n\t.add(\"Raw pyre fox\", 3)\n\t.add(5_075, 1)\n\t.add(5_075, [2, 3])\n\t.add(\"Raw sunlight antelope\", 2)\n\t.add(\"Raw moonlight antelope\", 2)\n\t.add(\"Sun-kissed bones\", 2)\n\t.add(\"Sun-kissed bones\", 3)\n\t.add(SackLogTable)\n\t.add(SackHerbTable);\n\nconst MSackTable = new LootTable().every(MasterSackTable, 11);\n\nexport const BasicSack = new SimpleOpenable({\n\tid: 29_242,\n\tname: \"Hunters' loot sack (basic)\",\n\taliases: [\"basic hunter sack\", \"hunter's loot sack (basic)\", \"hunters loot sack (basic)\"],\n\ttable: BSackTable,\n});\n\nexport const AdeptSack = new SimpleOpenable({\n\tid: 29_244,\n\tname: \"Hunters' loot sack (adept)\",\n\taliases: [\"adept hunter sack\", \"hunter's loot sack (adept)\", \"hunters loot sack (adept)\"],\n\ttable: ASackTable,\n});\n\nexport const ExpertSack = new SimpleOpenable({\n\tid: 29_246,\n\tname: \"Hunters' loot sack (expert)\",\n\taliases: [\"expert hunter sack\", \"hunter's loot sack (expert)\", \"hunters loot sack (expert)\"],\n\ttable: ESackTable,\n});\n\nexport const MasterSack = new SimpleOpenable({\n\tid: 29_248,\n\tname: \"Hunters' loot sack (master)\",\n\taliases: [\"master hunter sack\", \"hunter's loot sack (master)\", \"hunters loot sack (master)\"],\n\ttable: MSackTable,\n});\n", "import LootTable from \"../../structures/LootTable\";\n\nexport const PrayerPageTable = new LootTable()\n\t.add(\"Saradomin page 1\")\n\t.add(\"Saradomin page 2\")\n\t.add(\"Saradomin page 3\")\n\t.add(\"Saradomin page 4\")\n\t.add(\"Zamorak page 1\")\n\t.add(\"Zamorak page 2\")\n\t.add(\"Zamorak page 3\")\n\t.add(\"Zamorak page 4\")\n\t.add(\"Guthix page 1\")\n\t.add(\"Guthix page 2\")\n\t.add(\"Guthix page 3\")\n\t.add(\"Guthix page 4\")\n\t.add(\"Bandos page 1\")\n\t.add(\"Bandos page 2\")\n\t.add(\"Bandos page 3\")\n\t.add(\"Bandos page 4\")\n\t.add(\"Armadyl page 1\")\n\t.add(\"Armadyl page 2\")\n\t.add(\"Armadyl page 3\")\n\t.add(\"Armadyl page 4\")\n\t.add(\"Ancient page 1\")\n\t.add(\"Ancient page 2\")\n\t.add(\"Ancient page 3\")\n\t.add(\"Ancient page 4\");\n\nexport const GildedTable = new LootTable()\n\t.add(\"Gilded platebody\")\n\t.add(\"Gilded platelegs\")\n\t.add(\"Gilded plateskirt\")\n\t.add(\"Gilded full helm\")\n\t.add(\"Gilded kiteshield\")\n\t.add(\"Gilded med helm\")\n\t.add(\"Gilded chainbody\")\n\t.add(\"Gilded sq shield\")\n\t.add(\"Gilded 2h sword\")\n\t.add(\"Gilded spear\")\n\t.add(\"Gilded hasta\");\n\nexport const FirelighterTable = new LootTable()\n\t.add(\"Red firelighter\", [4, 10])\n\t.add(\"Green firelighter\", [4, 10])\n\t.add(\"Blue firelighter\", [4, 10])\n\t.add(\"Purple firelighter\", [4, 10])\n\t.add(\"White firelighter\", [4, 10]);\n\nexport const SubTeleportScrollTable = new LootTable()\n\t.add(\"Nardah teleport\", [5, 15])\n\t.add(\"Mos le'harmless teleport\", [5, 15])\n\t.add(\"Mort'ton teleport\", [5, 15])\n\t.add(\"Feldip hills teleport\", [5, 15])\n\t.add(\"Lunar isle teleport\", [5, 15])\n\t.add(\"Digsite teleport\", [5, 15])\n\t.add(\"Piscatoris teleport\", [5, 15])\n\t.add(\"Pest control teleport\", [5, 15])\n\t.add(\"Tai bwo wannai teleport\", [5, 15])\n\t.add(\"Lumberyard teleport\", [5, 15])\n\t.add(\"Charge dragonstone jewellery scroll\", [5, 15])\n\t.add(\"Iorwerth camp teleport\", [5, 15]);\n\nexport const TeleportScrollTable = new LootTable().add(\"Master scroll book (empty)\").add(SubTeleportScrollTable, 1, 21);\n\nexport const GiveHalfKeyTable = new LootTable().add(\"Loop half of key\").add(\"Tooth half of key\");\n\nexport const BlessingTable = new LootTable()\n\t.add(\"Holy blessing\")\n\t.add(\"Unholy blessing\")\n\t.add(\"Peaceful blessing\")\n\t.add(\"Honourable blessing\")\n\t.add(\"War blessing\")\n\t.add(\"Ancient blessing\")\n\t.add(\"Coins\", [10_000, 15_000], 7)\n\t.add(\"Purple sweets\", [8, 12], 7);\n", "import LootTable from \"../../structures/LootTable\";\nimport { itemID } from \"../../util\";\nimport { BlessingTable, FirelighterTable, PrayerPageTable, TeleportScrollTable } from \"./General\";\n\nexport const EasyChefTable = new LootTable().add(\"Golden apron\").add(\"Golden chef's hat\");\n\nexport const EasySubMonkTable = new LootTable().add(\"Monk's robe top (g)\").add(\"Monk's robe (g)\");\n\nexport const EasyMonkTable = new LootTable().add(\"Coins\", [3400, 6200], 4).add(EasySubMonkTable);\n\nexport const EasyCapeTable = new LootTable()\n\t.add(\"Team cape zero\")\n\t.add(\"Team cape i\")\n\t.add(\"Team cape x\")\n\t.add(\"Cape of skulls\");\n\nexport const EasyElegantTable = new LootTable()\n\t.add(\"Red elegant shirt\")\n\t.add(\"Red elegant legs\")\n\t.add(\"Red elegant blouse\")\n\t.add(\"Red elegant skirt\")\n\t.add(\"Green elegant shirt\")\n\t.add(\"Green elegant legs\")\n\t.add(\"Green elegant blouse\")\n\t.add(\"Green elegant skirt\")\n\t.add(\"Blue elegant shirt\")\n\t.add(\"Blue elegant legs\")\n\t.add(\"Blue elegant blouse\")\n\t.add(\"Blue elegant skirt\");\n\nexport const EasyRareTable = new LootTable()\n\t.add(\"Highwayman mask\")\n\t.add(\"Blue beret\")\n\t.add(\"Black beret\")\n\t.add(\"White beret\")\n\t.add(\"A powdered wig\")\n\t.add(\"Flared trousers\")\n\t.add(\"Pantaloons\")\n\t.add(\"Sleeping cap\")\n\t.add(\"Beanie\")\n\t.add(\"Imp mask\")\n\t.add(\"Goblin mask\")\n\t.add(\"Black cane\")\n\t.add(\"Red beret\")\n\t.add(\"Rain bow\")\n\t.add(\"Ham joint\")\n\t.add(\"Staff of bob the cat\")\n\t.add(\"Bob's red shirt\")\n\t.add(\"Bob's blue shirt\")\n\t.add(\"Bob's green shirt\")\n\t.add(\"Bob's black shirt\")\n\t.add(\"Bob's purple shirt\")\n\t.add(\"Black platebody (t)\")\n\t.add(\"Black platelegs (t)\")\n\t.add(\"Black plateskirt (t)\")\n\t.add(\"Black full helm (t)\")\n\t.add(\"Black kiteshield (t)\")\n\t.add(\"Studded body (t)\")\n\t.add(\"Studded chaps (t)\")\n\t.add(\"Blue skirt (t)\")\n\t.add(\"Blue wizard robe (t)\")\n\t.add(\"Blue wizard hat (t)\")\n\t.add(\"Bronze platebody (t)\")\n\t.add(\"Bronze platelegs (t)\")\n\t.add(\"Bronze plateskirt (t)\")\n\t.add(\"Bronze kiteshield (t)\")\n\t.add(\"Bronze full helm (t)\")\n\t.add(\"Iron platebody (t)\")\n\t.add(\"Iron platelegs (t)\")\n\t.add(\"Iron plateskirt (t)\")\n\t.add(\"Iron full helm (t)\")\n\t.add(\"Iron kiteshield (t)\")\n\t.add(\"Black wizard hat (t)\")\n\t.add(\"Black wizard robe (t)\")\n\t.add(\"Black skirt (t)\")\n\t.add(\"Steel full helm (t)\")\n\t.add(\"Steel platebody (t)\")\n\t.add(\"Steel platelegs (t)\")\n\t.add(\"Steel plateskirt (t)\")\n\t.add(\"Steel kiteshield (t)\")\n\t.add(\"Amulet of power (t)\")\n\t.add(\"Black platebody (g)\")\n\t.add(\"Black platelegs (g)\")\n\t.add(\"Black plateskirt (g)\")\n\t.add(\"Black full helm (g)\")\n\t.add(\"Black kiteshield (g)\")\n\t.add(\"Studded body (g)\")\n\t.add(\"Studded chaps (g)\")\n\t.add(\"Blue skirt (g)\")\n\t.add(\"Blue wizard robe (g)\")\n\t.add(\"Blue wizard hat (g)\")\n\t.add(\"Bronze platebody (g)\")\n\t.add(\"Bronze platelegs (g)\")\n\t.add(\"Bronze plateskirt (g)\")\n\t.add(\"Bronze kiteshield (g)\")\n\t.add(\"Bronze full helm (g)\")\n\t.add(\"Iron platebody (g)\")\n\t.add(\"Iron platelegs (g)\")\n\t.add(\"Iron plateskirt (g)\")\n\t.add(\"Iron kiteshield (g)\")\n\t.add(\"Iron full helm (g)\")\n\t.add(\"Black wizard hat (g)\")\n\t.add(\"Black wizard robe (g)\")\n\t.add(\"Black skirt (g)\")\n\t.add(\"Wooden shield (g)\")\n\t.add(\"Steel full helm (g)\")\n\t.add(\"Steel platebody (g)\")\n\t.add(\"Steel platelegs (g)\")\n\t.add(\"Steel plateskirt (g)\")\n\t.add(\"Steel kiteshield (g)\")\n\t.add(\"Leather body (g)\")\n\t.add(\"Leather chaps (g)\")\n\t.add(\"Black shield (h1)\")\n\t.add(\"Black shield (h2)\")\n\t.add(\"Black shield (h3)\")\n\t.add(\"Black shield (h4)\")\n\t.add(\"Black shield (h5)\")\n\t.add(\"Black helm (h1)\")\n\t.add(\"Black helm (h2)\")\n\t.add(\"Black helm (h3)\")\n\t.add(\"Black helm (h4)\")\n\t.add(\"Black helm (h5)\")\n\t.add(\"Black platebody (h1)\")\n\t.add(\"Black platebody (h2)\")\n\t.add(\"Black platebody (h3)\")\n\t.add(\"Black platebody (h4)\")\n\t.add(\"Black platebody (h5)\")\n\t.add(\"Saradomin robe top\")\n\t.add(\"Saradomin robe legs\")\n\t.add(\"Guthix robe top\")\n\t.add(\"Guthix robe legs\")\n\t.add(\"Zamorak robe top\")\n\t.add(\"Zamorak robe legs\")\n\t.add(\"Ancient robe top\")\n\t.add(\"Ancient robe legs\")\n\t.add(\"Armadyl robe top\")\n\t.add(\"Armadyl robe legs\")\n\t.add(\"Bandos robe top\")\n\t.add(\"Bandos robe legs\")\n\t.add(EasyChefTable)\n\t.add(EasyMonkTable)\n\t.add(EasyCapeTable)\n\t.add(EasyElegantTable, 1, 6);\n\nexport const EasyAmuletTable = new LootTable().add(\"Amulet of magic (t)\").add(\"Amulet of magic\", 1, 9);\n\nexport const EasyBlessingsTable = new LootTable().add(BlessingTable).add(\"Coins\", [3000, 7000], 2);\n\nexport const EasyBowTable = new LootTable().add(\"Willow comp bow\").add(\"Willow longbow\", 1, 9);\n\nexport const EasyStandardTable = new LootTable()\n\t.add(\"Coins\", [50, 200])\n\t.add(\"Trout\", [6, 10])\n\t.add(\"Salmon\", [6, 10])\n\t.add(\"Air rune\", [30, 50])\n\t.add(\"Fire rune\", [30, 50])\n\t.add(\"Water rune\", [30, 50])\n\t.add(\"Earth rune\", [30, 50])\n\t.add(\"Mind rune\", [30, 50])\n\t.add(\"Body rune\", [30, 50])\n\t.add(\"Law rune\", [5, 10])\n\t.add(\"Chaos rune\", [5, 10])\n\t.add(\"Nature rune\", [5, 10])\n\t.add(\"Purple sweets\", [2, 6])\n\t.add(\"Black platebody\")\n\t.add(\"Black longsword\")\n\t.add(\"Black full helm\")\n\t.add(\"Black platelegs\")\n\t.add(\"Black battleaxe\")\n\t.add(\"Black axe\")\n\t.add(\"Steel pickaxe\")\n\t.add(\"Black dagger\")\n\t.add(\"Staff of air\")\n\t.add(\"Studded chaps\")\n\t.add(\"Studded body\")\n\t.add(\"Willow shortbow\")\n\t.add(\"Coif\")\n\t.add(\"Black pickaxe\")\n\t.add(EasyAmuletTable)\n\t.add(EasyBlessingsTable)\n\t.add(EasyBowTable)\n\t.add(PrayerPageTable)\n\t.add(FirelighterTable)\n\t.add(TeleportScrollTable);\n\nexport const EasyClueTable = new LootTable().add(EasyStandardTable, 1, 11).add(EasyRareTable, 1, 1);\nexport const EasyCasket = new LootTable().add(EasyClueTable, [2, 4]).tertiary(50, \"Clue scroll (master)\");\nEasyCasket.allItems.push(itemID(\"Clue scroll (master)\"));\n", "import LootTable from \"../../structures/LootTable\";\nimport { itemID } from \"../../util\";\nimport {\n\tBlessingTable,\n\tFirelighterTable,\n\tGildedTable,\n\tGiveHalfKeyTable,\n\tPrayerPageTable,\n\tTeleportScrollTable,\n} from \"./General\";\n\nexport const Elite3rdageTable = new LootTable()\n\t.add(\"3rd age range coif\")\n\t.add(\"3rd age range top\")\n\t.add(\"3rd age range legs\")\n\t.add(\"3rd age vambraces\")\n\t.add(\"3rd age robe top\")\n\t.add(\"3rd age robe\")\n\t.add(\"3rd age mage hat\")\n\t.add(\"3rd age amulet\")\n\t.add(\"3rd age platelegs\")\n\t.add(\"3rd age platebody\")\n\t.add(\"3rd age full helmet\")\n\t.add(\"3rd age plateskirt\")\n\t.add(\"3rd age kiteshield\")\n\t.add(\"3rd age longsword\")\n\t.add(\"3rd age cloak\")\n\t.add(\"3rd age wand\")\n\t.add(\"3rd age bow\");\n\nexport const EliteMegaRareTable = new LootTable()\n\t.add(\"Gilded scimitar\")\n\t.add(\"Gilded boots\")\n\t.add(\"Battlestaff\", 100)\n\t.add(\"Crystal key\")\n\t.add(\"Lava dragon mask\")\n\t.add(\"Ranging potion(4)\", 30)\n\t.add(\"Saradomin brew(4)\", 30)\n\t.add(\"Super restore(4)\", 30)\n\t.add(\"Ring of nature\")\n\t.add(\"Extended antifire(4)\", 30)\n\t.add(\"Gilded coif\")\n\t.add(\"Gilded d'hide vambraces\")\n\t.add(\"Gilded d'hide body\")\n\t.add(\"Gilded d'hide chaps\")\n\t.add(\"Gilded pickaxe\")\n\t.add(\"Gilded axe\")\n\t.add(\"Gilded spade\")\n\t.add(GildedTable, 1, 5)\n\t.add(Elite3rdageTable);\n\nexport const EliteTuxedoTable = new LootTable()\n\t.add(\"Dark tuxedo jacket\")\n\t.add(\"Dark tuxedo cuffs\")\n\t.add(\"Dark trousers\")\n\t.add(\"Dark tuxedo shoes\")\n\t.add(\"Dark bow tie\")\n\t.add(\"Light tuxedo jacket\")\n\t.add(\"Light tuxedo cuffs\")\n\t.add(\"Light trousers\")\n\t.add(\"Light tuxedo shoes\")\n\t.add(\"Light bow tie\");\n\nexport const EliteRareTable = new LootTable()\n\t.add(\"Dragon cane\")\n\t.add(\"Briefcase\")\n\t.add(\"Sagacious spectacles\")\n\t.add(\"Royal crown\")\n\t.add(\"Royal sceptre\")\n\t.add(\"Royal gown top\")\n\t.add(\"Royal gown bottom\")\n\t.add(\"Fury ornament kit\")\n\t.add(\"Dragon chainbody ornament kit\")\n\t.add(\"Dragon legs/skirt ornament kit\")\n\t.add(\"Dragon sq shield ornament kit\")\n\t.add(\"Dragon full helm ornament kit\")\n\t.add(\"Bronze dragon mask\")\n\t.add(\"Iron dragon mask\")\n\t.add(\"Steel dragon mask\")\n\t.add(\"Mithril dragon mask\")\n\t.add(\"Afro\")\n\t.add(\"Katana\")\n\t.add(\"Big pirate hat\")\n\t.add(\"Top hat\")\n\t.add(\"Light infinity colour kit\")\n\t.add(\"Dark infinity colour kit\")\n\t.add(\"Black d'hide chaps (t)\")\n\t.add(\"Black d'hide chaps (g)\")\n\t.add(\"Black d'hide body (t)\")\n\t.add(\"Black d'hide body (g)\")\n\t.add(\"Musketeer hat\")\n\t.add(\"Musketeer tabard\")\n\t.add(\"Musketeer pants\")\n\t.add(\"Deerstalker\")\n\t.add(\"Blacksmith's helm\")\n\t.add(\"Arceuus scarf\")\n\t.add(\"Hosidius scarf\")\n\t.add(\"Lovakengj scarf\")\n\t.add(\"Piscarilius scarf\")\n\t.add(\"Shayzien scarf\")\n\t.add(\"Dragon scimitar ornament kit\")\n\t.add(\"Holy wraps\")\n\t.add(\"Ranger gloves\")\n\t.add(\"Bucket helm\")\n\t.add(\"Fremennik kilt\")\n\t.add(\"Adamant dragon mask\")\n\t.add(\"Rune dragon mask\")\n\t.add(\"Rangers' tights\")\n\t.add(\"Uri's hat\")\n\t.add(\"Giant boot\")\n\t.add(\"Rangers' tunic\")\n\t.add(\"Monocle\")\n\t.add(EliteMegaRareTable, 1, 2)\n\t.add(EliteTuxedoTable);\n\nexport const EliteSeedTable = new LootTable().add(\"Magic seed\").add(\"Yew seed\").add(\"Palm tree seed\");\n\nexport const EliteStandardTable = new LootTable()\n\t.add(\"Coins\", [20_000, 30_000])\n\t.add(\"Tuna potato\", [15, 20])\n\t.add(\"Summer pie\", [15, 20])\n\t.add(\"Law rune\", [50, 75])\n\t.add(\"Death rune\", [50, 75])\n\t.add(\"Blood rune\", [50, 75])\n\t.add(\"Soul rune\", [50, 75])\n\t.add(\"Oak plank\", [60, 80])\n\t.add(\"Purple sweets\", [9, 23])\n\t.add(\"Teak plank\", [40, 50])\n\t.add(\"Mahogany plank\", [20, 30])\n\t.add(\"Dragonstone bracelet\")\n\t.add(\"Dragon necklace\")\n\t.add(\"Dragonstone ring\")\n\t.add(\"Runite bar\", [1, 3])\n\t.add(\"Onyx bolt tips\", [8, 12])\n\t.add(\"Dragon dagger\")\n\t.add(\"Dragon longsword\")\n\t.add(\"Rune platebody\")\n\t.add(\"Rune platelegs\")\n\t.add(\"Rune plateskirt\")\n\t.add(\"Rune kiteshield\")\n\t.add(\"Dragon mace\")\n\t.add(\"Rune crossbow\")\n\t.add(EliteSeedTable)\n\t.add(PrayerPageTable)\n\t.add(FirelighterTable)\n\t.add(GiveHalfKeyTable)\n\t.add(TeleportScrollTable, 1, 2)\n\t.add(BlessingTable);\n\nexport const EliteClueTable = new LootTable().add(EliteStandardTable, 1, 24).add(EliteRareTable, 1, 1);\nexport const EliteCasket = new LootTable().add(EliteClueTable, [4, 6]).tertiary(5, \"Clue scroll (master)\");\nEliteCasket.allItems.push(itemID(\"Clue scroll (master)\"));\n", "import LootTable from \"../../structures/LootTable\";\nimport { itemID, itemTupleToTable } from \"../../util\";\nimport { BlessingTable, FirelighterTable, GildedTable, PrayerPageTable, TeleportScrollTable } from \"./General\";\n\nexport const Hard3rdageTable = new LootTable()\n\t.add(\"3rd age range coif\")\n\t.add(\"3rd age range top\")\n\t.add(\"3rd age range legs\")\n\t.add(\"3rd age vambraces\")\n\t.add(\"3rd age robe top\")\n\t.add(\"3rd age robe\")\n\t.add(\"3rd age mage hat\")\n\t.add(\"3rd age amulet\")\n\t.add(\"3rd age platelegs\")\n\t.add(\"3rd age platebody\")\n\t.add(\"3rd age full helmet\")\n\t.add(\"3rd age plateskirt\")\n\t.add(\"3rd age kiteshield\");\n\nexport const HardMegaRareTable = new LootTable()\n\t.add(\"Super energy(4)\", 15)\n\t.add(\"Super restore(4)\", 15)\n\t.add(\"Antifire potion(4)\", 15)\n\t.add(\n\t\titemTupleToTable([\n\t\t\t[\"Super attack(4)\", 5],\n\t\t\t[\"Super strength(4)\", 5],\n\t\t\t[\"Super defence(4)\", 5],\n\t\t]),\n\t)\n\t.add(Hard3rdageTable)\n\t.add(GildedTable, 1, 5);\n\nexport const HardBlessedShields = new LootTable()\n\t.add(\"Guthix d'hide shield\")\n\t.add(\"Saradomin d'hide shield\")\n\t.add(\"Zamorak d'hide shield\")\n\t.add(\"Ancient d'hide shield\")\n\t.add(\"Armadyl d'hide shield\")\n\t.add(\"Bandos d'hide shield\");\n\nexport const HardHeralicPlatebody = new LootTable()\n\t.add(\"Rune platebody (h1)\")\n\t.add(\"Rune platebody (h2)\")\n\t.add(\"Rune platebody (h3)\")\n\t.add(\"Rune platebody (h4)\")\n\t.add(\"Rune platebody (h5)\");\n\nexport const HardRareTable = new LootTable()\n\t.add(\"Robin hood hat\")\n\t.add(\"Tan cavalier\")\n\t.add(\"Dark cavalier\")\n\t.add(\"Black cavalier\")\n\t.add(\"White cavalier\")\n\t.add(\"Red cavalier\")\n\t.add(\"Navy cavalier\")\n\t.add(\"Pirate's hat\")\n\t.add(\"Enchanted hat\")\n\t.add(\"Enchanted top\")\n\t.add(\"Enchanted robe\")\n\t.add(\"Amulet of glory (t4)\")\n\t.add(\"Pith helmet\")\n\t.add(\"Explorer backpack\")\n\t.add(19_912) // Zombie head\n\t.add(\"Nunchaku\")\n\t.add(\"Cyclops head\")\n\t.add(\"Dragon boots ornament kit\")\n\t.add(\"Dual sai\")\n\t.add(\"Thieving bag\")\n\t.add(\"Rune defender ornament kit\")\n\t.add(\"Tzhaar-ket-om ornament kit\")\n\t.add(\"Berserker necklace ornament kit\")\n\t.add(\"Rune cane\")\n\t.add(\"Green dragon mask\")\n\t.add(\"Blue dragon mask\")\n\t.add(\"Red dragon mask\")\n\t.add(\"Black dragon mask\")\n\t.add(\"Rune platebody (t)\")\n\t.add(\"Rune platelegs (t)\")\n\t.add(\"Rune plateskirt (t)\")\n\t.add(\"Rune kiteshield (t)\")\n\t.add(\"Rune full helm (t)\")\n\t.add(\"Rune platebody (g)\")\n\t.add(\"Rune platelegs (g)\")\n\t.add(\"Rune plateskirt (g)\")\n\t.add(\"Rune kiteshield (g)\")\n\t.add(\"Rune full helm (g)\")\n\t.add(\"Rune helm (h1)\")\n\t.add(\"Rune helm (h2)\")\n\t.add(\"Rune helm (h3)\")\n\t.add(\"Rune helm (h4)\")\n\t.add(\"Rune helm (h5)\")\n\t.add(\"Rune shield (h1)\")\n\t.add(\"Rune shield (h2)\")\n\t.add(\"Rune shield (h3)\")\n\t.add(\"Rune shield (h4)\")\n\t.add(\"Rune shield (h5)\")\n\t.add(\"Zamorak platebody\")\n\t.add(\"Zamorak platelegs\")\n\t.add(\"Zamorak plateskirt\")\n\t.add(\"Zamorak kiteshield\")\n\t.add(\"Zamorak full helm\")\n\t.add(\"Zamorak bracers\")\n\t.add(\"Zamorak d'hide body\")\n\t.add(\"Zamorak chaps\")\n\t.add(\"Zamorak coif\")\n\t.add(\"Zamorak crozier\")\n\t.add(\"Zamorak stole\")\n\t.add(\"Zamorak d'hide boots\")\n\t.add(\"Saradomin platebody\")\n\t.add(\"Saradomin platelegs\")\n\t.add(\"Saradomin plateskirt\")\n\t.add(\"Saradomin kiteshield\")\n\t.add(\"Saradomin full helm\")\n\t.add(\"Saradomin bracers\")\n\t.add(\"Saradomin d'hide body\")\n\t.add(\"Saradomin chaps\")\n\t.add(\"Saradomin coif\")\n\t.add(\"Saradomin crozier\")\n\t.add(\"Saradomin stole\")\n\t.add(\"Saradomin d'hide boots\")\n\t.add(\"Guthix platebody\")\n\t.add(\"Guthix platelegs\")\n\t.add(\"Guthix plateskirt\")\n\t.add(\"Guthix kiteshield\")\n\t.add(\"Guthix full helm\")\n\t.add(\"Guthix bracers\")\n\t.add(\"Guthix d'hide body\")\n\t.add(\"Guthix chaps\")\n\t.add(\"Guthix coif\")\n\t.add(\"Guthix crozier\")\n\t.add(\"Guthix stole\")\n\t.add(\"Guthix d'hide boots\")\n\t.add(\"Bandos platebody\")\n\t.add(\"Bandos platelegs\")\n\t.add(\"Bandos plateskirt\")\n\t.add(\"Bandos kiteshield\")\n\t.add(\"Bandos full helm\")\n\t.add(\"Bandos bracers\")\n\t.add(\"Bandos d'hide body\")\n\t.add(\"Bandos chaps\")\n\t.add(\"Bandos coif\")\n\t.add(\"Bandos d'hide boots\")\n\t.add(\"Armadyl platebody\")\n\t.add(\"Armadyl platelegs\")\n\t.add(\"Armadyl plateskirt\")\n\t.add(\"Armadyl kiteshield\")\n\t.add(\"Armadyl full helm\")\n\t.add(\"Armadyl bracers\")\n\t.add(\"Armadyl d'hide body\")\n\t.add(\"Armadyl chaps\")\n\t.add(\"Armadyl coif\")\n\t.add(\"Armadyl d'hide boots\")\n\t.add(\"Ancient platebody\")\n\t.add(\"Ancient platelegs\")\n\t.add(\"Ancient plateskirt\")\n\t.add(\"Ancient kiteshield\")\n\t.add(\"Ancient full helm\")\n\t.add(\"Ancient bracers\")\n\t.add(\"Ancient d'hide body\")\n\t.add(\"Ancient chaps\")\n\t.add(\"Ancient coif\")\n\t.add(\"Ancient d'hide boots\")\n\t.add(\"Blue d'hide body (t)\")\n\t.add(\"Blue d'hide chaps (t)\")\n\t.add(\"Blue d'hide body (g)\")\n\t.add(\"Blue d'hide chaps (g)\")\n\t.add(\"Red d'hide body (t)\")\n\t.add(\"Red d'hide chaps (t)\")\n\t.add(\"Red d'hide body (g)\")\n\t.add(\"Red d'hide chaps (g)\")\n\t.add(HardMegaRareTable)\n\t.add(HardBlessedShields)\n\t.add(HardHeralicPlatebody);\n\nexport const HardBowTable = new LootTable().add(\"Magic comp bow\").add(\"Magic longbow\", 1, 9);\n\nexport const HardStandardTable = new LootTable()\n\t.add(\"Coins\", [1000, 5000])\n\t.add(\"Lobster\", [12, 15])\n\t.add(\"Shark\", [12, 15])\n\t.add(\"Law rune\", [30, 50])\n\t.add(\"Blood rune\", [20, 30])\n\t.add(\"Nature rune\", [30, 50])\n\t.add(\"Purple sweets\", [7, 15])\n\t.add(\"Rune longsword\")\n\t.add(\"Rune full helm\")\n\t.add(\"Rune platelegs\")\n\t.add(\"Rune battleaxe\")\n\t.add(\"Rune axe\")\n\t.add(\"Rune pickaxe\")\n\t.add(\"Rune dagger\")\n\t.add(\"Rune platebody\")\n\t.add(\"Rune platelegs\")\n\t.add(\"Rune plateskirt\")\n\t.add(\"Rune kiteshield\")\n\t.add(\"Black d'hide chaps\")\n\t.add(\"Black d'hide body\")\n\t.add(\"Magic shortbow\")\n\t.add(PrayerPageTable)\n\t.add(FirelighterTable)\n\t.add(TeleportScrollTable)\n\t.add(BlessingTable)\n\t.add(HardBowTable);\n\nexport const HardClueTable = new LootTable().add(HardStandardTable, 1, 12).add(HardRareTable, 1, 1);\nexport const HardCasket = new LootTable().add(HardClueTable, [4, 6]).tertiary(15, \"Clue scroll (master)\");\nHardCasket.allItems.push(itemID(\"Clue scroll (master)\"));\n", "import LootTable from \"../../structures/LootTable\";\nimport {\n\tBlessingTable,\n\tFirelighterTable,\n\tGildedTable,\n\tGiveHalfKeyTable,\n\tPrayerPageTable,\n\tTeleportScrollTable,\n} from \"./General\";\n\nexport const MasterGodSwordOrnTable = new LootTable()\n\t.add(\"Armadyl godsword ornament kit\")\n\t.add(\"Bandos godsword ornament kit\")\n\t.add(\"Zamorak godsword ornament kit\")\n\t.add(\"Saradomin godsword ornament kit\");\n\nexport const MasterSubAnkouOutfitTable = new LootTable()\n\t.add(\"Ankou mask\")\n\t.add(\"Ankou top\")\n\t.add(\"Ankou's leggings\")\n\t.add(\"Ankou gloves\")\n\t.add(\"Ankou socks\");\n\nexport const MasterAnkouOutfitTable = new LootTable().add(\"Coins\", [15_000, 30_000], 2).add(MasterSubAnkouOutfitTable);\n\nexport const MasterSubMummyOutfitTable = new LootTable()\n\t.add(\"Mummy's head\")\n\t.add(\"Mummy's body\")\n\t.add(\"Mummy's legs\")\n\t.add(\"Mummy's hands\")\n\t.add(\"Mummy's feet\");\n\nexport const MasterMummyOutfitTable = new LootTable().add(\"Coins\", [15_000, 30_000], 2).add(MasterSubMummyOutfitTable);\n\nexport const MasterSubDragonOrnTable = new LootTable()\n\t.add(\"Dragon kiteshield ornament kit\")\n\t.add(\"Dragon platebody ornament kit\", 1, 2);\n\nexport const MasterDragonOrnTable = new LootTable().add(\"Coins\", [15_000, 30_000], 9).add(MasterSubDragonOrnTable);\n\nexport const Master3rdageTable = new LootTable()\n\t.add(\"3rd age range coif\")\n\t.add(\"3rd age range top\")\n\t.add(\"3rd age range legs\")\n\t.add(\"3rd age vambraces\")\n\t.add(\"3rd age robe top\")\n\t.add(\"3rd age robe\")\n\t.add(\"3rd age mage hat\")\n\t.add(\"3rd age amulet\")\n\t.add(\"3rd age platelegs\")\n\t.add(\"3rd age platebody\")\n\t.add(\"3rd age full helmet\")\n\t.add(\"3rd age plateskirt\")\n\t.add(\"3rd age kiteshield\")\n\t.add(\"3rd age longsword\")\n\t.add(\"3rd age cloak\")\n\t.add(\"3rd age wand\")\n\t.add(\"3rd age bow\")\n\t.add(\"3rd age druidic staff\")\n\t.add(\"3rd age druidic cloak\")\n\t.add(\"3rd age druidic robe top\")\n\t.add(\"3rd age druidic robe bottoms\")\n\t.add(\"3rd age pickaxe\")\n\t.add(\"3rd age axe\");\n\nexport const MasterMegaRareTable = new LootTable()\n\t.add(\"Gilded scimitar\")\n\t.add(\"Bucket helm (g)\")\n\t.add(\"Gilded boots\")\n\t.add(\"Ring of coins\")\n\t.add(\"Cabbage\", 3)\n\t.add(\"Anti-venom+(4)\", 15)\n\t.add(\"Torstol\", 50)\n\t.add(\"Gilded coif\")\n\t.add(\"Gilded d'hide vambraces\")\n\t.add(\"Gilded d'hide body\")\n\t.add(\"Gilded d'hide chaps\")\n\t.add(\"Gilded pickaxe\")\n\t.add(\"Gilded axe\")\n\t.add(\"Gilded spade\")\n\t.add(Master3rdageTable)\n\t.add(GildedTable);\n\nexport const MasterRareTable = new LootTable()\n\t.add(\"Left eye patch\")\n\t.add(\"Bowl wig\")\n\t.add(\"Ale of the gods\")\n\t.add(\"Half moon spectacles\")\n\t.add(\"Fancy tiara\")\n\t.add(\"Hood of darkness\")\n\t.add(\"Robe top of darkness\")\n\t.add(\"Gloves of darkness\")\n\t.add(\"Robe bottom of darkness\")\n\t.add(\"Boots of darkness\")\n\t.add(\"Obsidian cape (r)\")\n\t.add(\"Occult ornament kit\")\n\t.add(\"Torture ornament kit\")\n\t.add(\"Dragon defender ornament kit\")\n\t.add(\"Samurai kasa\")\n\t.add(\"Samurai shirt\")\n\t.add(\"Samurai greaves\")\n\t.add(\"Samurai boots\")\n\t.add(\"Samurai gloves\")\n\t.add(\"Arceuus hood\")\n\t.add(\"Hosidius hood\")\n\t.add(\"Lovakengj hood\")\n\t.add(\"Piscarilius hood\")\n\t.add(\"Shayzien hood\")\n\t.add(\"Lesser demon mask\")\n\t.add(\"Greater demon mask\")\n\t.add(\"Black demon mask\")\n\t.add(\"Jungle demon mask\")\n\t.add(\"Old demon mask\")\n\t.add(\"Anguish ornament kit\")\n\t.add(\"Tormented ornament kit\")\n\t.add(MasterMegaRareTable)\n\t.add(PrayerPageTable)\n\t.add(MasterGodSwordOrnTable)\n\t.add(MasterAnkouOutfitTable)\n\t.add(MasterMummyOutfitTable)\n\t.add(MasterDragonOrnTable);\n\nexport const MasterSeedTable = new LootTable()\n\t.add(\"Magic seed\", [1, 2])\n\t.add(\"Yew seed\", [1, 2])\n\t.add(\"Palm tree seed\", [1, 2]);\n\nexport const MasterStandardTable = new LootTable()\n\t.add(\"Coins\", [20_000, 35_000])\n\t.add(\"Manta ray\", [15, 25])\n\t.add(\"Nature rune\", [100, 200])\n\t.add(\"Death rune\", [100, 200])\n\t.add(\"Blood rune\", [100, 200])\n\t.add(\"Soul rune\", [100, 200])\n\t.add(\"Limpwurt root\", [40, 60])\n\t.add(\"Purple sweets\", [14, 33])\n\t.add(\"Runite ore\", [5, 8])\n\t.add(\"Wine of zamorak\", [35, 50])\n\t.add(\"Grimy toadflax\", [25, 35])\n\t.add(\"Grimy ranarr weed\", [5, 10])\n\t.add(\"Grimy snapdragon\", [5, 10])\n\t.add(\"Runite bar\", [5, 7])\n\t.add(\"Onyx bolts (e)\", [15, 25])\n\t.add(\"Dragon dagger\")\n\t.add(\"Dragon longsword\")\n\t.add(\"Dragon battleaxe\")\n\t.add(\"Dragon scimitar\")\n\t.add(\"Dragon halberd\")\n\t.add(\"Black dragonhide\", [5, 25])\n\t.add(\"Dragon mace\")\n\t.add(PrayerPageTable)\n\t.add(FirelighterTable)\n\t.add(TeleportScrollTable, 1, 2)\n\t.add(MasterSeedTable)\n\t.add(GiveHalfKeyTable)\n\t.add(BlessingTable);\n\nexport const MasterClueTable = new LootTable().add(MasterStandardTable, 1, 22).add(MasterRareTable, 1, 1);\n\nexport const MasterCasket = new LootTable().add(MasterClueTable, [5, 7]).tertiary(1000, \"Bloodhound\");\n", "import LootTable from \"../../structures/LootTable\";\nimport { BlessingTable, PrayerPageTable, TeleportScrollTable } from \"./General\";\n\nexport const MediumUnicornTable = new LootTable().add(\"White unicorn mask\").add(\"Black unicorn mask\");\n\nexport const MediumElegantTable = new LootTable()\n\t.add(\"Purple elegant shirt\")\n\t.add(\"Purple elegant legs\")\n\t.add(\"Purple elegant blouse\")\n\t.add(\"Purple elegant skirt\")\n\t.add(\"Black elegant shirt\")\n\t.add(\"Black elegant legs\")\n\t.add(\"White elegant blouse\")\n\t.add(\"White elegant skirt\")\n\t.add(\"Pink elegant shirt\")\n\t.add(\"Pink elegant legs\")\n\t.add(\"Pink elegant blouse\")\n\t.add(\"Pink elegant skirt\")\n\t.add(\"Gold elegant shirt\")\n\t.add(\"Gold elegant legs\")\n\t.add(\"Gold elegant blouse\")\n\t.add(\"Gold elegant skirt\");\n\nexport const MediumRareTable = new LootTable()\n\t.add(\"Ranger boots\")\n\t.add(\"Wizard boots\")\n\t.add(\"Leprechaun hat\")\n\t.add(\"Cat mask\")\n\t.add(\"Penguin mask\")\n\t.add(\"Crier hat\")\n\t.add(\"Adamant cane\")\n\t.add(\"Cabbage round shield\")\n\t.add(\"Crier coat\")\n\t.add(\"Crier bell\")\n\t.add(\"Black leprechaun hat\")\n\t.add(\"Holy sandals\")\n\t.add(\"Wolf mask\")\n\t.add(\"Wolf cloak\")\n\t.add(\"Spiked manacles\")\n\t.add(\"Red headband\")\n\t.add(\"Black headband\")\n\t.add(\"Brown headband\")\n\t.add(\"White headband\")\n\t.add(\"Blue headband\")\n\t.add(\"Gold headband\")\n\t.add(\"Pink headband\")\n\t.add(\"Green headband\")\n\t.add(\"Red boater\")\n\t.add(\"Orange boater\")\n\t.add(\"Green boater\")\n\t.add(\"Black boater\")\n\t.add(\"Blue boater\")\n\t.add(\"Pink boater\")\n\t.add(\"Purple boater\")\n\t.add(\"White boater\")\n\t.add(\"Adamant platebody (t)\")\n\t.add(\"Adamant platelegs (t)\")\n\t.add(\"Adamant kiteshield (t)\")\n\t.add(\"Adamant full helm (t)\")\n\t.add(\"Adamant plateskirt (t)\")\n\t.add(\"Mithril platebody (t)\")\n\t.add(\"Mithril platelegs (t)\")\n\t.add(\"Mithril plateskirt (t)\")\n\t.add(\"Mithril kiteshield (t)\")\n\t.add(\"Mithril full helm (t)\")\n\t.add(\"Adamant platebody (g)\")\n\t.add(\"Adamant platelegs (g)\")\n\t.add(\"Adamant kiteshield (g)\")\n\t.add(\"Adamant full helm (g)\")\n\t.add(\"Adamant plateskirt (g)\")\n\t.add(\"Mithril platebody (g)\")\n\t.add(\"Mithril platelegs (g)\")\n\t.add(\"Mithril plateskirt (g)\")\n\t.add(\"Mithril kiteshield (g)\")\n\t.add(\"Mithril full helm (g)\")\n\t.add(\"Climbing boots (g)\")\n\t.add(\"Adamant shield (h1)\")\n\t.add(\"Adamant shield (h2)\")\n\t.add(\"Adamant shield (h3)\")\n\t.add(\"Adamant shield (h4)\")\n\t.add(\"Adamant shield (h5)\")\n\t.add(\"Adamant helm (h1)\")\n\t.add(\"Adamant helm (h2)\")\n\t.add(\"Adamant helm (h3)\")\n\t.add(\"Adamant helm (h4)\")\n\t.add(\"Adamant helm (h5)\")\n\t.add(\"Adamant platebody (h1)\")\n\t.add(\"Adamant platebody (h2)\")\n\t.add(\"Adamant platebody (h3)\")\n\t.add(\"Adamant platebody (h4)\")\n\t.add(\"Adamant platebody (h5)\")\n\t.add(\"Green d'hide body (g)\")\n\t.add(\"Green d'hide body (t)\")\n\t.add(\"Green d'hide chaps (g)\")\n\t.add(\"Green d'hide chaps (t)\")\n\t.add(\"Saradomin mitre\")\n\t.add(\"Guthix mitre\")\n\t.add(\"Zamorak mitre\")\n\t.add(\"Ancient mitre\")\n\t.add(\"Armadyl mitre\")\n\t.add(\"Bandos mitre\")\n\t.add(\"Saradomin cloak\")\n\t.add(\"Guthix cloak\")\n\t.add(\"Zamorak cloak\")\n\t.add(\"Ancient cloak\")\n\t.add(\"Armadyl cloak\")\n\t.add(\"Bandos cloak\")\n\t.add(\"Ancient stole\")\n\t.add(\"Bandos stole\")\n\t.add(\"Armadyl stole\")\n\t.add(\"Ancient crozier\")\n\t.add(\"Armadyl crozier\")\n\t.add(\"Bandos crozier\")\n\t.add(\"Arceuus banner\")\n\t.add(\"Piscarilius banner\")\n\t.add(\"Hosidius banner\")\n\t.add(\"Shayzien banner\")\n\t.add(\"Lovakengj banner\")\n\t.add(MediumUnicornTable)\n\t.add(MediumElegantTable, 1, 8);\n\n// For some reason the medium table has 1 less firelighter chance?\nexport const MediumSubFirelighterTable = new LootTable()\n\t.add(\"Red firelighter\", [4, 9])\n\t.add(\"Green firelighter\", [4, 9])\n\t.add(\"Blue firelighter\", [4, 9])\n\t.add(\"Purple firelighter\", [4, 9])\n\t.add(\"White firelighter\", [4, 9]);\n\nexport const MediumFirelighterTable = new LootTable().add(\"Gnomish firelighter\").add(MediumSubFirelighterTable, 1, 9);\n\nexport const MediumAmuletTable = new LootTable().add(\"Strength amulet (t)\").add(\"Amulet of power\", 1, 9);\n\nexport const MediumBowTable = new LootTable().add(\"Yew comp bow\").add(\"Yew longbow\", 1, 9);\n\nexport const MediumStandardTable = new LootTable()\n\t.add(\"Coins\", [200, 1000])\n\t.add(\"Lobster\", [8, 12])\n\t.add(\"Swordfish\", [8, 12])\n\t.add(\"Air rune\", [50, 100])\n\t.add(\"Fire rune\", [50, 100])\n\t.add(\"Water rune\", [50, 100])\n\t.add(\"Earth rune\", [50, 100])\n\t.add(\"Mind rune\", [50, 100])\n\t.add(\"Death rune\", [10, 10])\n\t.add(\"Law rune\", [10, 10])\n\t.add(\"Chaos rune\", [10, 10])\n\t.add(\"Nature rune\", [10, 10])\n\t.add(\"Adamant longsword\")\n\t.add(\"Adamant full helm\")\n\t.add(\"Adamant platelegs\")\n\t.add(\"Adamant battleaxe\")\n\t.add(\"Adamant axe\")\n\t.add(\"Adamant pickaxe\")\n\t.add(\"Adamant dagger\")\n\t.add(\"Adamant platebody\")\n\t.add(\"Purple sweets\", [5, 10])\n\t.add(\"Fire battlestaff\")\n\t.add(\"Green d'hide chaps\")\n\t.add(\"Green d'hide body\")\n\t.add(\"Yew shortbow\")\n\t.add(PrayerPageTable)\n\t.add(TeleportScrollTable)\n\t.add(BlessingTable)\n\t.add(MediumFirelighterTable)\n\t.add(MediumAmuletTable)\n\t.add(MediumBowTable);\n\nexport const MediumClueTable = new LootTable().add(MediumStandardTable, 1, 10).add(MediumRareTable, 1, 1);\n\nexport const MediumCasket = new LootTable().add(MediumClueTable, [3, 5]).tertiary(30, \"Clue scroll (master)\");\n", "import LootTable from \"../../structures/LootTable\";\nimport SimpleOpenable from \"../../structures/SimpleOpenable\";\nimport { EasyClueTable } from \"../clues/Easy\";\nimport { EliteClueTable } from \"../clues/Elite\";\nimport { HardClueTable } from \"../clues/Hard\";\nimport { MasterClueTable } from \"../clues/Master\";\nimport { MediumClueTable } from \"../clues/Medium\";\n\nexport const BabyImpling = new SimpleOpenable({\n\tid: 11_238,\n\tname: \"Baby impling\",\n\taliases: [\"baby impling\", \"baby imp\", \"baby\"],\n\ttable: new LootTable()\n\t\t.add(\"Chisel\", 1, 10)\n\t\t.add(\"Thread\", 1, 10)\n\t\t.add(\"Needle\", 1, 10)\n\t\t.add(\"Knife\", 1, 10)\n\t\t.add(\"Cheese\", 1, 10)\n\t\t.add(\"Hammer\", 1, 10)\n\t\t.add(\"Ball of wool\", 1, 10)\n\t\t.add(\"Anchovies\", 1, 10)\n\t\t// 'Nothing' drop:\n\t\t.add(new LootTable(), 1, 10)\n\t\t.add(\"Spice\")\n\t\t.add(\"Flax\")\n\t\t.add(\"Mud pie\")\n\t\t.add(\"Seaweed\")\n\t\t.add(\"Air talisman\")\n\t\t.add(\"Silver bar\")\n\t\t.add(\"Sapphire\")\n\t\t.add(\"Hard leather\")\n\t\t.add(\"Lobster\")\n\t\t.add(\"Soft clay\")\n\t\t.tertiary(50, \"Clue scroll (beginner)\")\n\t\t.tertiary(100, \"Clue scroll (easy)\"),\n});\n\nexport const YoungImpling = new SimpleOpenable({\n\tid: 11_240,\n\tname: \"Young impling\",\n\taliases: [\"young impling\", \"young imp\", \"young\"],\n\ttable: new LootTable()\n\t\t.add(\"Steel nails\", 1, 10)\n\t\t.add(\"Lockpick\", 1, 10)\n\t\t.add(\"Pure essence\", 1, 10)\n\t\t.add(\"Tuna\", 1, 10)\n\t\t.add(\"Chocolate slice\", 1, 10)\n\t\t.add(\"Steel axe\", 1, 10)\n\t\t.add(\"Meat pizza\", 1, 10)\n\t\t.add(\"Coal\", 1, 10)\n\t\t.add(\"Bow string\", 1, 10)\n\t\t.add(\"Snape grass\")\n\t\t.add(\"Soft clay\")\n\t\t.add(\"Studded chaps\")\n\t\t.add(\"Steel full helm\")\n\t\t.add(\"Oak plank\")\n\t\t.add(\"Defence potion(3)\")\n\t\t.add(\"Mithril bar\")\n\t\t.add(\"Yew longbow\")\n\t\t.add(\"Garden pie\")\n\t\t.add(\"Jangerberries\")\n\t\t.tertiary(25, \"Clue scroll (beginner)\")\n\t\t.tertiary(50, \"Clue scroll (easy)\"),\n});\n\nexport const GourmetImpling = new SimpleOpenable({\n\tid: 11_242,\n\tname: \"Gourmet impling\",\n\taliases: [\"gourmet impling\", \"gourmet imp\", \"gourmet\"],\n\ttable: new LootTable()\n\t\t.oneIn(500, \"Grubby key\")\n\t\t.add(\"Tuna\", 1, 20)\n\t\t.add(\"Bass\", 1, 10)\n\t\t.add(\"Curry\", 1, 10)\n\t\t.add(\"Meat pie\", 1, 10)\n\t\t.add(\"Chocolate cake\", 1, 10)\n\t\t.add(\"Frog spawn\", 1, 10)\n\t\t.add(\"Spice\", 1, 10)\n\t\t.add(\"Curry leaf\", 1, 10)\n\t\t.add(\"Ugthanki kebab\")\n\t\t.add(\"Lobster\", 4)\n\t\t.add(\"Shark\", 3)\n\t\t.add(\"Fish pie\")\n\t\t.add(\"Chef's delight\")\n\t\t.add(\"Rainbow fish\", 5)\n\t\t.add(\"Garden pie\", 6)\n\t\t.add(\"Swordfish\", 3)\n\t\t.add(\"Strawberries(5)\")\n\t\t.add(\"Cooked karambwan\", 2)\n\t\t.tertiary(25, \"Clue scroll (easy)\"),\n});\n\nexport const EarthImpling = new SimpleOpenable({\n\tid: 11_244,\n\tname: \"Earth impling\",\n\taliases: [\"earth impling\", \"earth imp\", \"earth\"],\n\ttable: new LootTable()\n\t\t.add(\"Fire talisman\", 1, 10)\n\t\t.add(\"Earth talisman\", 1, 10)\n\t\t.add(\"Earth tiara\", 1, 10)\n\t\t.add(\"Earth rune\", 32, 10)\n\t\t.add(\"Mithril ore\", 1, 10)\n\t\t.add(\"Bucket of sand\", 4, 10)\n\t\t.add(\"Unicorn horn\", 1, 10)\n\t\t.add(\"Compost\", 6, 10)\n\t\t.add(\"Gold ore\", 1, 10)\n\t\t.add(\"Steel bar\")\n\t\t.add(\"Mithril pickaxe\")\n\t\t.add(\"Wildblood seed\", 2)\n\t\t.add(\"Jangerberry seed\", 2)\n\t\t.add(\"Supercompost\", 2)\n\t\t.add(\"Mithril ore\", 3)\n\t\t.add(\"Harralander seed\", 2)\n\t\t.add(\"Coal\", 6)\n\t\t.add(\"Emerald\", 2)\n\t\t.add(\"Ruby\")\n\t\t.tertiary(100, \"Clue scroll (medium)\"),\n});\n\nexport const EssenceImpling = new SimpleOpenable({\n\tid: 11_246,\n\tname: \"Essence impling\",\n\taliases: [\"essence impling\", \"essence imp\", \"essence\"],\n\ttable: new LootTable()\n\t\t.add(\"Pure essence\", 20, 10)\n\t\t.add(\"Water rune\", 30, 10)\n\t\t.add(\"Air rune\", 30, 10)\n\t\t.add(\"Fire rune\", 50, 10)\n\t\t.add(\"Mind rune\", 25, 10)\n\t\t.add(\"Body rune\", 28, 10)\n\t\t.add(\"Chaos rune\", 4, 10)\n\t\t.add(\"Cosmic rune\", 4, 10)\n\t\t.add(\"Mind talisman\", 1, 10)\n\t\t.add(\"Pure essence\", 35)\n\t\t.add(\"Lava rune\", 4)\n\t\t.add(\"Mud rune\", 4)\n\t\t.add(\"Smoke rune\", 4)\n\t\t.add(\"Steam rune\", 4)\n\t\t.add(\"Death rune\", 13)\n\t\t.add(\"Law rune\", 13)\n\t\t.add(\"Blood rune\", 7)\n\t\t.add(\"Soul rune\", 11)\n\t\t.add(\"Nature rune\", 13)\n\t\t.tertiary(50, \"Clue scroll (medium)\"),\n});\n\nexport const EclecticImpling = new SimpleOpenable({\n\tid: 11_248,\n\tname: \"Eclectic impling\",\n\taliases: [\"eclectic impling\", \"eclectic imp\", \"ecl\", \"eclectic\"],\n\ttable: new LootTable()\n\t\t.add(\"Mithril pickaxe\", 1, 10)\n\t\t.add(\"Curry leaf\", 1, 10)\n\t\t.add(\"Snape grass\", 1, 10)\n\t\t.add(\"Air rune\", [30, 58], 10)\n\t\t.add(\"Oak plank\", 4, 10)\n\t\t.add(\"Empty candle lantern\", 1, 10)\n\t\t.add(\"Gold ore\", 1, 10)\n\t\t.add(\"Gold bar\", 5, 10)\n\t\t.add(\"Unicorn horn\", 1, 10)\n\t\t.add(\"Adamant kiteshield\")\n\t\t.add(\"Blue d'hide chaps\")\n\t\t.add(\"Red spiky vambraces\")\n\t\t.add(\"Rune dagger\")\n\t\t.add(\"Battlestaff\")\n\t\t.add(\"Adamantite ore\", 10)\n\t\t.add(\"Slayer's respite\", 2)\n\t\t.add(\"Wild pie\")\n\t\t.add(\"Watermelon seed\", 3)\n\t\t.add(\"Diamond\")\n\t\t.tertiary(25, \"Clue scroll (medium)\"),\n});\n\nexport const NatureImpling = new SimpleOpenable({\n\tid: 11_250,\n\tname: \"Nature impling\",\n\taliases: [\"nature impling\", \"nature imp\", \"nature\"],\n\ttable: new LootTable()\n\t\t.add(\"Limpwurt seed\", 1, 10)\n\t\t.add(\"Jangerberry seed\", 1, 10)\n\t\t.add(\"Belladonna seed\", 1, 10)\n\t\t.add(\"Harralander seed\", 1, 10)\n\t\t.add(\"Cactus spine\", 1, 10)\n\t\t.add(\"Magic logs\", 1, 10)\n\t\t.add(\"Tarromin\", 1, 10)\n\t\t.add(\"Coconut\", 1, 10)\n\t\t.add(\"Irit seed\", 1, 10)\n\t\t.add(\"Curry tree seed\")\n\t\t.add(\"Orange tree seed\")\n\t\t.add(\"Snapdragon\")\n\t\t.add(\"Kwuarm seed\")\n\t\t.add(\"Avantoe seed\", 5)\n\t\t.add(\"Willow seed\")\n\t\t.add(\"Torstol seed\")\n\t\t.add(\"Ranarr seed\")\n\t\t.add(\"Torstol\", 2)\n\t\t.add(\"Dwarf weed seed\")\n\t\t.tertiary(100, \"Clue scroll (hard)\"),\n});\n\nexport const MagpieImpling = new SimpleOpenable({\n\tid: 11_252,\n\tname: \"Magpie impling\",\n\taliases: [\"magpie impling\", \"magpie imp\", \"magpie\"],\n\ttable: new LootTable()\n\t\t.add(\"Black dragonhide\", 6, 2)\n\t\t.add(\"Diamond amulet\", 3)\n\t\t.add(\"Amulet of power\", 3)\n\t\t.add(\"Ring of forging\", 3)\n\t\t.add(\"Splitbark gauntlets\")\n\t\t.add(\"Mystic boots\")\n\t\t.add(\"Mystic gloves\")\n\t\t.add(\"Rune warhammer\")\n\t\t.add(\"Ring of life\", 4)\n\t\t.add(\"Rune sq shield\")\n\t\t.add(\"Dragon dagger\")\n\t\t.add(\"Nature tiara\")\n\t\t.add(\"Runite bar\", 2)\n\t\t.add(\"Diamond\", 4)\n\t\t.add(\"Pineapple seed\")\n\t\t.add(\"Ring of recoil\", 3)\n\t\t.add(\"Loop half of key\")\n\t\t.add(\"Tooth half of key\")\n\t\t.add(\"Snapdragon seed\")\n\t\t.add(\"Sinister key\")\n\t\t.tertiary(50, \"Clue scroll (hard)\"),\n});\n\nexport const NinjaImpling = new SimpleOpenable({\n\tid: 11_254,\n\tname: \"Ninja impling\",\n\taliases: [\"ninja impling\", \"ninja imp\", \"ninja\"],\n\ttable: new LootTable()\n\t\t.add(\"Snakeskin boots\")\n\t\t.add(\"Splitbark helm\")\n\t\t.add(\"Mystic boots\")\n\t\t.add(\"Rune chainbody\")\n\t\t.add(\"Mystic gloves\")\n\t\t.add(\"Opal machete\")\n\t\t.add(\"Rune claws\")\n\t\t.add(\"Rune scimitar\")\n\t\t.add(\"Dragon dagger(p+)\")\n\t\t.add(\"Rune arrow\", 70)\n\t\t.add(\"Rune dart\", 70)\n\t\t.add(\"Rune knife\", 40)\n\t\t.add(\"Rune thrownaxe\", 50)\n\t\t.add(\"Onyx bolts\", 2)\n\t\t.add(\"Onyx bolt tips\", 4)\n\t\t.add(\"Black dragonhide\", 10)\n\t\t.add(\"Prayer potion(3)\", 4)\n\t\t.add(\"Weapon poison(+)\", 4)\n\t\t.add(\"Dagannoth hide\", 3)\n\t\t.tertiary(25, \"Clue scroll (hard)\"),\n});\n\nexport const CrystalImpling = new SimpleOpenable({\n\tid: 23_768,\n\tname: \"Crystal impling\",\n\taliases: [\"crystal impling\", \"crystal imp\", \"crystal\"],\n\ttable: new LootTable()\n\t\t.add(\"Amulet of power\", [5, 7])\n\t\t.add(\"Crystal acorn\")\n\t\t.add(\"Crystal shard\", [5, 10])\n\t\t.add(\"Dragonstone amulet\")\n\t\t.add(\"Dragonstone\", 2)\n\t\t.add(\"Ruby bolt tips\", [50, 125])\n\t\t.add(\"Onyx bolt tips\", [6, 10])\n\t\t.add(\"Rune arrowtips\", [150, 250])\n\t\t.add(\"Rune arrow\", [400, 750])\n\t\t.add(\"Rune javelin heads\", [20, 60])\n\t\t.add(\"Rune dart tip\", [25, 75])\n\t\t.add(\"Rune dart\", [50, 100])\n\t\t.add(\"Dragon dart tip\", [10, 15])\n\t\t.add(\"Dragon dagger\", 2)\n\t\t.add(\"Rune scimitar\", [3, 6])\n\t\t.add(\"Babydragon bones\", [75, 125])\n\t\t.add(\"Ranarr seed\", [3, 8])\n\t\t.add(\"Yew seed\")\n\t\t.tertiary(50, \"Clue scroll (elite)\")\n\t\t.tertiary(128, \"Elven signet\"),\n});\n\nexport const DragonImpling = new SimpleOpenable({\n\tid: 11_256,\n\tname: \"Dragon impling\",\n\taliases: [\"dragon impling\", \"dragon imp\", \"dimp\", \"dragon\"],\n\ttable: new LootTable()\n\t\t.add(\"Dragonstone bolt tips\", [10, 30])\n\t\t.add(\"Dragonstone bolt tips\", 36)\n\t\t.add(\"Mystic robe bottom\", 1)\n\t\t.add(\"Amulet of glory\", 3)\n\t\t.add(\"Dragonstone amulet\", 2)\n\t\t.add(\"Dragon arrow\", [100, 250])\n\t\t.add(\"Dragonstone bolts\", [10, 40])\n\t\t.add(\"Dragon longsword\", 1)\n\t\t.add(\"Dragon dagger(p++)\", 3)\n\t\t.add(\"Dragon dart\", [100, 250])\n\t\t.add(\"Dragonstone\", 3)\n\t\t.add(\"Dragon dart tip\", [100, 350])\n\t\t.add(\"Dragon arrowtips\", [100, 350])\n\t\t.add(\"Dragon javelin heads\", [25, 35])\n\t\t.add(\"Babydragon bones\", [100, 300])\n\t\t.add(\"Dragon bones\", [50, 100])\n\t\t.add(\"Magic seed\", 1)\n\t\t.add(\"Snapdragon seed\", 6)\n\t\t.add(\"Summer pie\", 15)\n\t\t.tertiary(50, \"Clue scroll (elite)\"),\n});\n\nexport const LuckyImpling = new SimpleOpenable({\n\tid: 19_732,\n\tname: \"Lucky impling\",\n\taliases: [\"lucky impling\", \"lucky imp\", \"lucky\", \"luckys\"],\n\ttable: new LootTable()\n\t\t.add(EasyClueTable)\n\t\t.add(MediumClueTable)\n\t\t.add(HardClueTable)\n\t\t.add(EliteClueTable)\n\t\t.add(MasterClueTable),\n});\n\nexport const Implings = [\n\tBabyImpling,\n\tYoungImpling,\n\tGourmetImpling,\n\tEarthImpling,\n\tEssenceImpling,\n\tEclecticImpling,\n\tNatureImpling,\n\tMagpieImpling,\n\tNinjaImpling,\n\tCrystalImpling,\n\tDragonImpling,\n\tLuckyImpling,\n];\n", "import LootTable from \"../../structures/LootTable\";\nimport SimpleOpenable from \"../../structures/SimpleOpenable\";\n\nconst PreRoll = new LootTable()\n\t.oneIn(15, \"Lamp\")\n\t.oneIn(40, \"Tarnished locket\")\n\t.oneIn(60, \"Lost bag\")\n\t.oneIn(200, \"Blood essence\");\n\nconst IntricatePouchTable = new LootTable()\n\t.every(PreRoll)\n\n\t/* Main drops */\n\t.add(\"Astral rune\", [150, 200], 5)\n\t.add(\"Blood rune\", [150, 200], 5)\n\t.add(\"Chaos rune\", [200, 300], 5)\n\t.add(\"Cosmic rune\", [200, 300], 5)\n\t.add(\"Death rune\", [150, 200], 5)\n\t.add(\"Law rune\", [200, 250], 5)\n\t.add(\"Nature rune\", [200, 300], 5)\n\t.add(\"Soul rune\", [150, 200], 5)\n\t.add(\"Shield left half\", 1, 1)\n\t.add(\"Dragon spear\", 1, 1)\n\t.add(\"Crystal key\", 1, 1)\n\t.add(\"Dragon med helm\", 1, 1)\n\t.add(\"Pure essence\", [500, 1000], 1)\n\n\t/* Tertiary */\n\t.tertiary(10, \"Clue scroll (hard)\");\n\nexport default new SimpleOpenable({\n\tid: 26_908,\n\tname: \"Intricate pouch\",\n\taliases: [\"intricate pouch\", \"intri pouch\", \"int pouch\"],\n\ttable: IntricatePouchTable,\n});\n", "import { percentChance, randInt, roll } from \"e\";\n\nimport type { OpenableOpenOptions } from \"../../meta/types\";\nimport Bank from \"../../structures/Bank\";\nimport LootTable from \"../../structures/LootTable\";\nimport SimpleOpenable from \"../../structures/SimpleOpenable\";\nimport { LarransBigChestFish, LarransSmallChestFish, chanceOfFish } from \"./BonusOpenables\";\n\n// TODO: check wiki for more accurate results in future\nconst LarransSmallChestTable = new LootTable()\n\t.add(\"Uncut diamond\", 21, 5)\n\t.add(\"Uncut ruby\", [24, 29], 5)\n\t.add(\"Coal\", [352, 443], 5)\n\t.add(\"Coins\", [74_000, 75_000], 4)\n\t.add(\"Gold ore\", [100, 150], 4)\n\t.add(\"Dragon arrowtips\", [49, 182], 4)\n\t.add(\"Iron ore\", [300, 450], 3)\n\t.add(\"Rune full helm\", 3, 3)\n\t.add(\"Rune platebody\", 2, 3)\n\t.add(\"Rune platelegs\", 2, 3)\n\t.add(\"Runite ore\", [10, 15], 2)\n\t.add(\"Steel bar\", [250, 350], 2)\n\t.add(\"Magic logs\", [80, 120], 2)\n\t.add(\"Dragon dart tip\", 80, 2)\n\t.add(\"Palm tree seed\", [2, 4], 1)\n\t.add(\"Magic seed\", [1, 3], 1)\n\t.add(\"Celastrus seed\", [2, 4], 1)\n\t.add(\"Dragonfruit tree seed\", [1, 3], 1)\n\t.add(\"Redwood tree seed\", 1, 1)\n\t.add(\"Torstol seed\", 3, 1)\n\t.add(\"Snapdragon seed\", 3, 1)\n\t.add(\"Ranarr seed\", [2, 4], 1)\n\t.add(\"Pure essence\", [3359, 5815], 1);\n\nconst LarransBigChestTable = new LootTable()\n\t.oneIn(256, \"Dagon'hai hat\")\n\t.oneIn(256, \"Dagon'hai robe top\")\n\t.oneIn(256, \"Dagon'hai robe bottom\")\n\t.add(\"Uncut diamond\", [35, 45], 5)\n\t.add(\"Uncut ruby\", [35, 45], 5)\n\t.add(\"Coal\", [450, 650], 5)\n\t.add(\"Gold ore\", [150, 250], 4)\n\t.add(\"Dragon arrowtips\", [100, 250], 4)\n\t.add(\"Coins\", [75_000, 175_000], 3)\n\t.add(\"Iron ore\", [500, 650], 3)\n\t.add(\"Rune full helm\", [3, 5], 3)\n\t.add(\"Rune platebody\", [2, 3], 3)\n\t.add(\"Rune platelegs\", [2, 3], 3)\n\t.add(\"Pure essence\", [4500, 7500], 3)\n\t.add(\"Runite ore\", [15, 20], 2)\n\t.add(\"Steel bar\", [350, 550], 2)\n\t.add(\"Magic logs\", [180, 220], 2)\n\t.add(\"Dragon dart tip\", [80, 200], 2)\n\t.add(\"Palm tree seed\", [3, 5], 1)\n\t.add(\"Magic seed\", [3, 4], 1)\n\t.add(\"Celastrus seed\", [3, 5], 1)\n\t.add(\"Dragonfruit tree seed\", [3, 5], 1)\n\t.add(\"Redwood tree seed\", 1, 1)\n\t.add(\"Torstol seed\", [4, 6], 1)\n\t.add(\"Snapdragon seed\", [4, 6], 1)\n\t.add(\"Ranarr seed\", [4, 6], 1);\n\nconst LarransChestTable = new LootTable().add(LarransSmallChestTable).add(LarransBigChestTable);\n\nexport class LarransChestOpenable extends SimpleOpenable {\n\tpublic open(quantity = 1, options: OpenableOpenOptions = { fishLvl: 99, chestSize: \"big\" }) {\n\t\tconst loot = new Bank();\n\t\tconst tier = options.chestSize ?? \"big\";\n\t\tconst fishLvl = options.fishLvl ?? 99;\n\n\t\tif (tier.toLowerCase() === \"big\") {\n\t\t\tconst lobster = LarransBigChestFish.find(fish => fish.item === \"Raw lobster\");\n\t\t\tfor (let i = 0; i < quantity; i++) {\n\t\t\t\tif (roll(20)) {\n\t\t\t\t\tlet fishRolled = false;\n\t\t\t\t\tfor (const fish of LarransBigChestFish) {\n\t\t\t\t\t\tif (fishLvl >= fish.req) {\n\t\t\t\t\t\t\tif (percentChance(chanceOfFish(fishLvl, fish.low, fish.high))) {\n\t\t\t\t\t\t\t\tloot.add(fish.item, randInt(fish.qty[0], fish.qty[1]));\n\t\t\t\t\t\t\t\tfishRolled = true;\n\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tif (!fishRolled) {\n\t\t\t\t\t\tloot.add(lobster?.item, randInt(lobster!.qty[0], lobster!.qty[1]));\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tloot.add(LarransBigChestTable.roll());\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn loot;\n\t\t}\n\t\tconst lobster = LarransSmallChestFish.find(fish => fish.item === \"Raw lobster\");\n\t\tfor (let i = 0; i < quantity; i++) {\n\t\t\tif (roll(20)) {\n\t\t\t\tlet fishRolled = false;\n\t\t\t\tfor (const fish of LarransSmallChestFish) {\n\t\t\t\t\tif (fishLvl >= fish.req) {\n\t\t\t\t\t\tif (percentChance(chanceOfFish(fishLvl, fish.low, fish.high))) {\n\t\t\t\t\t\t\tloot.add(fish.item, randInt(fish.qty[0], fish.qty[1]));\n\t\t\t\t\t\t\tfishRolled = true;\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif (!fishRolled) {\n\t\t\t\t\tloot.add(lobster?.item, randInt(lobster!.qty[0], lobster!.qty[1]));\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tloot.add(LarransSmallChestTable.roll());\n\t\t\t}\n\t\t}\n\t\treturn loot;\n\t}\n}\n\nexport default new LarransChestOpenable({\n\tid: 23_490,\n\tname: \"Larran's chest\",\n\taliases: [\n\t\t\"larran big chest\",\n\t\t\"larrans big chest\",\n\t\t\"larran's big chest\",\n\t\t\"Larran's small chest\",\n\t\t\"larran small chest\",\n\t\t\"larrans small chest\",\n\t\t\"larran's small chest\",\n\t],\n\ttable: LarransChestTable,\n});\n", "import LootTable from \"../../structures/LootTable\";\nimport SimpleOpenable from \"../../structures/SimpleOpenable\";\n\n//const rareLootTable = new LootTable()\n//.add(\"Blighted manta ray\", 25, 1)\n//.add(\"Blighted karambwan\", 25, 1)\n//.add(\"Blighted manta ray\", 25, 1)\n//.add(\"Blighted ancient ice sack\", 25, 1)\n//.add(\"Blighted anglerfish\", 15, 1)\n//.add(\"Blighted super restore(4)\", 3, 1)\n//.add(\"Larran's key\", 1, 1)\n\nconst MuddyChestTable = new LootTable()\n\t.every(\"Uncut ruby\")\n\t.every(\"Mithril bar\", 2)\n\t.every(\"Law rune\", 5)\n\t.every(\"Death rune\", 5)\n\t.every(\"Chaos rune\", 15);\n\n//Add when rates are known\n//.oneIn(10, rareLootTable);\n\nexport default new SimpleOpenable({\n\tid: 991,\n\tname: \"Muddy chest\",\n\taliases: [\"muddy chest\", \"muddy\"],\n\ttable: MuddyChestTable,\n});\n", "import LootTable from \"../../structures/LootTable\";\nimport SimpleOpenable from \"../../structures/SimpleOpenable\";\nimport RareDropTable from \"../subtables/RareDropTable\";\n\nconst ClueTable = new LootTable()\n\t.add(\"Clue scroll (easy)\", 1, 5)\n\t.add(\"Clue scroll (medium)\", 1, 3)\n\t.add(\"Clue scroll (hard)\", 1, 2);\n\nconst MysteryBoxTable = new LootTable()\n\t.oneIn(256, \"Stale baguette\")\n\n\t.add(2528) // Genie Lamp\n\t.add(\"Cabbage\")\n\t.add(\"Diamond\")\n\t.add(\"Bucket\")\n\t.add(\"Flyer\")\n\t.add(\"Old boot\")\n\t.add(\"Body rune\")\n\t.add(\"Onion\")\n\t.add(\"Mithril scimitar\")\n\t.add(\"Casket\")\n\t.add(\"Steel platebody\")\n\t.add(\"Nature rune\", 20)\n\n\t.add(ClueTable, 1, 2)\n\t.add(RareDropTable);\n\nexport default new SimpleOpenable({\n\tid: 6199,\n\tname: \"Mystery box\",\n\taliases: [\"mystery box\", \"mystery\"],\n\ttable: MysteryBoxTable,\n});\n", "import LootTable from \"../../structures/LootTable\";\nimport SimpleOpenable from \"../../structures/SimpleOpenable\";\nimport { EMPTY_BIRD_NEST_ID } from \"./../../constants\";\n\nconst NestBoxEmptyTable = new LootTable().every(EMPTY_BIRD_NEST_ID);\n\nexport default new SimpleOpenable({\n\tid: 12_792,\n\tname: \"Nest box (empty)\",\n\taliases: [\"nest box (empty)\", \"empty nest box\", \"nest box empty\"],\n\ttable: NestBoxEmptyTable,\n});\n", "import LootTable from \"../../structures/LootTable\";\nimport SimpleOpenable from \"../../structures/SimpleOpenable\";\nimport { EMPTY_BIRD_NEST_ID } from \"./../../constants\";\n\nconst NestBoxRingTable = new LootTable()\n\t// source: https://oldschool.runescape.wiki/w/Bird_nest\n\t.every(EMPTY_BIRD_NEST_ID)\n\t.add(\"Sapphire ring\", 1, 40)\n\t.add(\"Gold ring\", 1, 35)\n\t.add(\"Emerald ring\", 1, 15)\n\t.add(\"Ruby ring\", 1, 9)\n\t.add(\"Diamond ring\");\n\nexport default new SimpleOpenable({\n\tid: 12_794,\n\tname: \"Nest box (ring)\",\n\taliases: [\"nest box (ring)\", \"ring nest box\", \"nest box ring\"],\n\ttable: NestBoxRingTable,\n});\n", "import LootTable from \"../../structures/LootTable\";\nimport SimpleOpenable from \"../../structures/SimpleOpenable\";\nimport { EMPTY_BIRD_NEST_ID } from \"./../../constants\";\n\nconst NestBoxSeedsTable = new LootTable()\n\t// source: https://oldschool.runescape.wiki/w/Bird_nest\n\t.every(EMPTY_BIRD_NEST_ID)\n\t.add(\"Acorn\", 1, 248)\n\t.add(\"Sweetcorn seed\", 6, 346)\n\t.add(\"Strawberry seed\", 6, 325)\n\t.add(\"Limpwurt seed\", 2, 224)\n\t.add(\"Watermelon seed\", 2, 219)\n\t.add(\"Snape grass seed\", 2, 119)\n\t.add(\"Willow seed\", 1, 44)\n\t.add(\"Maple seed\", 1, 19)\n\t.add(\"Pineapple seed\", 1, 45)\n\t.add(\"Cadantine seed\", 1, 92)\n\t.add(\"Lantadyme seed\", 1, 90)\n\t.add(\"Dwarf weed seed\", 1, 63)\n\t.add(\"Teak seed\", 1, 67)\n\t.add(\"Mahogany seed\", 1, 74)\n\t.add(\"Torstol seed\", 1, 14)\n\t.add(\"Calquat tree seed\", 1, 32)\n\t.add(\"Papaya tree seed\", 1, 21)\n\t.add(\"Palm tree seed\", 1, 6)\n\t.add(\"Dragonfruit tree seed\", 1, 6)\n\t.add(\"Ranarr seed\", 1, 12)\n\t.add(\"Snapdragon seed\", 1, 8)\n\t.add(\"Yew seed\", 1, 9)\n\t.add(\"Magic seed\", 1, 4)\n\t.add(\"Spirit seed\", 1, 15)\n\t.add(\"Celastrus seed\", 1, 6)\n\t.add(\"Redwood tree seed\", 1, 1);\n\nexport default new SimpleOpenable({\n\tid: 12_793,\n\tname: \"Nest box (seeds)\",\n\taliases: [\"nest box (seeds)\", \"seeds nest box\", \"nest box seeds\", \"seed nest box\"],\n\ttable: NestBoxSeedsTable,\n});\n", "import LootTable from \"../../structures/LootTable\";\nimport SimpleOpenable from \"../../structures/SimpleOpenable\";\n\nconst BoneTable = new LootTable({ limit: 10_000 })\n\t.add(\"Zogre bones\", 1, 4996)\n\t.add(\"Fayrg bones\", 1, 1086)\n\t.add(\"Raurg bones\", 1, 766)\n\t.add(\"Ourg bones\", 1, 375);\n\nconst OgreCoffinTable = new LootTable()\n\t.every(BoneTable)\n\n\t/* Loot roll */\n\t// TODO: check back for wiki drop table update from another one in the repo\n\t.add(\"Coins\", [6, 20], 32)\n\t.add(\"Bronze axe\", 1, 16)\n\t.add(\"Iron axe\", 1, 16)\n\t.add(\"Steel axe\", 1, 16)\n\t.add(\"Bronze pickaxe\", 1, 16)\n\t.add(\"Iron pickaxe\", 1, 16)\n\t.add(\"Steel pickaxe\", 1, 16)\n\t.add(\"Bronze dagger\", 1, 16)\n\t.add(\"Iron dagger\", 1, 16)\n\t.add(\"Steel dagger\", 1, 16)\n\t.add(\"Bronze nails\", 1, 16)\n\t.add(\"Iron nails\", 1, 16)\n\t.add(\"Steel nails\", 1, 16)\n\t.add(\"Black nails\", 1, 16)\n\t.add(\"Knife\", 1, 16)\n\t.add(\"Rusty sword\", 1, 8)\n\t.add(\"Damaged armour\", 1, 8)\n\t.add(\"Leather body\", 1, 8)\n\t.add(\"Tinderbox\", 1, 8)\n\t.add(\"Buttons\", 1, 4)\n\t.add(\"Uncut opal\", 1, 4)\n\t.add(\"Uncut jade\", 1, 4)\n\t.add(\"Grimy lantadyme\", 1, 4)\n\t.add(\"Clue scroll (easy)\", 1, 1);\n\nexport default new SimpleOpenable({\n\tid: 4850,\n\tname: \"Ogre coffin\",\n\taliases: [\"ogre coffin\", \"ogre chest\", \"ogre coffin chest\"],\n\ttable: OgreCoffinTable,\n});\n", "import { randInt } from \"e\";\n\nimport LootTable from \"../../structures/LootTable\";\nimport SimpleOpenable from \"../../structures/SimpleOpenable\";\n\n// Giant's Foundry Ore pack\nconst GiantsFoundryOrePackTable = new LootTable()\n\t.add(\"Coal\", 1, 181)\n\t.add(\"Iron ore\", 1, 25)\n\t.add(\"Mithril ore\", 1, 17)\n\t.add(\"Adamantite ore\", 1, 3)\n\t.add(\"Runite ore\", 1, 1);\n\nconst GFOrePackTable = new LootTable().every(GiantsFoundryOrePackTable, 30);\n\nexport const GiantsFoundryOrePack = new SimpleOpenable({\n\tid: 27_019,\n\tname: \"Ore pack (Giant's Foundry)\",\n\taliases: [\"ore pack (giant's foundry)\", \"giants\", \"foundry\", \"giants foundry\"],\n\ttable: GFOrePackTable,\n});\n\n// Volcanic Mine Ore pack\nconst VolcanicMineMOrePackTable = new LootTable()\n\t.add(\"Iron ore\", 1, 50)\n\t.add(\"Coal\", 1, 15)\n\t.add(\"Silver ore\", 1, 13)\n\t.add(\"Gold ore\", 1, 11)\n\t.add(\"Mithril ore\", 1, 9)\n\t.add(\"Adamantite ore\", 1, 4)\n\t.add(\"Runite ore\", 1, 1);\n\nconst VMOrePackTable = new LootTable()\n\t.oneIn(100, \"Dragon pickaxe (broken)\")\n\t.every(VolcanicMineMOrePackTable, randInt(38, 50));\n\nexport const VolcanicMineOrePack = new SimpleOpenable({\n\tid: 27_693,\n\tname: \"Ore pack (Volcanic Mine)\",\n\taliases: [\"ore pack (volcanic mine)\", \"volcanic\", \"volcanic mine\"],\n\ttable: VMOrePackTable,\n});\n", "import { randInt, roll } from \"e\";\n\nimport type { OpenableOpenOptions } from \"../../meta/types\";\nimport Bank from \"../../structures/Bank\";\nimport LootTable from \"../../structures/LootTable\";\nimport SimpleOpenable from \"../../structures/SimpleOpenable\";\n\nconst LowSeedPackTable = new LootTable()\n\t.add(\"Potato seed\", [8, 12], 2)\n\t.add(\"Onion seed\", [8, 12], 2)\n\t.add(\"Cabbage seed\", [8, 12], 2)\n\t.add(\"Tomato seed\", [8, 12], 2)\n\t.add(\"Sweetcorn seed\", [8, 12], 2)\n\t.add(\"Strawberry seed\", [8, 12], 2)\n\t.add(\"Barley seed\", [8, 14], 2)\n\t.add(\"Hammerstone seed\", [6, 8], 2)\n\t.add(\"Asgarnian seed\", [6, 8], 2)\n\t.add(\"Jute seed\", [8, 12], 2)\n\t.add(\"Yanillian seed\", [6, 8], 2)\n\t.add(\"Krandorian seed\", [6, 8], 2)\n\t.add(\"Acorn\", [3, 5], 2)\n\t.add(\"Apple tree seed\", [3, 5], 2)\n\t.add(\"Banana tree seed\", [3, 5], 2)\n\t.add(\"Orange tree seed\", [3, 5], 2)\n\t.add(\"Curry tree seed\", [3, 5], 2)\n\t.add(\"Redberry seed\", [6, 8], 2)\n\t.add(\"Cadavaberry seed\", [6, 8], 2)\n\t.add(\"Dwellberry seed\", [6, 8], 2)\n\t.add(\"Jangerberry seed\", [6, 8], 2)\n\t.add(\"Marigold seed\", [8, 12], 2)\n\t.add(\"Rosemary seed\", [8, 12], 2)\n\t.add(\"Nasturtium seed\", [8, 12], 2)\n\t.add(\"Woad seed\", [8, 12], 2)\n\t.add(\"Guam seed\", [3, 5], 2)\n\t.add(\"Marrentill seed\", [3, 5], 2)\n\t.add(\"Tarromin seed\", [3, 5], 2)\n\t.add(\"Harralander seed\", [3, 5], 2)\n\t.add(\"Mushroom spore\", [4, 6], 1)\n\t.add(\"Belladonna seed\", [4, 6], 1);\n\nconst MediumSeedPackTable = new LootTable()\n\t.add(\"Irit seed\", [2, 6], 3)\n\t.add(\"Limpwurt seed\", [4, 8], 3)\n\t.add(\"Watermelon seed\", [8, 12], 2)\n\t.add(\"Snape grass seed\", [6, 8], 2)\n\t.add(\"Wildblood seed\", [8, 12], 2)\n\t.add(\"Whiteberry seed\", [6, 8], 2)\n\t.add(\"Poison ivy seed\", [6, 8], 2)\n\t.add(\"Cactus seed\", [2, 6], 2)\n\t.add(\"Potato cactus seed\", [2, 6], 2)\n\t.add(\"Willow seed\", [2, 4], 1)\n\t.add(\"Pineapple seed\", [3, 5], 1)\n\t.add(\"Toadflax seed\", [1, 3], 1)\n\t.add(\"Avantoe seed\", [1, 3], 1)\n\t.add(\"Kwuarm seed\", [1, 3], 1)\n\t.add(\"Cadantine seed\", [1, 3], 1)\n\t.add(\"Lantadyme seed\", [1, 3], 1)\n\t.add(\"Dwarf weed seed\", [1, 3], 1)\n\t.add(\"Calquat tree seed\", [3, 6], 1)\n\t.add(\"Teak seed\", [1, 3], 1);\n\nconst HighSeedPackTable = new LootTable()\n\t.add(\"Papaya tree seed\", [1, 3], 5)\n\t.add(\"Palm tree seed\", [1, 2], 5)\n\t.add(\"Hespori seed\", 1, 5)\n\t.add(\"Ranarr seed\", [1, 2], 4)\n\t.add(\"Snapdragon seed\", 1, 4)\n\t.add(\"Maple seed\", [1, 2], 4)\n\t.add(\"Mahogany seed\", [1, 2], 4)\n\t.add(\"Yew seed\", 1, 3)\n\t.add(\"Dragonfruit tree seed\", 1, 3)\n\t.add(\"Celastrus seed\", 1, 2)\n\t.add(\"Torstol seed\", 1, 2)\n\t.add(\"Magic seed\", 1, 1)\n\t.add(\"Spirit seed\", 1, 1)\n\t.add(\"Redwood tree seed\", 1, 1);\n\nconst SeedPackTable = new LootTable().add(LowSeedPackTable).add(MediumSeedPackTable).add(HighSeedPackTable);\n\nexport class SeedPackOpenable extends SimpleOpenable {\n\tpublic open(quantity = 1, options: OpenableOpenOptions = { seedTier: \"5\" }) {\n\t\tconst tempTable = new LootTable();\n\t\tconst loot = new Bank();\n\t\tconst tier = options.seedTier ?? \"5\";\n\n\t\t// Roll amount variables\n\t\tlet high = 0;\n\t\tlet medium = 0;\n\t\tlet low = 0;\n\n\t\tswitch (tier) {\n\t\t\tcase \"1\": {\n\t\t\t\thigh = 0;\n\t\t\t\tmedium = randInt(1, 3);\n\t\t\t\tlow = 6 - medium;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tcase \"2\": {\n\t\t\t\tif (roll(11)) {\n\t\t\t\t\thigh = 1;\n\t\t\t\t}\n\t\t\t\tmedium = randInt(2, 3);\n\t\t\t\tlow = 7 - medium - high;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tcase \"3\": {\n\t\t\t\thigh = randInt(0, 1);\n\t\t\t\tmedium = randInt(2, 4);\n\t\t\t\tlow = 8 - medium - high;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tcase \"4\": {\n\t\t\t\thigh = randInt(1, 2);\n\t\t\t\tmedium = randInt(3, 5);\n\t\t\t\tlow = 9 - medium - high;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tdefault: {\n\t\t\t\thigh = randInt(1, 3);\n\t\t\t\tmedium = randInt(4, 6);\n\t\t\t\tlow = 10 - medium - high;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\t// Low seed roll\n\t\ttempTable.every(LowSeedPackTable, low);\n\t\t// Medium seed roll\n\t\ttempTable.every(MediumSeedPackTable, medium);\n\t\t// High seed roll\n\t\ttempTable.every(HighSeedPackTable, high);\n\n\t\tfor (let i = 0; i < quantity; i++) {\n\t\t\tloot.add(tempTable.roll());\n\t\t}\n\n\t\treturn loot;\n\t}\n}\n\nexport default new SeedPackOpenable({\n\tid: 22_993,\n\tname: \"Seed pack\",\n\taliases: [\"seed pack\"],\n\ttable: SeedPackTable,\n});\n", "import LootTable from \"../../structures/LootTable\";\nimport SimpleOpenable from \"../../structures/SimpleOpenable\";\n\nconst SinisterChestTable = new LootTable()\n\t.every(\"Grimy ranarr weed\", 3)\n\t.every(\"Grimy harralander\", 2)\n\t.every(\"Grimy irit leaf\")\n\t.every(\"Grimy avantoe\")\n\t.every(\"Grimy kwuarm\")\n\t.every(\"Grimy torstol\");\n\nexport default new SimpleOpenable({\n\tid: 993,\n\tname: \"Sinister chest\",\n\taliases: [\"sinister chest\", \"sinister\"],\n\ttable: SinisterChestTable,\n});\n", "import LootTable from \"../../structures/LootTable\";\nimport SimpleOpenable from \"../../structures/SimpleOpenable\";\n\nconst ZombiePiratesLocker = new LootTable()\n\t/* Pre-roll */\n\t.oneIn(275, \"Teleport anchoring scroll\")\n\n\t/* Runes */\n\t.add(\"Blood rune\", [60, 120], 4)\n\t.add(\"Death rune\", [60, 180], 4)\n\t.add(\"Chaos rune\", [60, 180], 4)\n\t.add(\"Mind rune\", [60, 180], 4)\n\n\t/* Weapons and armour */\n\t.add(\"Battlestaff\", [2, 6], 8)\n\t.add(\"Adamant platebody\", 2, 6)\n\t.add(\"Rune med helm\", 2, 6)\n\t.add(\"Rune warhammer\", 2, 6)\n\t.add(\"Rune battleaxe\", 2, 6)\n\t.add(\"Rune longsword\", 2, 6)\n\t.add(\"Rune sword\", 2, 6)\n\t.add(\"Rune mace\", 2, 6)\n\t.add(\"Dragon dagger\", 2, 1)\n\t.add(\"Dragon longsword\", 2, 1)\n\t.add(\"Dragon scimitar\", 2, 1)\n\n\t/* Blighted supplies */\n\t.add(\"Blighted ancient ice sack\", [20, 60], 12)\n\t.add(\"Blighted anglerfish\", [10, 30], 12)\n\t.add(\"Blighted manta ray\", [10, 30], 12)\n\t.add(\"Blighted karambwan\", [10, 30], 12)\n\t.add(\"Blighted super restore(4)\", [2, 6], 12)\n\n\t/* Other */\n\t.add(\"Coins\", [2_000, 16_000], 12)\n\t.add(\"Cannonball\", [40, 200], 12)\n\t.add(\"Gold ore\", [10, 30], 12)\n\t.add(\"Adamant seeds\", [10, 20], 8);\n\nexport default new SimpleOpenable({\n\tid: 29_449,\n\tname: \"Zombie Pirate's Locker\",\n\taliases: [\"zombie pirate locker\", \"pirate locker\"],\n\ttable: ZombiePiratesLocker,\n});\n", "import LootTable from \"../../structures/LootTable\";\nimport SimpleOpenable from \"../../structures/SimpleOpenable\";\n\nconst LowTierLootTable = new LootTable()\n\t.add(\"Monk's robe top\")\n\t.add(\"Monk's robe\")\n\t.add(\"Holy symbol\")\n\t.add(\"Air rune\", [500, 750])\n\t.add(\"Fire rune\", [500, 750])\n\t.add(\"Chaos rune\", [25, 50])\n\t.add(\"Mithril bolts\", [50, 150])\n\t.add(\"Prayer potion(2)\")\n\t.add(\"White lily\")\n\t.add(\"Coins\", [1500, 3000]);\n\nconst MidTierLootTable = new LootTable()\n\t.add(\"Adamant 2h sword\")\n\t.add(\"Adamant platebody\")\n\t.add(\"Cosmic rune\", [60, 100])\n\t.add(\"Death rune\", [60, 100])\n\t.add(\"Nature rune\", [60, 100])\n\t.add(\"Adamant bolts\", [50, 200])\n\t.add(\"Monkfish\", [1, 3])\n\t.add(\"Prayer potion(4)\")\n\t.add(\"Grimy ranarr weed\", [1, 2])\n\t.add(\"Coins\", [7500, 12_500]);\n\nconst HighTierLootTable = new LootTable()\n\t.add(\"Rune 2h sword\")\n\t.add(\"Rune platebody\")\n\t.add(\"Law rune\", [150, 250])\n\t.add(\"Blood rune\", [150, 250])\n\t.add(\"Soul rune\", [150, 250])\n\t.add(\"Runite bolts\", [100, 300])\n\t.add(\"Monkfish\", [2, 6])\n\t.add(\"Sanfew serum(4)\", [1, 2])\n\t.add(\"Ranarr seed\", [1, 2])\n\t.add(\"Coins\", [17_500, 25_000]);\n\nexport const HallowedSackTable = new LootTable()\n\t.every(LowTierLootTable, 5)\n\t.every(MidTierLootTable)\n\t.every(HighTierLootTable, 2);\n\nexport default new SimpleOpenable({\n\tid: 24_946,\n\tname: \"Hallowed Sack\",\n\taliases: [\"hallow sack\", \"hallowed sack\"],\n\ttable: HallowedSackTable,\n});\n", "import { Collection } from \"../../structures/Collection\";\nimport type Openable from \"../../structures/Openable\";\nimport BrimstoneChest from \"./BrimstoneChest\";\nimport Casket from \"./Casket\";\nimport CrystalChest from \"./CrystalChest\";\nimport ElvenCrystalChest from \"./ElvenCrystalChest\";\nimport GiantEggSacFull from \"./GiantEggSacFull\";\nimport GrubbyChest from \"./GrubbyChest\";\nimport { BronzeHAMChest, IronHAMChest, SilverHAMChest, SteelHAMChest } from \"./HAMStoreRoomChests\";\nimport { AdeptSack, BasicSack, ExpertSack, MasterSack } from \"./HuntersLootSack\";\nimport {\n\tBabyImpling,\n\tCrystalImpling,\n\tDragonImpling,\n\tEarthImpling,\n\tEclecticImpling,\n\tEssenceImpling,\n\tGourmetImpling,\n\tLuckyImpling,\n\tMagpieImpling,\n\tNatureImpling,\n\tNinjaImpling,\n\tYoungImpling,\n} from \"./Implings\";\nimport IntricatePouch from \"./IntricatePouch\";\nimport LarransChest from \"./LarransChest\";\nimport MuddyChest from \"./MuddyChest\";\nimport MysteryBox from \"./MysteryBox\";\nimport NestBoxEmpty from \"./NestBoxEmpty\";\nimport NestBoxRing from \"./NestBoxRing\";\nimport NestBoxSeeds from \"./NestBoxSeeds\";\nimport OgreCoffin from \"./OgreCoffin\";\nimport { GiantsFoundryOrePack, VolcanicMineOrePack } from \"./OrePack\";\nimport SeedPack from \"./SeedPack\";\nimport SinisterChest from \"./SinisterChest\";\nimport ZombiePiratesLocker from \"./ZombiePiratesLocker\";\n\nexport {\n\tMysteryBox,\n\tNestBoxEmpty,\n\tNestBoxRing,\n\tNestBoxSeeds,\n\tGiantEggSacFull,\n\tBronzeHAMChest,\n\tIronHAMChest,\n\tSilverHAMChest,\n\tSteelHAMChest,\n\tCasket,\n\tCrystalChest,\n\tElvenCrystalChest,\n\tGrubbyChest,\n\tMuddyChest,\n\tOgreCoffin,\n\tSinisterChest,\n\tBrimstoneChest,\n\tLarransChest,\n\tSeedPack,\n\tBabyImpling,\n\tYoungImpling,\n\tGourmetImpling,\n\tEarthImpling,\n\tEssenceImpling,\n\tEclecticImpling,\n\tNatureImpling,\n\tMagpieImpling,\n\tNinjaImpling,\n\tCrystalImpling,\n\tDragonImpling,\n\tLuckyImpling,\n\tVolcanicMineOrePack,\n\tGiantsFoundryOrePack,\n\tIntricatePouch,\n\tBasicSack,\n\tAdeptSack,\n\tExpertSack,\n\tMasterSack,\n\tZombiePiratesLocker,\n};\n\nconst openablesObject = {\n\tMysteryBox,\n\tNestBoxEmpty,\n\tNestBoxRing,\n\tNestBoxSeeds,\n\tGiantEggSacFull,\n\tBronzeHAMChest,\n\tIronHAMChest,\n\tSilverHAMChest,\n\tSteelHAMChest,\n\tCasket,\n\tCrystalChest,\n\tElvenCrystalChest,\n\tGrubbyChest,\n\tMuddyChest,\n\tOgreCoffin,\n\tSinisterChest,\n\tBrimstoneChest,\n\tLarransChest,\n\tSeedPack,\n\tBabyImpling,\n\tYoungImpling,\n\tGourmetImpling,\n\tEarthImpling,\n\tEssenceImpling,\n\tEclecticImpling,\n\tNatureImpling,\n\tMagpieImpling,\n\tNinjaImpling,\n\tCrystalImpling,\n\tDragonImpling,\n\tLuckyImpling,\n\tVolcanicMineOrePack,\n\tGiantsFoundryOrePack,\n\tIntricatePouch,\n\tBasicSack,\n\tAdeptSack,\n\tExpertSack,\n\tMasterSack,\n};\n\nconst allMonsters: [number, Openable][] = Object.values(openablesObject).map(openable => [openable.id, openable]);\n\nconst Openables = Object.assign(new Collection(allMonsters), openablesObject);\n\nexport default Openables;\n\nexport * from \"./HallowedSack\";\n", "import fetch from \"node-fetch\";\n\nimport { ACCOUNT_TYPES, Errors, hiscoreURLs } from \"../constants\";\nimport type { SkillsScore } from \"../meta/types\";\nimport { convertXPtoLVL, isValidUsername, resolvePlayerFromHiscores } from \"../util/util\";\nimport OSError from \"./OldSchoolJSError\";\nimport Player from \"./Player\";\n\nexport interface GetOptions {\n\ttype?: keyof typeof hiscoreURLs;\n\tvirtualLevels?: boolean;\n}\n\nconst defaultGetOptions: GetOptions = {\n\ttype: \"normal\",\n\tvirtualLevels: false,\n};\n\nclass Hiscores {\n\tpublic async fetch(\n\t\tusername: string,\n\t\toptions: GetOptions = { type: \"normal\", virtualLevels: false },\n\t): Promise<Player> {\n\t\tconst mergedOptions = { ...defaultGetOptions, ...options };\n\t\tconst accountType = mergedOptions.type ?? \"normal\";\n\t\tif (!isValidUsername(username)) throw new OSError(Errors.INVALID_USERNAME);\n\t\tif (!ACCOUNT_TYPES.includes(accountType)) {\n\t\t\tthrow new OSError(Errors.INVALID_ACCOUNT_TYPE);\n\t\t}\n\n\t\tconst data: Player = await fetch(hiscoreURLs[accountType] + username)\n\t\t\t.then(async (res): Promise<string> => {\n\t\t\t\tif (res.status === 404) throw new OSError(Errors.ACCOUNT_NOT_FOUND);\n\t\t\t\tif (!res.ok) throw new OSError(Errors.FAILED_REQUEST);\n\t\t\t\tconst text = await res.text();\n\t\t\t\t// If the text response is HTML, it means the hiscores are down.\n\t\t\t\tif (text.trim().startsWith(\"<\")) throw new OSError(Errors.FAILED_REQUEST);\n\t\t\t\treturn text;\n\t\t\t})\n\t\t\t.then(p => resolvePlayerFromHiscores(p, accountType))\n\t\t\t.catch((err): never => {\n\t\t\t\tthrow err;\n\t\t\t});\n\n\t\tif (mergedOptions.virtualLevels) {\n\t\t\tlet overall = 0;\n\t\t\tfor (const skill in data.skills) {\n\t\t\t\tif (skill === \"overall\") continue;\n\t\t\t\tconst lvl = convertXPtoLVL(data.skills[skill as keyof SkillsScore].xp, 126);\n\t\t\t\toverall += lvl;\n\t\t\t\tdata.skills[skill as keyof SkillsScore].level = lvl;\n\t\t\t}\n\t\t\tdata.skills.overall.level = overall;\n\t\t}\n\n\t\treturn new Player({\n\t\t\tusername,\n\t\t\ttype: options.type ?? \"normal\",\n\t\t\tskills: data.skills,\n\t\t\tminigames: data.minigames,\n\t\t\tclues: data.clues,\n\t\t\tbossRecords: data.bossRecords,\n\t\t\tleaguePoints: data.leaguePoints,\n\t\t});\n\t}\n}\n\nexport default new Hiscores();\n", "import { ErrorDescriptions, type Errors } from \"../constants\";\n\nexport default class OldSchoolJSError extends Error {\n\tpublic code: Errors;\n\tpublic description = \"\";\n\n\tpublic constructor(code: Errors) {\n\t\tsuper(code);\n\t\tthis.name = this.constructor.name;\n\t\tthis.code = code;\n\t\tthis.message = ErrorDescriptions[code];\n\t\tif (Error.captureStackTrace) Error.captureStackTrace(this, this.constructor);\n\t}\n}\n", "import type { hiscoreURLs } from \"../constants\";\nimport type { BossRecords, CluesScore, MinigamesScore, Player as PlayerType, SkillsScore } from \"../meta/types\";\n\nclass Player {\n\tpublic username: string;\n\tpublic skills: SkillsScore;\n\tpublic minigames: MinigamesScore;\n\tpublic bossRecords: BossRecords;\n\tpublic type: keyof typeof hiscoreURLs;\n\tpublic clues: CluesScore;\n\tpublic leaguePoints?: { rank: number; points: number };\n\n\tpublic constructor(player: PlayerType) {\n\t\tthis.username = player.username;\n\t\tthis.skills = player.skills;\n\t\tthis.minigames = player.minigames;\n\t\tthis.bossRecords = player.bossRecords;\n\t\tthis.type = player.type;\n\t\tthis.clues = player.clues;\n\t\tthis.leaguePoints = player.leaguePoints;\n\t}\n\n\tpublic get combatLevel(): number {\n\t\tconst { defence, ranged, hitpoints, magic, prayer, attack, strength } = this.skills;\n\t\tconst base = 0.25 * (defence.level + hitpoints.level + Math.floor(prayer.level / 2));\n\t\tconst melee = 0.325 * (attack.level + strength.level);\n\t\tconst range = 0.325 * (Math.floor(ranged.level / 2) + ranged.level);\n\t\tconst mage = 0.325 * (Math.floor(magic.level / 2) + magic.level);\n\t\treturn Math.floor(base + Math.max(melee, range, mage));\n\t}\n}\n\nexport default Player;\n", "import fetch from \"node-fetch\";\n\nimport type { WikiPage } from \"../meta/types\";\n\nclass Wiki {\n\tprivate URL = \"https://oldschool.runescape.wiki/api.php\";\n\tprivate searchOptions: { [index: string]: string } = {\n\t\t\"-incategory\": [\"Slang_dictionary\", \"Disambiguation\"].join(\"|\"),\n\t};\n\n\tprivate commonPageAPIOptions = {\n\t\taction: \"query\",\n\t\tformat: \"json\",\n\t\tprop: [\"extracts\", \"pageimages\", \"info\", \"categories\"].join(\"|\"),\n\t\tformatversion: \"2\",\n\t\tpiprop: \"original\",\n\t\tinprop: \"url\",\n\t\texsentences: \"5\",\n\t\texintro: \"1\",\n\t\texplaintext: \"1\",\n\t\tcllimit: \"max\",\n\t};\n\n\tpublic async fetchPage(pageID: number): Promise<WikiPage | undefined> {\n\t\tconst results = await this.fetchAPI({\n\t\t\tiwurl: \"1\",\n\t\t\tpageids: pageID,\n\t\t});\n\n\t\tif (!results || !results.query) return undefined;\n\t\treturn this.parseRawPage(results.query.pages[0]);\n\t}\n\n\tpublic async random(amount = 20): Promise<WikiPage[]> {\n\t\tconst results = await this.fetchAPI({\n\t\t\tgenerator: \"random\",\n\t\t\tgrnnamespace: \"0\",\n\t\t\tgrnlimit: amount,\n\t\t});\n\n\t\tif (!results || !results.query) return [];\n\t\treturn results.query.pages.map((r: any) => this.parseRawPage(r));\n\t}\n\n\tpublic async search(query: string): Promise<WikiPage[]> {\n\t\tconst parsedSearchOptions = Object.keys(this.searchOptions)\n\t\t\t.map((prop): string => `${prop}:${this.searchOptions[prop]}`)\n\t\t\t.join(\" \");\n\n\t\tconst results = await this.fetchAPI({\n\t\t\tiwurl: \"1\",\n\t\t\tgenerator: \"search\",\n\t\t\tgsrlimit: \"20\",\n\t\t\tgsrsearch: `${query} ${parsedSearchOptions}`,\n\t\t});\n\n\t\tif (!results || !results.query || !results.query.pages) return [];\n\n\t\treturn results.query.pages.sort((a: any, b: any) => a.index - b.index).map((r: any) => this.parseRawPage(r));\n\t}\n\n\tprivate parseRawPage(rawPage: any): WikiPage {\n\t\treturn {\n\t\t\ttitle: rawPage.title,\n\t\t\textract: rawPage.extract,\n\t\t\timage: rawPage.original?.source,\n\t\t\turl: rawPage.fullurl,\n\t\t\tlastRevisionID: rawPage.lastrevid,\n\t\t\tpageID: rawPage.pageid,\n\t\t\tcategories: rawPage.categories,\n\t\t};\n\t}\n\n\tpublic fetchAPI(query: any): Promise<any> {\n\t\tconst apiURL = new URL(this.URL);\n\t\tapiURL.search = new URLSearchParams({ ...this.commonPageAPIOptions, ...query }).toString();\n\t\treturn fetch(apiURL.toString()).then((res): Promise<any> => res.json());\n\t}\n}\n\nexport default new Wiki();\n", "import LootTable from \"../../structures/LootTable\";\n\nexport const RareTable = new LootTable()\n\t.add(\"Black 2h sword\")\n\t.add(\"Black platebody\")\n\t.add(\"Black longsword\")\n\t.add(\"Black full helm\")\n\t.add(\"Black platelegs\")\n\t.add(\"Black battleaxe\")\n\t.add(\"Black axe\")\n\t.add(\"Black pickaxe\")\n\t.add(\"Black plateskirt\")\n\t.add(\"Black kiteshield\")\n\t.add(\"Black med helm\")\n\t.add(\"Black dagger\")\n\t.add(\"Black sq shield\")\n\t.add(\"Black chainbody\")\n\t.add(\"Black sword\")\n\t.add(\"Black mace\")\n\t.add(\"Black warhammer\")\n\t.add(\"Black scimitar\");\n\nexport const SuccessfulUniqueTable = new LootTable()\n\t.add(\"Mole slippers\")\n\t.add(\"Frog slippers\")\n\t.add(\"Bear feet\")\n\t.add(\"Demon feet\")\n\t.add(\"Jester cape\")\n\t.add(\"Shoulder parrot\")\n\t.add(\"Monk's robe top (t)\")\n\t.add(\"Monk's robe (t)\")\n\t.add(\"Amulet of defence (t)\")\n\t.add(\"Sandwich lady hat\")\n\t.add(\"Sandwich lady top\")\n\t.add(\"Sandwich lady bottom\")\n\t.add(\"Rune scimitar ornament kit (guthix)\")\n\t.add(\"Rune scimitar ornament kit (saradomin)\")\n\t.add(\"Rune scimitar ornament kit (zamorak)\");\n\nexport const UniqueTable = new LootTable().add(\"Cabbage\").add(SuccessfulUniqueTable);\n\nexport const StandardTable = new LootTable()\n\t.add(\"Shrimps\", [5, 14])\n\t.add(\"Herring\", [5, 9])\n\t.add(\"Sardine\", [5, 12])\n\t.add(\"Air rune\", [15, 35])\n\t.add(\"Fire rune\", [15, 35])\n\t.add(\"Water rune\", [15, 35])\n\t.add(\"Earth rune\", [15, 35])\n\t.add(\"Mind rune\", [15, 35])\n\t.add(\"Body rune\", [15, 35])\n\t.add(\"Law rune\", [2, 7])\n\t.add(\"Chaos rune\", [2, 7])\n\t.add(\"Nature rune\", [2, 7])\n\t.add(\"Bronze arrow\", [15, 30])\n\t.add(\"Iron arrow\", [7, 15])\n\t.add(\"Staff of air\")\n\t.add(\"Staff of water\")\n\t.add(\"Staff of earth\")\n\t.add(\"Staff of fire\")\n\t.add(\"Steel platebody\")\n\t.add(\"Steel longsword\")\n\t.add(\"Steel full helm\")\n\t.add(\"Steel platelegs\")\n\t.add(\"Steel battleaxe\")\n\t.add(\"Steel axe\")\n\t.add(\"Iron pickaxe\")\n\t.add(\"Steel dagger\")\n\t.add(\"Oak shortbow\")\n\t.add(\"Longbow\")\n\t.add(\"Oak longbow\")\n\t.add(\"Leather chaps\")\n\t.add(\"Leather body\")\n\t.add(\"Hardleather body\")\n\t.add(\"Leather vambraces\")\n\t.add(\"Leather cowl\")\n\t.add(\"Blue wizard robe\")\n\t.add(\"Blue wizard hat\")\n\t.add(\"Black robe\")\n\t.add(\"Wizard hat\")\n\t.add(\"Steel plateskirt\")\n\t.add(\"Shortbow\")\n\t.add(RareTable);\n\nexport const BeginnerClueTable = new LootTable().add(StandardTable, 1, 11).add(UniqueTable, 1, 1);\nexport const BeginnerCasket = new LootTable().add(BeginnerClueTable, [1, 3]);\n", "import { BeginnerCasket as Beginner } from \"./Beginner\";\nimport { EasyCasket as Easy } from \"./Easy\";\nimport { EliteCasket as Elite } from \"./Elite\";\nimport { HardCasket as Hard } from \"./Hard\";\nimport { MasterCasket as Master } from \"./Master\";\nimport { MediumCasket as Medium } from \"./Medium\";\n\nexport const Clues = {\n\tBeginner,\n\tEasy,\n\tElite,\n\tHard,\n\tMaster,\n\tMedium,\n};\n\nexport * from \"./Beginner\";\nexport * from \"./Easy\";\nexport * from \"./Elite\";\nexport * from \"./Hard\";\nexport * from \"./Master\";\nexport * from \"./Medium\";\n", "import type { Item } from \"../meta/types\";\nimport { getItemOrThrow, resolveItems } from \"../util/util\";\n\nexport const allTeamCapes: Item[] = [];\n\nfor (let i = 1; i < 51; i++) {\n\tallTeamCapes.push(getItemOrThrow(`Team-${i} cape`));\n}\n\nexport const beekeeperOutfit = resolveItems([\n\t\"Beekeeper's hat\",\n\t\"Beekeeper's top\",\n\t\"Beekeeper's legs\",\n\t\"Beekeeper's gloves\",\n\t\"Beekeeper's boots\",\n]);\n\nexport const camoOutfit = resolveItems([\"Camo helmet\", \"Camo top\", \"Camo bottoms\"]);\n\nexport const lederhosenOutfit = resolveItems([\"Lederhosen hat\", \"Lederhosen top\", \"Lederhosen shorts\"]);\n\nexport const zombieOutfit = resolveItems([\n\t\"Zombie mask\",\n\t\"Zombie shirt\",\n\t\"Zombie trousers\",\n\t\"Zombie gloves\",\n\t\"Zombie boots\",\n]);\n\nexport const mimeOutfit = resolveItems([\"Mime mask\", \"Mime top\", \"Mime legs\", \"Mime gloves\", \"Mime boots\"]);\n", "import type { MINIGAMES, hiscoreURLs, mappedBossNames } from \"../constants\";\nimport type Bank from \"../structures/Bank\";\nimport type LootTable from \"../structures/LootTable\";\nimport type { LootTableRollOptions } from \"../structures/LootTable\";\nimport type SimpleMonster from \"../structures/SimpleMonster\";\nimport type { MonsterSlayerMaster } from \"./monsterData\";\n\ntype ChestSize = \"big\" | \"small\";\ntype SeedTier = \"1\" | \"2\" | \"3\" | \"4\" | \"5\";\n\nexport interface SimpleLootItem {\n\tid: string;\n\tdropRate: number;\n}\n\nexport interface MonsterOptions {\n\tid: number;\n\tname: string;\n\tcombatLevel?: number;\n\thitpoints?: number;\n\taliases?: string[];\n\tallItems?: number[];\n}\n\nexport interface Player {\n\tbossRecords: BossRecords;\n\tusername: string;\n\ttype: keyof typeof hiscoreURLs;\n\tskills: SkillsScore;\n\tminigames: MinigamesScore;\n\tclues: CluesScore;\n\tleaguePoints?: { rank: number; points: number };\n}\n\nexport interface SkillsScore {\n\toverall: SkillScore;\n\tattack: SkillScore;\n\tdefence: SkillScore;\n\tstrength: SkillScore;\n\thitpoints: SkillScore;\n\tranged: SkillScore;\n\tprayer: SkillScore;\n\tmagic: SkillScore;\n\tcooking: SkillScore;\n\twoodcutting: SkillScore;\n\tfletching: SkillScore;\n\tfishing: SkillScore;\n\tfiremaking: SkillScore;\n\tcrafting: SkillScore;\n\tsmithing: SkillScore;\n\tmining: SkillScore;\n\therblore: SkillScore;\n\tagility: SkillScore;\n\tthieving: SkillScore;\n\tslayer: SkillScore;\n\tfarming: SkillScore;\n\trunecraft: SkillScore;\n\thunter: SkillScore;\n\tconstruction: SkillScore;\n}\n\nexport type BossRecords = Record<(typeof mappedBossNames)[number][\"0\"], MinigameScore>;\n\nexport type MinigamesScore = Record<(typeof MINIGAMES)[number], MinigameScore>;\n\nexport interface CluesScore {\n\tall: MinigameScore;\n\tbeginner: MinigameScore;\n\teasy: MinigameScore;\n\tmedium: MinigameScore;\n\thard: MinigameScore;\n\telite: MinigameScore;\n\tmaster: MinigameScore;\n}\n\nexport interface MinigameScore {\n\trank: number;\n\tscore: number;\n}\n\nexport interface SkillScore {\n\trank: number;\n\tlevel: number;\n\txp: number;\n}\n\nexport type ItemID = number;\n\nexport interface ItemRequirements {\n\tattack: number;\n\tdefence: number;\n\tstrength: number;\n\thitpoints: number;\n\tranged: number;\n\tprayer: number;\n\tmagic: number;\n\tcooking: number;\n\twoodcutting: number;\n\tfletching: number;\n\tfishing: number;\n\tfiremaking: number;\n\tcrafting: number;\n\tsmithing: number;\n\tmining: number;\n\therblore: number;\n\tagility: number;\n\tthieving: number;\n\tslayer: number;\n\tfarming: number;\n\trunecraft: number;\n\thunter: number;\n\tconstruction: number;\n\tcombat: number;\n}\n\n/**\n * The equipment bonuses of equipable armour/weapons.\n */\nexport interface ItemEquipment {\n\tattack_stab: number;\n\tattack_slash: number;\n\tattack_crush: number;\n\tattack_magic: number;\n\tattack_ranged: number;\n\tdefence_stab: number;\n\tdefence_slash: number;\n\tdefence_crush: number;\n\tdefence_magic: number;\n\tdefence_ranged: number;\n\tmelee_strength: number;\n\tranged_strength: number;\n\tmagic_damage: number;\n\tprayer: number;\n\tslot: EquipmentSlot;\n\trequirements: Partial<ItemRequirements> | null;\n}\n\nexport enum EquipmentSlot {\n\tTwoHanded = \"2h\",\n\tAmmo = \"ammo\",\n\tBody = \"body\",\n\tCape = \"cape\",\n\tFeet = \"feet\",\n\tHands = \"hands\",\n\tHead = \"head\",\n\tLegs = \"legs\",\n\tNeck = \"neck\",\n\tRing = \"ring\",\n\tShield = \"shield\",\n\tWeapon = \"weapon\",\n}\n\n/**\n * The information about weapon properties.\n */\n\nexport interface ItemWeaponStance {\n\tcombat_style: string;\n\tattack_type: string | null;\n\tattack_style: string | null;\n\texperience: string;\n\tboosts: string | null;\n}\n\nexport interface ItemWeapon {\n\tattack_speed: number;\n\tweapon_type: string;\n\tstances: ItemWeaponStance[];\n}\n\n/**\n * A representation of an Old School RuneScape (OSRS) item.\n */\nexport interface Item {\n\t/**\n\t * Unique OSRS item ID number.\n\t */\n\tid: number;\n\t/**\n\t * Name of the item.\n\t */\n\tname: string;\n\t/**\n\t * If the item has incomplete wiki data.\n\t */\n\tincomplete?: boolean;\n\t/**\n\t * If the item is a members-only.\n\t */\n\tmembers?: boolean;\n\t/**\n\t * If the item is tradeable (between players and on the GE).\n\t */\n\ttradeable?: boolean;\n\t/**\n\t * If the item is tradeable (only on GE).\n\t */\n\ttradeable_on_ge?: boolean;\n\t/**\n\t * If the item is stackable (in inventory).\n\t */\n\tstackable?: boolean;\n\t/**\n\t * If the item is noteable.\n\t */\n\tnoteable?: boolean;\n\t/**\n\t * If the item is equipable (based on right-click menu entry).\n\t */\n\tequipable?: true;\n\t/**\n\t * If the item is equipable by a player and is equipable in-game.\n\t */\n\tequipable_by_player?: true;\n\tequipable_weapon?: true;\n\t/**\n\t * The store price of an item.\n\t */\n\tcost: number;\n\t/**\n\t * The low alchemy value of the item (cost * 0.4).\n\t */\n\tlowalch?: number;\n\t/**\n\t * The high alchemy value of the item (cost * 0.6).\n\t */\n\thighalch?: number;\n\t/**\n\t * The GE buy limit of the item.\n\t */\n\tbuy_limit?: number;\n\t/**\n\t * The OSRS Wiki name for the item.\n\t */\n\twiki_name?: string;\n\t/**\n\t * The OSRS Wiki URL (possibly including anchor link).\n\t */\n\twiki_url?: string;\n\tequipment?: ItemEquipment;\n\tweapon?: ItemWeapon;\n\t/**\n\t * The OSRS Wiki market price for this item, 0 if untradeable or has no price.\n\t */\n\tprice: number;\n}\n\nexport interface DateYearMonth {\n\tyear: number;\n\tmonth: number;\n}\n\nexport interface WikiPage {\n\timage?: string;\n\tlastRevisionID: number;\n\turl: string;\n\tpageID: number;\n\ttitle: string;\n\textract?: string;\n\tcategories: {\n\t\ttitle: string;\n\t\tns: number;\n\t}[];\n}\n\nexport interface IntKeyBank {\n\t[key: number]: number;\n}\nexport interface ItemBank {\n\t[key: string]: number;\n}\n\nexport interface LootBank {\n\t[key: string]: Bank;\n}\n\nexport interface SimpleTableItem<T> {\n\titem: T;\n\tweight: number;\n}\n\nexport interface BankItem {\n\tid: number;\n\tqty: number;\n}\n\nexport type TupleLootItem = [number, number];\n\nexport interface MonsterKillOptions {\n\t/**\n\t * This is *true* if the monster is being killed inside the catacombs.\n\t */\n\tinCatacombs?: boolean;\n\t/**\n\t * This is *true* if the monster is being killed inside the wilderness.\n\t */\n\tinWilderness?: boolean;\n\t/**\n\t * This is *true* if the monster being killed is on-task.\n\t */\n\tonSlayerTask?: boolean;\n\t/**\n\t * This is the assigner of this task, if on a task.\n\t */\n\tslayerMaster?: MonsterSlayerMaster;\n\t/**\n\t * If monster is eligible for superior, pass the LootTable.\n\t */\n\thasSuperiors?: SimpleMonster;\n\tfarmingLevel?: number;\n\tisAwakened?: boolean;\n\tlootTableOptions?: LootTableRollOptions;\n}\n\nexport interface OpenableOptions {\n\tid: number;\n\tname: string;\n\taliases: string[];\n\tallItems?: number[];\n}\n\nexport interface OpenableOpenOptions {\n\tfishLvl?: number;\n\tseedTier?: SeedTier;\n\tchestSize?: ChestSize;\n}\n\nexport interface ClueOptions {\n\ttable: LootTable;\n}\n\nexport type CustomKillLogic = (options: MonsterKillOptions, currentLoot: Bank) => void;\n"],
  "mappings": "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",
  "names": ["require_cjs", "__commonJSMin", "exports", "module", "isMergeableObject", "__name", "value", "isNonNullObject", "isSpecial", "stringValue", "isReactElement", "canUseSymbol", "REACT_ELEMENT_TYPE", "emptyTarget", "val", "cloneUnlessOtherwiseSpecified", "options", "deepmerge", "defaultArrayMerge", "target", "source", "element", "getMergeFunction", "key", "customMerge", "getEnumerableOwnPropertySymbols", "symbol", "getKeys", "propertyIsOnObject", "object", "property", "propertyIsUnsafe", "mergeObject", "destination", "sourceIsArray", "targetIsArray", "sourceAndTargetTypesMatch", "array", "prev", "next", "deepmerge_1", "Time", "primitiveTypes", "isObject", "input", "constructor", "Object", "isPrimitive", "includes", "randInt", "min", "max", "Math", "floor", "random", "randFloat", "percent", "valueToCalc", "exports", "partialValue", "totalValue", "array", "chunkSize", "RangeError", "Number", "isInteger", "TypeError", "clone", "slice", "chunks", "length", "push", "splice", "val", "fn", "waitFor", "timeout", "args", "clearTimeout", "setTimeout", "deepClone", "source", "Array", "isArray", "output", "value", "key", "entries", "Map", "set", "Set", "values", "add", "obj", "keys", "arr", "filter", "firstArray", "secondArray", "item", "i", "upperLimit", "precision", "multiplier", "pow", "round", "num", "inMin", "inMax", "outMin", "outMax", "copy", "j", "ms", "Promise", "resolve", "str", "replace", "reduce", "a", "b", "import_deepmerge", "_items", "cleanString", "str", "__name", "Collection", "_Collection", "__name", "predicate", "result", "key", "value", "callback", "index", "i", "entry", "items", "_items", "itemNameMap", "CLUE_SCROLLS", "CLUE_SCROLL_NAMES", "USELESS_ITEMS", "Items", "Collection", "__name", "item", "id", "itemName", "data", "deepMerge", "input", "cleanString", "itemsExport", "numID", "cleanName", "Items_default", "EItem", "EMonster", "constants_exports", "__export", "ACCOUNT_TYPES", "BASE_API_URL", "CLUES", "EMPTY_BIRD_NEST_ID", "ErrorDescriptions", "Errors", "MINIGAMES", "SKILLS", "SkillsEnum", "bossNameMap", "hiscoreURLs", "mappedBossNames", "BASE_API_URL", "SKILLS", "MINIGAMES", "CLUES", "mappedBossNames", "bossNameMap", "hiscoreURL", "type", "__name", "hiscoreURLs", "ACCOUNT_TYPES", "Errors", "ErrorDescriptions", "EMPTY_BIRD_NEST_ID", "SkillsEnum", "MonsterAttribute", "MonsterSlayerMaster", "MonsterAttackType", "misc_exports", "__export", "BarbarianAssault", "ChambersOfXeric", "EliteMimicTable", "FishingTrawler", "Gauntlet", "GrandHallowedCoffin", "MasterMimicTable", "Mimic3rdAgeTable", "Nightmare_default", "TOBRooms", "Tempoross", "TheatreOfBlood", "TheatreOfBloodClass", "ToBUniqueTable", "Zalcano_default", "import_e", "itemID", "name", "item", "Items_default", "__name", "import_e", "import_e", "toKMB", "number", "__name", "fromKMB", "numberBefore", "numberAfter", "newNum", "frozenErrorStr", "isValidInteger", "__name", "str", "isValidBankQuantity", "qty", "sanitizeItemBank", "mutSource", "key", "Items_default", "Bank", "_Bank", "source", "initialBank", "item", "itemID", "entries", "k", "v", "quantity", "id", "currentValue", "_item", "int", "randomEntry", "multiplier", "itemsToNotMultiply", "items", "itemEntry", "arr", "val", "fn", "bank", "a", "b", "result", "toKMB", "value", "otherBank", "errors", "reduceNumByPercent", "value", "percent", "__name", "randInt", "min", "max", "randFloat", "roll", "upperLimit", "LootTable", "_LootTable", "__name", "lootTableOptions", "newTable", "name", "itemID", "items", "item", "chance", "quantity", "options", "resolved", "weight", "loot", "Bank", "effectiveTertiaryItems", "i", "change", "Items_default", "reduceNumByPercent", "limit", "j", "outerLoop", "roll", "randomWeight", "randFloat", "result", "qty", "randInt", "LowGambleTable", "LootTable", "MediumGambleTable", "HighGambleTable", "BarbarianAssault", "import_e", "Minigame", "__name", "import_e", "SimpleTable", "__name", "item", "weight", "tableItem", "_tableItem", "_item", "randomWeight", "result", "i", "import_e", "resolveNameBank", "nameBank", "newBank", "name", "val", "itemID", "__name", "resolveBank", "bank", "nameOrID", "int", "id", "addItemToBank", "amountToAdd", "fasterResolveBank", "firstKey", "increaseBankQuantitesByPercent", "percent", "whitelist", "item", "qty", "increased", "convertBankToPerHourStats", "time", "result", "calcDropRatesFromBank", "iterations", "uniques", "uniquesReceived", "a", "b", "rate", "calcDropRatesFromBankWithoutUniques", "results", "addBanks", "banks", "Bank", "_bank", "averageBank", "kc", "generateRandomBank", "size", "amountPerItem", "Items_default", "import_e", "resolvePlayerFromHiscores", "csvData", "accountType", "data", "str", "resolvedPlayer", "accumulativeIndex", "i", "SKILLS", "MINIGAMES", "CLUES", "minigameKey", "minigameData", "mappedBossNames", "bossName", "__name", "isValidUsername", "username", "convertLVLtoXP", "lvl", "points", "convertXPtoLVL", "xp", "cap", "getBrimKeyChanceFromCBLevel", "combatLevel", "getLarranKeyChanceFromCBLevel", "slayerMonster", "baseChance", "JSONClone", "object", "getAncientShardChanceFromHP", "hitpoints", "getTotemChanceFromHP", "getSlayersEnchantmentChanceFromHP", "chanceHitpoints", "revsUniqueTable", "LootTable", "makeRevTable", "table", "options", "currentLoot", "index", "key", "itemName", "randomVariation", "value", "percentage", "lowerLimit", "upperLimit", "getItem", "identifier", "parsed", "Items_default", "getItemOrThrow", "item", "resolveItems", "_itemArray", "itemArray", "newArray", "osItem", "deepResolveItems", "test", "itemTupleToTable", "items", "quantity", "itemScales", "resolveNameBank", "NonUniqueTable", "SimpleTable", "itemID", "CoXUniqueTable", "LootTable", "cmTeamTimes", "ChambersOfXericClass", "Minigame", "__name", "i", "teamPoints", "chances", "totalChancePercentage", "teamSize", "completionTime", "teamSizeRange", "timeRequired", "rolls", "chance", "personalPoints", "items", "rolledItem", "loot", "_options", "options", "JSONClone", "elligibleForDust", "member", "val", "dropChances", "uniqueLoot", "lootResult", "uniqueDeciderTable", "teamMember", "Bank", "receipientID", "uniqueItem", "leftOverRecipient", "pointsOfThisMember", "entries", "quantity", "onyxChance", "bank", "ChambersOfXeric", "import_e", "trawlerFish", "itemID", "RawJunkTable", "LootTable", "JunkTable", "anglerOutfit", "FishingTrawler", "fishingLevel", "hasEliteArd", "bank", "loot", "Bank", "item", "ableToFish", "i", "possibleFish", "xp", "len", "multiplier", "fishToGive", "qty", "randomVariation", "__name", "DiedTable", "LootTable", "StandardInnerTable", "StandardTable", "CorruptedInnerTable", "CorruptedTable", "Gauntlet", "died", "type", "__name", "import_e", "data", "nonUniqueItemRanges", "resolveNameBank", "NonUniqueTable", "SimpleTable", "id", "phosaniData", "phosaniNonUniqueItemRanges", "PhosaniNonUniqueTable", "GearTable", "OrbTable", "mvpTertiary", "LootTable", "nonMvpTertiary", "phosaniTertiary", "NightmareClass", "__name", "i", "percentage", "isMvp", "isPhosani", "table", "ranges", "item", "range", "quantity", "options", "mvp", "a", "b", "parsedTeam", "teamMember", "lootResult", "Bank", "giveWeightedDrop", "recipient", "WeightedUniqueTable", "secondRollChance", "Nightmare", "Nightmare_default", "replaceItems", "PoolCasketTable", "LootTable", "fishTables", "table", "Tempoross", "quantity", "fishingLevel", "userBank", "loot", "Bank", "lootTable", "level", "fn", "index", "newItem", "__name", "import_e", "data", "nonUniqueItemRanges", "resolveNameBank", "NonUniqueTable", "SimpleTable", "id", "toolSeedTable", "LootTable", "tertiaryTable", "ZalcanoClass", "__name", "i", "perfPercent", "isMVP", "item", "range", "quantity", "team", "lootResult", "teamMember", "loot", "Bank", "Zalcano", "Zalcano_default", "Mimic3rdAgeTable", "LootTable", "EliteMimicTable", "MasterMimicTable", "import_e", "util_exports", "__export", "JSONClone", "addBanks", "addItemToBank", "averageBank", "calcDropRatesFromBank", "calcDropRatesFromBankWithoutUniques", "convertBankToPerHourStats", "convertLVLtoXP", "convertXPtoLVL", "deepResolveItems", "fasterResolveBank", "fromKMB", "generateRandomBank", "getAncientShardChanceFromHP", "getBrimKeyChanceFromCBLevel", "getItem", "getItemOrThrow", "getLarranKeyChanceFromCBLevel", "getSlayersEnchantmentChanceFromHP", "getTotemChanceFromHP", "increaseBankQuantitesByPercent", "isValidUsername", "itemID", "itemTupleToTable", "makeRevTable", "randomVariation", "resolveBank", "resolveItems", "resolveNameBank", "resolvePlayerFromHiscores", "revsUniqueTable", "toKMB", "TOBRooms", "ToBUniqueTable", "LootTable", "HardModeUniqueTable", "NonUniqueTable", "HardModeExtraTable", "TheatreOfBloodClass", "__name", "member", "isHardMode", "deaths", "Bank", "loot", "i", "item", "petChance", "team", "table", "SimpleTable", "_options", "options", "JSONClone", "maxPointsPerPerson", "penaltyForDeath", "maxPointsTeamCanGet", "parsedTeam", "t", "teamPoints", "val", "totalDeaths", "percentBaseChanceOfUnique", "purpleRecipient", "lootResult", "TheatreOfBlood", "GrandHallowedCoffin", "LootTable", "import_e", "rawMonsterData", "monsterData", "rawMonsterData", "Monster", "__name", "options", "pluralName", "SimpleMonster", "Monster", "__name", "options", "allItems", "quantity", "loot", "Bank", "canGetBrimKey", "wildySlayer", "slayerMonster", "lootTableOptions", "i", "getBrimKeyChanceFromCBLevel", "getSlayersEnchantmentChanceFromHP", "getLarranKeyChanceFromCBLevel", "getAncientShardChanceFromHP", "getTotemChanceFromHP", "Newtroost", "SimpleMonster", "LootTable", "Unicow", "Spidine", "Swordchick", "Jubster", "Frogeel", "CreatureCreation", "MegaRareTable", "LootTable", "GemTable", "RareDropTable", "RareDropTable_default", "TreeHerbSeedTable", "LootTable", "TreeHerbSeedTable_default", "AraxxorUniqueTable", "LootTable", "SupplyDrop", "AraxxorTable", "TreeHerbSeedTable_default", "RareDropTable_default", "Araxxor", "SimpleMonster", "import_e", "VirtusTable", "LootTable", "TradeableUniqueTable", "LootTable", "VirtusTable", "ClueTable", "SupplyTable", "ResourceTable", "DukeSucellusSingleton", "Monster", "__name", "itemID", "quantity", "options", "loot", "Bank", "i", "tradeableUniqueCap", "DukeSucellus", "AwakenedDukeSucellusSingleton", "Monster", "__name", "quantity", "options", "DukeSucellus", "AwakenedDukeSucellus", "import_e", "TradeableUniqueTable", "LootTable", "VirtusTable", "ClueTable", "SupplyTable", "ResourceTable", "TheLeviathanSingleton", "Monster", "__name", "itemID", "quantity", "options", "loot", "Bank", "i", "tradeableUniqueCap", "TheLeviathan", "AwakenedTheLeviathanSingleton", "Monster", "__name", "quantity", "options", "TheLeviathan", "AwakenedTheLeviathan", "import_e", "TradeableUniqueTable", "LootTable", "VirtusTable", "ClueTable", "SupplyTable", "ResourceTable", "TheWhispererSingleton", "Monster", "__name", "itemID", "quantity", "options", "loot", "Bank", "i", "tradeableUniqueCap", "TheWhisperer", "AwakenedTheWhispererSingleton", "Monster", "__name", "quantity", "options", "TheWhisperer", "AwakenedTheWhisperer", "import_e", "TradeableUniqueTable", "LootTable", "VirtusTable", "ClueTable", "SupplyTable", "ResourceTable", "VardorvisSingleton", "Monster", "__name", "itemID", "quantity", "options", "loot", "Bank", "i", "tradeableUniqueCap", "Vardorvis", "AwakenedVardorvisSingleton", "Monster", "__name", "quantity", "options", "Vardorvis", "AwakenedVardorvis", "CommonSeedDropTable", "LootTable", "CommonSeedDropTable_default", "HerbDropTable", "LootTable", "HerbDropTable_default", "RareSeedTable", "LootTable", "RareSeedTable_default", "WyvernHerbTable", "LootTable", "WyvernHerbTable_default", "UncommonSeedDropTable", "LootTable", "ChaosTable", "LootTable", "BryophytaTable", "HerbDropTable_default", "UncommonSeedDropTable", "itemTupleToTable", "Bryophyta_default", "SimpleMonster", "GWMegaRareTable", "LootTable", "ShardTable", "GWGemTable", "GWRareDropTable", "GWRareDropTable_default", "MinionUniqueTable", "LootTable", "MinionShardTable", "ShardTable", "MinionTable", "UniqueTable", "CommanderZilyanaTable", "itemTupleToTable", "GWRareDropTable_default", "GWGemTable", "CommanderZilyana_default", "SimpleMonster", "TalismanTable", "LootTable", "TalismanTable_default", "DagannothPrimeTable", "LootTable", "TalismanTable_default", "RareDropTable_default", "GemTable", "RareSeedTable_default", "DagannothPrime_default", "SimpleMonster", "DagannothRexTable", "LootTable", "RareDropTable_default", "GemTable", "TalismanTable_default", "DagannothRex_default", "SimpleMonster", "DagannothSupremeTable", "LootTable", "RareDropTable_default", "GemTable", "RareSeedTable_default", "TalismanTable_default", "DagannothSupreme_default", "SimpleMonster", "DerangedArchaeologistTable", "LootTable", "TreeHerbSeedTable_default", "RareDropTable_default", "GemTable", "DerangedArchaeologist_default", "SimpleMonster", "GeneralGraardorArmorTable", "LootTable", "MinionUniqueTable", "MinionShardTable", "ShardTable", "MinionTable", "StrongsackMinionTable", "SteelwillMinionTable", "GrimspikeMinionTable", "UniqueTable", "GeneralGraardorTable", "GWRareDropTable_default", "GWGemTable", "GeneralGraardor_default", "SimpleMonster", "GiantMoleTable", "LootTable", "RareDropTable_default", "GemTable", "GiantMole_default", "SimpleMonster", "KqConsumablesTable", "LootTable", "KalphiteQueenTable", "RareDropTable_default", "KalphiteQueen_default", "SimpleMonster", "KreearraArmorTable", "LootTable", "MinionUniqueTable", "MinionShardTable", "ShardTable", "MinionTable", "UniqueTable", "KreearraTable", "itemTupleToTable", "GWRareDropTable_default", "GWGemTable", "Kreearra_default", "SimpleMonster", "MinionUniqueTable", "LootTable", "MinionShardTable", "ShardTable", "MinionTable", "ZaklnGritchMinionTable", "UniqueTable", "KrilTsutsarothTable", "itemTupleToTable", "GWRareDropTable_default", "GWGemTable", "KrilTsutsaroth_default", "SimpleMonster", "OborTable", "LootTable", "itemTupleToTable", "Obor_default", "SimpleMonster", "UniquePhantomMuspahTable", "LootTable", "FoodAndPotions", "MoreHerbs", "NormalPhantomMuspahTable", "TreeHerbSeedTable_default", "RareDropTable_default", "TotalPhantomMuspahTable", "PhantomMuspah_default", "SimpleMonster", "TatteredPageTable", "LootTable", "HerbTable", "SarachnisTable", "RareSeedTable_default", "GemTable", "Sarachnis_default", "SimpleMonster", "ScurriusTable", "LootTable", "Scurrius_default", "SimpleMonster", "AncientShardTable", "LootTable", "SkotizoTable", "Skotizo_default", "SimpleMonster", "VorkathBoltTipTable", "LootTable", "VorkathTable", "RareDropTable_default", "TreeHerbSeedTable_default", "TotalVorkathTable", "Vorkath_default", "SimpleMonster", "ZulrahUniqueTable", "LootTable", "ZulrahFlaxMutagenTable", "ZulrahTable", "RareDropTable_default", "TotalZulrahTable", "Zulrah_default", "SimpleMonster", "HerbSubTable", "LootTable", "AbyssalSireTable", "TreeHerbSeedTable_default", "TalismanTable_default", "RareDropTable_default", "AbyssalSire_default", "SimpleMonster", "AlchemicalHydraBrimstoneRingTable", "LootTable", "RuneArmourTable", "NotedHerbsTable", "NormalTable", "itemTupleToTable", "TreeHerbSeedTable_default", "RareDropTable_default", "NormalUniqueTable", "AlchemicalHydraTable", "AlchemicalHydra_default", "SimpleMonster", "CerberusUniqueTable", "LootTable", "CerberusTable", "RareDropTable_default", "Cerberus_default", "SimpleMonster", "NormalUniqueTable", "LootTable", "itemTupleToTable", "GrotesqueGuardiansTable", "GrotesqueGuardians_default", "SimpleMonster", "KrakenTable", "LootTable", "GemTable", "Kraken_default", "SimpleMonster", "ThermonuclearSmokeDevilTable", "LootTable", "GemTable", "ThermonuclearSmokeDevil_default", "SimpleMonster", "allSlayerBosses", "AbyssalSire_default", "Cerberus_default", "AlchemicalHydra_default", "GrotesqueGuardians_default", "ThermonuclearSmokeDevil_default", "Kraken_default", "ArtioUniqueTable", "LootTable", "ArtioSecondarySupplyTable", "ArtioTable", "ArtioTotalTable", "Artio_default", "SimpleMonster", "CallistoUniqueTable", "LootTable", "CallistoSecondarySupplyTable", "CallistoTable", "CallistoTotalTable", "Callisto_default", "SimpleMonster", "SkeletonHellhoundTable", "LootTable", "CalvarionUniqueTable", "CalvarionSecondarySupplyTable", "CalvarionTable", "CalvarionTotalTable", "Calvarion_default", "SimpleMonster", "ChaosElementalMinorTable", "LootTable", "ChaosElementalTable", "RareDropTable_default", "ChaosElemental_default", "SimpleMonster", "ChaosFanaticUniqueTable", "LootTable", "ChaosFanaticTable", "itemTupleToTable", "RareDropTable_default", "GemTable", "ChaosFanatic_default", "SimpleMonster", "CrazyArchaeologistUniqueTable", "LootTable", "CrazyArchaeologistTable", "itemTupleToTable", "RareDropTable_default", "GemTable", "CrazyArchaeologist_default", "SimpleMonster", "KingBlackDragonTable", "LootTable", "RareDropTable_default", "GemTable", "KingBlackDragon_default", "SimpleMonster", "ScorpiaUniqueTable", "LootTable", "ScorpiaTable", "Scorpia_default", "SimpleMonster", "SpindelUniqueTable", "LootTable", "SpindelSecondarySupplyTable", "SpindelTable", "SpindelTotalTable", "Spindel_default", "SimpleMonster", "VenenatisUniqueTable", "LootTable", "VenenatisSecondarySupplyTable", "VenenatisTable", "VenenatisTotalTable", "Venenatis_default", "SimpleMonster", "SkeletonHellhoundTable", "LootTable", "VetionUniqueTable", "VetionSecondarySupplyTable", "VetionTable", "VetionTotalTable", "Vetion_default", "SimpleMonster", "allWildyBosses", "Callisto_default", "ChaosElemental_default", "CrazyArchaeologist_default", "KingBlackDragon_default", "Scorpia_default", "Venenatis_default", "Vetion_default", "ChaosFanatic_default", "Artio_default", "Spindel_default", "Calvarion_default", "SigilTable", "LootTable", "CorporealBeastTable", "GemTable", "CorporealBeast_default", "SimpleMonster", "allBosses", "Araxxor", "CorporealBeast_default", "DagannothPrime_default", "DagannothRex_default", "DagannothSupreme_default", "GiantMole_default", "KalphiteQueen_default", "Obor_default", "Sarachnis_default", "Vorkath_default", "Zulrah_default", "CommanderZilyana_default", "GeneralGraardor_default", "Kreearra_default", "KrilTsutsaroth_default", "Bryophyta_default", "Skotizo_default", "DerangedArchaeologist_default", "PhantomMuspah_default", "DukeSucellus", "Vardorvis", "TheLeviathan", "TheWhisperer", "AwakenedDukeSucellus", "AwakenedTheLeviathan", "AwakenedTheWhisperer", "AwakenedVardorvis", "Scurrius_default", "allWildyBosses", "allSlayerBosses", "AberrantSpectreHerbTable", "LootTable", "HerbDropTable_default", "AberrantSpectrePreTable", "RareSeedTable_default", "GemTable", "AberrantSpectreTable", "AberrantSpectre_default", "SimpleMonster", "WildySlayerCaveTable", "LootTable", "AbyssalDemonPreTable", "HerbDropTable_default", "RareDropTable_default", "GemTable", "AbyssalDemonTable", "AbyssalDemonWildyCaveTable", "AbyssalDemon_default", "SimpleMonster", "UsefulHerbTable", "LootTable", "UsefulHerbTable_default", "AdamantDragonTable", "LootTable", "UsefulHerbTable_default", "RareDropTable_default", "AdamantDragon_default", "SimpleMonster", "AlKharidWarrior_default", "SimpleMonster", "LootTable", "AncientZygomiteTable", "LootTable", "TreeHerbSeedTable_default", "RareDropTable_default", "AncientZygomite_default", "SimpleMonster", "WildySlayerCaveTable", "LootTable", "AnkouTable", "HerbDropTable_default", "CommonSeedDropTable_default", "GemTable", "AnkouWildyCaveTable", "Ankou_default", "SimpleMonster", "AraxyteTable", "LootTable", "HerbDropTable_default", "UncommonSeedDropTable", "Araxyte", "SimpleMonster", "ArmadylianGuardTable", "LootTable", "HerbDropTable_default", "GemTable", "ArmadylianGuard_default", "SimpleMonster", "ArmouredZombieTable", "LootTable", "HerbDropTable_default", "GemTable", "ArmouredZombie_default", "SimpleMonster", "AsynShadeTable", "LootTable", "AsynShade_default", "SimpleMonster", "AviansieTable", "LootTable", "HerbDropTable_default", "GemTable", "Aviansie_default", "SimpleMonster", "BabyBlackDragon", "LootTable", "BabyBlackDragon_default", "SimpleMonster", "BabyBlueDragonTable", "LootTable", "BabyBlueDragon_default", "SimpleMonster", "BabyGreenDragonTable", "LootTable", "BabyGreenDragon_default", "SimpleMonster", "BabyRedDragonTable", "LootTable", "BabyRedDragon_default", "SimpleMonster", "BanditTable", "LootTable", "GemTable", "Bandit_default", "SimpleMonster", "BansheePreTable", "LootTable", "HerbDropTable_default", "GemTable", "BansheeTable", "Banshee_default", "SimpleMonster", "BasiliskPreTable", "LootTable", "HerbDropTable_default", "GemTable", "BasiliskTable", "Basilisk_default", "SimpleMonster", "BasiliskKnightPreTable", "LootTable", "UsefulHerbTable_default", "GemTable", "BasiliskKnightTable", "BasiliskKnightOnTaskTable", "BasiliskKnight_default", "SimpleMonster", "BatTable", "LootTable", "Bat_default", "SimpleMonster", "BearCubTable", "LootTable", "BearCub_default", "SimpleMonster", "BeardedBandit_default", "SimpleMonster", "LootTable", "BigWolfTable", "LootTable", "BigWolf_default", "SimpleMonster", "BirdTable", "LootTable", "Bird_default", "SimpleMonster", "BlackBearTable", "LootTable", "BlackBear_default", "SimpleMonster", "WildySlayerCaveTable", "LootTable", "BlackDemonTable", "HerbDropTable_default", "RareDropTable_default", "GemTable", "BlackDemonWildyCaveTable", "BlackDemon_default", "SimpleMonster", "WildySlayerCaveTable", "LootTable", "BlackDragonTable", "RareDropTable_default", "GemTable", "BlackDragonWildyCaveTable", "BlackDragon_default", "SimpleMonster", "BlackGuardTable", "LootTable", "GemTable", "BlackGuard_default", "SimpleMonster", "BlackKnightTable", "LootTable", "HerbDropTable_default", "GemTable", "BlackKnight_default", "SimpleMonster", "HerbTable", "LootTable", "BloodReaverTable", "GemTable", "BloodReaver_default", "SimpleMonster", "BloodveldPreTable", "LootTable", "HerbDropTable_default", "itemTupleToTable", "GemTable", "BloodveldTable", "Bloodveld_default", "SimpleMonster", "BlueDragonTable", "LootTable", "HerbDropTable_default", "GemTable", "BlueDragon_default", "SimpleMonster", "BrineRatTable", "LootTable", "BrineRat_default", "SimpleMonster", "BronzeDragonTable", "LootTable", "RareDropTable_default", "GemTable", "BronzeDragon_default", "SimpleMonster", "UniqueTable", "LootTable", "BrutalBlackDragonTable", "RareDropTable_default", "GemTable", "BrutalBlackDragon_default", "SimpleMonster", "BrutalBlueDragonTable", "LootTable", "RareDropTable_default", "GemTable", "BrutalBlueDragon_default", "SimpleMonster", "BrutalGreenDragonTable", "LootTable", "HerbDropTable_default", "RareDropTable_default", "GemTable", "BrutalGreenDragon_default", "SimpleMonster", "BrutalRedDragonTable", "LootTable", "RareDropTable_default", "GemTable", "BrutalRedDragon_default", "SimpleMonster", "FixedAllotmentSeedTable", "LootTable", "FixedAllotmentSeedTable_default", "CatableponTable", "LootTable", "HerbDropTable_default", "FixedAllotmentSeedTable_default", "GemTable", "Catablepon_default", "SimpleMonster", "CaveBugTable", "LootTable", "HerbDropTable_default", "CaveBug_default", "SimpleMonster", "VariableAllotmentSeedTable", "LootTable", "VariableAllotmentSeedTable_default", "CaveCrawlerTable", "LootTable", "VariableAllotmentSeedTable_default", "HerbDropTable_default", "GemTable", "CaveCrawler_default", "SimpleMonster", "CaveGoblinTable", "LootTable", "CaveGoblin_default", "SimpleMonster", "ClubOrSpearTable", "LootTable", "CaveGoblinGuardTable", "CaveGoblinGuard_default", "SimpleMonster", "CaveHorrorPreTable", "LootTable", "HerbDropTable_default", "RareSeedTable_default", "VariableAllotmentSeedTable_default", "GemTable", "CaveHorrorTable", "CaveHorror_default", "SimpleMonster", "CaveKrakenTable", "LootTable", "HerbDropTable_default", "RareSeedTable_default", "GemTable", "CaveKraken_default", "SimpleMonster", "CaveSlimeTable", "LootTable", "GemTable", "CaveSlime_default", "SimpleMonster", "ChaosDruidTable", "LootTable", "HerbDropTable_default", "GemTable", "ChaosDruid_default", "SimpleMonster", "ChaosDwarfTable", "LootTable", "GemTable", "ChaosDwarf_default", "SimpleMonster", "ChickenTable", "LootTable", "Chicken_default", "SimpleMonster", "ChompyBirdTable", "LootTable", "ChompyBird_default", "SimpleMonster", "CockatricePreTable", "LootTable", "HerbDropTable_default", "GemTable", "CockatriceTable", "Cockatrice_default", "SimpleMonster", "CowTable", "LootTable", "Cow_default", "SimpleMonster", "CowCalfTable", "LootTable", "CowCalf_default", "SimpleMonster", "freshCrabTable", "LootTable", "CrabTable", "Crab_default", "SimpleMonster", "CrawlingHandPreTable", "LootTable", "GemTable", "CrawlingHandTable", "CrawlingHand_default", "SimpleMonster", "CrocodileTable", "LootTable", "Crocodile_default", "SimpleMonster", "CryptRatTable", "LootTable", "CryptRat_default", "SimpleMonster", "CyclopseTable", "LootTable", "HerbDropTable_default", "UncommonSeedDropTable", "GemTable", "Cyclops_default", "SimpleMonster", "DagannothTable", "LootTable", "RareSeedTable_default", "GemTable", "Dagannoth_default", "SimpleMonster", "DagannothSpawnTable", "LootTable", "GemTable", "DagannothSpawn_default", "SimpleMonster", "DagannothFledgeling", "LootTable", "DaganothFledgeling_default", "SimpleMonster", "DBHerbTable", "LootTable", "HerbDropTable_default", "DarkBeastPreTable", "RareSeedTable_default", "RareDropTable_default", "GemTable", "DarkBeastTable", "DarkBeast_default", "SimpleMonster", "DarkWarriorTable", "LootTable", "HerbDropTable_default", "DarkWarrior_default", "SimpleMonster", "DeadlyRedSpiderTable", "LootTable", "DeadlyRedSpider_default", "SimpleMonster", "DeathWingTable", "LootTable", "DeathWing_default", "SimpleMonster", "NotedHerbTable", "LootTable", "UniqueTable", "LootTable", "DemonicGorillaTable", "NotedHerbTable", "TreeHerbSeedTable_default", "RareDropTable_default", "DemonicGorilla_default", "SimpleMonster", "DesertBanditTable", "LootTable", "DesertBandit_default", "SimpleMonster", "HerbFireRuneTable", "LootTable", "HerbDropTable_default", "SeedWaterskinTable", "FixedAllotmentSeedTable_default", "DesertLizardTable", "GemTable", "DesertLizard_default", "SimpleMonster", "DesertWolfTable", "LootTable", "DesertWolf_default", "SimpleMonster", "DeviantSpectreHerbTable", "LootTable", "HerbDropTable_default", "DeviantSpectrePreTable", "RareSeedTable_default", "GemTable", "DeviantSpectreTable", "DeviantSpectre_default", "SimpleMonster", "DrakeNotedHerbTable", "LootTable", "DrakeOnTaskUniqueTable", "DrakeOffTaskUniqueTable", "DrakePreTable", "HerbDropTable_default", "RareSeedTable_default", "GemTable", "DrakeTable", "DrakeOnTaskTable", "Drake_default", "SimpleMonster", "DuckTable", "LootTable", "Duck_default", "SimpleMonster", "DucklingTable", "LootTable", "Duckling_default", "SimpleMonster", "DungeonRatTable", "LootTable", "DungeonRat_default", "SimpleMonster", "WildySlayerCaveTable", "LootTable", "DustDevilPreTable", "HerbDropTable_default", "GemTable", "DustDevilTable", "DustDevilWildyCaveTable", "DustDevil_default", "SimpleMonster", "DwarfTable", "LootTable", "GemTable", "Dwarf_default", "SimpleMonster", "DwarfGangMemberTable", "LootTable", "DwarfGangMember_default", "SimpleMonster", "EarthWarriorTable", "LootTable", "HerbDropTable_default", "CommonSeedDropTable_default", "GemTable", "EarthWarrior_default", "SimpleMonster", "ZamorakRobesTable", "LootTable", "ElderChaosDruidTable", "HerbDropTable_default", "RareDropTable_default", "GemTable", "ElderChaosDruid_default", "SimpleMonster", "ElfTable", "LootTable", "Elf_default", "SimpleMonster", "ElfArcherTable", "LootTable", "HerbDropTable_default", "GemTable", "ElfArcher_default", "SimpleMonster", "ElfWarriorTable", "LootTable", "HerbDropTable_default", "GemTable", "ElfWarrior_default", "SimpleMonster", "LogTable", "LootTable", "EntTable", "Ent_default", "SimpleMonster", "FarmerTable", "LootTable", "Farmer_default", "SimpleMonster", "FemaleHamMemberTable", "LootTable", "FemaleHamMember_default", "SimpleMonster", "FeralVampyreTable", "LootTable", "HerbDropTable_default", "UncommonSeedDropTable", "GemTable", "FeralVampyre_default", "SimpleMonster", "FeverSpiderTable", "LootTable", "FeverSpider_default", "SimpleMonster", "FireGiantTable", "LootTable", "HerbDropTable_default", "RareDropTable_default", "GemTable", "FireGiant_default", "SimpleMonster", "FiyrShadeTable", "LootTable", "FiyrShade_default", "SimpleMonster", "FleshCrawlerTable", "LootTable", "HerbDropTable_default", "GemTable", "FleshCrawler_default", "SimpleMonster", "AncientWyvernTreeSeedTable", "LootTable", "AncientWyvernTable", "TreeHerbSeedTable_default", "RareDropTable_default", "FossilIslandWyvernAncient_default", "SimpleMonster", "LongTailedWyvernTable", "LootTable", "WyvernHerbTable_default", "TreeHerbSeedTable_default", "FossilIslandWyvernLongTailed_default", "SimpleMonster", "SpittingWyvernTable", "LootTable", "WyvernHerbTable_default", "TreeHerbSeedTable_default", "FossilIslandWyvernSpitting_default", "SimpleMonster", "TalonedWyvernTable", "LootTable", "WyvernHerbTable_default", "TreeHerbSeedTable_default", "FossilIslandWyvernTaloned_default", "SimpleMonster", "FremennikCitizen_default", "SimpleMonster", "LootTable", "GargoylePreTable", "LootTable", "GemTable", "GargoyleTable", "GargoyleOnTaskTable", "Gargoyle_default", "SimpleMonster", "GhostTable", "LootTable", "Ghost_default", "SimpleMonster", "GhoulTable", "LootTable", "Ghoul_default", "SimpleMonster", "GiantBatTable", "LootTable", "GiantBat_default", "SimpleMonster", "GiantCryptSpiderTable", "LootTable", "GiantCryptSpider_default", "SimpleMonster", "GiantFrog_default", "SimpleMonster", "LootTable", "GiantRatTable", "LootTable", "GiantRat_default", "SimpleMonster", "GiantSeaSnakeTable", "LootTable", "HerbDropTable_default", "UncommonSeedDropTable", "GiantSeaSnake_default", "SimpleMonster", "GiantSpiderTable", "LootTable", "GiantSpider_default", "SimpleMonster", "GnomeTable", "LootTable", "Gnome_default", "SimpleMonster", "GoatTable", "LootTable", "Goat_default", "SimpleMonster", "GoblinTable", "LootTable", "Goblin_default", "SimpleMonster", "WildySlayerCaveTable", "LootTable", "GreaterDemonTable", "GemTable", "GreaterDemonWildyCaveTable", "GreaterDemon_default", "SimpleMonster", "WildySlayerCaveTable", "LootTable", "GreaterNechryaelTable", "HerbDropTable_default", "RareSeedTable_default", "GemTable", "GreaterNechryaelWildyCaveTable", "GreaterNechryael_default", "SimpleMonster", "WildySlayerCaveTable", "LootTable", "GreenDragonTable", "HerbDropTable_default", "GemTable", "GreenDragonWildyCaveTable", "GreenDragon_default", "SimpleMonster", "GrizzlyBearTable", "LootTable", "GrizzlyBear_default", "SimpleMonster", "GrizzlyBearCubTable", "LootTable", "GrizzlyBearCub_default", "SimpleMonster", "GuardTable", "LootTable", "FixedAllotmentSeedTable_default", "Guard_default", "SimpleMonster", "GuardBanditTable", "LootTable", "GuardBandit_default", "SimpleMonster", "GuardDogTable", "LootTable", "GuardDog_default", "SimpleMonster", "HarpieBugSwarmTable", "LootTable", "GemTable", "HarpieBugSwarm_default", "SimpleMonster", "WildySlayerCaveTable", "LootTable", "HellhoundTable", "HellhoundWildyCaveTable", "Hellhound_default", "SimpleMonster", "HeroTable", "LootTable", "Hero_default", "SimpleMonster", "HillGiantTable", "LootTable", "FixedAllotmentSeedTable_default", "HerbDropTable_default", "GemTable", "HillGiant_default", "SimpleMonster", "HerbTable", "LootTable", "HobgoblinTable", "CommonSeedDropTable_default", "GemTable", "Hobgoblin_default", "SimpleMonster", "HydraBrimstoneRingTable", "LootTable", "HydraOffTaskUniqueTable", "HydraOnTaskUniqueTable", "HydraPreTable", "HerbDropTable_default", "NotedHerbTable", "RareSeedTable_default", "GemTable", "HydraTable", "HydraOnTaskTable", "Hydra_default", "SimpleMonster", "WildySlayerCaveTable", "LootTable", "IceGiantTable", "UncommonSeedDropTable", "GemTable", "IceGiantWildyCaveTable", "IceGiant_default", "SimpleMonster", "IceTrollTable", "LootTable", "HerbDropTable_default", "UncommonSeedDropTable", "GemTable", "IceTroll_default", "SimpleMonster", "IceWarriorTable", "LootTable", "HerbDropTable_default", "UncommonSeedDropTable", "GemTable", "IceWarrior_default", "SimpleMonster", "IceWolfTable", "LootTable", "IceWolf_default", "SimpleMonster", "IcefiendTable", "LootTable", "GemTable", "Icefiend_default", "SimpleMonster", "ImpTable", "LootTable", "Imp_default", "SimpleMonster", "InfernalMagePreTable", "LootTable", "InfernalMageTable", "InfernalMage_default", "SimpleMonster", "IorwerthArcherTable", "LootTable", "HerbDropTable_default", "RareSeedTable_default", "GemTable", "IorwerthArcher_default", "SimpleMonster", "IorwerthWarriorTable", "LootTable", "HerbDropTable_default", "RareSeedTable_default", "GemTable", "IorwerthWarrior_default", "SimpleMonster", "IronDragonTable", "LootTable", "RareDropTable_default", "GemTable", "IronDragon_default", "SimpleMonster", "JackalTable", "LootTable", "Jackal_default", "SimpleMonster", "WildySlayerCaveTable", "LootTable", "JellyPreTable", "GemTable", "JellyTable", "JellyWildyCaveTable", "Jelly_default", "SimpleMonster", "JogreTable", "LootTable", "HerbDropTable_default", "CommonSeedDropTable_default", "GemTable", "Jogre_default", "SimpleMonster", "JubblyBird_default", "SimpleMonster", "LootTable", "JungleHorrorTable", "LootTable", "HerbDropTable_default", "VariableAllotmentSeedTable_default", "itemTupleToTable", "GemTable", "JungleHorror_default", "SimpleMonster", "JungleWolfTable", "LootTable", "JungleWolf_default", "SimpleMonster", "KalphiteGuardianTable", "LootTable", "HerbDropTable_default", "RareDropTable_default", "GemTable", "KalphiteGuardian_default", "SimpleMonster", "KalphiteSoldierTable", "LootTable", "HerbDropTable_default", "GemTable", "KalphiteSoldier_default", "SimpleMonster", "KalphiteWorkerTable", "LootTable", "HerbDropTable_default", "GemTable", "KalphiteWorker_default", "SimpleMonster", "KillerwattTable", "LootTable", "HerbDropTable_default", "GemTable", "Killerwatt_default", "SimpleMonster", "KingScorpionTable", "LootTable", "KingScorpion_default", "SimpleMonster", "KnightOfArdougne_default", "SimpleMonster", "LootTable", "KuraskPreTable", "LootTable", "HerbDropTable_default", "RareSeedTable_default", "GemTable", "KuraskTable", "Kurask_default", "SimpleMonster", "LavaDragonTable", "LootTable", "HerbDropTable_default", "RareDropTable_default", "GemTable", "LavaDragon_default", "SimpleMonster", "WildySlayerCaveTable", "LootTable", "LesserDemonTable", "HerbDropTable_default", "GemTable", "LesserDemonWildyCaveTable", "LesserDemon_default", "SimpleMonster", "HerbFireRuneTable", "LootTable", "HerbDropTable_default", "SeedWaterskinTable", "FixedAllotmentSeedTable_default", "LizardTable", "GemTable", "Lizard_default", "SimpleMonster", "LizardmanTable", "LootTable", "CommonSeedDropTable_default", "Lizardman_default", "SimpleMonster", "LizardmanBruteTable", "LootTable", "UncommonSeedDropTable", "LizardmanBrute_default", "SimpleMonster", "LizardmanShamanTable", "LootTable", "NotedHerbTable", "TreeHerbSeedTable_default", "RareDropTable_default", "LizardmanShaman_default", "SimpleMonster", "LoarShadeTable", "LootTable", "LoarShade_default", "SimpleMonster", "LobstrosityTable", "LootTable", "NotedHerbTable", "HerbDropTable_default", "UncommonSeedDropTable", "RareSeedTable_default", "GemTable", "Lobstrosity_default", "SimpleMonster", "LocustRiderTable", "LootTable", "HerbDropTable_default", "RareSeedTable_default", "RareDropTable_default", "GemTable", "LocustRider_default", "SimpleMonster", "MagicAxeTable", "LootTable", "MagicAxe_default", "SimpleMonster", "MaleHamMemberTable", "LootTable", "MaleHamMember_default", "SimpleMonster", "AllotmentSeedTable", "LootTable", "BushSeedTable", "HopsSeedTable", "FruitTreeSeedTable", "MammothTable", "HerbDropTable_default", "RareDropTable_default", "GemTable", "Mammoth_default", "SimpleMonster", "ManWomanTable_default", "LootTable", "HerbDropTable_default", "Man_default", "SimpleMonster", "ManWomanTable_default", "LootTable", "ManiacalMonkeyTable", "LootTable", "ManiacalMonkey_default", "SimpleMonster", "MasterFarmerTable", "LootTable", "MasterFarmer_default", "SimpleMonster", "MenaphiteThug_default", "SimpleMonster", "LootTable", "MinotaurTable", "LootTable", "GemTable", "Minotaur_default", "SimpleMonster", "ancientPageTable", "LootTable", "MithrilDragonTable", "RareDropTable_default", "GemTable", "MithrilDragon_default", "SimpleMonster", "MogreTable", "LootTable", "UncommonSeedDropTable", "Mogre_default", "SimpleMonster", "MolaniskTable", "LootTable", "HerbDropTable_default", "RareDropTable_default", "Molanisk_default", "SimpleMonster", "MonkeyTable", "LootTable", "Monkey_default", "SimpleMonster", "MonkeyArcherTable", "LootTable", "MonkeyArcher_default", "SimpleMonster", "MonkeyGuardTable", "LootTable", "MonkeyGuard_default", "SimpleMonster", "MonkeyZombieTable", "LootTable", "MonkeyZombie_default", "SimpleMonster", "MossGiantTable", "LootTable", "HerbDropTable_default", "UncommonSeedDropTable", "GemTable", "MossGiant_default", "SimpleMonster", "MountainTrollTable", "LootTable", "HerbDropTable_default", "CommonSeedDropTable_default", "GemTable", "MountainTroll_default", "SimpleMonster", "MountedTerrorBirdGnomeTable", "LootTable", "MountedTerrorBirdGnome_default", "SimpleMonster", "MournerTable", "LootTable", "Mourner_default", "SimpleMonster", "MutatedBloodveldPreTable", "LootTable", "RareDropTable_default", "GemTable", "MutatedBloodveldTable", "MutatedBloodveld_default", "SimpleMonster", "NechryaelPreTable", "LootTable", "RareSeedTable_default", "RareDropTable_default", "GemTable", "NechryaelTable", "Nechryael_default", "SimpleMonster", "OgreTable", "LootTable", "UncommonSeedDropTable", "Ogre_default", "SimpleMonster", "OgressShamanTable", "LootTable", "UncommonSeedDropTable", "GemTable", "OgressShaman_default", "SimpleMonster", "OgressWarriorTable", "LootTable", "UncommonSeedDropTable", "GemTable", "OgressWarrior_default", "SimpleMonster", "OtherworldlybeingTable", "LootTable", "HerbDropTable_default", "GemTable", "Otherworldlybeing_default", "SimpleMonster", "PaladinTable", "LootTable", "Paladin_default", "SimpleMonster", "PenguinTable", "LootTable", "Penguin_default", "SimpleMonster", "PhrinShadeTable", "LootTable", "PhrinShade_default", "SimpleMonster", "PirateTable", "LootTable", "GemTable", "Pirate_default", "SimpleMonster", "PitScorpionTable", "LootTable", "PitScorpion_default", "SimpleMonster", "PoisonScorpionTable", "LootTable", "PoisonScorpion_default", "SimpleMonster", "PollnivnianBandit_default", "SimpleMonster", "LootTable", "PorazdirTable", "LootTable", "Porazdir_default", "SimpleMonster", "PrifddinasElfTable", "LootTable", "Elf_default", "PrifddinasElf_default", "SimpleMonster", "PriffRabbit", "LootTable", "PriffRabbit_default", "SimpleMonster", "PyrefiendPreTable", "LootTable", "GemTable", "PyrefiendTable", "Pyrefiend_default", "SimpleMonster", "PyrelordPreTable", "LootTable", "GemTable", "PyrelordTable", "Pyrelord_default", "SimpleMonster", "RatTable", "LootTable", "Rat_default", "SimpleMonster", "RedDragonTable", "LootTable", "HerbDropTable_default", "GemTable", "RedDragon_default", "SimpleMonster", "RevenantCyclopsTable", "LootTable", "RevenantCyclops_default", "SimpleMonster", "makeRevTable", "RevenantDarkBeastTable", "LootTable", "RevenantDarkBeast_default", "SimpleMonster", "makeRevTable", "RevenantDemonTable", "LootTable", "RevenantDemon_default", "SimpleMonster", "makeRevTable", "RevenantDragonTable", "LootTable", "RevenantDragon_default", "SimpleMonster", "makeRevTable", "RevenantGoblinTable", "LootTable", "RevenantGoblin_default", "SimpleMonster", "makeRevTable", "RevenantHellhoundTable", "LootTable", "RevenantHellhound_default", "SimpleMonster", "makeRevTable", "RevenantHobgoblinTable", "LootTable", "RevenantHobgoblin_default", "SimpleMonster", "makeRevTable", "RevenantImpTable", "LootTable", "RevenantImp_default", "SimpleMonster", "makeRevTable", "RevenantKnightTable", "LootTable", "RevenantKnight_default", "SimpleMonster", "makeRevTable", "RevenantOrkTable", "LootTable", "RevenantOrk_default", "SimpleMonster", "makeRevTable", "RevenantPyrefiendTable", "LootTable", "RevenantPyrefiend_default", "SimpleMonster", "makeRevTable", "RiylShadeTable", "LootTable", "RiylShade_default", "SimpleMonster", "RockslugTable", "LootTable", "GemTable", "Rockslug_default", "SimpleMonster", "RogueTable", "LootTable", "Rogue_default", "SimpleMonster", "RoosterTable", "LootTable", "Rooster_default", "SimpleMonster", "RuneDragonTable", "LootTable", "UsefulHerbTable_default", "RareDropTable_default", "RuneDragon_default", "SimpleMonster", "ScarabMageTable", "LootTable", "HerbDropTable_default", "RareSeedTable_default", "RareDropTable_default", "GemTable", "ScarabMage_default", "SimpleMonster", "ScorpionTable", "LootTable", "Scorpion_default", "SimpleMonster", "SeaSnakeHatchlingTable", "LootTable", "GemTable", "SeaSnakeHatchling_default", "SimpleMonster", "SeaSnakeYoungTable", "LootTable", "GemTable", "SeaSnakeYoung_default", "SimpleMonster", "SeagullTable", "LootTable", "Seagull_default", "SimpleMonster", "ShadeTable", "LootTable", "Shade_default", "SimpleMonster", "ShadowSpiderTable", "LootTable", "ShadowSpider_default", "SimpleMonster", "ShadowWarriorTable", "LootTable", "HerbDropTable_default", "GemTable", "ShadowWarrior_default", "SimpleMonster", "SkeletalWyvernTable", "LootTable", "HerbDropTable_default", "RareDropTable_default", "SkeletalWyvern_default", "SimpleMonster", "SkeletonTable", "LootTable", "HerbDropTable_default", "GemTable", "Skeleton_default", "SimpleMonster", "SkeletonFremennikTable", "LootTable", "UncommonSeedDropTable", "GemTable", "SkeletonFremennik_default", "SimpleMonster", "SkeletonMageTable", "LootTable", "HerbDropTable_default", "GemTable", "SkeletonMage_default", "SimpleMonster", "SkogreTable", "LootTable", "Skogre_default", "SimpleMonster", "HerbFireRuneTable", "LootTable", "HerbDropTable_default", "SeedWaterskinTable", "FixedAllotmentSeedTable_default", "SmallLizardTable", "GemTable", "SmallLizard_default", "SimpleMonster", "SmokeDevilHerbTable", "LootTable", "HerbDropTable_default", "SmokeDevilPreTable", "RareDropTable_default", "GemTable", "SmokeDevilTable", "SmokeDevil_default", "SimpleMonster", "SpiderTable", "LootTable", "Spider_default", "SimpleMonster", "SpiritualMageTable", "LootTable", "GemTable", "SpiritualMage_default", "SimpleMonster", "SpiritualRangerTable", "LootTable", "SpiritualRanger_default", "SimpleMonster", "SpiritualWarriorTable", "LootTable", "GemTable", "SpiritualWarrior_default", "SimpleMonster", "SteelDragonTable", "LootTable", "RareDropTable_default", "GemTable", "SteelDragon_default", "SimpleMonster", "SulphurLizardTable", "LootTable", "HerbDropTable_default", "FixedAllotmentSeedTable_default", "GemTable", "SulphurLizard_default", "SimpleMonster", "SuqahTable", "LootTable", "GemTable", "Suqah_default", "SimpleMonster", "TatteredPageTable", "LootTable", "TempleSpiderTable", "HerbDropTable_default", "UncommonSeedDropTable", "GemTable", "TempleSpider_default", "SimpleMonster", "TerrorBirdTable", "LootTable", "TerrorBird_default", "SimpleMonster", "TerrorDogTable", "LootTable", "HerbDropTable_default", "GemTable", "TerrorDog_default", "SimpleMonster", "TormentedDemonHerbTable", "LootTable", "TormentedDemonBowTable", "TormentedDemonTable", "TreeHerbSeedTable_default", "TormentedDemon_default", "SimpleMonster", "UniqueTable", "LootTable", "TorturedGorillaTable", "TreeHerbSeedTable_default", "RareDropTable_default", "TorturedGorilla_default", "SimpleMonster", "TorturedSoulTable", "LootTable", "UncommonSeedDropTable", "TorturedSoul_default", "SimpleMonster", "TrollGeneralTable", "LootTable", "HerbDropTable_default", "GemTable", "TrollGeneral_default", "SimpleMonster", "TurothHerbTable", "LootTable", "HerbDropTable_default", "TurothPreTable", "RareSeedTable_default", "GemTable", "TurothTable", "Turoth_default", "SimpleMonster", "TwistedBansheePreTable", "LootTable", "HerbDropTable_default", "RareSeedTable_default", "GemTable", "TwistedBansheeTable", "TwistedBanshee_default", "SimpleMonster", "TzHaarHurTable", "LootTable", "TzHaarHur_default", "SimpleMonster", "OnyxBoltTipTable", "LootTable", "TzHaarKetTable", "TzHaarKet_default", "SimpleMonster", "TzHaarMejTable", "LootTable", "TzHaarMej", "SimpleMonster", "TzHaarXilTable", "LootTable", "TzHaarXil", "SimpleMonster", "UndeadChickenTable", "LootTable", "UndeadChicken_default", "SimpleMonster", "UndeadCowTable", "LootTable", "UndeadCow_default", "SimpleMonster", "TatteredPageTable", "LootTable", "HerbHerbDropTable", "HerbDropTable_default", "UndeadDruidTable", "UncommonSeedDropTable", "GemTable", "UndeadDruid_default", "SimpleMonster", "ScrollTable", "LootTable", "UndeadOneTable", "UndeadOne_default", "SimpleMonster", "UnicornTable", "LootTable", "Unicorn_default", "SimpleMonster", "UriumShadeTable", "LootTable", "UriumShade_default", "SimpleMonster", "VampyreJuvinateTable", "LootTable", "VampyreJuvinate_default", "SimpleMonster", "VyreTable", "LootTable", "Vyre_default", "SimpleMonster", "VyrewatchTable", "LootTable", "RareDropTable_default", "Vyrewatch_default", "SimpleMonster", "VyrewatchSentinelTable", "LootTable", "HerbDropTable_default", "UncommonSeedDropTable", "RareDropTable_default", "VyrewatchSentinel_default", "SimpleMonster", "WallBeastTable", "LootTable", "WallBeast_default", "SimpleMonster", "WarpedJellyPreTable", "LootTable", "GemTable", "WarpedJellyTable", "WarpedJelly_default", "SimpleMonster", "WarriorWoman_default", "SimpleMonster", "LootTable", "WaterfiendTable", "LootTable", "HerbDropTable_default", "RareSeedTable_default", "GemTable", "Waterfiend_default", "SimpleMonster", "WerewolfTable", "LootTable", "HerbDropTable_default", "GemTable", "Werewolf_default", "SimpleMonster", "WhiteWolfTable", "LootTable", "WhiteWolf_default", "SimpleMonster", "WildDogTable", "LootTable", "WildDog_default", "SimpleMonster", "WolfTable", "LootTable", "Wolf_default", "SimpleMonster", "Woman_default", "SimpleMonster", "ManWomanTable_default", "LootTable", "WyrmOnTaskUniqueTable", "LootTable", "WyrmOffTaskUniqueTable", "WyrmPreTable", "HerbDropTable_default", "RareSeedTable_default", "GemTable", "WyrmTable", "WyrmOnTaskTable", "Wyrm_default", "SimpleMonster", "YanilleWatchmanTable", "LootTable", "YanilleWatchman_default", "SimpleMonster", "ZogreTable", "LootTable", "Zogre_default", "SimpleMonster", "ZombieTable", "LootTable", "HerbDropTable_default", "Zombie_default", "SimpleMonster", "ZombiePirateTable", "LootTable", "ZombiePirate_default", "SimpleMonster", "ZombieRatTable", "LootTable", "ZombieRat_default", "SimpleMonster", "ZygomiteTable", "LootTable", "HerbDropTable_default", "CommonSeedDropTable_default", "RareDropTable_default", "Zygomite_default", "SimpleMonster", "allLowMonsters", "Araxyte", "BloodReaver_default", "BrutalBlackDragon_default", "BabyBlackDragon_default", "Bandit_default", "ArmadylianGuard_default", "BlackKnight_default", "DarkWarrior_default", "DeadlyRedSpider_default", "ElderChaosDruid_default", "Ent_default", "RevenantCyclops_default", "RevenantPyrefiend_default", "RevenantOrk_default", "RevenantKnight_default", "RevenantImp_default", "RevenantHobgoblin_default", "RevenantHellhound_default", "RevenantGoblin_default", "RevenantDragon_default", "RevenantDemon_default", "RevenantDarkBeast_default", "Pirate_default", "Mammoth_default", "MagicAxe_default", "LavaDragon_default", "GuardBandit_default", "DagannothSpawn_default", "FeralVampyre_default", "FeverSpider_default", "GiantSeaSnake_default", "GreaterNechryael_default", "GreenDragon_default", "HarpieBugSwarm_default", "InfernalMage_default", "JungleHorror_default", "Killerwatt_default", "LesserDemon_default", "ElfArcher_default", "FleshCrawler_default", "FiyrShade_default", "DeviantSpectre_default", "DagannothPrime_default", "DaganothFledgeling_default", "Hydra_default", "IceGiant_default", "IceTroll_default", "IceWarrior_default", "PhrinShade_default", "Otherworldlybeing_default", "MutatedBloodveld_default", "Mourner_default", "MossGiant_default", "Molanisk_default", "Mogre_default", "LoarShade_default", "LizardmanBrute_default", "Jelly_default", "IorwerthArcher_default", "IorwerthWarrior_default", "Werewolf_default", "Waterfiend_default", "WarpedJelly_default", "WallBeast_default", "VyrewatchSentinel_default", "Vyrewatch_default", "VampyreJuvinate_default", "TzHaarKet_default", "TrollGeneral_default", "TerrorDog_default", "ShadowWarrior_default", "Shade_default", "SeaSnakeYoung_default", "SeaSnakeHatchling_default", "Rockslug_default", "RiylShade_default", "Pyrefiend_default", "Pyrelord_default", "Porazdir_default", "Ogre_default", "OgressShaman_default", "OgressWarrior_default", "AncientZygomite_default", "AsynShade_default", "BabyBlueDragon_default", "BabyGreenDragon_default", "BabyRedDragon_default", "BronzeDragon_default", "BrutalBlueDragon_default", "BrutalGreenDragon_default", "BrutalRedDragon_default", "Catablepon_default", "Cockatrice_default", "Crocodile_default", "Cyclops_default", "TempleSpider_default", "TerrorBird_default", "TorturedGorilla_default", "TorturedSoul_default", "TwistedBanshee_default", "UndeadChicken_default", "UndeadCow_default", "UndeadDruid_default", "UndeadOne_default", "UriumShade_default", "WhiteWolf_default", "WildDog_default", "Zogre_default", "ZombieRat_default", "Penguin_default", "PitScorpion_default", "PoisonScorpion_default", "Rooster_default", "Seagull_default", "ShadowSpider_default", "SkeletonFremennik_default", "SkeletonMage_default", "Skogre_default", "SmallLizard_default", "SulphurLizard_default", "GiantBat_default", "GiantCryptSpider_default", "GiantRat_default", "GiantSpider_default", "GrizzlyBear_default", "GrizzlyBearCub_default", "IceWolf_default", "Jackal_default", "JungleWolf_default", "KalphiteGuardian_default", "KalphiteSoldier_default", "KingScorpion_default", "Lobstrosity_default", "MonkeyArcher_default", "MonkeyGuard_default", "MonkeyZombie_default", "MountedTerrorBirdGnome_default", "BearCub_default", "BigWolf_default", "Bird_default", "BlackGuard_default", "CaveGoblinGuard_default", "ChaosDwarf_default", "Chicken_default", "ChompyBird_default", "CowCalf_default", "CryptRat_default", "DeathWing_default", "DesertLizard_default", "DesertWolf_default", "Duck_default", "Duckling_default", "DungeonRat_default", "DwarfGangMember_default", "AberrantSpectre_default", "Dagannoth_default", "Guard_default", "RedDragon_default", "AbyssalDemon_default", "DarkBeast_default", "Hellhound_default", "RuneDragon_default", "AdamantDragon_default", "DemonicGorilla_default", "ScarabMage_default", "Ankou_default", "Drake_default", "IronDragon_default", "SkeletalWyvern_default", "Aviansie_default", "DustDevil_default", "KalphiteWorker_default", "SmokeDevil_default", "BasiliskKnight_default", "ElfWarrior_default", "Kurask_default", "SpiritualMage_default", "Basilisk_default", "FireGiant_default", "LizardmanShaman_default", "SpiritualRanger_default", "BlackDemon_default", "FossilIslandWyvernAncient_default", "Lizardman_default", "SpiritualWarrior_default", "BlackDragon_default", "FossilIslandWyvernLongTailed_default", "LocustRider_default", "SteelDragon_default", "Bloodveld_default", "FossilIslandWyvernSpitting_default", "Man_default", "Suqah_default", "BlueDragon_default", "FossilIslandWyvernTaloned_default", "MithrilDragon_default", "Turoth_default", "BrineRat_default", "Gargoyle_default", "MountainTroll_default", "Woman_default", "CaveHorror_default", "Goblin_default", "Zygomite_default", "Wyrm_default", "CaveKraken_default", "GreaterDemon_default", "Nechryael_default", "Banshee_default", "CaveBug_default", "Cow_default", "Dwarf_default", "Lizard_default", "Rat_default", "Spider_default", "Bat_default", "CaveCrawler_default", "CrawlingHand_default", "Ghost_default", "Minotaur_default", "Scorpion_default", "Wolf_default", "BlackBear_default", "CaveSlime_default", "GuardDog_default", "Icefiend_default", "Monkey_default", "Skeleton_default", "Zombie_default", "HillGiant_default", "BeardedBandit_default", "CaveGoblin_default", "DesertBandit_default", "Elf_default", "Farmer_default", "FremennikCitizen_default", "Gnome_default", "Goat_default", "MaleHamMember_default", "FemaleHamMember_default", "Hero_default", "KnightOfArdougne_default", "MasterFarmer_default", "Paladin_default", "YanilleWatchman_default", "Vyre_default", "TzHaarHur_default", "Rogue_default", "PrifddinasElf_default", "PollnivnianBandit_default", "WarriorWoman_default", "AlKharidWarrior_default", "Ghoul_default", "EarthWarrior_default", "Imp_default", "Jogre_default", "Hobgoblin_default", "ChaosDruid_default", "Unicorn_default", "MenaphiteThug_default", "PriffRabbit_default", "TzHaarXil", "TzHaarMej", "GiantFrog_default", "JubblyBird_default", "ManiacalMonkey_default", "ZombiePirate_default", "TormentedDemon_default", "ArmouredZombie_default", "Crab_default", "FlawedGolem", "SimpleMonster", "LootTable", "MindGolem", "BodyGolem", "ChaosGolem", "CamdozaalGolems", "ReanimatedGoblin", "SimpleMonster", "LootTable", "ReanimatedMonkey", "ReanimatedImp", "ReanimatedMinotaur", "ReanimatedScorpion", "ReanimatedBear", "ReanimatedUnicorn", "ReanimatedDog", "ReanimatedChaosDruid", "ReanimatedGiant", "ReanimatedOgre", "ReanimatedElf", "ReanimatedTroll", "ReanimatedHorror", "ReanimatedKalphite", "ReanimatedDagannoth", "ReanimatedBloodveld", "ReanimatedTzhaar", "ReanimatedDemon", "ReanimatedHellhound", "ReanimatedAviansie", "ReanimatedAbyssal", "ReanimatedDragon", "ReanimatedMonsters", "import_e", "BarrowsTable", "LootTable", "item", "OtherTable", "ClueTable", "NUMBER_OF_BROTHERS", "Barrows", "Monster", "__name", "quantity", "loot", "Bank", "barrowsItemsThisKill", "x", "barrowsItem", "Barrows_default", "import_e", "HesporiTable", "LootTable", "MainTable", "Hespori", "Monster", "__name", "quantity", "options", "loot", "Bank", "farmingLvl", "i", "Hespori_default", "import_e", "TzKalZukClass", "Monster", "__name", "quantity", "options", "loot", "Bank", "i", "TzKalZuk", "import_e", "TzTokJadClass", "Monster", "__name", "quantity", "options", "loot", "Bank", "i", "TzTokJad", "TzTokJad_default", "specialBosses", "Barrows_default", "TzTokJad_default", "Hespori_default", "TzKalZuk", "AbhorrentSpectreTable", "LootTable", "AberrantSpectrePreTable", "AbhorrentSpectre_default", "SimpleMonster", "BasiliskSentinelTable", "LootTable", "BasiliskKnightPreTable", "BasiliskSentinel_default", "SimpleMonster", "CaveAbominationTable", "LootTable", "CaveHorrorPreTable", "CaveAbomination_default", "SimpleMonster", "ChasmCrawlerTable", "LootTable", "CaveCrawlerTable", "ChasmCrawler_default", "SimpleMonster", "ChokeDevilTable", "LootTable", "DustDevilPreTable", "ChokeDevil_default", "SimpleMonster", "CockathriceTable", "LootTable", "CockatricePreTable", "Cockathrice_default", "SimpleMonster", "ColossalHydraTable", "LootTable", "HydraPreTable", "ColossalHydra_default", "SimpleMonster", "CrushingHandTable", "LootTable", "CrawlingHandPreTable", "CrushingHand_default", "SimpleMonster", "FlamingPyrelordTable", "LootTable", "PyrefiendPreTable", "FlamingPyrelord_default", "SimpleMonster", "GiantRockslugTable", "LootTable", "RockslugTable", "GiantRockslug_default", "SimpleMonster", "GreaterAbyssalDemonTable", "LootTable", "AbyssalDemonPreTable", "GreaterAbyssalDemon_default", "SimpleMonster", "GuardianDrakeTable", "LootTable", "DrakePreTable", "GuardianDrake_default", "SimpleMonster", "InsatiableBloodveldTable", "LootTable", "BloodveldPreTable", "InsatiableBloodveld_default", "SimpleMonster", "InsatiableMutatedBloodveldTable", "LootTable", "MutatedBloodveldPreTable", "InsatiableMutatedBloodveld_default", "SimpleMonster", "KingKuraskTable", "LootTable", "KuraskPreTable", "KingKurask_default", "SimpleMonster", "MalevolentMageTable", "LootTable", "InfernalMagePreTable", "MalevolentMage_default", "SimpleMonster", "MarbleGargoyleTable", "LootTable", "GargoylePreTable", "MarbleGargoyle_default", "SimpleMonster", "MonstrousBasiliskTable", "LootTable", "BasiliskPreTable", "MonstrousBasilisk_default", "SimpleMonster", "NechryarchTable", "LootTable", "NechryaelPreTable", "Nechryarch_default", "SimpleMonster", "NightBeastTable", "LootTable", "DarkBeastPreTable", "NightBeast_default", "SimpleMonster", "NuclearSmokeDevilTable", "LootTable", "SmokeDevilPreTable", "NuclearSmokeDevil_default", "SimpleMonster", "RepugnantSpectreTable", "LootTable", "DeviantSpectrePreTable", "RepugnantSpectre_default", "SimpleMonster", "ScreamingBansheeTable", "LootTable", "BansheePreTable", "ScreamingBanshee_default", "SimpleMonster", "ScreamingTwistedBansheeTable", "LootTable", "TwistedBansheePreTable", "ScreamingTwistedBanshee_default", "SimpleMonster", "ShadowWyrmTable", "LootTable", "WyrmPreTable", "ShadowWyrm_default", "SimpleMonster", "SpikedTurothTable", "LootTable", "TurothPreTable", "SpikedTuroth_default", "SimpleMonster", "VitreousJellyTable", "LootTable", "JellyPreTable", "VitreousJelly_default", "SimpleMonster", "VitreousWarpedJellyTable", "LootTable", "WarpedJellyPreTable", "VitreousWarpedJelly_default", "SimpleMonster", "DreadbornAraxyte", "SimpleMonster", "LootTable", "AraxyteTable", "allSuperiorMonsters", "AbhorrentSpectre_default", "BasiliskSentinel_default", "CaveAbomination_default", "ChasmCrawler_default", "ChokeDevil_default", "Cockathrice_default", "ColossalHydra_default", "CrushingHand_default", "FlamingPyrelord_default", "GiantRockslug_default", "GreaterAbyssalDemon_default", "GuardianDrake_default", "InsatiableBloodveld_default", "InsatiableMutatedBloodveld_default", "KingKurask_default", "MalevolentMage_default", "MarbleGargoyle_default", "MonstrousBasilisk_default", "Nechryarch_default", "NightBeast_default", "NuclearSmokeDevil_default", "RepugnantSpectre_default", "ScreamingBanshee_default", "ScreamingTwistedBanshee_default", "ShadowWyrm_default", "SpikedTuroth_default", "VitreousJelly_default", "VitreousWarpedJelly_default", "monstersObject", "allBosses", "allLowMonsters", "specialBosses", "allSuperiorMonsters", "CreatureCreation", "ReanimatedMonsters", "CamdozaalGolems", "allMonsters", "monster", "Monsters", "Collection", "monsters_default", "import_e", "Openable", "__name", "options", "SimpleOpenable", "Openable", "__name", "options", "quantity", "loot", "Bank", "chanceOfFish", "fishLvl", "low", "high", "num1", "num2", "__name", "BrimstoneChestFish", "LarransSmallChestFish", "LarransBigChestFish", "BrimstoneChestTable", "LootTable", "BrimstoneChestOpenable", "SimpleOpenable", "__name", "quantity", "options", "loot", "Bank", "fishLvl", "lobster", "BrimstoneChestFish", "fish", "i", "fishRolled", "chanceOfFish", "BrimstoneChest_default", "CasketTable", "LootTable", "Casket_default", "SimpleOpenable", "runeArmorTable", "LootTable", "coinsKeyHalfTable", "CrystalChestTable", "itemTupleToTable", "CrystalChest_default", "SimpleOpenable", "DragonStoneArmorTable", "LootTable", "coinsKeyHalfTable", "runeArmorTable", "dragonItemTable", "ElvenCrystalChestTable", "itemTupleToTable", "ElvenCrystalChest_default", "SimpleOpenable", "GiantEggSacFullTable", "LootTable", "GiantEggSacFull_default", "SimpleOpenable", "FoodTable", "LootTable", "itemTupleToTable", "PotionTable", "GrubbyChestTable", "GrubbyChest_default", "SimpleOpenable", "GemTable", "LootTable", "HAMChestTable", "BronzeHAMChest", "SimpleOpenable", "IronHAMChest", "SilverHAMChest", "SteelHAMChest", "SackLogTable", "LootTable", "SackHerbTable", "BasicSackTable", "BSackTable", "AdeptSackTable", "ASackTable", "ExpertSackTable", "ESackTable", "MasterSackTable", "MSackTable", "BasicSack", "SimpleOpenable", "AdeptSack", "ExpertSack", "MasterSack", "PrayerPageTable", "LootTable", "GildedTable", "FirelighterTable", "SubTeleportScrollTable", "TeleportScrollTable", "GiveHalfKeyTable", "BlessingTable", "EasyChefTable", "LootTable", "EasySubMonkTable", "EasyMonkTable", "EasyCapeTable", "EasyElegantTable", "EasyRareTable", "EasyAmuletTable", "EasyBlessingsTable", "BlessingTable", "EasyBowTable", "EasyStandardTable", "PrayerPageTable", "FirelighterTable", "TeleportScrollTable", "EasyClueTable", "EasyCasket", "itemID", "Elite3rdageTable", "LootTable", "EliteMegaRareTable", "GildedTable", "EliteTuxedoTable", "EliteRareTable", "EliteSeedTable", "EliteStandardTable", "PrayerPageTable", "FirelighterTable", "GiveHalfKeyTable", "TeleportScrollTable", "BlessingTable", "EliteClueTable", "EliteCasket", "itemID", "Hard3rdageTable", "LootTable", "HardMegaRareTable", "itemTupleToTable", "GildedTable", "HardBlessedShields", "HardHeralicPlatebody", "HardRareTable", "HardBowTable", "HardStandardTable", "PrayerPageTable", "FirelighterTable", "TeleportScrollTable", "BlessingTable", "HardClueTable", "HardCasket", "itemID", "MasterGodSwordOrnTable", "LootTable", "MasterSubAnkouOutfitTable", "MasterAnkouOutfitTable", "MasterSubMummyOutfitTable", "MasterMummyOutfitTable", "MasterSubDragonOrnTable", "MasterDragonOrnTable", "Master3rdageTable", "MasterMegaRareTable", "GildedTable", "MasterRareTable", "PrayerPageTable", "MasterSeedTable", "MasterStandardTable", "FirelighterTable", "TeleportScrollTable", "GiveHalfKeyTable", "BlessingTable", "MasterClueTable", "MasterCasket", "MediumUnicornTable", "LootTable", "MediumElegantTable", "MediumRareTable", "MediumSubFirelighterTable", "MediumFirelighterTable", "MediumAmuletTable", "MediumBowTable", "MediumStandardTable", "PrayerPageTable", "TeleportScrollTable", "BlessingTable", "MediumClueTable", "MediumCasket", "BabyImpling", "SimpleOpenable", "LootTable", "YoungImpling", "GourmetImpling", "EarthImpling", "EssenceImpling", "EclecticImpling", "NatureImpling", "MagpieImpling", "NinjaImpling", "CrystalImpling", "DragonImpling", "LuckyImpling", "EasyClueTable", "MediumClueTable", "HardClueTable", "EliteClueTable", "MasterClueTable", "Implings", "PreRoll", "LootTable", "IntricatePouchTable", "IntricatePouch_default", "SimpleOpenable", "import_e", "LarransSmallChestTable", "LootTable", "LarransBigChestTable", "LarransChestTable", "LarransChestOpenable", "SimpleOpenable", "__name", "quantity", "options", "loot", "Bank", "tier", "fishLvl", "lobster", "LarransBigChestFish", "fish", "i", "fishRolled", "chanceOfFish", "LarransSmallChestFish", "LarransChest_default", "MuddyChestTable", "LootTable", "MuddyChest_default", "SimpleOpenable", "ClueTable", "LootTable", "MysteryBoxTable", "RareDropTable_default", "MysteryBox_default", "SimpleOpenable", "NestBoxEmptyTable", "LootTable", "EMPTY_BIRD_NEST_ID", "NestBoxEmpty_default", "SimpleOpenable", "NestBoxRingTable", "LootTable", "EMPTY_BIRD_NEST_ID", "NestBoxRing_default", "SimpleOpenable", "NestBoxSeedsTable", "LootTable", "EMPTY_BIRD_NEST_ID", "NestBoxSeeds_default", "SimpleOpenable", "BoneTable", "LootTable", "OgreCoffinTable", "OgreCoffin_default", "SimpleOpenable", "import_e", "GiantsFoundryOrePackTable", "LootTable", "GFOrePackTable", "GiantsFoundryOrePack", "SimpleOpenable", "VolcanicMineMOrePackTable", "VMOrePackTable", "VolcanicMineOrePack", "import_e", "LowSeedPackTable", "LootTable", "MediumSeedPackTable", "HighSeedPackTable", "SeedPackTable", "SeedPackOpenable", "SimpleOpenable", "__name", "quantity", "options", "tempTable", "loot", "Bank", "tier", "high", "medium", "low", "i", "SeedPack_default", "SinisterChestTable", "LootTable", "SinisterChest_default", "SimpleOpenable", "ZombiePiratesLocker", "LootTable", "ZombiePiratesLocker_default", "SimpleOpenable", "LowTierLootTable", "LootTable", "MidTierLootTable", "HighTierLootTable", "HallowedSackTable", "HallowedSack_default", "SimpleOpenable", "openablesObject", "MysteryBox_default", "NestBoxEmpty_default", "NestBoxRing_default", "NestBoxSeeds_default", "GiantEggSacFull_default", "BronzeHAMChest", "IronHAMChest", "SilverHAMChest", "SteelHAMChest", "Casket_default", "CrystalChest_default", "ElvenCrystalChest_default", "GrubbyChest_default", "MuddyChest_default", "OgreCoffin_default", "SinisterChest_default", "BrimstoneChest_default", "LarransChest_default", "SeedPack_default", "BabyImpling", "YoungImpling", "GourmetImpling", "EarthImpling", "EssenceImpling", "EclecticImpling", "NatureImpling", "MagpieImpling", "NinjaImpling", "CrystalImpling", "DragonImpling", "LuckyImpling", "VolcanicMineOrePack", "GiantsFoundryOrePack", "IntricatePouch_default", "BasicSack", "AdeptSack", "ExpertSack", "MasterSack", "allMonsters", "openable", "Openables", "Collection", "openables_default", "fetch", "OldSchoolJSError", "__name", "code", "ErrorDescriptions", "Player", "__name", "player", "defence", "ranged", "hitpoints", "magic", "prayer", "attack", "strength", "base", "melee", "range", "mage", "Player_default", "defaultGetOptions", "Hiscores", "__name", "username", "options", "mergedOptions", "accountType", "isValidUsername", "OldSchoolJSError", "ACCOUNT_TYPES", "data", "fetch", "hiscoreURLs", "res", "text", "p", "resolvePlayerFromHiscores", "err", "overall", "skill", "lvl", "convertXPtoLVL", "Player_default", "Hiscores_default", "fetch", "Wiki", "__name", "pageID", "results", "amount", "r", "query", "parsedSearchOptions", "prop", "a", "b", "rawPage", "apiURL", "fetch", "res", "Wiki_default", "RareTable", "LootTable", "SuccessfulUniqueTable", "UniqueTable", "StandardTable", "BeginnerClueTable", "BeginnerCasket", "Clues", "BeginnerCasket", "EasyCasket", "EliteCasket", "HardCasket", "MasterCasket", "MediumCasket", "allTeamCapes", "i", "getItemOrThrow", "beekeeperOutfit", "resolveItems", "camoOutfit", "lederhosenOutfit", "zombieOutfit", "mimeOutfit", "EquipmentSlot"]
}
